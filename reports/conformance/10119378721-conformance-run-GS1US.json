{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1d8c0b5-8c90-44b8-9718-6a8099780db8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "db7876d1-007f-4d0e-848c-cb7db821c58d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0eadb565-13da-4523-8995-35def57ad73b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "77a03458-4287-49c0-bf98-e35bc4bd5714"
                }
              }
            ]
          },
          {
            "id": "399aad2a-415a-4de8-92ab-ba4ee9bfa141",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d50444f5-9302-4cfc-8852-a36522dd5035",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51cbc789-b137-4c5b-a5e8-57e25249ed1b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "82339415-e772-4b33-8f22-6a7b13b18266",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "417a8f3b-85fc-4350-8e74-f3bda32666c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c24a5a8-f52f-49b8-9778-56ecc3f0460f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc19717e-85b5-4582-9509-7cb230682fbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cd7d2ee-3f3c-4b58-8bc4-4d673eeab648"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "472c4665-b3e9-470b-b11b-dc46c9fdc702",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6df26a0-2476-4e02-8b10-016ef07de2f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "37457bc6-935f-4409-8f80-693b1f25e700",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a39249e8-4736-4931-bedc-f94367161ca9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a1024f6-7dab-48d0-bc6a-39ddd8c8cc7c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "977132c4-b24f-4800-ae88-249661161dcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9707aa71-83cc-4c08-acfe-310de6b9a029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d4cfc89-d6aa-4352-b33a-fa27252e47dd"
            }
          }
        ]
      },
      {
        "id": "6fbd7c5e-c870-4357-b02f-528d9e4bc467",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4ddab96a-7725-4290-8983-cdfc28005709",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8422b560-465d-4988-81b5-d20c61642f89",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e2959a91-dfaf-45e0-957b-807ebaf6e6ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64cfa5a-97ae-4316-b877-229f8a0de3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8af3d91e-cf9a-46a5-a2fc-1b62e172b9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d131d77d-e454-4ba3-b5df-f3cac3a15500",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a42d97d-2d2b-42d0-8267-97fd7d6c04e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129a5a6e-cd7f-446d-8e90-8f2b12eaeff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f7d63b-b1e5-4595-9266-a7524d84bb45",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0253c6cd-cafc-4670-a75f-60938d671897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1216402b-0329-4f12-92d9-140621658ac8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d95675b9-680e-4411-9dee-ce9cff4e8343",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "816a8a84-1bc6-4e5b-abc1-ab91e5edd2ce",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4989379-51bf-429e-badb-02d26f7a0152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f1d773b-e8b0-4c3c-9eee-59f1f87c6e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8cc854-7254-4aef-b46d-af31f7546438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fa849e-d93a-471f-8fcb-54c9d14fb983"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38dceb27-bb95-4d9f-9b99-a398cd0f6b4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3f5c3eb-41be-44d3-a8d2-6ade392d700f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "597fe99c-2ba7-449c-9e2d-12b7ae03dc98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1d34cb44-f055-4500-870a-46d47575cbc7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f6964da-8b35-4b5a-8342-e4ca39d59d2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f776271-949e-41ca-9c0f-7095dbab329b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d80ec2d5-1392-4fac-9c09-5fdd8d669570",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a15721a-8ef4-42cf-8ef1-fdfb18454441"
            }
          }
        ]
      },
      {
        "id": "9093c456-79b3-4ef0-b108-1dd81a79f752",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e305ebb-5241-4700-b517-7893be6b5de4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85091143-62cf-41d7-ab95-d5322d439a54",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "48896bb6-1f74-4108-9f91-27b18e2574e6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc964dff-de1e-4c4d-b5ea-93d8eccedfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4de049a-9dd0-4cb9-aa0d-746418dd51d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5744af-e499-4a22-8902-730028db08f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96ac1997-40cd-47d9-acbe-f8c93fef818e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09906ac5-0258-47ee-93b5-7a2b04b9c075",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0853233-221e-4805-a60f-5903b33ec6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3dd586-189a-42c4-911d-3fd1ce9b6101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2b6c7e-a56c-4858-a79e-84091762b26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6a691b2-4249-4587-a02c-2e53a42e28b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c07f417-97fd-4089-82a1-76c40d05ff4e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a09a4-d066-49f5-a5d1-ef7d9fbcb33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b74741c-ad00-4ebc-8fe8-1f765ab3a3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cf104a-082b-4bd3-86cd-aa2e2abe60ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d10eede9-0f5d-46b6-ad91-fd4fe5866d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50730fef-dc73-4581-85df-f806902c2248",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84514071-4196-47c2-9eb8-8cd1226a2200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f89014f-b709-4a1f-8aaf-d317f46a6a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c228e274-ab63-4bb5-ab4c-374c248fc233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e676fc9c-dcaf-474b-8371-bdcafc3d6806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0acc6da3-9e5f-470a-82c2-73808e60544d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78dbd3b2-dd3c-4b8c-8867-c0abdb75072a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d033184f-b6b8-4072-ad76-e1a085159841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111f2ca1-2a36-4a2c-b6ce-922dd7901f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56624fc5-16cc-4b18-84cc-40cc8c79b13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2ce134-d517-4a16-a522-0f6abd819e7b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca7875-321c-498c-b547-7c7d76413a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66b42d2-a3e3-4c51-addf-757c00886616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f819a0e-2cdc-418f-be3d-cc40aa82f44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c9e5997-0f4f-4078-bfc4-0ee5ad46a63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1f0955-734a-42ac-a9d5-e77a18f05220",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce23ae03-ddef-49c2-a37f-11c409a291d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed9c37d-c88b-496d-b8e2-ebea7686f8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d2932f-63b6-4b17-a1e3-ca94c4198ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64739bff-ad9d-4abb-a965-6bcbf0617f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44aa9b-d3aa-45d8-bd4a-37d300485399",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1595db33-5036-47f5-830c-9a7b57848fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9c0f72-9d39-4d53-a7d1-a0dcd8a91481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b39b69-ec09-4a54-aaf2-8a4a4aacc2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4d09610-0d90-4cad-bee8-090376caf91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62b2cd-c83d-4aae-94f0-8585a89e256a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c769026-c653-44b5-8deb-4046b89bb8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b771a5d-595c-4e5f-97d2-d22ba0b673b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a89d5c-fbff-4c9b-92d3-5fdc8f2abeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4145b5a-7554-4226-9937-d8e56ac5f60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bce73da-8436-4bd0-8cd8-99bef0680fa9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd73f7-402b-41a4-8a60-16e1ac60a578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a6fffb-92fe-43da-a011-d92ce678674e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b6b032-4125-473d-82bb-cfef0e599b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d19f6b84-b7f2-497c-82ec-cce17e264bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0a9844-b077-4f33-9f80-228f8e498963",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c560fd-a878-462a-a556-5ed0ac0b9e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830df806-505f-40d5-abed-4079847405c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b450d364-cf91-43b9-be7a-f01ea37ac76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5934e713-21b3-44c3-b383-fc4dd4b7ee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c4f67e-f3ea-427f-9a83-a016c0795857",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b27ec3-883e-441b-ab68-5d567323afb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e40fb6d-420f-49cc-8370-415beead47a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2ebbcc-c2d4-4027-8d15-352e3703083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b638699-1af3-4d75-930d-427b6ee133b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4857a38-c7ce-4328-8aba-78bba110a50c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f77dd-9554-4309-8492-8eadfa017491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5aa467b-abe3-4631-b1fa-752dde59a264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8992ceda-f1ea-4612-bd00-97ab9eaa6eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c4d0c60-277c-4f74-9224-2771236ca52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7c0674-525e-475f-a14e-5cd633d89f27",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bcd2f5-f639-4acb-92a0-2a82dfd9548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7420bf24-1c82-466a-8250-5c0ec4f91f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e113d659-5e26-48ce-a1ce-30011c5e54f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbb4c348-3081-4444-8991-4b48d0c92019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c180e9-fa13-4a4d-9973-0d5128f05e26",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5ed7d4-9128-4782-8adf-4009fe5467c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091e1373-04d3-4cda-ae93-bd2f4cf41013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fde5c1-f260-44dc-b6af-c6604040f2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b34f8942-d5bc-409f-b688-0422e7e8a1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b13475-d004-4a06-b4f5-52a82ca7a3db",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b38d3d9-67b1-4378-813f-aadb1b5ebb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8a6b3c-dbaf-40d4-baf2-ce85180f6b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df601b00-5395-4d94-9709-918752509d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67db861d-758c-4f23-ba73-940998332ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0269c9-f80b-46dc-b372-3443959484b7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e88cda1-b841-4943-a755-6566c5477431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ba0d39-57e7-4f9d-9e68-12cb6903e444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a0586d-1f05-479f-95c0-a22a70a5aad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58d9a5c1-0fd9-4979-a201-2334ce6a5f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a592126c-b838-49f1-9d34-cc725580287c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94071f99-8653-42b2-a5cb-4a1df92c0cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275275c3-db39-45e9-9eee-4f97c02e4aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6747521f-3663-48fb-8dc3-35f7918ef104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70cae94-f247-4e82-9653-d42a76ad71a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5084f577-ee73-487d-a088-922354b023fe",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcfb6f3-8793-4356-8492-c84631549318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02e8cda-4fea-49a7-80e8-78f15fb1cd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a670576a-cdb4-4e53-a3e3-ec1717b6bc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6b2627-2409-4048-9585-3f5be1adbbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d9e2aa-3b3a-4bf1-be4d-acdc611c59bc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2ed50-8c7b-40b5-999b-6a08bc607bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a3ce1d-e848-4dc5-b615-229e7b648450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb1b401-11fd-4ddd-8d5a-e90b508df638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed91aee6-625e-4bd6-b9e6-9b4aca88e6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9d03cb-5177-461f-853a-4b3361aaa63f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ec8946-c591-4bec-8f9d-0bd2a884220c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48b1aaa-c66a-4451-87df-9e40b660b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9ce44a-48e1-4436-97a3-728fdc624e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2892b3ab-0f98-4552-b21c-19dffe573888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea8d620-c83e-4deb-b3f4-df896d78e2c3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcae62c-68fe-401a-86de-6c312e569bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2264bf-3406-4655-ad51-e91ff3fc10f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2769beca-c0ad-4667-a97a-505d49a5d455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc310f4c-e851-4b84-b4a0-a1ae96e73b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01beb095-538e-4eb1-bc5f-3059af690b3d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d7170-be0d-4b94-a2ec-ac0558d5742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a78dcb-b456-4db5-b8cf-a15dc499b449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4706353-35a6-4c42-8c54-cadeb2999c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57e277b3-8ff6-41c7-b769-e7a1e20360b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e09f45-d9f1-48e3-8cee-fdc75cb70edd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7f5e81-ba7c-4aec-861f-f7343f9fe357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6a4bc1-603a-464b-99d5-c3c1ee0cb493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1ae70e-a0ce-43ca-91a3-1f403150678c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dceb2002-eeaf-494e-acf3-4ab7325357d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b162ed8-ca46-4b38-b7a6-c88a17f97a57",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1a0721-167c-4e35-9fc6-b99241dfb234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d905002-8fb7-426d-9216-986d85de500f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6d2b68-b05d-4f27-9c91-6dce9598429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "763881c4-72f1-410f-bc6f-6047e74bdc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512b8882-5e08-42a6-9f37-f8bd27767afb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d76f57-ed1b-4cc6-b8e1-2b3ac4507d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8827e196-d0c2-41d4-992b-debb40e07704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bd8618-8509-4bc8-8d98-75acad11a637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8522574-fb5e-4faa-9d40-fd9567023eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc04caf-5581-496e-9393-07f2691a228b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1914aa79-4ade-4d2b-be5d-824b9bf71b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ca41b0-36ac-45f6-95a0-09e4e0193a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75213a60-b6e5-4ab2-a554-0b6f23984542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a36805-8150-430e-8090-c788cdf7161f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c85902d-52c7-4cbc-a7ad-6c456ef87069",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defbf4ea-7694-472f-ba0d-576413c76d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a29dd7b-6d5b-4c07-82b8-02b81d313b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4df4fb-2313-4324-b962-67a509472bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd7027bf-62f4-4009-b91a-7b53920c9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543c4ef2-344e-4e35-a403-9cc7b7b75023",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc9464d-b5ad-4321-ac0a-8e4820965683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240817b5-daec-466e-9e30-2cf0a53e7349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4250fd-da93-4253-af6c-730e53a1ec41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "084ddfc6-d317-483a-b5b1-3c96cc04d3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8a69bf-543a-46dd-b544-509e7a8fbf28",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d508de37-af5b-43c4-ac5b-a83ad4758b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d734de-2906-4424-8247-aeabf97d8f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51960975-c7b9-475c-83ea-23ef9f2d2b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb66d68-afa8-4d8a-adab-2ca7da9ae42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c048afd-d669-4d32-a766-b95791e87bd4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3a7bee-fb25-4e8c-a6a8-c4ac25d40211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba2f86c-8a8d-4fc5-b4c9-10d6d474c953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c3a583-5baa-4410-9a62-634fd6b7aff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d6617b-792e-4ad4-a8c5-e11b8431b61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e5c70b-d3ff-409c-acf4-66d4a1f86835",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b05219-62dd-4b06-961c-4869c2f4fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c8c65a-3cff-4ac8-bfc0-adf964c724e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23d00df-e00d-497a-bcbc-1459db30add4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c033f7-0622-46ac-8c95-b0dbd8d25b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cf438b-d6e5-4009-8a6c-11b56a25ffa7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbd717c-7cfb-4e9c-9ba0-920e41a2d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1115cc37-2645-4715-b5c1-a81e1377a142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6eb2718-e78c-4999-a8d4-532399be8374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "534993b6-dbc8-4942-a931-1997ca33ff12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b56d20c-3950-4bb8-8843-0dd3fd2c0239",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596b3679-9410-4e8b-a54d-1549aad16279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd7cea5-55c5-4ae6-a319-5913452b74b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627ff936-bfc2-4985-a9eb-3f38f494e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f6f9d2-de35-4ddf-96d3-16958dd0ed09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236dc81d-0913-4491-b68c-55ccf6367726",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6040d2e-e96e-4e1d-b30f-871496ff1dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9664ff83-27f9-41c4-be5f-904354df5d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3924ae46-13d0-4ed3-9a75-cf0a421e7c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb7415c-289d-4714-b1f5-0956e327c0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4c13a4-0c1b-4594-bbfd-8a0d5b518a1b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5789a1-9593-4d60-86d4-10e5b826d905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13707240-fb00-426a-97be-a84ac87b2461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07f9d38-671b-4466-9cfe-cdad821b394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb55fba-e9c0-449b-9221-6a88da7cfd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ece42b-698b-41b3-96d2-ccef70dc404d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0185068-27d4-412f-a5ee-25c9fb8ba29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ed7b65-4b68-4507-b1e0-40e03b954af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6eddd5e-b88a-4c6e-9be0-535844fefb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc61caf-2b50-489f-8143-b28f8efdfbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7ddc95-fbeb-404b-94eb-25da99108103",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350b045d-0342-4f53-b734-af4ac4ad39d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f84ac13-1f25-40e4-a841-142c73664e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b009f25e-2854-4eaf-bb4e-5e9319155a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb1d042-16f0-4023-9d5e-9afe9c093945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa681265-d256-484a-a6ee-57a2b6112a21",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43666792-f0cf-49cc-8aef-58696fe0ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c592072a-2c20-4184-b981-27fccae46407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fa103d-b41c-4f31-9202-1eadabc86ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bccd4189-d693-4948-a0fc-8becaeb6b1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e28424c-f865-4858-8c3e-69dafe32da2c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0def40-c1b3-421e-b5fa-d8683ceab5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffe3c57-9a11-4523-aa4d-6facfdc7bfb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab29c928-58e0-4879-83af-fba66fc088b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "df40bec2-12f3-4578-8532-fa73f1f5667c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4559be4-3cce-43c1-9794-2d775ecfaa93",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be9a2ca-7b0e-4b29-b234-152f341b2626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e169010e-24b7-489e-b847-c22d33254389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9610b93-e6ec-4180-88fb-11aa6006b7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a62cc54-3b51-4a7b-9466-8ba4dbf8cf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fd1e18-59a4-4d07-89bd-4ef8ec752122",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40216af0-0e63-4508-87f0-da56b1ccd8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86e4bd8-562f-41be-8b1c-486cfaeddf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671241ef-a53d-4885-a281-5059092174f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "23149382-1c40-4652-8f73-0413c1413f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d509859-f838-4731-b74a-0b0154ceb16e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db97919c-97c7-4919-af33-2d500aa32e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac28b50e-77e7-48a6-8654-d80439caac2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cc1332-d9f3-4d17-88e4-aec1aa7643f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a02e31ca-a6b1-491b-ac6f-a2cd22cd26b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900ddd38-da3f-41d6-9b45-306df719a18e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08df40e1-030a-4268-aea4-c370b7416120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b83e83-bc27-477f-99f7-10acf76813d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da89c552-7944-4587-95c8-1d65394581d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbaaace8-7cc3-493c-a3c0-38797cfe9cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f086e23c-5fbb-40e1-8207-87f87e2e0bb3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e24c265-8098-466b-90b2-ff1d619e6e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b28c1756-ddcf-403e-8ecb-366739bf5474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299b584-a257-4e91-ba38-bda6c9291fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94a60ef-95f5-4bb0-adbf-d025d9d407fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82eb3d0-25bb-4ad9-8aa2-3eefafcb0764",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b969b580-7803-412e-a49d-19d9883d86b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7714f8-0b65-48d9-a2b0-19788f0cbf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d453feb5-e250-4bc6-a509-c839bc13b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6ee8d6-ff4d-4580-9769-a606cd3a2b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84e8d2f-df25-4d46-ab74-ab9bb105e4b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74397fe-32f0-4667-9d0d-f104e41245a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ab95a3-6612-4b1a-887d-11da4bdaa23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e177739d-9e4e-403b-bb87-37031ddb3a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad13606-1441-478c-b0e6-cac3afca99be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7ebde9-2a9c-4773-be37-b61b1970cc9b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c03f06-4402-4421-9edb-e8df029937c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308d4e0e-cbe3-4e62-b965-5b92614e6fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31c1200-5201-42e7-b915-fde0b4ae6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf704e6-ead1-4122-8e59-250069288e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fbeb38-29cf-4112-a65e-bbdfe877b808",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236bc944-7c74-4468-88ee-00b165fd093a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6c96cd-7f0e-4af8-976f-1ec80c42ceaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d709fa2-4f6f-4868-914d-0971dabab2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85d54b2f-1916-4ffb-8ba3-83ce897805f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7005f43-8340-4507-a2c7-ee429128718e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5b033e-160f-41a7-bb0b-3c0a185acf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194ba318-b3be-42f6-813c-24d867084460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754f9154-f847-445a-86f3-c8241b7c69fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "348cfc78-d87a-4f85-8ce2-48211f854a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66078c60-6d41-4e3d-ba90-ebcb683d920f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d144ec5-fb90-42c7-92e7-eecd7bb51026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5baaf27e-4866-4434-ad49-bb27e6152b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc535db-e3d5-40b1-ac88-c0f97467abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b4eed0-c524-4a95-9346-adc2bec7df70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944576d4-6700-482e-b66a-60e0670501a4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734000bb-5910-4a77-bbe1-0a005a1a24fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744a28b1-70b4-4951-84fa-0bf1e2287ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893e8126-9dc2-4190-8300-3b3479687f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0734a9-a9cc-4ccc-a2fb-f37ad8a14d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989c0d5-257a-4bee-b2c4-d539738b25d1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80cbc55-87f0-4216-b125-d41d37ad90e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcecb3c4-5d6f-4d8a-b508-f7d4dc7889d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e533c1-0ea9-4c0c-9185-331ba0c242de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0c1758-da8f-49d8-a75d-43118d7fae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b602a8d0-2184-4a44-ac59-4a7db1f13467",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3304c368-7377-4c02-b830-76ed565d40aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11eb33f3-7e79-440d-b483-9ff7967701f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb24f54-328b-48e7-aaa4-381c476b18cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d7e59a-0f0c-48ae-9ea7-bc651cabfda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73f9b97-e7b1-4709-8d07-099a2202e4b4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bae91a-213c-47af-9e76-1cab0920a10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3866f4ee-1a12-49c1-ae00-2668d591c1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df17788b-5519-430d-8422-bcdac7f76f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f37c3a30-e4d9-4205-bbed-67c45ee7fd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9389656-a223-4107-91c4-4a28b89b3890",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efea4b81-4993-41b8-a580-7abf466f0200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3177dab6-9138-45cb-baed-e2735bceadff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ae27d0-76bc-4fe1-8bcb-ce2be474dad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4618bb-ff0e-4078-a240-b77ebb89727a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c8e676-0c4c-4f43-bf3c-b4e6317a9a70",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7d7894-7ec9-43ae-99d9-bafe1d1de491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0991c345-959f-48f0-8187-26826a993c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8864c3-b08f-4372-84ea-cc823fa2901a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19b72cb0-39b7-43f2-99c5-81b6b3ac001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c35dc5b-5406-46bb-9817-43db0e451356",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036ad750-af86-49a2-aa2b-9eece423387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a15d24-77f9-4ceb-831e-6b972bb9633f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c08941-81d9-4631-b832-993a6bd4cb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a08e48-95ec-40fa-90b6-1621ac655423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61961fc-553f-464b-8378-17cd3825428c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0cff30-67e9-4949-b72d-1ae8412102ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22adaee-8bf1-449a-9ef8-3524edc4759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad79dc8b-edca-4997-ba45-509d8961b63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "206cb6f1-599f-4983-aa6b-b8fa8f11f2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ba630d-8322-4ca6-83fc-f4db8579d999",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19682d6-d817-47c4-9aa9-60a9211484f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79337fa0-7ddd-44c9-9879-8232bdbc0725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57e6dac-1214-43c9-9873-ad41c026f9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcca6423-690c-4671-a3d4-eda685912b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8b6571-d73e-4718-92ff-c41e92b622cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e712c26-689f-47ff-a263-5450a5d8e0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf22526-f910-4ad6-8833-fba3e6c7ae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae3400e-3ef9-4327-9dc9-d9431bc18f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "99abcda2-c5d1-4881-b616-35970e66747a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c411a04-9dd8-4ec3-aac3-64a623afcf61",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01106dc2-e234-4883-807b-adc4e0f044bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd02d93-a703-4ebb-ac79-aff16e8060ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5361c5-75c5-4f87-84d6-0cc04418eda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d890fc1-e70d-44c6-b221-11691aba8926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bf5493-d436-459e-963e-ea9b4da974f8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf2236a-921e-4268-a3f1-036b9fe44a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fe5715-d8ed-46ce-bf71-5161bc3b6888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15956f64-d6d6-4d16-9e06-756b98ee90fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "520a02b2-213c-4dad-bca1-5a89dfdf3a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce012c39-0a82-4a53-b80c-df60fc0cca6c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31abc835-19e9-43af-b5bd-6196da730c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8966c55a-5f7c-4a53-9f99-bc4abbf7f715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e745b9-d5d1-44ff-8c84-95fe0e47c741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc0cc27-cf8e-4ed8-9363-30919d1cc194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca0029e-7014-418b-8fe9-b69f3394eaca",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076bc887-2645-460a-a2a7-3df5d7f9597f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b94836-24b7-4632-843e-9a348fecaa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62cdb1a-1ee5-437a-9636-03a98780afca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae682df8-cfdf-4967-981c-f6dc94ef8a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2a5410-8820-4cba-ae43-5b66dd151115",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187eeb03-bb83-495f-9772-f7e66275f6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c067d9-3bd2-4925-a41c-0f4e45c6baae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e36d00-9e24-48c4-8731-e120156ed4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d42f44bc-a3dc-4b9c-9efe-38191958dbc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830f0417-db45-4a9f-84ec-2493fc4141be",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c3a132-0e8d-4cca-a9b9-917754c22d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce598b9-6361-4526-9e32-07948028e374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769637e1-e40a-433a-931a-a85922693293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "849025f5-8bd4-4005-8947-d4f85e9cc736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44288f08-74a6-4e56-b546-f249a6c0c5bc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2b8388-feee-4e65-82c9-69fd128d7ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9397b05b-5e24-4762-bc24-ff2cf4ffd3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abef6f67-ca9a-4d0f-a7bd-dc06b9ae0593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fbf427-cdad-47aa-8628-5a80f4e24631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef48b3b7-de4a-4341-8e90-abb754dfb1a4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f51698-2918-4308-8379-e4ca7bf53723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeccdd57-0d71-4c21-b460-94b29ef3eb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c85759c-f433-48e3-a3a8-b5d3a228c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "390e9a94-b51e-4d3c-b8db-b91ca5aa06a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03f748e-f1a1-4c0a-aff3-739ad78259b6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6882456d-497e-4455-b878-d0a7d212ce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46439f3f-145c-4a5d-b105-dd5d65b80ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2239ff3-ef8c-41a7-92e4-f3cfbd51f895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa95fe3-5663-400b-aaa9-b59453e85f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051352c3-8039-4fda-908f-53f87dcb767e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e32b520-1d9b-446e-b8d9-d20258f0cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64b10f5-3963-40fc-ae82-27f7bd3b2217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5b23fd-6a9a-445c-a45f-307f8638d8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2432fb6-3bff-46fa-983a-679e7ffe807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2d3bef-26b7-4e53-a426-9e04f6bfafd4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a190381-e383-411e-a284-3a08f7c27508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12cb2259-b388-43e9-9bac-84c59ee0aacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f46ddf-554f-4dd1-8245-003135cb5964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a353c0cc-29b1-4c05-aaaf-243787c95fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c523f-ae59-443d-8ef0-c4b6f56025dd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecd61cf-6a3b-4e9d-946b-192f20c06f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16562c41-b584-41ab-8d2e-c1958624f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a975d9-9484-4125-ad4c-b371e8bed98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9314a35-642e-423e-a5c6-88e712f4063e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546cd106-1d71-4e0e-bb35-97396088ad98",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85b9cb3-4066-46e1-b2a5-d3f2d877301d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff92f357-7fb8-4ff3-bef9-8f3bfb58a337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfcd2a20-7891-48ab-ba43-ea937c750a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eeda70c6-64dd-4a60-8b02-ff77940fb66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443f0ddd-84ae-4e27-9224-031ec560d1fe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a8c8b8-d501-46ee-9ae8-b2ff323cf966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52421c91-63d9-4da8-be69-e7dbf2afd772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebf8fef-c42d-48ed-8ca0-51a495371623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb8b573-1749-4ff0-9fae-a5388d806a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e2ed4c-7cf3-4540-97cb-966baa46da2c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badeb034-c362-4386-8b8c-3e11377b61dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30821ee-906f-4a3f-bf51-56eb2ad6893f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a142ce9-ac90-49bf-b2bb-24908b5b21c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c5cbad-de0e-4d90-8f00-af6c50204f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc77d03-f4e6-4071-960b-7e8f6cf2c623",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081b9be8-0d6b-4bb0-a006-db5d52b5e9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4666062-dc46-499a-a44d-a5d666e16d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8886af42-f252-4bc8-8cfe-2a9b462263da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "107ef5d4-a3e8-4df0-9273-620e31d92236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b899aab3-a21f-49ab-9a0b-76ce68063cb4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138d8c79-a897-4946-b08f-58d1fbecd8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ac8fe2-ed2e-4650-af7f-2756c1989b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d650da-d734-471f-abfc-860bfd12c45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9248d8c-bb88-4b9d-a83a-b159f47fbf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb373d9-84fd-4347-86d2-72282811f888",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63acc6-c9ee-441b-a278-973e601087ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61b306f-eac4-4a71-b1fe-af00acb068f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d090c0ad-b194-48f8-b863-5cb69ad89594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f7d018-5182-4570-aa49-2d96097fb57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1a22bc-4d57-4196-b93e-810852fe8cca",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3eba0a-321c-4c72-a009-eafe37f530a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f4d1e-6682-4a95-891d-c1645248670a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1b6a69-06dc-4b46-904e-b63b97212053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19e47714-27ea-4ecf-9c68-c2b736581d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a64c915-0b6f-4e54-8798-be64b381fa4f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee34981-fad2-444a-9322-8c8ef192cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8977af78-96a8-4b36-809c-e6c3675ea657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e982c5a8-6bd0-4916-a1d4-c52d79acb765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a11405df-e1b4-41ae-bfd1-1501a5b6cd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5bbf22-b05c-41ff-a278-d36b76dba552",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba5e5b3-6a1b-4194-8b67-006c80c8d4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a32299-474b-4863-b0f1-b40eedc57c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1899d5f8-4606-4f63-b782-2247c290cff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b565835-14a6-4f5c-99d3-1ae06237628d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949f42bd-af27-4b48-ade4-a2afcbce4c61",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646fdc6e-1873-4079-bf4a-2638d1b20144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f16c7c9-e867-49cc-8e2e-ccace58e9a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da91c5-18bd-48c8-a1a7-b9eb7fb60b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "372e4f86-85f6-48dd-89ab-a2df309d07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4489575b-58d0-4083-ae59-295abc711745",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530c266a-d364-40fd-ae45-a18015a64dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afaa1cc4-dcce-4b73-8ffd-3489453ca7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241625e2-ed39-4d91-a7d9-0e2b4d93d915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee31047-b21b-4e9f-91d8-ef6b41ac4a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e586a8f-5803-4505-932d-18c554d53654",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e0b2f-8e76-48f7-a164-69e66bd58539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fd53a5-33fe-4cd2-8549-62b5184a2855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c20a567-e1a7-4752-8155-d4f40eb4a3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0643faef-61de-4203-bc2b-4527fa15d364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42511fc5-d2ae-4ee9-99fb-cf0f605d1aef",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9959c550-cb75-4081-9240-2c791466897a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c53857-4719-48bc-843c-2f1a392a170f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c15cc5-85f3-4a2d-b7b6-084b2f04ee09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be900f2-d96b-4734-837c-36d934c5f608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd34236-02fe-4aab-854d-ffbaecba997e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe3dbaf-d4c9-45a3-9ef6-1d90240c2aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb84e206-9364-4a7a-8bb5-009215f9a451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7309d30-7a81-4d32-a25e-0dd28f075329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b68861b-288c-4208-ad98-49ca2d599121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fa9d5b-4929-45da-b144-95407399e66b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e757e3c-6d57-4618-ab23-be05c2819a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efe448c-cd9b-4423-b904-2765e08f2640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9589898-350f-4ed3-8fe6-aade0f49d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0befa5-2cd5-47d5-b4a7-7840f15f1683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c5e4a7-92f3-46ed-b2b8-33d058d22447",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7360da31-6754-4cc4-a804-5409da2848e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf6def5-146f-494e-a40c-52dd16d5187e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaa3235-f913-4500-bc5c-e5b88a6c28b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f04073e-21de-4bbd-a1c8-1ef95da40cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907fd673-a974-4988-a2d5-f0510085d805",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bd1e47-bc2c-4a19-83d8-4594bdfb7a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c706eeaf-9d89-42fe-a9a6-7fabbe16bf04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97363847-9d0f-48f7-a59a-e0d155008573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "adce5d6a-bdc0-4916-ab69-54931ba8fc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e30638-a3b2-4eaf-a304-a9386a4c15b0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee31f36-963e-4347-b1f7-fcfa9678fbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bba8796-48d8-4f9e-b725-94e5e93570c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95784c4d-4318-4f7a-84ec-6e82f417a16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a634e5b5-4652-42ce-898e-d6493559ea3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82795337-d4bb-45fe-a5ae-430ae1e59d60",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070dafd-33b3-47d0-8a1e-3be2693ac69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a97ba621-63ed-4d50-b00a-82e6802141de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6ed29b-c220-4469-a35b-39b99a3362b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04be1ec7-b430-4a93-a975-7d3090ad35b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "865693c2-39c2-4ebf-a858-ffb3a1cf6717",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ebbd52d-8dfc-47a7-96c0-bcc683cfee27",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb75af3-b7bf-4fa4-bf46-e18ae8ba25c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb96bd77-9a7e-44bb-af23-944c71b57e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efab60ba-1318-4a57-89b7-9b7f5a96d6b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75f3c4ba-9c19-40ee-8651-93a99974b8f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4705c6c-b9bd-4d6d-88fa-dc15bc32a4da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a395577-f929-4b13-a7e4-e145b85ab0d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86284470-5ca4-4be3-a607-5bf52694266c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5896f5d-6bb5-4cb2-bd92-50e477aaa990"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7658fdd4-890e-4028-bd47-686854d637ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59f364ba-14a1-43a0-acb4-26cc1cef6072"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee1e3676-7d23-45f5-9cb1-9d3ee0077128",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "532a667c-2008-488f-a548-5e9fab21c6f5"
                }
              }
            ]
          },
          {
            "id": "c6a1b496-9c80-452c-94e7-b2bc9d83f2d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d77c53e-0980-4eaa-aa02-ff9af030f6c9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "016524ac-fdfb-40dc-8744-4250c8847625",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a234f7-e585-4d9e-aaed-6d8cc3bcfbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1e9fb46-d09a-46c4-a6ad-65f3885193a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24110543-67d1-41d7-8d42-33cb90c36b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719b0731-755a-46d4-8c70-fb818c40356c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "40c48d35-b3b4-4bf6-b71a-e52bafe9690e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "392fd907-eee1-417c-bd54-6a88d1c3972d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a641b76c-1700-4457-bc76-8d462713ebbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8587da6c-1f78-4349-8e6e-bcd4073ff6bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9b71a161-20b1-460e-ab74-789cad4817bc"
                    }
                  }
                ]
              },
              {
                "id": "c6257f88-b27a-4fd1-926d-d75e9bf6947f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fb1286b-15d4-4555-a31b-038f5393889f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a92bf154-e3f4-4e4d-aea7-0da90331483a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3cdc780c-f103-4e08-a416-cbde1923ed55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b8dcef7-a322-40de-a2ff-14550c293dcd"
                    }
                  }
                ]
              },
              {
                "id": "cb3c7434-c53c-46c3-9bcd-a340a183d9ed",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b85a5b43-20a8-41f3-9a69-d90cbb4faa03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3dffd1c6-ffea-4c45-98e5-b74fecc1bcfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63d00e6e-f352-4c40-84a4-ae02f52c252a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d3a3cf3-f84a-4463-82ac-c9658b4f8b39"
                    }
                  }
                ]
              },
              {
                "id": "dd4d1194-0912-4319-8b17-8b5b2e1ca933",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c3c6fd2-76ed-4ab7-8f0d-cca64b680f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe18e9fb-0250-48c9-9be9-49ed58cdb04f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22711cf8-546d-47f5-89ca-d08b79db9614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6c91f0e6-52fb-4177-b91a-8e17cd6d479c"
                    }
                  }
                ]
              },
              {
                "id": "45b9dfec-6408-4247-8513-e75857e689be",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce3c9ea-03ee-4939-a579-bf88c31c8c4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d53a3190-b9fc-4be5-8117-3a24e5f5e3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca323889-d328-480f-b597-166f98741728",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0b2ad9d7-9c54-4ed0-9aeb-5c417604e90c"
                    }
                  }
                ]
              },
              {
                "id": "b1a38659-e723-4496-a4b8-e8d2d6cc786d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b24031a-588c-4e17-8426-6fdc80a4f392",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58f4c413-9d11-4613-bbf3-ab3e3d50d5a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96578db4-dcb8-4267-8d79-c498c3b8d29d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f62b8016-7a1a-47c5-804b-c91f4bd28378"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33b0848c-13fa-48f6-9afc-dcf001c8e4ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64f348f8-f419-4247-b0a6-dd55e9de7693"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f27be52c-ddbf-47e3-9e40-be8fd6c1a86d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "916ba5a2-f631-4898-8d58-be3746d0bb86"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15512577-8ba8-48c6-a99a-c46406788051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "92c9f838-5a6f-4f77-8422-992ff9a68580"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb917663-872b-431f-9b30-62500fbe3c17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11236844-7e6c-40c3-bf7e-f192de5432dd"
            }
          }
        ]
      },
      {
        "id": "ae8642dd-dd88-4250-8d2c-c8e01a4950ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "51e5fd3c-7c0d-4c46-91a0-87a0dd26ef12",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37588fae-929a-4908-9a20-3c8522da3a23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e51f1a53-e5ce-4faf-8a8a-8f33c85ff973",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aadec8-5ce1-48b7-bda2-ddd3d0aa45c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af816a36-349c-4e28-9cbe-db03e6407bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7c49e1-7efa-48bf-9216-a7bfa2227cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "260b74c1-fd60-4aaf-acc1-5361052413d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53ca247-7bd3-4618-8028-df6d40cf5390",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1b5fa7-9f7f-4ca2-bb40-885c65c5050f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95141a0f-c66c-4a0c-a3bf-76589398f0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8682875d-4795-4c9a-b835-df3f7abca49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace117ee-8af7-4a73-9296-0c8d568cc760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f838c47e-a600-4a8b-a613-ee3c0bc56ec9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d333ef-0027-4588-b69f-25d14b147c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512e7a33-4676-47e9-8db8-415fc8df88ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922f2ce7-2bac-47f7-955d-7f1c4cb416cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0844b4f7-b6dc-4f41-a241-9c466cd49996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e18def8-b8e6-428c-ba15-9cf234449818",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c109dc-ecbe-4acb-b1b9-fae08f422282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c22b0b-3120-4c5b-90c3-fd92d52d3b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3535ea08-1a05-49e5-8dcd-bcc55e42d9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c214a71c-752c-447f-b2cd-13fea49d2cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b4b78a-b465-44ad-bcba-d2241d3e0ff7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952b0f43-d1fb-4475-ae3e-f9ab83202a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7811df-3d2e-4f5e-9499-2559a9fc901f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3423f7-2d81-4e94-8cb8-ee7f52f2a776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda078f4-f626-4615-8a82-fc64c8f40974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb0ac66-1e23-4ee3-aabf-7e21213721f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b517fd5-d442-49e9-8a9e-d3088db65505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7164a4d9-16b5-4508-ace5-fd93da43ca86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9efb6cc-e415-4b2c-82a6-429e96425550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27cd548b-e451-441c-8037-7a17ca161b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ead5142-2621-4de1-87b8-3784a39a4720",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09f7bfb-f26b-4190-9ad3-5876bc34b277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e9e77c-4379-4ac6-910b-94d37b6165b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f57f7-3c70-4d62-a67f-0eea25a6addc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec66d8f6-be57-4aa8-9d22-29172969faae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a74709-8ab9-4f08-bfd1-3a6fd27c8595",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a8ae77-aa13-4370-beaf-3fd7f062e886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c28f9f-bb60-4c15-ab7a-4454d2550b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146847b8-ae96-4ab6-9656-fb5f172ce2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19727dd7-248f-45ab-bcc0-c3cf3da338e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d47f389-4724-4e92-9ae5-135904fd6362",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b1147e-c6c3-4610-bd80-8175c8e7b5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ec3edd-4545-47e6-b474-63539588616c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed3c4ab-106b-4260-b4e3-e9b6b624c3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5431c10-a9ab-4fff-86cc-b3121b11f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7773bc69-4718-4a11-bc62-c0d90ab238da",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd69302d-6e7b-4a66-bfa2-7d3396dc353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c52d372-a0bc-44f4-92fd-d357f977996c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e1a9f5-9413-4a98-9e29-eefc9f626fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06a80cbe-6a86-4be8-a17d-aed0d66290ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed9437-4e4f-47db-880e-5705e99a03aa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202e9fa9-3f6d-4880-9b6a-f43b00174935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28954a3-4cef-4f0d-ae84-ce5103501652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9879a45e-19bc-4aa5-abd9-d0bdfdce1c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "56ce4027-be8f-4fbc-8d31-70869851f8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded44fc5-d212-4715-9128-29babb6ad780",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c3639a-5fba-43ea-a6de-bc8f0ce84726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edb139c-050e-4425-bcbe-1fedcb4a536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db8889-f63f-4fb7-8037-57624888b1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c638f3c-c255-433a-92d3-837759a19178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e584c44-d92c-4ea2-af96-35be38d61256",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cb9699-3ac2-484e-beaa-247573a12bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada1a56c-5948-40df-9d54-64b13265eae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6870db-7fd5-4a0f-ad58-544c4e0bd342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdad02fe-85d1-4b01-ab3c-87602e278417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd48dbd-13f8-4d78-a352-1551f72a74bf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8e3a9-ca8e-4b78-a9a1-4abdec3f3399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f5b9ac-f510-40c7-b852-862efde68fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5853fcc-3cf6-4d12-b71b-3654666be074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d9ac30-0b3c-4343-bbbe-1ee1a0d2f720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af2134e-a7d1-4514-9fe2-45d6aaefc38c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d372f50-3463-44f9-ba3a-023e8933ea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f8e2e7-d151-4cf0-8ba2-7d1a8204a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9799186a-2eb8-43bb-912a-449f60e9d661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea1669-8e9e-4724-9ddc-620b78a63e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b69e119-18c5-460f-af8e-ece1136c76c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4ce20b-18d9-4067-ac09-f3f236607772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6332051c-e041-4a1d-a91f-193ee31b5221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec4d79b-af47-4c35-8aa8-5d44fe24995d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "598ca839-fbdc-49c5-847c-27bd274f2395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af3fbde-ee3d-4dd2-a166-71faad6acaaf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e943d25a-0e78-4498-b1cf-71bbbb252fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae43eb53-19e4-4edb-b75f-e0a073bc3d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d309c4d9-68b5-460b-98d1-e5207fc1bfb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea1d7cb-aa24-40b7-b124-1ceb02fe1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44af8728-66c3-4c42-bf26-616a5de04cc7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7236a8-8a38-4bf8-ad3d-2a363a4b3e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd25735-00ec-4f61-8389-4062225af23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8c36a0-330f-4294-ab44-4c5f215f74c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "043d6231-86d3-415c-b3bf-955acaeeb9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c2dd28-d293-4f35-8e74-970868b1401c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7d2b79-cfee-4562-9814-86847b838791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55bda828-4208-4353-a6b8-ce4a5800afd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a9a990-0c94-44b1-8dc8-72e48b1b5b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1668e880-c5f3-425a-aa14-4fbcfac8be0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4199d8ae-b3bf-4add-a03d-c06f788959ce",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed3221f-f53e-489e-97a9-0f59e7fb8b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad42dd1c-3185-49e1-8dd0-af89f7a17325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3154513-30a6-4a17-a88c-32770c0e3ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c75b5b8-aa82-42cd-b77b-3bc467d005cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3628e533-fc44-40ae-9ad1-dc04df7953da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a5571c-e71a-496f-b1cb-dfcba46692c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73fe1e2-2001-4970-9e0c-47f136e419a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da6fbf4-7c2f-485d-b67f-02841364c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d07b803d-acc2-445e-8332-dc53e9547231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174582d0-03e2-4537-bf52-07775f2d57a5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc439c17-4aa8-4edf-b2f9-d166f7a3526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86cd2b9-37b8-4710-adc7-7662b69e8f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c44c22d-9195-42f3-af47-2136d176c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f0e890-35d0-495b-89ac-1f80cd40e7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17bd880-5284-4226-bf7a-1d762bc5b090",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622ada0-d0b5-4e5c-860f-8cdc701365ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0ec97f-543d-46da-ae59-c93928d504c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc81b410-f6e3-4c01-bc21-5e8806cc77bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfecb01-e52a-4e2c-bbc5-6132cfb19e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8851f1-5f2c-43f5-871b-cbcc427cdd50",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0933bd-2c82-4da7-a0b1-346f322fcdfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19da1604-1d8f-43f0-b8d8-4f142866f42b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87744589-8fb9-436b-aa22-774b95681710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8a6b57-e928-44dd-a7ca-2949d68c0d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5120f3a6-5e89-47c9-ae8a-0fa7577a2b9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bea6123-72e0-4076-ae77-1ee14604bad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ef7e17-284e-4754-af5b-09681351557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe93006a-5e7c-4be6-b436-5e6c0bd7c668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f55c198-344c-4c5e-b027-eb2147280e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9441dc33-f96e-4f95-ae58-74622df62fde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f3fef1-fffc-42fd-8dfe-f5c83678f963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed96cf9-22af-42dc-b9ca-258523777fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe8e8f-c1d9-4a42-80d0-10c9d9e7e66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5980c7-9965-4faf-802e-9a771aef5056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375f59f7-b8b8-43b4-a8c8-a58244fba519",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d5a16-a61c-4414-8b8f-eb44a5e3ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813a8057-a92f-4dd8-9443-620784c3197f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d805a0f-2e7c-43f6-97c2-87e084629000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc359b6-b016-4f7f-a2f2-2586314c64bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2fac29-b032-4ea2-b6ef-585aecc9b813",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e5fc3-2b6f-4be0-8489-e2d0bdce112c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08351160-0318-4b1a-851b-e67e1eb7900b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d233c28e-285a-4c9a-830e-c0021cbd73ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a075bc45-30c6-42be-b7d4-319acb297c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c0830-8529-49eb-bb33-244c6a0c7c28",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8561c0ed-5e72-4632-a5e7-9473edf9a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e28b90-1164-42b8-a754-92d7a104d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb69418-dc47-4abb-9e90-fcd844e8a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4151ea29-5b51-4394-9dac-caae81fc7989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad803e27-d425-4bd6-a876-4a2e6cb9456b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854fe3c3-f337-453a-b2cd-7c04eb57595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ea254e-b090-4909-ac90-f7b9bcd804b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa004b-3fc5-44e4-8e16-300b4e49e639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dafaffc-a7ac-48b9-9d4f-2c5f2d906068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390de598-56db-46d1-9a7c-4258a8fba5f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ba05b9-6c1c-4c0b-a812-0e83ad840590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9335ee5-9bba-423e-9224-ba5750aae9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbadf3a1-1a08-41f2-80b6-4f277bad26d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a2bc28-689a-4c64-b30c-c55c8911e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65214069-6869-4645-8875-c0eb9cd72dc7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4cc7b0-a2db-44a7-9917-795f6da74a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f02e934-e2da-43d5-a350-00954d5d51a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a8c8fa-baf1-4d48-9dd9-bb4e8ab4abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea3a273-aef3-4b3d-b970-535895d6359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4060f9c6-3f2a-402c-a566-8f32345c3d5f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2823dc56-f853-42fe-8d97-0d404caaee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce089850-fac9-41ff-9f5d-bd5696e499d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af3cdb-d9ea-4788-9779-2eed86296080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c043af93-bd46-463a-8818-a932804e9bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd3dc08-fa67-4fcf-9e5e-fd8132ac1f64",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f23400-54f7-4ced-afba-803761af1cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a72e06e-d28e-45a7-9be8-d572d0d07e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b5b897-8150-4bf5-9449-0fdb1933a69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bf6321-4bc6-4207-bfbd-03bf5f83c5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8c9590-4a3f-4a84-98c5-bfcd175d3629",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a402180f-7431-4aab-866b-54f5e48acf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fd08e9-ec60-4c4f-a02a-11d850f95728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b804d032-dad7-495a-b52b-696484bf6bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8f3915-8b62-470c-8212-330db45ffec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a09a387-c2cb-4832-a641-4feefc43acfe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b2d7c8-5116-4c96-a286-9d59d6aa36e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c6aab0-128b-4633-8186-0fc615d563bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fd2431-765b-48d3-b978-8dfc23c5f947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8d39cb-4c34-4157-83e2-a8e85031afe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cae70c-b9bf-4303-a417-555d45d66051",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4c3f05-25cb-4ba7-b4b2-9d8eb3541a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effe5889-e109-4e9a-a28a-b3dc3b94c437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648e003-2192-462b-9cae-c4e815312475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb78e59b-8be5-42af-92d2-dc30ec4689b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11d09348-dcc5-4aa4-bbc9-3464d6b82bf7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0315a438-de38-4fba-ba91-69d6218ced65",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fe626a-7e5c-4152-9932-cf337272b624",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "06816c8c-c8a4-4cc1-8188-24b399c6ecc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c449baf1-c776-4392-aaae-0d1f698323bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3582d7ee-e999-42ce-9f8a-5fa1df713697"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0b7011e-826a-4cf8-87ee-ab274b091640",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d493666-0040-4bad-ace5-bfd33a848b9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1008d2fd-f643-4d63-8f01-cbf1c014a91a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99c0ff02-a8b2-441a-8eb2-638ad703ebaf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db9c1b65-03ca-4526-b45b-f27f17f8cb96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e27f34c4-8890-4caa-a7d7-192f3f69b4ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6da453fe-4937-4e00-9c01-d3ffe307a710",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b35986e-c8e9-4dce-91e7-6816d151eb14"
            }
          }
        ]
      },
      {
        "id": "72518d4c-816a-44a7-90f9-2516043b70ed",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2466f858-59dc-40ff-8333-7153f5f1804c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "acd72f9a-be67-412a-b1e9-b852a81da30d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "567eccd4-8a2d-46fe-8c18-19a0429efd5e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45a646-92d9-4ea0-b9b2-0db29027eabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ac5e62-1f89-4ffb-afb5-4fc58999e0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43cca842-3703-4304-b1c6-c5c4afee80ec",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c869bec-25e7-45b0-9cc5-bc6c7f304a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbd3fa4-9367-4b69-8319-4672e1271f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9867152d-56ce-4f3c-885c-533bb965fb87",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5120ab-e15d-40c7-8ee4-8bc7ebef89b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc9c7fe-0584-463a-8158-5c28fb4c85b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dc0552-19e5-4fb8-bb02-8b121b5a0956",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a07af-0b12-4cca-93b3-4755047173ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145f184f-d494-4d81-9090-ad8168fd1369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e3604c-9b94-44d0-9f11-ec4c698be365",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3cc7a-ddaf-4370-b01b-fe9daa6e3f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4877f1-5398-4d51-85a6-e35ad3db0943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d7e78-25d8-4eeb-9bc5-2c8d8e989415",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0931b90a-2dea-40d3-afcf-2e698f256032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a5e83b-520d-4253-8ef4-e2985992764e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f4abf6-1f9a-4d18-8c23-9bb5a943b1bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bb6f0f-0797-48cf-ae04-c80b66b5e985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61343ef4-a5fa-449f-bb53-4c63353ce63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c828175d-9ab6-4cef-9754-0faa6da2a7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e4a421-b8e1-4046-9e52-ff2b7c17b3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af84b0bd-4916-4ac4-8239-a0b1e41da9e0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a5cd9-5f31-4043-9846-942c806ab4e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c943dc2-6fa5-4a5a-90f7-ce44bb88a6c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f105a7ae-87bc-4f37-b004-3402e40a7f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1db7e4e-e347-4d26-bb2a-6ca5e385aa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081c0280-8d67-4387-a3d7-9779f34d0154",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c843c0-9b87-48a4-aab6-8a1cd1603f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf68cae-7066-4a24-b997-8325105e6eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b55ea73-fa55-4624-81af-7b3a6d96d49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180cea7e-87f5-4101-a205-20df2dd2cddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0be2843-ef99-4818-94ea-44c44db3528c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215c1c9d-e321-4f2e-9baa-a0f59cc96053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fbf705-a81a-4b1b-b29e-bc583eab8bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7ef675-9a32-4532-aeb3-775bf2bcc7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca73e0a-53ca-4276-a5ed-1c963bac226d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800a29a9-60a5-4343-a823-ae0cd3a1f176",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c713b45-3f73-4664-b6ba-feaa1de89c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cda6007-6cf7-4884-9528-ab7cdc506f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6561c8-c782-4b7d-b1bb-5d058c67c127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c1d7fe-1442-4219-8e09-587ea83cff40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679d9add-79a9-43d5-a997-578b6c890618",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cecf2cf-270b-41da-8a78-9deff99e3dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0bc423-595c-4b10-9bad-8b5ab7e30342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52740885-b71e-4eae-8d4b-c62553dde5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b64905b-1c86-4721-9784-359bf07d73fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f86d41-971e-4136-82e1-113521f9569b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60a440e-6af3-4c6a-879d-686f8bf54916",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c6c2fac-9ba5-40f2-9379-073ea964a93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35df9953-a84e-457f-bcad-27fd2a7503b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5569d5-f894-4107-97ab-f1118c67c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1856affc-7fe1-4390-9aa4-d85fa32c3a18",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad801ec-084c-4e5e-b996-9c28f1dd90d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656f672f-2630-454c-b090-31fbe17a8df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe5635c-d837-4c75-9cdb-dcfa361b2263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3195df-8f77-424c-8492-9bf65e2e61f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5b7faf-d300-43a8-ac16-974a50bc8f62",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172009b4-6a8c-4683-a831-381bd526cf89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0c27c4-579f-4e63-b380-f437a12d4f56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97b1429-f027-4d1c-8c04-550d82bac8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870060b3-1714-40e6-8710-fb3849cd97cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f620f302-c1de-4c03-a9c2-0efbb4ecadcc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d524f5-cd5a-4c6f-905e-d437ff6a489a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98251a1-81ea-4fa0-97b0-8c938af599e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8924f190-ff9a-4285-b6f2-e6fd777c2c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb27f3e2-d37b-405a-88e8-7d6f467f61e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d89f082-ce3c-449c-af91-91f74d0ea220",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9676ff6-f86a-46d6-9dcf-ca91d48ade50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057153df-a7aa-4200-9427-0b0e864a2e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04838d1f-2ee4-44c8-a5a5-132deda49ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7319a0-c70d-4288-b501-9487115a9de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70dfdcd-11fd-41d9-a08a-b7b0fa9b0a9f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8529eb-72ff-40a0-b32c-6219322ac264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e12499b-295d-4b67-9ae6-a9784a4106e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69b0c33-e551-403b-b9ac-2e32b7ecac44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e4a730-8bd1-4c5f-a4c1-8cab82e288d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebf76d6-ae07-4ed8-9dda-03b9ac03f834",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3635f87-e988-4cd0-8346-2b055f06c04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9318a9ba-c839-4fff-89b3-c48b5685dec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f419dd8d-f1a6-4e8e-8b96-d50abc59b76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa75a38-580f-44ac-ad7e-32c945b1bc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a435ed87-5a9d-46da-87ee-223a606ead03",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedac2a4-aa0f-4972-854f-8dbb664309f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a8b789-294a-474c-ac4c-278cf045f6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0db90-e865-4472-874d-96675373cc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c195ce7-a3dd-4a76-82f0-38a46adce60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa38e34-010b-465c-ba72-566aeee54fea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad30e43-be5f-496c-ae86-7b10cee9c5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd87ae1-3a4e-4e61-a686-b5329bf075f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08b8355-46a7-4416-b9d2-9b39b270827d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2616a7fd-5cd6-46b2-b0cc-b4f9914f43af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e615a33f-f1e6-406f-ac01-d525bb7f15cd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ff544b-bb68-49ad-a045-ed710d1cbc31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdd8f64-d780-495c-9238-f9a24c2d3538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90b5fec-31ce-4f63-883b-3cd977ba1c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23cddd7-26dc-4460-aeb2-256d0465db1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c6a2a1-4768-40ed-9273-ecc2eeeeb625",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a1f695-6784-43b7-8daf-48cc9f234033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9f004a-21ab-433f-97f1-cbc758e74c20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d8c0e-f2db-4deb-a1a4-43847a77c6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4f4bce-55bf-484d-826a-20a2ec3e2ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c654986a-05e7-4171-aa96-b3a7afa7428e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc2860-24d8-4fd0-9e54-eac343e1960e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4e8c19-25d8-479c-a49e-200abf09ca17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51827c41-ed06-475a-8bf4-4ece7d25d05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749b54f2-b5fa-49a4-9295-6bda77d11649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6a1b64-e622-4ab3-b10f-7f9298e78cba",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2454bb4b-1df7-4519-9338-4c6fbe05cea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9555862b-167c-45c9-8b4a-0f6cd305a505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fdd6eb-97da-439d-9b87-00bb97b0f621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2201763c-1b3f-4966-9314-39719fabadef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db325c9e-f123-427e-84d3-1dc9e7944fc2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c47b5-b870-4e65-9923-cac8ead33bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979af95a-e704-4e0f-b96a-afda02adf6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d12e9e6-a3c3-496f-9787-bfd9a8ac5938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb1cc6a-2b0c-44b9-aa09-27bf07ccfbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181b41be-a998-4610-899f-18edd306c574",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a534742-ed8a-42d3-ad5d-3b30912efb17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "428607b4-9ecd-4509-8740-a603e44bff40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab4c87d-92cd-4793-8740-78066019ae78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56b93fb-2f9c-46d9-9d7b-ecf61cc19873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7911551f-f655-440c-ad22-168c70af6190",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7990df-f96d-411f-80c1-a4bddf3084f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531ad69a-feb8-4281-a385-b16f59c74e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a119f55f-7ce4-4a4b-a978-fd193f25b9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732ceb91-e635-493c-8afd-7912e5ad612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc5e3f-389e-4616-8659-6e8c3bf4895e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d3216d-b7c0-41d6-b029-677c577b8de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a332e70a-c515-4d8c-9012-760ef6e1002a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18131bf5-79e5-45bc-8fb9-6b05f3529e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8186668f-091d-4939-8977-058606124261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bea65d-1630-40e9-92c4-44fd4ff184c0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9461f511-b87e-4850-bf73-1e85571dd929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329383b7-51da-4800-b5a7-0c5cb3c228a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf07ce4-2b50-41cd-8c8f-079dd837f65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b0e213-3628-4e6d-9470-e0666e718296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1600db-e86e-4419-89dd-05f6cf8e2c73",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ce973-2c57-4da1-b53e-597edf75e977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "776bdf92-616c-437a-b300-6635a506e2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b483c1a6-9524-4d96-80c8-5bd500a3d008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b600b6-353d-428f-99f9-ce649655cd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dd614d-1a3a-49f0-8212-83d084a8b094",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8156130d-fa40-4f53-9aa5-28a97f8c6023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4435e270-8e8d-4420-97e3-544988a7fd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855322e1-7684-493d-a380-61e22606c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99974ad7-5893-4754-82a0-38b482dc5943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587f6917-f92f-4d13-b6e3-c14363c99251",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a67aeb-2b42-4004-aef4-ec9e82091894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a2e7edf-ff89-40be-a67f-a9ed5b5b2106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b14c59a-66e9-4e2f-add6-099502c743cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29adaaf9-a6d6-45b0-835c-72104a5f9afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65868c3-eff8-4478-8384-a4a17dc054a8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a534f0c-d616-4abf-974d-dffc31216f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2519ff5-a622-4a91-9fe5-24dd2b38024f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4be83c-8dc0-404e-b539-1474471a6b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4455ec6d-5438-4f09-8b2c-7f07acdf7c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006b664f-63dc-4214-9a25-226a3cde576f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94be7fa-0593-478f-992c-ff305cf84b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af080901-93a9-410f-a0a8-7bac140da468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0048cae7-cc22-4fe0-8442-6b400d2fa2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c49f2c-dd00-42c1-8168-ce7b3aba471b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdeb3f7-db7a-4e4f-949c-0656dcbda448",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae6344-a41f-4184-bec8-9471ac4307ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdece88a-85f7-4f3e-946b-a09a79f0d3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270ce45-c314-404d-8e92-00cceeeb734c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252b8048-0d4d-4502-9800-ed11c0c4ac0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566b868-247a-475c-966a-5812ee6c8d77",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f09680-acce-4ef6-9208-77467a20e694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4af598-5608-4d64-a9be-6de05b30d695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b70ae1-94da-4d38-a4a9-61efa7c49149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfe9a64-ef74-46c5-ba6d-441a77c1e109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54eb72f-d0ae-4fb7-8f60-281f43258d7d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df968077-1e40-47b5-b1ad-636761a41c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db3c3d8d-c303-4b45-88cb-91de6b993051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe8ffc6-1a1e-43f3-b24b-fca351e55d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595ed3f5-b8bb-4e24-b2b1-0241ad178e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5af45df-f087-4c9e-b23a-af80e1e45a98",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad24f69-a871-482d-b474-1113bd46b236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c4d9a4-f2c5-4fcf-912f-1d6261b24015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe618f-dd13-4cb9-92a6-2a24d167d92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0734f6-c993-48fb-86f3-fd4e5585fa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5f9de2-709b-4fa8-831e-282da159df42",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f34a850-d34e-4a8d-b477-2fe8c8436235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5be891d-a119-4fe1-8228-c3f17601022b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5703389c-51ca-47eb-8953-876fdce13c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffe4e2d-1d4d-4a9f-823c-08a13583dfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd36675-d831-4119-afab-2be7a899834b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ee564b-6058-49ab-81e5-f9362ab9f01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060d5121-2ca0-4537-9b6f-5f50cf4883b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cd85ed-be21-4213-a62b-d3ac59486163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10e71f9-b416-4260-ab6b-8e7d271235c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5e1b08-cd31-4702-8dba-176fc81a0714",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098695d7-d28c-4f18-9514-32d974ebaed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6898d873-1ce5-4690-9220-654d84b1732f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548ce7d3-baf6-4af8-8756-fc1a3adf3c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd43253-a849-4141-afb5-aefa1679e6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9a890c-0a43-47e2-a5e0-65a42feb1aba",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e034ba1d-a1c5-4942-8307-40e2d7cf6e17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c924c10-653a-458a-b44f-b2e11696b49d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fa4b6e-fc09-43ed-b9e9-d632e4e94c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a19488-6840-4ed6-a51d-d26094d89aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c03df-6fd4-4c3f-8128-ef96377bccb7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36c405d-298c-4b9f-a387-e16c4995cfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38df99d4-3308-4a79-88ce-dd94451d3e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88c283c-9838-41f3-b01f-b30d663ef4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae28db68-33d0-4fa0-8320-0c9d5bcef13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3858f9-3da2-41c6-908b-3cb115676a8d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f7af6-5c63-4cb0-b840-b2e21b00d383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fef4c5-dee3-4039-9ec2-7f4005680a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1979cd-43e6-4cf1-98a2-115a8f71e2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57999fba-b521-44f5-8aca-56c76bc501d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a114f1-a123-4e46-8e6e-5783a0291910",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40682646-0cce-468b-8f91-57a5d560539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6e1a5d-3421-4779-b61c-0cbff881e67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a789e77-9b24-438a-ab96-06660fdfab65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a5b57e-cf69-4b7c-a864-ec1680628d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b1b70-db45-42e3-86bc-c2332a2688e1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a88ed0-89c3-4e2d-89fb-a7e3e511d5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b378ae0-3cdb-47ad-904b-9f82f865937c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c959df-f7e0-47bc-a1dc-1a625bd13e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fe4f7a-480d-4377-aac5-db6c748f519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bffd905-e77f-48f0-beef-818cca5e9578",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a307faa9-9556-4c2a-95b7-69e113998848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841b5b5b-0daa-4964-87f5-dd9449e7a163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d87b3aa-eadb-4264-a016-2db645a07f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5c9136-80e4-493f-913b-7409ed97b41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02ce0ce-a933-4a54-8a9c-29bea4cd8996",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850f592d-8e30-45da-a917-a46e089940db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ad4e79-f159-4dbf-9c14-0fcc008fb826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96237258-3cea-4e83-a982-70d58411045e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c35af35-698b-4f44-8534-0eaeafcfd7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7b28d3-0e4d-4812-9ed1-4251f394c6e1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed83110-989d-43df-8279-d3c9f395ebf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1407f9e6-34f7-46e2-b530-ae27fdfa821a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86583a0d-d1b7-4870-8e74-d1f10813d740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77222f1c-42fb-49b5-b500-29187466e80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0273d70-cc81-4bd4-a0ca-3d268bb92890",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8f1b50-f644-4564-ad5c-0367e2448b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34344436-e09d-492b-9427-431347441f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b45f29f-562a-4454-b220-ea51e0a00fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3b0c69-0c4a-4df8-9749-f5591ab219d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e3f89e-343b-4293-93d7-d1b5c36ba3ec",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cb0962-321a-45c9-bbe9-119cf4827560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea6d0bd-2780-4aa2-8b3c-7a21496283b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed107799-c747-44d1-bc2c-c56fb852c62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298934c2-366a-40c0-adfa-bfcfbad69431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6209bf-67ff-4ba5-9116-2618e4e6273e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b7c1dc-1a1a-46ec-920a-2cc11bfe18ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51ad422-b71f-4e1c-97ac-5c318b208f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7923bb4-b1e8-4fc3-9d62-659b21b54cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823b7d7c-47d4-4f77-8670-cc4c83415cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24a1afe-b786-4b56-96c0-cfd0cdbfd601",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6251606-c9a1-4b5a-b723-4aa1985fd5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f5b84e-3628-4ae6-b356-3ebd15dd4a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862fdbc9-9687-4f91-b7c6-34e30b8ed798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36229866-3d22-4a72-b690-ed59a7f268a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4330b78-d98a-44b9-842e-e1b6c73412d3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c748152-dcaa-449a-b37e-e2c541705acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5704d410-a086-4cac-b117-19bd0bd5d6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cde9bd-3d2a-474d-b597-c85b34120a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28eecec5-a015-4414-a799-dda74300350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce3ff2-2aef-4ab0-aaf7-e886f3acc23a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32db6a79-e5ee-4f20-957e-479939d88c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cd29ba-6595-4714-8f2a-458774a6a905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b1c64e-6b23-40bc-90c7-a8b9ca95f81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a58f60-9735-4ffc-a667-1cf4192baaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a57b63-67fd-4802-8e99-ae75f172b5f6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b5b38c-424a-435c-9c1a-eeecf559567a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c880b285-bdda-47f8-a137-e08e6014504b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca7808d-fa20-4d72-be2e-315ece3ab0ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59528dc-adbc-4049-8eb8-072bc601c6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37e3cab-cf97-408d-a5aa-b1a47114a72a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e473f7-0364-4efe-a841-7981e91e237a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfa2e4a-a4c1-48a0-bfd2-80e42a306c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd24f5-860d-4d9c-a910-dee84731edcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6687d15f-cd6e-4841-ac30-cf7c5110b585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfad1f5c-57b2-4e3f-af65-59417dac3d01",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb4028b-c050-48f2-a198-9d0945c45a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99a7413-1af9-4b0f-80a5-bee9f2223268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6908d2d-2140-44fa-900b-72ebce8139fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f363c6-50bc-4397-a931-58f67f283381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1df17c-bf84-4cf7-90ed-8488616c215b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bdd37-91b3-497c-903c-368bf9a5c456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85915b09-703d-43ef-b874-d2f5d351185b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544b8e58-615a-415f-a886-8bcc9c2da0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ef330b-cceb-4bce-8f68-925f69d509a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce3e3a6-6bb7-424b-97c1-d45bcbf0da97",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae22d13-67fd-44b6-9990-bd4e42d13b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41da99f6-bdd3-4f42-a76b-0f6ed8074392"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ba3c43-495c-4c43-92bf-fa07e1376e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b453d02e-1ddc-4c30-bb67-1ef867b7ae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f246e79-7a7a-49f5-ae80-fcc65631c62b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e78cd81-fb9e-4d8a-bb02-6e52c824e8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6aedd5-72e8-48e8-8223-ab6717a9b135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3108820-9dc7-4d79-a75c-ea9724e85832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80815628-38fb-4d1d-9d88-f3c334b99f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e4be9e-c2bc-410b-b9d8-9301b67da9ce",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d36311-aa62-4107-b2d5-a2affb0a2c3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a733ed-e71e-45fc-a45d-5d75610f9429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a349a75-07c5-42d3-b84a-11ae5af1f6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedddd56-e12d-4c96-b793-ab9bfc12a82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6a269b-609e-4ddd-910b-a2162fee72ff",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1eb9f31-7164-42a7-9ebc-b1be8d08d8e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0026fd6e-a587-499a-82e3-f82dbba8eb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6febdd-ea9e-4a95-be6c-b0dc7a9a848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547da75b-9189-4105-8df2-decc5883ae87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2af0a5-f0a5-44c7-a442-c81ea550a4c1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8421a60a-2e70-4e1e-8cb0-54dd24179a86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a6e9bc-886a-45cc-a2f9-6157a3fe78a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10052cd8-56d2-472a-8d53-842d8bb5d654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a7a548-385d-48d2-86de-bbc6b71451b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49eb8bca-d5f2-4a1e-bfa6-81fe4b09cbf1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cea5f54-f290-47ab-882e-c275439a7cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024eb907-da75-4e2f-98ab-49801e836060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6574a5b-2d0a-443a-aaa0-229021158adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3aef3a-6b6f-4aa4-be30-157621e952e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1452e8-c281-48ef-8176-c0c0d4fcba66",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0e19bc-097a-4abc-9bb1-8815cb96691e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3e26f9-6fec-4151-926c-780b13fc6093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8880638-fe14-40cc-b86f-6d7993cf6196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82bd039-2bd8-43f3-894f-97333c349af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405b27f8-c7de-402e-aecb-4e7e4a8251c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fc8d5b-2ab5-4945-a397-799af21c8694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab4c295b-1597-4984-80c0-83a99b7c4de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948dd5f5-6ff9-4e04-8011-06e3ed9d6877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc014632-975d-484e-b119-b66b2c530e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0b89bf-7b18-4327-8de1-f24ca36e421a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c41552b-8166-4bf9-9a4c-23e6a4b84a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e375ad5e-1c44-4a35-9972-344b31f1d66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b392cc-04f6-4191-8503-d3f06166014a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346c08c-1125-47e7-bfe3-f480ad768214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf10d1f-559a-4f37-a3e7-b2c42b924c98",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3e478a-9574-4718-bc6b-d612fb8ba71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c76861-0392-4ccd-8016-60b43fad788e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a296cc-eadb-4506-9160-1363aec1a13b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba42fa8f-2ff4-4c94-b020-7c922310c2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293cc77f-dd3c-47f2-8919-af9b2cb7fe6f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c52a46-d39c-4f3e-a093-679597c668d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a58c50d-2604-4574-860d-21af863f408f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b22015-2be4-4278-b568-a2b6dfaa0034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b8e945-bfa8-4db7-be17-e2da268c5889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a1076f-b700-4634-a8c2-c7975471607d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a45606-0f97-4850-bf2a-e9754319eec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5743048a-ce3c-4d6f-8293-73256989334c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf863a39-a1f8-40a6-8ff3-5cabce19e93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b03a9e3-9ec2-4c10-b50e-406d8bf0a401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2fb46-8f5b-4092-af13-e7dff92f0f04",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9185acb0-3490-4c02-a0ad-7e71b250cc1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0883d86a-4e64-4b45-a657-2fe7fa4530ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b99e252-839d-48fe-91e5-bcc2ef4a25b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4481b0-3e12-4546-a793-a7897a1a648a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a47378-9818-427f-8c3a-deecde9b2a85",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c677be8a-c0e7-4556-9a05-5f3967903d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65305043-25c9-4924-8cfa-9df583f0ac62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef622e17-0424-4b84-b694-d4145c8d0c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfcb43c1-6c38-4d8a-a8b3-37500aa3e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1d7829-d443-41f9-8644-d56576a104d3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96d973f-f12c-4853-b66f-bdbe35fbac74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d99abd-3f84-408b-9a24-a4b7b72b11e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b067d914-8c6d-4f49-a664-e0e12bd7a988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26630fe2-a24e-4a27-8c34-c0e743f037c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad804b6-dbe2-49ab-b5fe-26baad9f4b82",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a66454-55cf-442c-8ea7-a088dd1cb06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f49adb01-84cd-4c93-ba84-b47bfe65dd66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b7bba5-8df3-4b35-81ae-351235180fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeddccf-e00d-4818-9140-e59afd18aaf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d05c35-7545-4209-a636-89cdabad1742",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0070f6d3-4177-4be0-bc8b-f71326b8e999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f61b3c-8025-4869-a093-929575120265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4afd5f86-e6c4-464e-835f-57548794dcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e2215b-f11f-4f3c-baa5-4f982e5eac5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77baf04f-095c-4642-a2e1-63b350b039f8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb44ec06-dc15-442b-b01a-fefca52e2271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73d61fb-4571-4f9b-a01f-f268ddc15a92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6502c7c-fbeb-4cec-a6ee-f0a077a806a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f4aad0-d2f0-4b8c-ba87-ea6d770027fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b3ffc2-950e-4acf-8ae6-82dcee5bebba",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b5caef-c63a-46ae-9f0c-b5b836fb703e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a031cc14-ca92-417b-8165-2c567bb9ee17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b41e68e-5c5f-4e94-b21f-faf4e9d5c9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0785be1c-49e7-43c1-a865-02574f149f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9291db2-7cba-4b1b-9336-3980b0cf41e2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9360606-14e6-48cb-a489-f77d32a7c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4896d6dc-0068-43f2-a5f4-b28175c2e015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22117e2b-aa34-4bfb-b7da-b0cea73a2154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0781202b-b3a0-4ea1-9a04-afb81f34e0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be7a3f3-4905-47c0-b57a-2b5073300805",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8f0827-3766-4a86-bc15-8d8cdfbeb624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a625711-3f0f-45ed-bdb4-87e91671843e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314fade9-1ec5-43e0-82c7-5599c1ccb658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4f7ab4-ec49-4b74-820a-830ca2b71397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19342de8-0e3e-48e6-b305-fcd4105bed36",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e7384f-ec8d-4db5-bb82-3ba9402b4449",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79ec233a-9273-490f-a721-ad97f14a97f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669af0c2-b57e-4995-823d-5e2b5deb8ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9b72cb-e164-4e8c-81db-1257bdb0e20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5566af14-27b0-464a-98e9-39ac2b7d1bb5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2205c3-9171-4ada-ab40-e82733e69bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb15c700-7534-4432-93a2-ce4d7088075b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e119bd71-2a83-4ba4-be44-9b9c2ae0c6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "549eba25-e57f-440f-a194-ffb1ff407cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a627042-8293-411f-ac18-8064253c2d21",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8887db-e75a-40be-afe5-2938531010d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69caa83-f0cb-4f13-a334-4e2982c27116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81189d27-3630-4ba7-ad36-743a2f958c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf483a16-95bd-4bdf-8ea5-58a1b2f6bca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeae4bb-cb46-43ef-80a7-7dae2d4cb984",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a4bdba-43cc-48e2-96d0-856ffe4c9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7027cae7-3a71-4c78-bbdb-8f2e7a2a16d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343f4e30-f36a-471d-99ef-dc728038decd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a77816-82c4-4b7e-a88b-4a42ee687004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924a1e69-1f75-40d4-b8ce-7bd94048ac07",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24ba124-11d8-4ed5-84ba-56b78ef0fb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea77f756-132f-40d7-9bde-56ef934704bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065feb66-d6ca-4d2e-8dcc-91e1dbfe2310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad1695d-608f-492b-a1bc-9f61cb803c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2aa5af-f6c7-4cdc-b3f1-63d54784472d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f130e8f2-166d-4a12-b12c-bc4c00645fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e3c70d-7a5c-4cf2-ae00-7721980fd6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb2c27f-5dd1-438a-a649-564795e36bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044f1caa-7563-438d-9527-5210e28758fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b20209d-9047-4310-86b7-5b9dccd4e3c7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dca8aee-2d93-4c82-aea9-a220851428a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1827c71-8f5f-4ad3-b9d8-353f9fce2e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efd3f59-3bae-4c22-999d-144a0d2b2ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831f5032-19ea-423b-9fd1-1c2134c3aa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa6cf30-b9aa-4800-b383-25639be13673",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ec8309-7c27-4b17-a7a8-988eaafe558f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0f9f61-f8a1-4393-83ba-27cde8070690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d4060b-396f-41aa-96fd-e602538834f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d809c78e-776c-4a64-b6fd-508c964869ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b555ea-dd70-4b16-98b9-ed27ff22671d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1969a1c0-02d7-4188-a542-61dd3b5d3052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53087c55-027a-4a3b-9c85-f2c7e0b49c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ed3925-0214-45db-a4e4-c5d2b9471a10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3e4a7c-c9ca-4eb7-b5dd-a815b4f53703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff17d84-bab3-447c-858e-df4efa33f7f9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5c65f1-c705-4a50-9503-6a0e7fd8211b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6200baa-89c3-486f-aed9-c243b62f6f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b34168-b926-43c0-ade0-d4bddc9ebdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68085cd5-12e1-47c6-a2e8-f2bbff0b5ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52e23a-fb38-4883-8f6f-c92d14d994cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f6d7e-ef28-44f1-b0eb-6b3054fa7f96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36648be2-44f7-48a0-92ea-ef9bbf94ddbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb83c47d-eda8-4261-a5a5-c9464e7f0d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa53576-c6c7-4d44-9556-b02d64ad74a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7908464-8258-4930-8a4c-50407019c07e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad878269-5f3d-4cb8-8a8c-f7ee251ab51d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac5f24b-9995-4b6f-aec9-fe3db5359d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5d59a2-a375-436c-8882-8b450b4fee4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e6c2e1-d5c1-46d9-a41d-757c562641c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d86794-0ef6-40c7-9ca8-fb7f28404b94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c10fee-06b1-416e-be0a-c62b1fe58f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a6dea9-2be6-499d-869b-bd3973953940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13607d3-0701-42e4-a921-268038a7a2a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864dd0ff-b1b9-4996-81b1-058a84613a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb353ea2-2c75-4898-9447-5bcfe6c77f8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e067ea-5c41-4eda-a279-8fc1d1d0b72a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3f6093-ad0d-4314-a18e-817ee624ba12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5258ab4-b69c-4107-b888-6ce3f3f84916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9a253a-7db3-4861-956b-19318268b850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bdbcab-02de-464e-86e5-8bbfd533ac6a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a17bf77-2b91-4074-a392-be6f4b4261c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06609053-20e1-4909-a848-7ef8553ce63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18681d5-4175-4139-922f-edd19ff9765b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba7ca1b-6107-42da-ba4c-3b7f89d530ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07181db-b090-4a7c-9291-0e1d37ad2037",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9173e661-9ba7-4145-a4c9-02a4c198d78b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9b95e8-d4c8-4120-9f26-71d897c7ab60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7088ff30-2d3a-4abc-a186-51e53cd0d52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee1577d-1ef7-467e-9029-700d8247d78c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7757ca-1fde-414d-ad64-4292b70930c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76bd0cba-5d76-45db-97e3-90f24dcf41df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d43cd539-eb34-4710-8aaf-f9ecd865ac1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11180ecb-e53e-4bf9-9926-82956e2eb073"
                    }
                  }
                ]
              },
              {
                "id": "87ea348e-d156-418f-a666-765afdac380e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ae0f9f3-69a5-4056-af75-0d30f3e97003",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab351831-28db-42b8-bd36-27dbe894fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e7ff1c40-a2cd-44ae-b6ef-42508d180be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8c539a-96b0-4f2a-a4d5-95a00a6d3abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd01b9c7-4e10-45e2-9461-4bec78bd8ae5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1383a03-1f21-4db7-ac91-f42fba730160",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0e8b447-c03a-4f52-9384-276b1cac7bb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7772dd0-7f11-49bb-b14c-aebba6b70fdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51bb05c0-91ac-4fad-8d5b-108ec0ad0ac7"
                    }
                  }
                ]
              },
              {
                "id": "8d1c4771-478e-41c3-abb7-4a45ff033023",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "469d3f07-08f2-452a-a884-2651dcecafed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c4bb4c-3b0e-486b-8b1a-88296e984f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e9f3fc6a-5c84-47ad-beab-aa721bac7758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fb3908-6fce-455a-b92b-5ddc4b93345d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a8f6c0-32f4-4edc-8cd4-f8a27c1310d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ac9c8e7c-aafa-4073-8b12-31d0f0590d87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c1c96129-46db-48ed-901c-e67b60833f36",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72484e7c-ca2b-4174-ba41-75fbf22c4e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae5684f9-2e90-422c-8dd9-57bd6d0f8854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03909b19-e10c-4f69-8ee5-8c4012497c02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dab900c0-c081-4e43-835e-18009e196957"
                    }
                  }
                ]
              },
              {
                "id": "6713ac4a-23c0-4378-95ed-10a71562e56e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2ca14b0-fc38-4274-a9a0-4edd34ef6fd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4feabc43-7a37-4c95-b67e-fc99bdcecc27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57e1f815-4a0d-46b5-822f-77e105e43aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b3f5325-85a6-4fff-a09b-2983dc3e2959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c265dc-5694-4bec-84aa-f464c70c39e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa0a9431-53f4-46ff-978f-377e5d34cff7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd197efe-634d-4120-bce8-99559bec36f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a9b4568-fc4a-46f0-936a-957cd02850da"
            }
          }
        ]
      },
      {
        "id": "9956ac57-0946-4b93-a355-62773859f31d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fe7788d4-71b5-43ed-a6cc-c7581c290542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0f203e6-e45d-4aae-b34c-6cc6f926c597",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e147cd67-81d4-4ff0-b2d9-91738a22b6d9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb300a2f-113d-470a-8f23-12e1d7c5cf4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75f3cc1e-38ad-4bb2-be92-2690817a5e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee99d44b-6afa-4cbb-857c-cb7f80d86842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c17c51c-82ea-4c6f-ae4a-c8804a47e263"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdc5363a-3a3d-4b94-8cba-03160c0f7a9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2143a81c-77e7-470b-922a-59bb9c75f0e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b2187a5-b2b3-46e4-818d-38990e6a445f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b341780-db76-4f9b-ab75-087312cc0086"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e33121b-b1e8-4e61-9572-1861fb0ecd1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c393bc09-4689-4d05-b522-2d00cc01ae0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c86d897b-b73d-4fc1-8f1c-1f90280b2249",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0f4606e-212e-46fe-9f4a-3e3249385abd"
            }
          }
        ]
      },
      {
        "id": "0313dcc1-b321-4575-8ad5-6cec6b95c402",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "19952a38-b0e4-48b3-8c28-dcf7a0216fb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f44a669-3756-4c16-854a-ecce9091489d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b01559b-fcc2-4ec3-93bd-b4caf51d8d72",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b8f564-960f-4bd8-9325-ed46f2f3f7dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbe475be-d025-4670-8f46-c9fca7b670ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61d78cc-9996-4e9e-8960-cba0c5dfb131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6bcade9-e48b-4c5d-87a5-d1d8076e2aaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98e180f3-1cab-4710-a687-858ac53efeb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93e51b5f-2406-433b-a1f6-4edd00aa896a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d606276-982f-4c58-aba5-8595eda8b942",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ea5f5e4-6749-4f58-8663-ca6ca06f8f41"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ab78c1f-5c75-4934-92e8-c287bddd9c55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3413d9ca-06b7-46d8-bfd1-b0a264d49ca4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "449e06c6-5010-4540-8005-6eadac92651b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4edfc07b-a857-4102-8273-00915ca2272a"
            }
          }
        ]
      },
      {
        "id": "25d23259-17a0-459a-bf0f-4127db54b455",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "787a9c85-4741-4ff4-9830-65720c81d288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6ee5acd-67c5-4fad-879b-d09950ac9db3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "573d0642-1147-47b8-9277-de42ac5afc8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5c2926-dc83-4e59-b4a6-866710d9a817",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3490f477-1ca1-43b3-920e-f26e28154740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f823c04a-bde1-4253-a043-3283b89dd354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ccebc4e-1955-4d28-b316-6743b96c9bf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5dfba5-e4d5-43dd-b521-bf43d40fed7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c309a4e-e718-415d-8d56-280b6dd63546"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58f8ca47-c73c-4a08-9f9a-430c7a62dc13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1163b649-48ac-4e84-a416-1770635b7fbd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd3db4a8-13b9-444a-9c48-b716eb9ae521",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "948acb57-0f2d-4386-afb3-6a733d0d022f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b41f44eb-8876-48a5-8942-b4a9d976451d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71146c7e-8e1c-4676-a7e8-25172b28cff1"
            }
          }
        ]
      },
      {
        "id": "e5ccf8bf-6ea9-47b4-870c-4a790c3b0d16",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40de5d89-7771-401a-b0ae-80c83ff20a34",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c11a4ea-7809-4a52-96a6-eefe7547003e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4f9bcdcf-1cfc-45ed-8ab0-bdd027f1fbe3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62092230-ee9f-4ad7-8235-56a5be523258",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9347e4a-05ce-422a-8f41-5613dbafc620",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 120.10714285714286,
      "responseMin": 23,
      "responseMax": 12163,
      "responseSd": 813.8412156156111,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722040761762,
      "completed": 1722040800281
    },
    "executions": [
      {
        "id": "db7876d1-007f-4d0e-848c-cb7db821c58d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f1cad1f8-c86e-40ea-9d36-ca001478f88a",
          "httpRequestId": "07acc68b-f137-4c41-8183-b8a6e55e2a18"
        },
        "item": {
          "id": "db7876d1-007f-4d0e-848c-cb7db821c58d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d9aad6e4-6ae4-4a39-a057-aa903ecda09a",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 0
        }
      },
      {
        "id": "399aad2a-415a-4de8-92ab-ba4ee9bfa141",
        "cursor": {
          "ref": "850dbf66-930f-484e-8fd2-1b60f8b95032",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d079ce2f-67a2-4597-b253-accec6ffda95"
        },
        "item": {
          "id": "399aad2a-415a-4de8-92ab-ba4ee9bfa141",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e9a56707-a087-42c8-ba84-291abb4266ff",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "9c24a5a8-f52f-49b8-9778-56ecc3f0460f",
        "cursor": {
          "ref": "a1169c0c-806d-439d-9866-fa4dc37e113b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e3804ac-1b91-4098-956a-e72caaf73133"
        },
        "item": {
          "id": "9c24a5a8-f52f-49b8-9778-56ecc3f0460f",
          "name": "did_json"
        },
        "response": {
          "id": "03062629-272f-417e-9540-d91b878a7e46",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2959a91-dfaf-45e0-957b-807ebaf6e6ad",
        "cursor": {
          "ref": "066ec648-0404-4c78-98bd-fa7109d0f55d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "73b4a19c-1388-4626-bc79-5f3f32c9c601"
        },
        "item": {
          "id": "e2959a91-dfaf-45e0-957b-807ebaf6e6ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc14cc66-fa08-4982-9cc9-490321a00119",
          "status": "Not Found",
          "code": 404,
          "responseTime": 429,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2959a91-dfaf-45e0-957b-807ebaf6e6ad",
        "cursor": {
          "ref": "066ec648-0404-4c78-98bd-fa7109d0f55d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "73b4a19c-1388-4626-bc79-5f3f32c9c601"
        },
        "item": {
          "id": "e2959a91-dfaf-45e0-957b-807ebaf6e6ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "cc14cc66-fa08-4982-9cc9-490321a00119",
          "status": "Not Found",
          "code": 404,
          "responseTime": 429,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d131d77d-e454-4ba3-b5df-f3cac3a15500",
        "cursor": {
          "ref": "e10d4b29-bccf-4a4f-abe9-91b2a2a862d5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ddaaf3de-b9bb-48ca-9877-62eca3b930ce"
        },
        "item": {
          "id": "d131d77d-e454-4ba3-b5df-f3cac3a15500",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6110da3a-ec0c-4e38-8e64-4a193669c938",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f7d63b-b1e5-4595-9266-a7524d84bb45",
        "cursor": {
          "ref": "770ddec1-2bf5-4f12-b2a2-f5739edd6ff5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "176cc1d8-71c1-44a9-ac9c-4bc48d5019fe"
        },
        "item": {
          "id": "d7f7d63b-b1e5-4595-9266-a7524d84bb45",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5f333a59-2c02-48cd-949b-d687806355aa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816a8a84-1bc6-4e5b-abc1-ab91e5edd2ce",
        "cursor": {
          "ref": "6941e547-1b1e-4fbb-9bbb-f2079f65cfa8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a2fdd5ee-76e5-4200-826f-8a26ef88db1c"
        },
        "item": {
          "id": "816a8a84-1bc6-4e5b-abc1-ab91e5edd2ce",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a415004-1198-4d4d-8ea2-37b676aaff52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f5c3eb-41be-44d3-a8d2-6ade392d700f",
        "cursor": {
          "ref": "4a6c6794-e457-42d2-821f-2b093424ae33",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8be51fa7-6d94-4592-9d57-abd9d2545eab"
        },
        "item": {
          "id": "c3f5c3eb-41be-44d3-a8d2-6ade392d700f",
          "name": "identifiers"
        },
        "response": {
          "id": "f5fefe59-04d6-46a2-b376-08e8e656b6f5",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48896bb6-1f74-4108-9f91-27b18e2574e6",
        "cursor": {
          "ref": "4518ccf5-4292-4c28-af7f-7b31efe81f8d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3b1103b7-0aa7-4302-9ecc-97b259225474"
        },
        "item": {
          "id": "48896bb6-1f74-4108-9f91-27b18e2574e6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f3943e5e-4fb1-48d3-a3d2-eb108914b5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09906ac5-0258-47ee-93b5-7a2b04b9c075",
        "cursor": {
          "ref": "c943ecec-8e25-44d1-87cc-2d5a160a82ed",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b3a30ca-166d-4168-9e63-9161332b2874"
        },
        "item": {
          "id": "09906ac5-0258-47ee-93b5-7a2b04b9c075",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8070ee18-4c9e-484f-8f9f-0fc042052d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c07f417-97fd-4089-82a1-76c40d05ff4e",
        "cursor": {
          "ref": "5e6d3605-ea10-49b4-bbfb-9f10e7dcdf73",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eae2ea6c-3efc-4ea1-9a96-ae698821c723"
        },
        "item": {
          "id": "9c07f417-97fd-4089-82a1-76c40d05ff4e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4eb26566-cf68-46fd-926e-075eb2853911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50730fef-dc73-4581-85df-f806902c2248",
        "cursor": {
          "ref": "9a81a6a7-2c00-42f6-84e2-5280913be287",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "62e89c30-ae55-4250-aeeb-7e62d9663a2a"
        },
        "item": {
          "id": "50730fef-dc73-4581-85df-f806902c2248",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0504fcd7-af54-4bdb-aa26-c95350d5eb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0acc6da3-9e5f-470a-82c2-73808e60544d",
        "cursor": {
          "ref": "0fd79b2d-6e6e-4795-b7ca-f7c9269c6c8d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ae0d6f74-485c-448d-936b-67d32bd7b6da"
        },
        "item": {
          "id": "0acc6da3-9e5f-470a-82c2-73808e60544d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1b8a5d0a-a651-457c-800e-8cf9d4cd3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2ce134-d517-4a16-a522-0f6abd819e7b",
        "cursor": {
          "ref": "4311adc2-278a-4a16-87ed-cbe901bb0a92",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "313d87b7-3dcf-4090-85c4-9f6e0470ec49"
        },
        "item": {
          "id": "6f2ce134-d517-4a16-a522-0f6abd819e7b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d30cf096-33ae-4f0e-8cdc-e43523311cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1f0955-734a-42ac-a9d5-e77a18f05220",
        "cursor": {
          "ref": "fdc78600-5494-4692-89b1-4a514d9eca1d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "911713ea-8b7c-4e9c-8a6c-0dc7bc8ebf02"
        },
        "item": {
          "id": "ca1f0955-734a-42ac-a9d5-e77a18f05220",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6062b8fd-5707-4b8b-ad95-67e1eb476f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44aa9b-d3aa-45d8-bd4a-37d300485399",
        "cursor": {
          "ref": "1da78745-35fd-4a25-8d31-85f1694b73dc",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8d792f9f-e03d-4b0c-8754-8ac1b2a9c97c"
        },
        "item": {
          "id": "2a44aa9b-d3aa-45d8-bd4a-37d300485399",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "51ca662c-e2d2-496d-9ac7-04ab38a5260e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62b2cd-c83d-4aae-94f0-8585a89e256a",
        "cursor": {
          "ref": "8a6e3788-3552-489a-abc8-3468b4c64169",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f1790013-32a4-4370-9311-ddb867b54dbb"
        },
        "item": {
          "id": "ad62b2cd-c83d-4aae-94f0-8585a89e256a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67fa8fed-269d-4eee-bd5a-1bef5e614d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bce73da-8436-4bd0-8cd8-99bef0680fa9",
        "cursor": {
          "ref": "f0584ef1-d4f1-4b10-952c-febcf43ffaff",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "babe0ed3-103c-42b0-be0e-545694c68d3c"
        },
        "item": {
          "id": "9bce73da-8436-4bd0-8cd8-99bef0680fa9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d1586bf5-c24e-4ca3-b568-6fcb5ec34302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0a9844-b077-4f33-9f80-228f8e498963",
        "cursor": {
          "ref": "64f5b068-eaac-4ec7-be94-b4c1f737a575",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "10d11c91-8c1f-4a07-990d-3e6a5279bb89"
        },
        "item": {
          "id": "4c0a9844-b077-4f33-9f80-228f8e498963",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "df8961ea-a5b3-400b-b464-0b24eefa1a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c4f67e-f3ea-427f-9a83-a016c0795857",
        "cursor": {
          "ref": "5c70614a-7cb7-4ee4-9454-afcc8427cccf",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e4d485e5-c561-4618-9644-965cb4470158"
        },
        "item": {
          "id": "27c4f67e-f3ea-427f-9a83-a016c0795857",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "868c6218-aec5-4f72-aae1-96b5f9596114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4857a38-c7ce-4328-8aba-78bba110a50c",
        "cursor": {
          "ref": "0aafbb33-e69a-4572-a505-587406564a3f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "c01014e9-94d4-4f47-b0d4-f3a5bbd808d9"
        },
        "item": {
          "id": "a4857a38-c7ce-4328-8aba-78bba110a50c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "327bf363-cb31-4ff8-9af8-abf76e4e6a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7c0674-525e-475f-a14e-5cd633d89f27",
        "cursor": {
          "ref": "bfb1003b-713a-44a1-bb58-dabe9593532a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b6825a3a-ccb1-4608-a2c1-a6f2f808c5b8"
        },
        "item": {
          "id": "4b7c0674-525e-475f-a14e-5cd633d89f27",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "04fc18d2-3871-412b-b33e-4a66795bc7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c180e9-fa13-4a4d-9973-0d5128f05e26",
        "cursor": {
          "ref": "b7747cd1-ae15-4028-8dc4-f9cdc5d337b3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1e2ce08b-b32f-4521-9109-4a1c576d078d"
        },
        "item": {
          "id": "70c180e9-fa13-4a4d-9973-0d5128f05e26",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bda30cdb-a8cd-44b0-a663-11ece9cf4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b13475-d004-4a06-b4f5-52a82ca7a3db",
        "cursor": {
          "ref": "10da1495-25c4-47b4-9774-ca4a3cf667b9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "359c62ae-b27d-4320-8da2-feb603335c9b"
        },
        "item": {
          "id": "e5b13475-d004-4a06-b4f5-52a82ca7a3db",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8c604188-8739-4266-b8d0-22ac2784a350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0269c9-f80b-46dc-b372-3443959484b7",
        "cursor": {
          "ref": "96ba931e-ad39-4109-acec-115274677b73",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4e7d42fc-e6e3-46dc-871a-566c6da80215"
        },
        "item": {
          "id": "ed0269c9-f80b-46dc-b372-3443959484b7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "798849ed-e896-4a26-8098-9e948091186b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a592126c-b838-49f1-9d34-cc725580287c",
        "cursor": {
          "ref": "9137fce0-6b40-4698-ad93-e6d336e84946",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "41bd5cfc-7c40-4495-bbf7-5bc536bd72c8"
        },
        "item": {
          "id": "a592126c-b838-49f1-9d34-cc725580287c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a64310f6-ad25-4b8a-9a12-cb96fa995611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5084f577-ee73-487d-a088-922354b023fe",
        "cursor": {
          "ref": "f199cd44-0650-425d-b4b2-29ac57989809",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "620452b8-ec61-45f5-a165-ecc09ae586fe"
        },
        "item": {
          "id": "5084f577-ee73-487d-a088-922354b023fe",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cf89f663-b58c-4447-a061-03b069385f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d9e2aa-3b3a-4bf1-be4d-acdc611c59bc",
        "cursor": {
          "ref": "19a1cb6f-58dd-41dc-8c78-338f25b16176",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cfa41fec-e8bc-4e0b-92c1-cc6cd646f197"
        },
        "item": {
          "id": "f2d9e2aa-3b3a-4bf1-be4d-acdc611c59bc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4087e784-1314-4634-9df4-213db1dbfe8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9d03cb-5177-461f-853a-4b3361aaa63f",
        "cursor": {
          "ref": "53b23353-273a-4bb1-99d9-5b50c5c89bb8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a7390ade-8b77-495e-bc21-f18ba40be4a9"
        },
        "item": {
          "id": "1d9d03cb-5177-461f-853a-4b3361aaa63f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b105d096-d967-4356-84c5-66f8d2e26bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea8d620-c83e-4deb-b3f4-df896d78e2c3",
        "cursor": {
          "ref": "f89a67f1-2de2-4762-891c-dbf87fae271c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a1314b54-110f-423e-8c46-9435ab5cbeae"
        },
        "item": {
          "id": "5ea8d620-c83e-4deb-b3f4-df896d78e2c3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "967d5e3b-295e-44c9-bde1-d297cc6cac5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01beb095-538e-4eb1-bc5f-3059af690b3d",
        "cursor": {
          "ref": "11d6f13d-f439-4d53-a9b4-6556e37fb0a6",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ea5b6048-70f9-478c-8b72-14312f142419"
        },
        "item": {
          "id": "01beb095-538e-4eb1-bc5f-3059af690b3d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9d34e204-6fea-4f8c-8229-5702668dac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e09f45-d9f1-48e3-8cee-fdc75cb70edd",
        "cursor": {
          "ref": "23b32be8-c966-46b3-b240-f9e1365c067e",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6fd9a2c7-61f2-413e-9063-7f506b59de7d"
        },
        "item": {
          "id": "a9e09f45-d9f1-48e3-8cee-fdc75cb70edd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21fae2af-6031-4ec8-9710-9241fccee3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b162ed8-ca46-4b38-b7a6-c88a17f97a57",
        "cursor": {
          "ref": "c26114e2-6303-4de6-960a-c7b0e0f119cf",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "82cef19e-479a-4180-bdbc-a84c4d16bcb3"
        },
        "item": {
          "id": "4b162ed8-ca46-4b38-b7a6-c88a17f97a57",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a08fc040-4c40-4b16-9905-52cd901e9d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512b8882-5e08-42a6-9f37-f8bd27767afb",
        "cursor": {
          "ref": "ee12b6ff-9c02-4c7d-985d-0553cccf6e26",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fcca7d29-8777-459a-ad56-2798db340561"
        },
        "item": {
          "id": "512b8882-5e08-42a6-9f37-f8bd27767afb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "85e0162f-6491-4bc3-92c2-778311f9a0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc04caf-5581-496e-9393-07f2691a228b",
        "cursor": {
          "ref": "13a869db-ffcc-4b19-ab18-c5f8ac640dad",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "061cc47b-0e7e-4e64-b8e3-ad75f243d372"
        },
        "item": {
          "id": "4fc04caf-5581-496e-9393-07f2691a228b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "863c1fb9-b299-4b81-94fd-2de1a68a2542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c85902d-52c7-4cbc-a7ad-6c456ef87069",
        "cursor": {
          "ref": "24b09454-583f-4494-8aed-295a3dd1a36c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bf0f1309-edc4-48b8-bf36-1886e5aaba77"
        },
        "item": {
          "id": "2c85902d-52c7-4cbc-a7ad-6c456ef87069",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8337088a-1034-4b67-9d36-4f05bf5238c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543c4ef2-344e-4e35-a403-9cc7b7b75023",
        "cursor": {
          "ref": "dc2d3b65-93ed-4fb5-bfd1-42699dd6fdad",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "404796c9-4ef9-415e-80d7-ea8b38b3efbe"
        },
        "item": {
          "id": "543c4ef2-344e-4e35-a403-9cc7b7b75023",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3fb5506f-b8e7-41d4-b3cf-1b0ec8c48878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8a69bf-543a-46dd-b544-509e7a8fbf28",
        "cursor": {
          "ref": "f10720c3-ba85-458d-8ac1-364865db1887",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6d0b473a-509e-41ea-9905-1a985c67593e"
        },
        "item": {
          "id": "ee8a69bf-543a-46dd-b544-509e7a8fbf28",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "baaf332b-2b85-4586-94c8-8cf5642fa365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c048afd-d669-4d32-a766-b95791e87bd4",
        "cursor": {
          "ref": "2f0b7027-875b-4ecb-b58b-4e28d7cb8859",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "dc733387-071c-42c2-a430-c365fb0d8e27"
        },
        "item": {
          "id": "8c048afd-d669-4d32-a766-b95791e87bd4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "37613ef6-81e0-4a12-a30c-f6c49a827ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e5c70b-d3ff-409c-acf4-66d4a1f86835",
        "cursor": {
          "ref": "28d6f642-d764-4ba3-9aea-0c7dd5f53b3f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9818d327-a597-440c-b772-6027bc12b9a9"
        },
        "item": {
          "id": "05e5c70b-d3ff-409c-acf4-66d4a1f86835",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "94f7dfef-2b57-4e9e-bbef-242f6edef4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cf438b-d6e5-4009-8a6c-11b56a25ffa7",
        "cursor": {
          "ref": "5f9f793a-5d81-4248-b225-656a77157bdb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "136baddb-d659-4fed-a9a8-e68e4dab6149"
        },
        "item": {
          "id": "49cf438b-d6e5-4009-8a6c-11b56a25ffa7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6497eb49-5252-42d0-b087-d5e8194b9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b56d20c-3950-4bb8-8843-0dd3fd2c0239",
        "cursor": {
          "ref": "0df5c772-0095-4d6c-ae07-46485b5e6099",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6b4996d6-4062-404c-8a56-8b166c437fdc"
        },
        "item": {
          "id": "2b56d20c-3950-4bb8-8843-0dd3fd2c0239",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6fba03f4-1f14-464e-828b-15f2f5af90c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236dc81d-0913-4491-b68c-55ccf6367726",
        "cursor": {
          "ref": "ae6629ed-fb5b-4a4a-ae6b-f5bb847bc6e0",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d62ea95c-1f78-4004-9d97-3086a36eb589"
        },
        "item": {
          "id": "236dc81d-0913-4491-b68c-55ccf6367726",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7eaf200-5425-42f2-a810-b196fd070ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4c13a4-0c1b-4594-bbfd-8a0d5b518a1b",
        "cursor": {
          "ref": "5013f2f5-4289-41e1-89e1-d0d17e38e8eb",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed52af0c-dddb-47d2-a7b2-ab1087fec519"
        },
        "item": {
          "id": "1f4c13a4-0c1b-4594-bbfd-8a0d5b518a1b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f464299c-45eb-48c5-8dde-74666c9f6711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ece42b-698b-41b3-96d2-ccef70dc404d",
        "cursor": {
          "ref": "d90bb179-84ed-46d5-bcf0-b8a5c08eacc3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "4a01dfe1-b48d-4ce0-ad94-221d66a2900c"
        },
        "item": {
          "id": "d2ece42b-698b-41b3-96d2-ccef70dc404d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "149ed1c8-7cb5-4a14-be21-64be8bce7e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7ddc95-fbeb-404b-94eb-25da99108103",
        "cursor": {
          "ref": "515c65e7-312b-4ede-8f8e-fc82372d634c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "21cc272d-2fbc-469a-b064-013648312d09"
        },
        "item": {
          "id": "9a7ddc95-fbeb-404b-94eb-25da99108103",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "da35a2a0-ced8-4f5e-a106-b39d5b600185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa681265-d256-484a-a6ee-57a2b6112a21",
        "cursor": {
          "ref": "175f9464-6e1b-4d86-865d-41581710b3b2",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8ae87ca9-4f8b-495d-97f8-80ab1d882452"
        },
        "item": {
          "id": "fa681265-d256-484a-a6ee-57a2b6112a21",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9bed83dc-6e71-48f9-931d-496e28543177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e28424c-f865-4858-8c3e-69dafe32da2c",
        "cursor": {
          "ref": "789e24eb-0f60-4fcc-a9f1-f0b5d7558e4d",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fcc54715-e797-455e-aa0d-35571243ed07"
        },
        "item": {
          "id": "3e28424c-f865-4858-8c3e-69dafe32da2c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cee436ee-ae94-48c8-8462-f56ef5f6d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4559be4-3cce-43c1-9794-2d775ecfaa93",
        "cursor": {
          "ref": "dd73e845-a037-4498-bad3-eefe5e6856d3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0843c972-67e5-45e4-bcbb-b676e5f4f640"
        },
        "item": {
          "id": "c4559be4-3cce-43c1-9794-2d775ecfaa93",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d844d8b6-5dbc-43d7-8d1a-3bfecd3e9209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fd1e18-59a4-4d07-89bd-4ef8ec752122",
        "cursor": {
          "ref": "68852163-30a9-44ad-8b86-d1ec4558ef7c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "430c7085-d221-45f7-87ab-a7913d712e66"
        },
        "item": {
          "id": "b4fd1e18-59a4-4d07-89bd-4ef8ec752122",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e0cd2eee-9371-4ce3-87f9-ca0688365988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d509859-f838-4731-b74a-0b0154ceb16e",
        "cursor": {
          "ref": "e8c45e10-71ed-4c3d-9eba-e396a0c661cb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "51ab5a78-ce58-4342-ae59-d2327c325c24"
        },
        "item": {
          "id": "8d509859-f838-4731-b74a-0b0154ceb16e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3723e807-bb57-4f1e-a780-abd1bf5fa609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900ddd38-da3f-41d6-9b45-306df719a18e",
        "cursor": {
          "ref": "3facb68c-ffb3-437a-94fb-1a839ffc837e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "25d762d7-f269-45e8-9b01-717763fbf282"
        },
        "item": {
          "id": "900ddd38-da3f-41d6-9b45-306df719a18e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e7ecebdd-86b4-4129-b048-2ea055b5632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f086e23c-5fbb-40e1-8207-87f87e2e0bb3",
        "cursor": {
          "ref": "b1c73a08-801e-4cc6-b9ab-aeed0534b92a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "fd5cd90b-8e71-4357-802d-1a321970cd7b"
        },
        "item": {
          "id": "f086e23c-5fbb-40e1-8207-87f87e2e0bb3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6e3024ee-00eb-4f08-8bd3-6c0c8c7f018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82eb3d0-25bb-4ad9-8aa2-3eefafcb0764",
        "cursor": {
          "ref": "63ae1c83-7e88-45a9-b673-4237bc614a9e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9ca34192-b686-40c0-96f6-d06120bbebd2"
        },
        "item": {
          "id": "a82eb3d0-25bb-4ad9-8aa2-3eefafcb0764",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "67d02e02-225a-44d5-840c-070caf2b82df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84e8d2f-df25-4d46-ab74-ab9bb105e4b9",
        "cursor": {
          "ref": "6b96ed7c-c040-4aef-8f63-2b48ea6dd7c7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0cf245ba-9851-4c9a-8d96-4bf79986be98"
        },
        "item": {
          "id": "e84e8d2f-df25-4d46-ab74-ab9bb105e4b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ce8a6bda-c7dd-4cd0-b917-007a5e1e8ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7ebde9-2a9c-4773-be37-b61b1970cc9b",
        "cursor": {
          "ref": "e5651f5e-ee13-4db8-87f0-628125c366de",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0b24aae3-4ae8-479f-b3ce-b81b4724b914"
        },
        "item": {
          "id": "6e7ebde9-2a9c-4773-be37-b61b1970cc9b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8efeec99-9fd2-473b-a6a4-846fded9dd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fbeb38-29cf-4112-a65e-bbdfe877b808",
        "cursor": {
          "ref": "4baaef1f-29f4-4387-b287-a36cd5ed867f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "49f22bd7-cc0f-4294-b667-6adda86164cc"
        },
        "item": {
          "id": "03fbeb38-29cf-4112-a65e-bbdfe877b808",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "451a12f8-832b-4441-b12c-951a4867c5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7005f43-8340-4507-a2c7-ee429128718e",
        "cursor": {
          "ref": "b150a9cd-0501-4452-92f1-0a180b30a7e3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d4d96b61-7061-42ef-b206-c3a0c0d8047b"
        },
        "item": {
          "id": "d7005f43-8340-4507-a2c7-ee429128718e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ba42c9a9-ef5c-4816-b90a-e66e2d68c6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66078c60-6d41-4e3d-ba90-ebcb683d920f",
        "cursor": {
          "ref": "974f59b5-3bc0-401d-a4f8-1c3ebe8e50e4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e107a4fc-e56c-4c2f-b504-b8621b5fa08d"
        },
        "item": {
          "id": "66078c60-6d41-4e3d-ba90-ebcb683d920f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e94712c3-b3be-4022-9366-ad12bf8e2672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944576d4-6700-482e-b66a-60e0670501a4",
        "cursor": {
          "ref": "31d0ed33-e36f-4170-a04d-07753d2cb43b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7bb385f9-9c31-4359-9062-73238c389063"
        },
        "item": {
          "id": "944576d4-6700-482e-b66a-60e0670501a4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "493d0403-6eab-4284-932a-afdb935f8043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989c0d5-257a-4bee-b2c4-d539738b25d1",
        "cursor": {
          "ref": "547c85e3-4ba4-4073-b879-7471ac2ff3fb",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1583e5dd-3e93-43d4-b5c5-a9777c512385"
        },
        "item": {
          "id": "f989c0d5-257a-4bee-b2c4-d539738b25d1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8a20eca8-785f-48cf-a1e3-d924a3c0eb6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b602a8d0-2184-4a44-ac59-4a7db1f13467",
        "cursor": {
          "ref": "cfff3083-d6d4-4c8c-81a2-f1fe78dde110",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "be02a59d-44c1-463c-a48f-ad426edd78d2"
        },
        "item": {
          "id": "b602a8d0-2184-4a44-ac59-4a7db1f13467",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "fd98ce41-1139-45ca-8690-e2dade696988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f9b97-e7b1-4709-8d07-099a2202e4b4",
        "cursor": {
          "ref": "0304d913-747f-4e84-acf2-ece49d0abad5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "435ae5a6-93e0-4c58-bb2a-c840b688cd65"
        },
        "item": {
          "id": "a73f9b97-e7b1-4709-8d07-099a2202e4b4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "03cb7456-de35-417c-9511-c29743d22ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9389656-a223-4107-91c4-4a28b89b3890",
        "cursor": {
          "ref": "bf56e778-9285-448f-958b-b308c1488cbe",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8f567fe1-6bc9-465c-bcc9-7adf39306df0"
        },
        "item": {
          "id": "c9389656-a223-4107-91c4-4a28b89b3890",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b23b966a-adcf-4c15-9193-37a27fe5b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c8e676-0c4c-4f43-bf3c-b4e6317a9a70",
        "cursor": {
          "ref": "4ffbda90-b040-4ef8-a2e7-79ef07894e2d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8f11ef75-f42b-4f8b-a4c0-1fc91b7eebc9"
        },
        "item": {
          "id": "56c8e676-0c4c-4f43-bf3c-b4e6317a9a70",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "abb40913-9038-4a2f-82ca-69738b132b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c35dc5b-5406-46bb-9817-43db0e451356",
        "cursor": {
          "ref": "b83157d6-afa2-467e-9662-b1f54b3693b3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1a1035ca-e51c-414d-bf9b-a7f0880dcb53"
        },
        "item": {
          "id": "1c35dc5b-5406-46bb-9817-43db0e451356",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "43a6bda5-947f-43dc-9494-4fc87c967615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61961fc-553f-464b-8378-17cd3825428c",
        "cursor": {
          "ref": "f0089b3c-a3dc-425b-90bd-9651c4e3a760",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "875a53f1-86c9-4efd-982f-9828b9df22ef"
        },
        "item": {
          "id": "f61961fc-553f-464b-8378-17cd3825428c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "de999a0a-4f30-4ff4-8f09-cd9e142b796d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ba630d-8322-4ca6-83fc-f4db8579d999",
        "cursor": {
          "ref": "21074cb2-b15f-4794-83a4-a21ceb0f5ba4",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "70fa0723-56bb-4f6f-8333-b869eef4da48"
        },
        "item": {
          "id": "e7ba630d-8322-4ca6-83fc-f4db8579d999",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ddf2eb8f-d49f-4eed-bc74-4922fb35bf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8b6571-d73e-4718-92ff-c41e92b622cd",
        "cursor": {
          "ref": "905de5d3-c84f-46f1-beed-4fb1814c4e9f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7986e5e6-df6f-42eb-a868-43c2c461fc85"
        },
        "item": {
          "id": "ed8b6571-d73e-4718-92ff-c41e92b622cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4e547ea7-a766-4972-a144-107b6f1d45bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c411a04-9dd8-4ec3-aac3-64a623afcf61",
        "cursor": {
          "ref": "60c81dd1-17d9-43ce-9a01-fc0079838be2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6b8938d6-f0bc-406e-813d-5e8ee9cf255d"
        },
        "item": {
          "id": "3c411a04-9dd8-4ec3-aac3-64a623afcf61",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4dbf22ce-1275-499e-8786-22d735233d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bf5493-d436-459e-963e-ea9b4da974f8",
        "cursor": {
          "ref": "2625233d-395c-4d19-9645-8c2b066be5a9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f319ff67-e3c7-42c1-9c4e-76982cdd55ad"
        },
        "item": {
          "id": "c8bf5493-d436-459e-963e-ea9b4da974f8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2748dc19-84be-4580-abdc-38a3727ac989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce012c39-0a82-4a53-b80c-df60fc0cca6c",
        "cursor": {
          "ref": "88959abb-6151-4fe1-87d6-9aa5cf078048",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1c35f67-fea4-44af-888f-dca65f5d935f"
        },
        "item": {
          "id": "ce012c39-0a82-4a53-b80c-df60fc0cca6c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "532f7395-bd0b-486c-8025-6861d0743e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca0029e-7014-418b-8fe9-b69f3394eaca",
        "cursor": {
          "ref": "eb756229-b64e-44b8-bdf4-bd0db8021822",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ff1ce3f6-f532-4e25-a1b6-02df112426d6"
        },
        "item": {
          "id": "eca0029e-7014-418b-8fe9-b69f3394eaca",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8db41c11-2c5a-4e47-9d25-05b1238d4e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2a5410-8820-4cba-ae43-5b66dd151115",
        "cursor": {
          "ref": "0cc1b949-a0bc-4f75-a11e-26adc162e3fd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "677c3fb6-d6e3-4087-9454-791caa0d15ca"
        },
        "item": {
          "id": "ba2a5410-8820-4cba-ae43-5b66dd151115",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "90032793-e43b-40c2-9b70-ef06b0c87366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830f0417-db45-4a9f-84ec-2493fc4141be",
        "cursor": {
          "ref": "123c5187-22d3-4b0e-9dd7-e1f9205f7093",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3caa0ccd-bb9c-4b1e-8252-560310d64804"
        },
        "item": {
          "id": "830f0417-db45-4a9f-84ec-2493fc4141be",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5e367d18-6b02-4f98-b06a-9fe81fa308f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44288f08-74a6-4e56-b546-f249a6c0c5bc",
        "cursor": {
          "ref": "dc509d50-ab7e-42ec-b2a4-61d323d74547",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3417e71-0a7b-406b-a49a-478b51040a26"
        },
        "item": {
          "id": "44288f08-74a6-4e56-b546-f249a6c0c5bc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4b829574-4ff1-43c3-bfaa-c11b4b0034b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef48b3b7-de4a-4341-8e90-abb754dfb1a4",
        "cursor": {
          "ref": "f33cb657-5cd4-4f72-997b-cf572ef8e8a7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "32a4b139-e81d-4fc6-bc15-c2f2408698e6"
        },
        "item": {
          "id": "ef48b3b7-de4a-4341-8e90-abb754dfb1a4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c73dc46a-1675-4756-847f-abac2db187b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03f748e-f1a1-4c0a-aff3-739ad78259b6",
        "cursor": {
          "ref": "7fa6a836-9011-46c2-8354-fe1e4defdef5",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "02f296c7-fd09-4643-8a97-e12bc411065f"
        },
        "item": {
          "id": "b03f748e-f1a1-4c0a-aff3-739ad78259b6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "193e7797-9bf8-4fd9-98bc-fdbef7dea289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051352c3-8039-4fda-908f-53f87dcb767e",
        "cursor": {
          "ref": "004b33a0-d124-45cd-bb32-7e6cfdd3112b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7ab1e2c8-5647-4096-ac90-26e65fcfef93"
        },
        "item": {
          "id": "051352c3-8039-4fda-908f-53f87dcb767e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "05651b0b-b29e-4b83-b9da-2e76c41d6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2d3bef-26b7-4e53-a426-9e04f6bfafd4",
        "cursor": {
          "ref": "81c2c622-f64b-4649-81ee-8b47ac0d181a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06884d0a-6428-44fd-832d-102cabc32a49"
        },
        "item": {
          "id": "6d2d3bef-26b7-4e53-a426-9e04f6bfafd4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b3f60198-f751-40a5-b8fe-eff9e87323ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c523f-ae59-443d-8ef0-c4b6f56025dd",
        "cursor": {
          "ref": "5f94b5be-6ced-41db-8cb7-b3e4b0afbccd",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e3546872-4e9a-4770-af75-bcf35cd45f18"
        },
        "item": {
          "id": "7d9c523f-ae59-443d-8ef0-c4b6f56025dd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22662fa6-fdf1-4e85-bafb-c238e6b3a390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546cd106-1d71-4e0e-bb35-97396088ad98",
        "cursor": {
          "ref": "5542ddfd-ff66-4780-ada9-37588d5bf86f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31bb4692-15da-425e-b648-57ddd7356615"
        },
        "item": {
          "id": "546cd106-1d71-4e0e-bb35-97396088ad98",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d9aa0193-f654-4985-a24a-b51dc8cdecc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443f0ddd-84ae-4e27-9224-031ec560d1fe",
        "cursor": {
          "ref": "eeadcad7-e649-43e2-bbc2-8d67614f74eb",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ddafca40-c456-48ea-9fbd-df6b9e02c76c"
        },
        "item": {
          "id": "443f0ddd-84ae-4e27-9224-031ec560d1fe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "58ad6bb2-9449-4e08-8b5f-03a5e6b83005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2ed4c-7cf3-4540-97cb-966baa46da2c",
        "cursor": {
          "ref": "922ce968-87ff-4582-8d15-2e6b804950c6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "39d9b3f1-c4b1-485c-9d70-2cc9d9466844"
        },
        "item": {
          "id": "17e2ed4c-7cf3-4540-97cb-966baa46da2c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8bba97f8-a050-4bfa-aa94-977036aa0259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc77d03-f4e6-4071-960b-7e8f6cf2c623",
        "cursor": {
          "ref": "adce3bc0-d8f4-4f7b-9a2a-024534dbefe1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16928cfd-7d9e-4bff-9d5c-50212722bae1"
        },
        "item": {
          "id": "adc77d03-f4e6-4071-960b-7e8f6cf2c623",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6a362e02-3d06-4b70-a3c5-2fa599583ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b899aab3-a21f-49ab-9a0b-76ce68063cb4",
        "cursor": {
          "ref": "0adc7fa9-7202-4f13-98ec-46dbfc6ae376",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "12498e73-6a6e-4cc4-9d12-232d805a211d"
        },
        "item": {
          "id": "b899aab3-a21f-49ab-9a0b-76ce68063cb4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1e8f8ad9-7d62-4974-a9b5-18a8e1787500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb373d9-84fd-4347-86d2-72282811f888",
        "cursor": {
          "ref": "dd205c87-b118-40ce-a979-34530527b430",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb7561c7-b9a0-47c8-b285-1547fd3b8045"
        },
        "item": {
          "id": "0eb373d9-84fd-4347-86d2-72282811f888",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "afec502b-0e77-4455-8ff5-5496de980b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1a22bc-4d57-4196-b93e-810852fe8cca",
        "cursor": {
          "ref": "60a665b7-cb4e-4853-9bd4-bb67b0cf91de",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "48b9d4cc-0ebe-466b-b8cc-6bfd4941c54c"
        },
        "item": {
          "id": "0a1a22bc-4d57-4196-b93e-810852fe8cca",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2168bb73-8b5c-45ad-96d3-a089f98a5b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a64c915-0b6f-4e54-8798-be64b381fa4f",
        "cursor": {
          "ref": "b4181ac1-338e-4751-9c19-321799233528",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "36721cfa-a0bb-49e1-a1fc-8c5953cc9470"
        },
        "item": {
          "id": "0a64c915-0b6f-4e54-8798-be64b381fa4f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6b24b5ee-ca70-4adc-b11f-3419bac7b7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5bbf22-b05c-41ff-a278-d36b76dba552",
        "cursor": {
          "ref": "cd0a5669-46e5-4967-a245-f3c66e4de7f5",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3b09f556-34d1-4ec5-bd26-0e52e8b4874c"
        },
        "item": {
          "id": "bd5bbf22-b05c-41ff-a278-d36b76dba552",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "16565f2f-e490-4a9d-ac84-e658a4a1b818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949f42bd-af27-4b48-ade4-a2afcbce4c61",
        "cursor": {
          "ref": "1bff8fa3-3fde-4329-8c47-32ed0d297f12",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "204b7d3c-0925-46c1-a9e4-cd391db69c09"
        },
        "item": {
          "id": "949f42bd-af27-4b48-ade4-a2afcbce4c61",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6f4dca35-405e-4063-80b4-2630000f1001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4489575b-58d0-4083-ae59-295abc711745",
        "cursor": {
          "ref": "8819b0c5-39fc-41f3-ae35-852f967ac6ee",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e599e980-9a6f-42ae-82c5-4810e753f80f"
        },
        "item": {
          "id": "4489575b-58d0-4083-ae59-295abc711745",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f1b21074-2b6d-4c08-b577-573f48de9114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e586a8f-5803-4505-932d-18c554d53654",
        "cursor": {
          "ref": "e5a6932d-f730-4ea9-b85a-b61b0f8a0147",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "480cf41d-40e1-4f6d-a1d9-c8bda5fa9731"
        },
        "item": {
          "id": "1e586a8f-5803-4505-932d-18c554d53654",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "39516777-22bb-43b9-ae23-22f2edf83c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42511fc5-d2ae-4ee9-99fb-cf0f605d1aef",
        "cursor": {
          "ref": "21a74215-d1eb-428c-b029-685c34640e36",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dfea5e36-d5ae-48f4-9f7b-92297835464e"
        },
        "item": {
          "id": "42511fc5-d2ae-4ee9-99fb-cf0f605d1aef",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "62226f14-be1d-47fd-bc5b-491566fb2763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd34236-02fe-4aab-854d-ffbaecba997e",
        "cursor": {
          "ref": "512f0b51-435b-4134-9800-a022f1a85fb7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "22036f65-484f-4989-a714-35d5baf2bc4d"
        },
        "item": {
          "id": "dcd34236-02fe-4aab-854d-ffbaecba997e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "21bbaa80-877f-454e-993e-9484c6d7da98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fa9d5b-4929-45da-b144-95407399e66b",
        "cursor": {
          "ref": "eae6057d-c3dd-4349-8217-8e8119d6ce41",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "221c4e45-c6e9-493f-a54a-8c5a1a7409fd"
        },
        "item": {
          "id": "e4fa9d5b-4929-45da-b144-95407399e66b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "81b8c736-e717-457e-9497-43c4e20596d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c5e4a7-92f3-46ed-b2b8-33d058d22447",
        "cursor": {
          "ref": "b7901c68-56dd-4a32-8d15-32ec2b5b05d0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1da5546d-8bbb-4145-90fc-2c7e2d3fa62a"
        },
        "item": {
          "id": "74c5e4a7-92f3-46ed-b2b8-33d058d22447",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "832a96a6-07b2-4e57-846d-0f4c5cf43603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907fd673-a974-4988-a2d5-f0510085d805",
        "cursor": {
          "ref": "b776b276-2ff7-47fb-8ace-94109b500185",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "74834b7e-2dc4-430b-847e-3919d57c387e"
        },
        "item": {
          "id": "907fd673-a974-4988-a2d5-f0510085d805",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "93a69aed-e84d-49a3-85db-bcb5fc9a8427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e30638-a3b2-4eaf-a304-a9386a4c15b0",
        "cursor": {
          "ref": "c8b0eb42-8c24-468d-92f5-0337c43b84de",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "07b2ae12-296b-4369-bfde-326d06a9b1c7"
        },
        "item": {
          "id": "17e30638-a3b2-4eaf-a304-a9386a4c15b0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c47496fd-ac2d-4ce9-912c-65151d063476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82795337-d4bb-45fe-a5ae-430ae1e59d60",
        "cursor": {
          "ref": "3418a00a-50bd-4cdd-b2c2-201e244ae562",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4961cb97-fb11-46cd-945d-6328e3627a1f"
        },
        "item": {
          "id": "82795337-d4bb-45fe-a5ae-430ae1e59d60",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "04e9590e-9e57-4222-9cbd-958e2745e65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebbd52d-8dfc-47a7-96c0-bcc683cfee27",
        "cursor": {
          "ref": "503a179e-7d19-4049-aa1e-c6fbd50344a8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "856d0eee-90fe-4216-84f8-3f60890bfab3"
        },
        "item": {
          "id": "3ebbd52d-8dfc-47a7-96c0-bcc683cfee27",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "154e227f-e20d-4f8b-991e-cc9b8b49c157",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016524ac-fdfb-40dc-8744-4250c8847625",
        "cursor": {
          "ref": "cd0013f8-27dd-4bdf-a6f6-0d9adef58a7d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6a244304-7371-472d-8165-9070fc5ddb7e"
        },
        "item": {
          "id": "016524ac-fdfb-40dc-8744-4250c8847625",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cf9ca3c3-83ac-4557-aa56-dab47c2d611a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "40c48d35-b3b4-4bf6-b71a-e52bafe9690e",
        "cursor": {
          "ref": "92c9116e-6e06-4475-b2eb-260cebe98f47",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1fcb70ba-45d8-4e81-8c56-ede495d98b8b"
        },
        "item": {
          "id": "40c48d35-b3b4-4bf6-b71a-e52bafe9690e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7a7ec61a-3cc9-4f78-8d35-43a1ff00f1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c6257f88-b27a-4fd1-926d-d75e9bf6947f",
        "cursor": {
          "ref": "0f3d783f-30a0-4032-8cb8-ee36b0017886",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e2f76b8-679a-4218-b51e-eb5682574a27"
        },
        "item": {
          "id": "c6257f88-b27a-4fd1-926d-d75e9bf6947f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3be284e1-4e9f-4bc0-81b8-308fadab10b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cb3c7434-c53c-46c3-9bcd-a340a183d9ed",
        "cursor": {
          "ref": "18fd57d8-0489-4bbf-a3de-dcd661989e19",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6bd9775d-0a66-4f67-8597-22a2eb66144e"
        },
        "item": {
          "id": "cb3c7434-c53c-46c3-9bcd-a340a183d9ed",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "768bb1fe-9fb3-4b65-9aaf-1f722b657e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dd4d1194-0912-4319-8b17-8b5b2e1ca933",
        "cursor": {
          "ref": "49d8e5e5-61ea-4b0f-8f3e-173a8da3745e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "927ace3e-97b2-458b-8449-4708df347279"
        },
        "item": {
          "id": "dd4d1194-0912-4319-8b17-8b5b2e1ca933",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b6c66b4a-ca5a-476c-8c9b-a1fc7005da12",
          "status": "Created",
          "code": 201,
          "responseTime": 12163,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b9dfec-6408-4247-8513-e75857e689be",
        "cursor": {
          "ref": "1522c825-cd2a-434d-a4a0-5d62d25b2b58",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dabcbd6b-bc8b-465c-ab39-d62599ecfcd9"
        },
        "item": {
          "id": "45b9dfec-6408-4247-8513-e75857e689be",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d722ebc0-6dd2-480f-a26f-9ef78ac45cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b1a38659-e723-4496-a4b8-e8d2d6cc786d",
        "cursor": {
          "ref": "7165e37c-41c1-4248-b759-815f575db39d",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "06cc2f03-d709-4d67-a7b7-73625412091f"
        },
        "item": {
          "id": "b1a38659-e723-4496-a4b8-e8d2d6cc786d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a640ac6c-6a9d-49d3-bb82-a9b1aea499a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e51f1a53-e5ce-4faf-8a8a-8f33c85ff973",
        "cursor": {
          "ref": "8e8dd4d2-f137-4485-aaac-2f4a5ee36959",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "312ed6cb-1a3d-416f-84a9-5e22f52bb000"
        },
        "item": {
          "id": "e51f1a53-e5ce-4faf-8a8a-8f33c85ff973",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "add4e3d9-b0d9-44a0-abff-8b64259c6c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53ca247-7bd3-4618-8028-df6d40cf5390",
        "cursor": {
          "ref": "19a8f704-3631-4363-a49d-d44b7f8e325e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dba113ea-dc59-4512-b11b-c33a1c1ba3a0"
        },
        "item": {
          "id": "a53ca247-7bd3-4618-8028-df6d40cf5390",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bedad624-7803-41ac-80bb-b3a57c3cb8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f838c47e-a600-4a8b-a613-ee3c0bc56ec9",
        "cursor": {
          "ref": "5647cbd9-d5b0-423f-ad80-d9451911c608",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f83ed126-ed20-47c5-9de1-528a24551634"
        },
        "item": {
          "id": "f838c47e-a600-4a8b-a613-ee3c0bc56ec9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8e3421b8-86cc-4a8e-a54a-1d292c26ef7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e18def8-b8e6-428c-ba15-9cf234449818",
        "cursor": {
          "ref": "7c098ae4-17ff-4581-80aa-b967d0b4c3dc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "269c994f-058a-400e-bfae-06c7acd8769d"
        },
        "item": {
          "id": "3e18def8-b8e6-428c-ba15-9cf234449818",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "219b603f-8ce6-4c7b-95b1-2069dd17e785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b4b78a-b465-44ad-bcba-d2241d3e0ff7",
        "cursor": {
          "ref": "ecbd448a-a9fd-4507-a8d0-d3bbec94d275",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ba44c3f-4a4b-4774-8c70-7c2a368003b4"
        },
        "item": {
          "id": "c6b4b78a-b465-44ad-bcba-d2241d3e0ff7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4fd3e5a3-91c8-40e3-a39f-8e5385fe77f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb0ac66-1e23-4ee3-aabf-7e21213721f5",
        "cursor": {
          "ref": "dc4900c4-115a-48ad-bf67-5c525f57a6ac",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b599d851-ed88-4b0b-a95b-17629a9825d1"
        },
        "item": {
          "id": "4fb0ac66-1e23-4ee3-aabf-7e21213721f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "15c70824-742b-42f7-9fef-f75996bcaddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ead5142-2621-4de1-87b8-3784a39a4720",
        "cursor": {
          "ref": "6abf9c85-731a-477e-b5ad-2c60c981c16a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a1251e81-a353-4da8-be5e-cb067645fc46"
        },
        "item": {
          "id": "4ead5142-2621-4de1-87b8-3784a39a4720",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36bcfb92-fd76-49fb-99e4-9cdf548f05d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a74709-8ab9-4f08-bfd1-3a6fd27c8595",
        "cursor": {
          "ref": "b9feef61-963b-48cb-be13-d12a64e3c179",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4169ab7f-6e8c-4cfa-a011-cc1d085e3c98"
        },
        "item": {
          "id": "a7a74709-8ab9-4f08-bfd1-3a6fd27c8595",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2fd38b49-ce2c-4922-9240-c35e09843254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d47f389-4724-4e92-9ae5-135904fd6362",
        "cursor": {
          "ref": "d26f9472-59e7-4a47-8be6-0467f69d8f5f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "08112b15-97b8-40cb-9e45-8808bae7a963"
        },
        "item": {
          "id": "2d47f389-4724-4e92-9ae5-135904fd6362",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "298428ad-5672-4169-8451-2f8ef39de881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7773bc69-4718-4a11-bc62-c0d90ab238da",
        "cursor": {
          "ref": "a7cd2788-97e1-436a-9417-8af4fb1c5b2a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9c32478b-be87-4316-b228-240fb682c5c4"
        },
        "item": {
          "id": "7773bc69-4718-4a11-bc62-c0d90ab238da",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dba76a66-9111-4d2b-b273-5851165475ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed9437-4e4f-47db-880e-5705e99a03aa",
        "cursor": {
          "ref": "2c07c93d-6db1-4082-b7c0-1159ea7f3fbf",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5520f5fc-e257-432c-9872-b7195e47d770"
        },
        "item": {
          "id": "85ed9437-4e4f-47db-880e-5705e99a03aa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b62dde4f-80ab-46da-af8f-9b1a95718649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded44fc5-d212-4715-9128-29babb6ad780",
        "cursor": {
          "ref": "5be639bc-4bb2-4d96-8c57-008fde05cc47",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2e5ecf09-7cd8-4528-bc9e-6d5e918050d0"
        },
        "item": {
          "id": "ded44fc5-d212-4715-9128-29babb6ad780",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "38335d62-743e-4049-a6ce-9a1d3fe7da73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e584c44-d92c-4ea2-af96-35be38d61256",
        "cursor": {
          "ref": "008c0b25-453e-4ce1-82d4-381da90e26e5",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d465bc78-81de-4153-86bc-d86d322e86d4"
        },
        "item": {
          "id": "4e584c44-d92c-4ea2-af96-35be38d61256",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1c1f373-b76c-448d-8e41-e42096aa37ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd48dbd-13f8-4d78-a352-1551f72a74bf",
        "cursor": {
          "ref": "c3879d04-0daf-40b0-86e7-8d9bb8a0fa16",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "57eabcf3-8c0a-438c-bb8c-c1abc7361361"
        },
        "item": {
          "id": "0dd48dbd-13f8-4d78-a352-1551f72a74bf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "21631a78-128f-4054-aa54-a47a92cd118b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af2134e-a7d1-4514-9fe2-45d6aaefc38c",
        "cursor": {
          "ref": "ef5579a3-f4fe-4601-b918-8af7f01691fd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d7b9bb39-d1b3-4af3-9ba8-e5a591416700"
        },
        "item": {
          "id": "9af2134e-a7d1-4514-9fe2-45d6aaefc38c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "478dcea1-e3b7-44bf-933d-98b67b6b3f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b69e119-18c5-460f-af8e-ece1136c76c4",
        "cursor": {
          "ref": "1983443f-da75-4259-866a-0a7286a7272d",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "65dcde14-0cfd-4957-9e53-c2002cb6a520"
        },
        "item": {
          "id": "6b69e119-18c5-460f-af8e-ece1136c76c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dd308a4e-9a50-4965-a626-0dcd186229c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3fbde-ee3d-4dd2-a166-71faad6acaaf",
        "cursor": {
          "ref": "d265bc7b-9d7e-4318-a2a0-a12bb6eb6cde",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2bbb7eb8-c7cd-4398-a13b-aaa5982f5040"
        },
        "item": {
          "id": "9af3fbde-ee3d-4dd2-a166-71faad6acaaf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cea8176c-2df4-4be4-926b-27a3f498c128",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "44af8728-66c3-4c42-bf26-616a5de04cc7",
        "cursor": {
          "ref": "352c3ab7-7e07-44b4-8fd9-4a4392bc719f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2fb53839-1c3d-404f-bdd2-16a87bd6a04d"
        },
        "item": {
          "id": "44af8728-66c3-4c42-bf26-616a5de04cc7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e248e793-9188-47c8-af61-2c6c1fde996c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c2dd28-d293-4f35-8e74-970868b1401c",
        "cursor": {
          "ref": "d55d6733-e9ba-417e-9bc7-24ac2f24fc1a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c5077678-dc4a-4ac6-bb01-41a543b45e28"
        },
        "item": {
          "id": "f8c2dd28-d293-4f35-8e74-970868b1401c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2508456e-cb91-4825-80fa-316143560b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4199d8ae-b3bf-4add-a03d-c06f788959ce",
        "cursor": {
          "ref": "04f95327-ae57-4431-9425-eb1097bb6e50",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ecc7fdae-2eb3-487d-83d6-65b5fb642624"
        },
        "item": {
          "id": "4199d8ae-b3bf-4add-a03d-c06f788959ce",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d139fa19-af6a-4679-a1d7-b6d84669427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3628e533-fc44-40ae-9ad1-dc04df7953da",
        "cursor": {
          "ref": "1bbab7a1-8711-44a0-b5bf-3376468a6b08",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "300dce49-ef74-49c0-9d17-c7e46c37c37b"
        },
        "item": {
          "id": "3628e533-fc44-40ae-9ad1-dc04df7953da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "97b3eb19-7cb8-4dd8-86fb-7a310d9af108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174582d0-03e2-4537-bf52-07775f2d57a5",
        "cursor": {
          "ref": "0a972268-d0f0-447b-8c72-b16bf4e00f25",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5e0726dd-c0f4-4218-95d5-1b02eae1754b"
        },
        "item": {
          "id": "174582d0-03e2-4537-bf52-07775f2d57a5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a30a8686-f503-466f-a81a-6a130f00b081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17bd880-5284-4226-bf7a-1d762bc5b090",
        "cursor": {
          "ref": "f9ae0589-fb8f-48c8-bc82-81432b244b09",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "493c3221-aaad-4c62-8969-d97b33005853"
        },
        "item": {
          "id": "e17bd880-5284-4226-bf7a-1d762bc5b090",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b6a5d5cb-6cd3-425a-94c1-66751fa5bdb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8851f1-5f2c-43f5-871b-cbcc427cdd50",
        "cursor": {
          "ref": "957c377e-c71e-44c0-8349-005896949eb6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d8249f5-145d-4487-9f3f-9e1a357f2a56"
        },
        "item": {
          "id": "bb8851f1-5f2c-43f5-871b-cbcc427cdd50",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d87e3db5-f04f-4189-b420-872f6ad8874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5120f3a6-5e89-47c9-ae8a-0fa7577a2b9d",
        "cursor": {
          "ref": "1575a32a-0ad6-448d-a557-8e12180c5f39",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f88f48d2-47a7-4459-9d5a-b09bab6924a1"
        },
        "item": {
          "id": "5120f3a6-5e89-47c9-ae8a-0fa7577a2b9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48fd4562-07f5-4bc7-b349-81f553bd5b18",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "9441dc33-f96e-4f95-ae58-74622df62fde",
        "cursor": {
          "ref": "03891854-add7-4df5-b0db-09e47fd77dbb",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "64dbb7cb-11ff-4eb2-9cda-09aa97c4cfa4"
        },
        "item": {
          "id": "9441dc33-f96e-4f95-ae58-74622df62fde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5406acac-e133-4851-a72a-244dd57a3046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375f59f7-b8b8-43b4-a8c8-a58244fba519",
        "cursor": {
          "ref": "d8f3ffc3-6466-4856-90f9-b1877bb830ff",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a467aa65-8cd6-4483-b2a4-f9dd85565df4"
        },
        "item": {
          "id": "375f59f7-b8b8-43b4-a8c8-a58244fba519",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "66995fb7-02db-4c99-ab9b-42b37f74b0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2fac29-b032-4ea2-b6ef-585aecc9b813",
        "cursor": {
          "ref": "3c205c2c-1204-43ed-9c1d-1b8ab92c8b67",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "713de940-473f-4c0b-a62f-eeafed2b99f0"
        },
        "item": {
          "id": "6e2fac29-b032-4ea2-b6ef-585aecc9b813",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "589ef327-0651-441d-8829-709d565909a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c0830-8529-49eb-bb33-244c6a0c7c28",
        "cursor": {
          "ref": "beb91165-376c-4568-8693-090bf4e0e870",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1200be35-1a95-4b38-bdf9-ca6c27d6c8ab"
        },
        "item": {
          "id": "a74c0830-8529-49eb-bb33-244c6a0c7c28",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "064b28e7-372f-4f30-9974-aa0c731fab06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad803e27-d425-4bd6-a876-4a2e6cb9456b",
        "cursor": {
          "ref": "88389f06-f5e4-4427-97dd-949bf2b5d7a6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "87bb5123-df6f-44e0-8df3-b35260155c9f"
        },
        "item": {
          "id": "ad803e27-d425-4bd6-a876-4a2e6cb9456b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf3314ec-fde9-46af-b731-b4e4c55e77e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390de598-56db-46d1-9a7c-4258a8fba5f2",
        "cursor": {
          "ref": "310cb093-0a0d-4790-9d9e-aabe169f5fd6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "aaa1148c-4024-4c97-b883-5d5a1326568a"
        },
        "item": {
          "id": "390de598-56db-46d1-9a7c-4258a8fba5f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "313a0e2a-de00-4c49-aa56-45291d4a08a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65214069-6869-4645-8875-c0eb9cd72dc7",
        "cursor": {
          "ref": "f7fff05e-88bc-4839-b6bc-264f8c777e55",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "38ed5865-a1c6-492b-9745-18fedd301c8a"
        },
        "item": {
          "id": "65214069-6869-4645-8875-c0eb9cd72dc7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "615ec5fe-3c14-4524-b1c7-32862a98bc3e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "4060f9c6-3f2a-402c-a566-8f32345c3d5f",
        "cursor": {
          "ref": "6a9a8733-36a3-4890-964a-23edfb40b126",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f2fea453-af5a-43c2-bc94-47dbcd7d45e3"
        },
        "item": {
          "id": "4060f9c6-3f2a-402c-a566-8f32345c3d5f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6e34be85-15fd-45fa-ad94-79fe720550ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3cd3dc08-fa67-4fcf-9e5e-fd8132ac1f64",
        "cursor": {
          "ref": "ae3b4c78-154b-41d1-abb2-95c303fdb636",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "84f4d524-bb4b-4dad-8192-9ad3e920e522"
        },
        "item": {
          "id": "3cd3dc08-fa67-4fcf-9e5e-fd8132ac1f64",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "24208714-2f5c-494a-bf02-ff8c383d0199",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "cd8c9590-4a3f-4a84-98c5-bfcd175d3629",
        "cursor": {
          "ref": "76898d68-d215-4f21-b12a-8b7dbb3f1695",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "379ed1ad-5f00-4510-be9d-87d6abdce285"
        },
        "item": {
          "id": "cd8c9590-4a3f-4a84-98c5-bfcd175d3629",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a85d403d-6778-40fd-9c03-aca369802c29",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "3a09a387-c2cb-4832-a641-4feefc43acfe",
        "cursor": {
          "ref": "8eb7182d-84dd-429d-accc-47b6da51ebbb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0d057f19-23d6-43b4-886e-9067c8a033cf"
        },
        "item": {
          "id": "3a09a387-c2cb-4832-a641-4feefc43acfe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "94944ea5-191c-4ea5-9eb9-6ee7ad75a6fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d5cae70c-b9bf-4303-a417-555d45d66051",
        "cursor": {
          "ref": "8b89e96d-49c2-4732-b87e-e1b77e5c93c9",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "54216f75-2cdd-448e-b74e-614cf2d0a5dd"
        },
        "item": {
          "id": "d5cae70c-b9bf-4303-a417-555d45d66051",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b82bb38a-3caf-44d8-a70e-33d5a8fa7679",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "0315a438-de38-4fba-ba91-69d6218ced65",
        "cursor": {
          "ref": "0dec138a-0312-476c-bccd-31f84758930f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "49ea1906-ddaa-45af-a092-08485ea6f23c"
        },
        "item": {
          "id": "0315a438-de38-4fba-ba91-69d6218ced65",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "84a916ee-02b4-43c8-bae3-dd7aaff1f9d1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567eccd4-8a2d-46fe-8c18-19a0429efd5e",
        "cursor": {
          "ref": "d55b7d50-9e97-46ea-979c-bc15cc1d8828",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1ab5a595-8842-4702-87b1-953f45c6cf79"
        },
        "item": {
          "id": "567eccd4-8a2d-46fe-8c18-19a0429efd5e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "49579189-111d-4e74-85f6-bfdd77d9f3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43cca842-3703-4304-b1c6-c5c4afee80ec",
        "cursor": {
          "ref": "7ccc1458-3b9f-4415-be73-6c92809c9c6e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c9b69f55-24b2-4fbe-8f34-914140f91b60"
        },
        "item": {
          "id": "43cca842-3703-4304-b1c6-c5c4afee80ec",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ad1c558-4ae1-41db-841b-9686146fe2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867152d-56ce-4f3c-885c-533bb965fb87",
        "cursor": {
          "ref": "e4ae5f3f-474f-4cc6-be61-7ebdd5479687",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d673739f-3c3f-4606-b0c4-b7f97fc9bd74"
        },
        "item": {
          "id": "9867152d-56ce-4f3c-885c-533bb965fb87",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1d4d8d50-9a95-47a6-9adc-6f4610797f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dc0552-19e5-4fb8-bb02-8b121b5a0956",
        "cursor": {
          "ref": "13ad5aee-a5d0-48ee-a80b-2ace380066b1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e70803e3-15ad-49b7-ae60-d85b1b99a123"
        },
        "item": {
          "id": "59dc0552-19e5-4fb8-bb02-8b121b5a0956",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc98de7f-c93d-4384-b8b2-4b5fbf0ed195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e3604c-9b94-44d0-9f11-ec4c698be365",
        "cursor": {
          "ref": "04539392-5732-443c-8810-eca6de5a9ce7",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "191efa9d-e1f6-4282-926c-7c1721408e88"
        },
        "item": {
          "id": "29e3604c-9b94-44d0-9f11-ec4c698be365",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "455307bb-4e09-4a7d-95d7-1314fe9b2362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d7e78-25d8-4eeb-9bc5-2c8d8e989415",
        "cursor": {
          "ref": "090298b9-463a-4d2c-bb46-25e474091ef6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fa6a6048-1149-469a-a707-ae10373c2f52"
        },
        "item": {
          "id": "d58d7e78-25d8-4eeb-9bc5-2c8d8e989415",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "23969bb4-65b3-4ef3-b0b3-523d52d3756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f4abf6-1f9a-4d18-8c23-9bb5a943b1bc",
        "cursor": {
          "ref": "c2242e99-b76a-4d45-b924-df4a4f49d864",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ccace400-0a32-4d1d-8179-eea810be883b"
        },
        "item": {
          "id": "f1f4abf6-1f9a-4d18-8c23-9bb5a943b1bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "68f2801e-9890-4704-a0e9-c78bf6f46e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af84b0bd-4916-4ac4-8239-a0b1e41da9e0",
        "cursor": {
          "ref": "0094bcf6-807f-4a4a-8a5e-8ec7e87b4ba4",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "93aea51e-9584-4612-b1a9-432cec8fea92"
        },
        "item": {
          "id": "af84b0bd-4916-4ac4-8239-a0b1e41da9e0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0b020c1a-f9c9-487a-ba98-9113647029cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081c0280-8d67-4387-a3d7-9779f34d0154",
        "cursor": {
          "ref": "87af8386-2f5e-4e24-83c1-96970c0ebbbd",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a79e154a-abd0-4207-95c9-0360db37fb55"
        },
        "item": {
          "id": "081c0280-8d67-4387-a3d7-9779f34d0154",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d9931150-18a8-4b49-a436-574a52c6d5f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0be2843-ef99-4818-94ea-44c44db3528c",
        "cursor": {
          "ref": "9055aed0-e735-4a2b-a3d9-95d30277ba50",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "817593aa-2631-45a0-94b7-a5c8da54f496"
        },
        "item": {
          "id": "a0be2843-ef99-4818-94ea-44c44db3528c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a7d11f51-389f-403e-867b-9a9780ffa436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800a29a9-60a5-4343-a823-ae0cd3a1f176",
        "cursor": {
          "ref": "05fbdd28-181c-4e96-8f7c-0ef297539575",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c10b3d3a-7214-486d-98ee-56ca273613d5"
        },
        "item": {
          "id": "800a29a9-60a5-4343-a823-ae0cd3a1f176",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6becddf1-5f13-49cf-9d5b-82a33961be59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679d9add-79a9-43d5-a997-578b6c890618",
        "cursor": {
          "ref": "50c16bcf-7e5a-4d6b-9a58-4daf213b8673",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "490a433d-3c23-4c70-aa5b-bda6a3265142"
        },
        "item": {
          "id": "679d9add-79a9-43d5-a997-578b6c890618",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f72e9844-150d-4652-b804-70912317264b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f86d41-971e-4136-82e1-113521f9569b",
        "cursor": {
          "ref": "6ab81e37-998a-427d-848b-a0cf7d88b124",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0635bf09-a124-4999-82bb-3ba274fe76a8"
        },
        "item": {
          "id": "a3f86d41-971e-4136-82e1-113521f9569b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e305c404-9c6b-4030-a8ae-b288976aa6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1856affc-7fe1-4390-9aa4-d85fa32c3a18",
        "cursor": {
          "ref": "fd09ba16-29ee-4c79-9384-c047b0785b17",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "559ba3db-0682-428a-ab58-55389219f959"
        },
        "item": {
          "id": "1856affc-7fe1-4390-9aa4-d85fa32c3a18",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "53430c4a-8c45-4c42-9e6d-af63a2ce0cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5b7faf-d300-43a8-ac16-974a50bc8f62",
        "cursor": {
          "ref": "978d738f-00a1-4dcf-8f92-ef3d1edcc813",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d3b5453-5765-43b2-9297-b0a5b9c9cf89"
        },
        "item": {
          "id": "bd5b7faf-d300-43a8-ac16-974a50bc8f62",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f2ce71a5-56f1-4cdc-8c5f-af32d0255811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f620f302-c1de-4c03-a9c2-0efbb4ecadcc",
        "cursor": {
          "ref": "bf912972-28f9-4176-9e3a-dbd4d9f3a107",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fe7ddd2d-8697-4b96-8525-f6c24150d13f"
        },
        "item": {
          "id": "f620f302-c1de-4c03-a9c2-0efbb4ecadcc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a00780e3-ecc8-4348-91f3-77fdca39aeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d89f082-ce3c-449c-af91-91f74d0ea220",
        "cursor": {
          "ref": "01fcc9ff-c3c9-4f3f-90bb-e8fa1dd33a3c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "44d52f4d-071e-4810-b10c-d6618e1fa0b7"
        },
        "item": {
          "id": "4d89f082-ce3c-449c-af91-91f74d0ea220",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "38e0b30c-2c83-47c8-a1e5-780eb411976b",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e70dfdcd-11fd-41d9-a08a-b7b0fa9b0a9f",
        "cursor": {
          "ref": "af7ab9fc-97e9-4f60-bbd5-110996d3bff4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d3cfb17b-91cf-4542-9c84-16badd7eee09"
        },
        "item": {
          "id": "e70dfdcd-11fd-41d9-a08a-b7b0fa9b0a9f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8be6d97b-9f12-4347-8c4b-e2f4c9cb7119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebf76d6-ae07-4ed8-9dda-03b9ac03f834",
        "cursor": {
          "ref": "3e5f5c37-4f02-4a8b-9ec4-c25d4fef4ef3",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "41e52147-ae56-4381-b43a-2da8b067eaba"
        },
        "item": {
          "id": "9ebf76d6-ae07-4ed8-9dda-03b9ac03f834",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "95293c63-ea88-4cc5-9bfd-ecd6788af180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a435ed87-5a9d-46da-87ee-223a606ead03",
        "cursor": {
          "ref": "733ad1b3-fa39-47f4-8a81-d65de2573c29",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d7047ac1-f3b6-4088-8493-a32bb510d657"
        },
        "item": {
          "id": "a435ed87-5a9d-46da-87ee-223a606ead03",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "afb8b418-faa5-44e0-89ef-8dabdbe2ae9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa38e34-010b-465c-ba72-566aeee54fea",
        "cursor": {
          "ref": "905cab42-0ebe-42c2-b64e-75cb36b33a64",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ca3f351d-6adc-4290-88dd-6cb3aa71afed"
        },
        "item": {
          "id": "3aa38e34-010b-465c-ba72-566aeee54fea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "921d7bd2-a0f1-49aa-9c20-e20e220acf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e615a33f-f1e6-406f-ac01-d525bb7f15cd",
        "cursor": {
          "ref": "3b011d44-e85c-456e-991a-b58083cb1365",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "298df9ba-fa4c-4b52-8017-f97282a40f69"
        },
        "item": {
          "id": "e615a33f-f1e6-406f-ac01-d525bb7f15cd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ad465c94-c7ba-4779-b4ff-e57ac6e46610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c6a2a1-4768-40ed-9273-ecc2eeeeb625",
        "cursor": {
          "ref": "4b65ebee-b49c-4210-b981-9710b3eb640e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ed62ce3e-03d0-409f-bd5a-600684bee982"
        },
        "item": {
          "id": "89c6a2a1-4768-40ed-9273-ecc2eeeeb625",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "33d9bbc6-5c41-4f1c-affe-059485f1e26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c654986a-05e7-4171-aa96-b3a7afa7428e",
        "cursor": {
          "ref": "077dc8f6-7a4d-4f49-ad0f-8b9e0136ebe7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7221aedd-d570-4ab9-8971-5d0dc11a04f4"
        },
        "item": {
          "id": "c654986a-05e7-4171-aa96-b3a7afa7428e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3dc88cec-9b2a-487d-8e01-9a4d91f2d3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6a1b64-e622-4ab3-b10f-7f9298e78cba",
        "cursor": {
          "ref": "4f0799f8-beb8-454d-be81-6ba9a6598454",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ffc26165-5403-46be-bc01-65548da90ef8"
        },
        "item": {
          "id": "dd6a1b64-e622-4ab3-b10f-7f9298e78cba",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "54dd73e3-d31b-4e26-8c04-3b1d0bec68fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db325c9e-f123-427e-84d3-1dc9e7944fc2",
        "cursor": {
          "ref": "24d39bc4-d970-4911-9176-f92f0e8f60b0",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e787f7c3-8a97-4a07-bf7d-f346aa901db0"
        },
        "item": {
          "id": "db325c9e-f123-427e-84d3-1dc9e7944fc2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7c158d3f-49bb-43ce-8f6b-0c600166589b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181b41be-a998-4610-899f-18edd306c574",
        "cursor": {
          "ref": "f7958661-bdc1-480c-afef-ca446e763f0c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c89363af-d31d-445e-b7c8-275c5b8598e6"
        },
        "item": {
          "id": "181b41be-a998-4610-899f-18edd306c574",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ba2e88f3-5cdc-4dfb-a9dd-bd2156e9f835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7911551f-f655-440c-ad22-168c70af6190",
        "cursor": {
          "ref": "ab3fd742-ab40-4813-aef8-2fe77a00b5e6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "79f04d63-b97b-4c10-af8f-a55b8196834a"
        },
        "item": {
          "id": "7911551f-f655-440c-ad22-168c70af6190",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "abc127c5-9523-49c6-ace7-b07dc711a6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc5e3f-389e-4616-8659-6e8c3bf4895e",
        "cursor": {
          "ref": "4c3b5ee6-1055-4573-8ad9-d5a3cf0dcea3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "700a7992-3b50-4e89-8bd9-b91e50bcdcf6"
        },
        "item": {
          "id": "31fc5e3f-389e-4616-8659-6e8c3bf4895e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c801b437-615a-4201-bb81-56538a878fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bea65d-1630-40e9-92c4-44fd4ff184c0",
        "cursor": {
          "ref": "da1db577-1e8f-4622-91e6-ac9dbea93af7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6a7105da-8c77-46bf-a336-9f48c042c1e4"
        },
        "item": {
          "id": "65bea65d-1630-40e9-92c4-44fd4ff184c0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3786a5e3-ff25-4c82-a5b8-97cdd730e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1600db-e86e-4419-89dd-05f6cf8e2c73",
        "cursor": {
          "ref": "5f7b706f-9788-4bda-a34b-c01a8eca80d1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "52313180-0675-4372-b8ea-4a289c45fc58"
        },
        "item": {
          "id": "6e1600db-e86e-4419-89dd-05f6cf8e2c73",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9dc86492-9128-4e9e-b1ea-a297c8e38af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dd614d-1a3a-49f0-8212-83d084a8b094",
        "cursor": {
          "ref": "9cf61960-9a9f-40d2-8356-c345ab3621bf",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b39a6fcf-e3f9-4a6d-9c06-a9f694a42c7f"
        },
        "item": {
          "id": "f5dd614d-1a3a-49f0-8212-83d084a8b094",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "339f4319-8113-42c7-9bbb-71d41ab121c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587f6917-f92f-4d13-b6e3-c14363c99251",
        "cursor": {
          "ref": "1e45a1d2-2ac6-4eb4-9060-ba5e4c291d4e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f521d637-3c62-431f-94de-97c64468fd94"
        },
        "item": {
          "id": "587f6917-f92f-4d13-b6e3-c14363c99251",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4d6a2349-d8e0-40d2-9be4-fb16ca3e8aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65868c3-eff8-4478-8384-a4a17dc054a8",
        "cursor": {
          "ref": "8b26fdbb-d71c-4e73-a14f-ca56882e1e3f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "941724d4-026a-4dbb-bc74-13a56b22514e"
        },
        "item": {
          "id": "d65868c3-eff8-4478-8384-a4a17dc054a8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d580e7d9-46ab-45a8-9692-1cff21064fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006b664f-63dc-4214-9a25-226a3cde576f",
        "cursor": {
          "ref": "de6f3b11-1c34-4b29-ab3a-03cc73f060ce",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e67aca0-6c1e-4412-86da-6b1a95929684"
        },
        "item": {
          "id": "006b664f-63dc-4214-9a25-226a3cde576f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e754b498-77e5-4a74-8b04-63dbfee982a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdeb3f7-db7a-4e4f-949c-0656dcbda448",
        "cursor": {
          "ref": "27c01e03-41a7-42f6-9eea-304ea2695833",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c2789e30-672d-464d-9a60-f4026f36b102"
        },
        "item": {
          "id": "2fdeb3f7-db7a-4e4f-949c-0656dcbda448",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c9fe0c5d-1ac3-4eb8-b354-d17dc246d793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566b868-247a-475c-966a-5812ee6c8d77",
        "cursor": {
          "ref": "cc8d676c-efd7-4525-a0ac-6f77748a42a6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "be27cdbe-e125-4f74-88ea-fc99091c2f9e"
        },
        "item": {
          "id": "5566b868-247a-475c-966a-5812ee6c8d77",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a477d6eb-fa7e-4aec-8703-d704238cd475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54eb72f-d0ae-4fb7-8f60-281f43258d7d",
        "cursor": {
          "ref": "aace0ed1-d7e9-4ab8-8c16-54d064d891be",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "982f0390-bca2-423b-9fea-c457db753528"
        },
        "item": {
          "id": "c54eb72f-d0ae-4fb7-8f60-281f43258d7d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3f759f67-6d15-490f-8f77-270ab5cb47a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5af45df-f087-4c9e-b23a-af80e1e45a98",
        "cursor": {
          "ref": "dbacd470-52ec-4c3a-888c-b45d7eedede7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b1dd941d-e549-4571-9ba9-68f0571f479c"
        },
        "item": {
          "id": "c5af45df-f087-4c9e-b23a-af80e1e45a98",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "281170c6-cbe2-489c-a26a-3705bea0d020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5f9de2-709b-4fa8-831e-282da159df42",
        "cursor": {
          "ref": "ae276be2-c68b-4b39-9ec0-3d8442b8a620",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d40171a0-1dcd-4e19-93e0-509e099342fb"
        },
        "item": {
          "id": "ba5f9de2-709b-4fa8-831e-282da159df42",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f05a7cbf-b416-4220-9b14-dfd591eee5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd36675-d831-4119-afab-2be7a899834b",
        "cursor": {
          "ref": "b001a01c-f0a6-4619-a16a-df89681ce0d9",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "82cb417b-8325-4990-9457-bfcc7638ee44"
        },
        "item": {
          "id": "4bd36675-d831-4119-afab-2be7a899834b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c338e82-433e-4979-8174-73b1c5ae1ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5e1b08-cd31-4702-8dba-176fc81a0714",
        "cursor": {
          "ref": "9f2d939d-fc34-4d5b-b376-4efc28177809",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fd13bb4f-627e-43b0-ae26-9eb11ae0de26"
        },
        "item": {
          "id": "4b5e1b08-cd31-4702-8dba-176fc81a0714",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "012df959-3f54-4063-a40c-49af867ebaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9a890c-0a43-47e2-a5e0-65a42feb1aba",
        "cursor": {
          "ref": "9de48382-74c7-452b-8665-169003cdc0e6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "035bb3d8-94ba-40c1-b54a-556facb7f757"
        },
        "item": {
          "id": "ef9a890c-0a43-47e2-a5e0-65a42feb1aba",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dda16802-ab26-4bc6-8e3d-7554ac818d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c03df-6fd4-4c3f-8128-ef96377bccb7",
        "cursor": {
          "ref": "fa32626f-8530-4342-8fc7-624447643580",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "39528810-954b-4d73-940c-32d63b2635bd"
        },
        "item": {
          "id": "d78c03df-6fd4-4c3f-8128-ef96377bccb7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c64e14d0-c5a3-4c3e-a345-bce386b10752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3858f9-3da2-41c6-908b-3cb115676a8d",
        "cursor": {
          "ref": "e0e98705-f899-496d-b36a-4d593e56615e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c66a32fb-436d-4ac2-bc27-1320b530f423"
        },
        "item": {
          "id": "ac3858f9-3da2-41c6-908b-3cb115676a8d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "68a9547b-5739-4026-8aae-a24a3506c83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a114f1-a123-4e46-8e6e-5783a0291910",
        "cursor": {
          "ref": "e90bfd3d-8ded-4673-bbef-ab029538d2ae",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "16100d2f-f6c1-41cf-9d6d-3d1d6245dbe1"
        },
        "item": {
          "id": "b0a114f1-a123-4e46-8e6e-5783a0291910",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a0487a6-78e4-4389-b36a-b7ebabf51f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b1b70-db45-42e3-86bc-c2332a2688e1",
        "cursor": {
          "ref": "80a47cf2-9db6-4fab-9065-5f47bca027f5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e7714a51-eaa5-4a2c-8792-2add4978cf67"
        },
        "item": {
          "id": "7d7b1b70-db45-42e3-86bc-c2332a2688e1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "400ea286-aa76-41df-887d-0341e536752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bffd905-e77f-48f0-beef-818cca5e9578",
        "cursor": {
          "ref": "91ea9396-88cb-4eb2-95a1-38d1f7f38f6a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6fad8710-9b8e-4e20-a8ec-b6776d6050e0"
        },
        "item": {
          "id": "2bffd905-e77f-48f0-beef-818cca5e9578",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "54331968-5565-40e1-94cd-abb9f6e00649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02ce0ce-a933-4a54-8a9c-29bea4cd8996",
        "cursor": {
          "ref": "b43b7c9e-f82b-4224-b3c8-12071ce830ef",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12dfaebe-c910-45dd-bf10-d1bea9947435"
        },
        "item": {
          "id": "c02ce0ce-a933-4a54-8a9c-29bea4cd8996",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0e789978-7758-4d83-a55e-5463ea93a28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7b28d3-0e4d-4812-9ed1-4251f394c6e1",
        "cursor": {
          "ref": "78443018-81b4-4a23-afa3-36204e800843",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "577a3c76-0b98-4c6d-8ca3-cf7c4fd20cd3"
        },
        "item": {
          "id": "6d7b28d3-0e4d-4812-9ed1-4251f394c6e1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "822b2eab-a00f-4c22-a157-877df01a787c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0273d70-cc81-4bd4-a0ca-3d268bb92890",
        "cursor": {
          "ref": "52574678-7528-438d-943d-bb89c1b0d7b4",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "385c3f69-d9d1-4349-b9db-f37e59f71b39"
        },
        "item": {
          "id": "a0273d70-cc81-4bd4-a0ca-3d268bb92890",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b2e97d4e-1c7a-43e7-b11a-edb26114ed50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e3f89e-343b-4293-93d7-d1b5c36ba3ec",
        "cursor": {
          "ref": "61da838a-3841-4bb4-b124-3b0ba103ac3f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2e76dc21-0413-4dda-b5c7-f2518ae6bafc"
        },
        "item": {
          "id": "37e3f89e-343b-4293-93d7-d1b5c36ba3ec",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b0797276-2219-4230-930b-e74045e7448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6209bf-67ff-4ba5-9116-2618e4e6273e",
        "cursor": {
          "ref": "65eafe99-8600-448c-b036-2b6b7136b591",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4c717552-c513-4c99-b56d-94aa26282b84"
        },
        "item": {
          "id": "1a6209bf-67ff-4ba5-9116-2618e4e6273e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c9a5cc98-1d45-44db-a2ce-e00e17068105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24a1afe-b786-4b56-96c0-cfd0cdbfd601",
        "cursor": {
          "ref": "974bb020-440e-4b58-a874-bf0a3d4da033",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8aa02c03-3c95-4e48-84cc-72072274ec1f"
        },
        "item": {
          "id": "e24a1afe-b786-4b56-96c0-cfd0cdbfd601",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7af5ea5a-5f2a-481c-b860-3de6fac34b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4330b78-d98a-44b9-842e-e1b6c73412d3",
        "cursor": {
          "ref": "5dd57645-2dfc-4b0a-a014-5539fd35bc42",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "604a6cd8-8a5f-4eb2-8da0-629d4cfc79e7"
        },
        "item": {
          "id": "d4330b78-d98a-44b9-842e-e1b6c73412d3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c67861dd-e24c-45ea-a621-1015c16cd2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce3ff2-2aef-4ab0-aaf7-e886f3acc23a",
        "cursor": {
          "ref": "7dbe7231-fac2-4255-891d-c4a9d20f23c9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ef7e3fec-9c30-44f3-84d2-9d2b3ca23739"
        },
        "item": {
          "id": "d9ce3ff2-2aef-4ab0-aaf7-e886f3acc23a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7804ced1-92f5-4cde-a02b-5b9231ae1f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a57b63-67fd-4802-8e99-ae75f172b5f6",
        "cursor": {
          "ref": "ee323214-ddf9-4396-a6b3-c9f076e9ea2b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "88773cb8-d2a7-48b8-85c9-bcdf2bb08f3a"
        },
        "item": {
          "id": "70a57b63-67fd-4802-8e99-ae75f172b5f6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "90effdd7-6fcb-4575-850d-a0e25ad03c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37e3cab-cf97-408d-a5aa-b1a47114a72a",
        "cursor": {
          "ref": "f2f95440-4e56-4f36-9125-b3faf8204294",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b49985a0-a76d-4b53-be2f-102b504b7758"
        },
        "item": {
          "id": "f37e3cab-cf97-408d-a5aa-b1a47114a72a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f13cb934-9a9a-4808-a870-98fb4eb42bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfad1f5c-57b2-4e3f-af65-59417dac3d01",
        "cursor": {
          "ref": "3029881f-3c98-435c-9019-1c2d81be35af",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ec28414a-6f7d-44f6-b55b-d6dd60fbdb70"
        },
        "item": {
          "id": "cfad1f5c-57b2-4e3f-af65-59417dac3d01",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fd3a41fc-b2b0-4a5a-8310-67ea10871a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1df17c-bf84-4cf7-90ed-8488616c215b",
        "cursor": {
          "ref": "7b410480-5606-4ec1-9ad1-2a076a75d09c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "57fe990f-d3cd-429b-92a3-861d59f319a6"
        },
        "item": {
          "id": "5d1df17c-bf84-4cf7-90ed-8488616c215b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f39b4f53-4ce1-4f1c-9b06-0eda0faeb961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce3e3a6-6bb7-424b-97c1-d45bcbf0da97",
        "cursor": {
          "ref": "2b291dfd-4dad-456b-aee2-17e1241bad4e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "56967f25-7f8d-4257-867c-a8fc2b1c7cff"
        },
        "item": {
          "id": "3ce3e3a6-6bb7-424b-97c1-d45bcbf0da97",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "83894f6c-fe33-4938-b7dd-a6de1fd7614c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f246e79-7a7a-49f5-ae80-fcc65631c62b",
        "cursor": {
          "ref": "92ad9a98-dddd-4ec4-a1ba-3f53c2372c05",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9e73216f-7fd7-45ff-84c5-47cd661f793e"
        },
        "item": {
          "id": "9f246e79-7a7a-49f5-ae80-fcc65631c62b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c007540e-b5e6-4434-a9f2-ad91eba0f601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e4be9e-c2bc-410b-b9d8-9301b67da9ce",
        "cursor": {
          "ref": "02015ff0-f422-4942-9eef-61f9e2b895b1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7ab94acc-d812-415b-a11f-77ea98241ca6"
        },
        "item": {
          "id": "99e4be9e-c2bc-410b-b9d8-9301b67da9ce",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e92dfb00-293a-437d-9dc5-4b460e9e215f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6a269b-609e-4ddd-910b-a2162fee72ff",
        "cursor": {
          "ref": "dd9f5964-0824-45ea-a7a2-acdaec0504cf",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f6253c38-0111-40b2-b063-53ce22bf2651"
        },
        "item": {
          "id": "6a6a269b-609e-4ddd-910b-a2162fee72ff",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5938d6e5-00ac-4e7d-a0f5-cb6f8d81297b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2af0a5-f0a5-44c7-a442-c81ea550a4c1",
        "cursor": {
          "ref": "e4f5def6-328a-4f10-b2cd-9aeb8840dec8",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0b58090c-01eb-4a16-8841-08dab52bd1af"
        },
        "item": {
          "id": "1d2af0a5-f0a5-44c7-a442-c81ea550a4c1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a6ecb597-5ac0-4e37-ba87-a7b38fee0347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49eb8bca-d5f2-4a1e-bfa6-81fe4b09cbf1",
        "cursor": {
          "ref": "89818007-66c2-4491-b332-239cb640023a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2759153e-8540-461a-880b-7994c71c4a23"
        },
        "item": {
          "id": "49eb8bca-d5f2-4a1e-bfa6-81fe4b09cbf1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "31c850fb-2882-4566-8153-55d95d2dee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1452e8-c281-48ef-8176-c0c0d4fcba66",
        "cursor": {
          "ref": "ddcc28b7-42a5-453d-a5e6-00eca2f709bb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "954b6453-ac1c-4a82-921e-9b799cda1308"
        },
        "item": {
          "id": "4b1452e8-c281-48ef-8176-c0c0d4fcba66",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2001b4fd-e015-4117-94db-353cd29f3d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405b27f8-c7de-402e-aecb-4e7e4a8251c9",
        "cursor": {
          "ref": "cc40eb93-a712-49ff-98d6-2afe4d2c38ac",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "49da97d5-c9e1-4479-adf2-9b750e0067ee"
        },
        "item": {
          "id": "405b27f8-c7de-402e-aecb-4e7e4a8251c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "93613c8c-1469-4de9-9b8e-97fdbd9b7677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0b89bf-7b18-4327-8de1-f24ca36e421a",
        "cursor": {
          "ref": "f0652d56-adf2-4abe-9247-c1c40f847042",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "109deffa-263b-4567-9824-5ae99ac73b96"
        },
        "item": {
          "id": "2a0b89bf-7b18-4327-8de1-f24ca36e421a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7ce5524f-81d0-421b-9144-424fe7e7d6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf10d1f-559a-4f37-a3e7-b2c42b924c98",
        "cursor": {
          "ref": "52e8332b-605e-4f4f-89a4-aab9776c50e5",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0875eec2-a476-478d-bf72-acea4b69e5ac"
        },
        "item": {
          "id": "fbf10d1f-559a-4f37-a3e7-b2c42b924c98",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e4a8eebb-f28f-43cf-98ad-55e7fd6eedf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293cc77f-dd3c-47f2-8919-af9b2cb7fe6f",
        "cursor": {
          "ref": "c3269f6b-29ea-4e26-a5f3-84f5b1106afe",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "687431ce-91f1-4d34-ae4c-f8e26c45c602"
        },
        "item": {
          "id": "293cc77f-dd3c-47f2-8919-af9b2cb7fe6f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cfdde8d4-5b20-42b7-a660-ee8f72ede1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a1076f-b700-4634-a8c2-c7975471607d",
        "cursor": {
          "ref": "5915a593-cda9-4fad-9942-90148a2d8c02",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e8850cc2-b394-42d1-91e8-35ed2bb9c647"
        },
        "item": {
          "id": "b7a1076f-b700-4634-a8c2-c7975471607d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "515e29d7-4db8-4497-897c-a5277522e33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2fb46-8f5b-4092-af13-e7dff92f0f04",
        "cursor": {
          "ref": "d1fc8c90-5375-4192-9343-50a0e5a0481e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1f370ad2-9d17-423f-a05f-df23fbb5c283"
        },
        "item": {
          "id": "b1e2fb46-8f5b-4092-af13-e7dff92f0f04",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e5527278-86d8-4d9c-aeaa-9811e2671ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a47378-9818-427f-8c3a-deecde9b2a85",
        "cursor": {
          "ref": "d941301c-9187-4696-baf7-44cb88150a64",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "32317c74-b208-4273-8882-e0c49c394145"
        },
        "item": {
          "id": "35a47378-9818-427f-8c3a-deecde9b2a85",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2c446f10-73df-4d57-bf5d-b69ed4f83646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1d7829-d443-41f9-8644-d56576a104d3",
        "cursor": {
          "ref": "7783181e-f35b-49dd-97c3-a327c4f8b7c0",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "04159bc2-5749-4c63-9677-31594d6130cc"
        },
        "item": {
          "id": "ee1d7829-d443-41f9-8644-d56576a104d3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "67220c07-fc7c-4fdb-ad1b-85a9bbf6cb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad804b6-dbe2-49ab-b5fe-26baad9f4b82",
        "cursor": {
          "ref": "5f1367c3-6126-45a6-985a-84d7db2e346b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "79d6261a-1b13-4d58-b3d8-ec81349c0b43"
        },
        "item": {
          "id": "cad804b6-dbe2-49ab-b5fe-26baad9f4b82",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a021ca6b-e104-4eb8-badb-e60155d1e4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d05c35-7545-4209-a636-89cdabad1742",
        "cursor": {
          "ref": "2b73aed4-5d7c-42f7-908b-7570e5d3ccbe",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c18b8c79-a64c-49f2-b242-26aac395994e"
        },
        "item": {
          "id": "56d05c35-7545-4209-a636-89cdabad1742",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "290f40ce-ffac-401f-994e-edd817390d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77baf04f-095c-4642-a2e1-63b350b039f8",
        "cursor": {
          "ref": "e2b584c2-8dc3-4734-8d4e-913b18a7b575",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "165edab9-4f93-448a-92ec-8e573345b792"
        },
        "item": {
          "id": "77baf04f-095c-4642-a2e1-63b350b039f8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d871fddd-b441-44ec-89af-e1edeb59b487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b3ffc2-950e-4acf-8ae6-82dcee5bebba",
        "cursor": {
          "ref": "1fcd0525-8e05-44fa-9d08-62d6e94d7d5c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8800cd57-7a24-428e-b583-94ce90b0a4d7"
        },
        "item": {
          "id": "38b3ffc2-950e-4acf-8ae6-82dcee5bebba",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6d9a01b6-31ac-40eb-b068-a336213cc1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9291db2-7cba-4b1b-9336-3980b0cf41e2",
        "cursor": {
          "ref": "04dd07df-11ef-44e1-852a-ad6f4a329c16",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "316c0ff1-0723-4465-a109-f81ac2b8bb94"
        },
        "item": {
          "id": "c9291db2-7cba-4b1b-9336-3980b0cf41e2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "30e2e054-a1f7-4955-8a44-03c394dc4202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be7a3f3-4905-47c0-b57a-2b5073300805",
        "cursor": {
          "ref": "957b0423-87c8-432c-beab-8d6162be2ac4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bfc877a6-483a-4b9e-aa44-456a89ff1807"
        },
        "item": {
          "id": "8be7a3f3-4905-47c0-b57a-2b5073300805",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5b4f895a-e2eb-4a48-8cb5-37b1117b05e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19342de8-0e3e-48e6-b305-fcd4105bed36",
        "cursor": {
          "ref": "3b73328a-d8f2-4f8b-be62-0861c8332a52",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "93f44864-beb7-428c-8dbf-024d52ab1099"
        },
        "item": {
          "id": "19342de8-0e3e-48e6-b305-fcd4105bed36",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1b055709-0c0e-4bba-8596-99394094dd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5566af14-27b0-464a-98e9-39ac2b7d1bb5",
        "cursor": {
          "ref": "e3b6cc69-01c9-4b05-9b5d-1d7f6953e635",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d4532427-f868-4335-9852-58f04919e3e7"
        },
        "item": {
          "id": "5566af14-27b0-464a-98e9-39ac2b7d1bb5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f19cba7d-ada1-43ed-b456-d127ad38d282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a627042-8293-411f-ac18-8064253c2d21",
        "cursor": {
          "ref": "69d8c573-3bce-46e0-9b14-cc473ef49179",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3187e27c-e7e3-417e-88b2-2b538625d40a"
        },
        "item": {
          "id": "4a627042-8293-411f-ac18-8064253c2d21",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "307991a8-ad81-441f-8279-ee1e0af7f43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeae4bb-cb46-43ef-80a7-7dae2d4cb984",
        "cursor": {
          "ref": "428b0a4f-3385-43f5-b2a4-92e9ee10a837",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7fc9d89e-24ba-4fcd-8c77-2bfb3103512c"
        },
        "item": {
          "id": "abeae4bb-cb46-43ef-80a7-7dae2d4cb984",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "abb2bb5f-1317-4138-a853-80b0adf41adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a1e69-1f75-40d4-b8ce-7bd94048ac07",
        "cursor": {
          "ref": "b6f88574-c017-486b-9578-2ec148d81d88",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "06afa03d-d41e-4664-b5be-f6cdb5ab79c0"
        },
        "item": {
          "id": "924a1e69-1f75-40d4-b8ce-7bd94048ac07",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ca2def8d-68a0-4267-906a-b8525b8b81b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2aa5af-f6c7-4cdc-b3f1-63d54784472d",
        "cursor": {
          "ref": "ccd740e3-bfed-45d1-ac10-cf1189ed4e16",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "608dba09-f2e8-4c18-87d3-1ac947846a32"
        },
        "item": {
          "id": "3e2aa5af-f6c7-4cdc-b3f1-63d54784472d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9b010099-087a-4594-99d6-506d364f3552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b20209d-9047-4310-86b7-5b9dccd4e3c7",
        "cursor": {
          "ref": "16cd6b48-7333-4570-8e1e-de202e228f2b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dd8ce470-8a3b-4314-9fa8-0110546567b4"
        },
        "item": {
          "id": "6b20209d-9047-4310-86b7-5b9dccd4e3c7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7a0a7189-4b67-48f0-b3d7-879da66287bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa6cf30-b9aa-4800-b383-25639be13673",
        "cursor": {
          "ref": "5b7176b1-9d3a-42f5-97e1-cc34b6084d1a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "16d980b8-7dd5-43df-8ac3-1adf96ef16e2"
        },
        "item": {
          "id": "7fa6cf30-b9aa-4800-b383-25639be13673",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9f5defd8-7541-45df-982a-146837f71de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b555ea-dd70-4b16-98b9-ed27ff22671d",
        "cursor": {
          "ref": "332e6adc-dc26-47d2-9f7d-859520a8e696",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "60254e97-1c6f-4335-acb7-5dde37a3fdef"
        },
        "item": {
          "id": "a1b555ea-dd70-4b16-98b9-ed27ff22671d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d4ea4a17-07f3-4a72-aa91-09874c334ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff17d84-bab3-447c-858e-df4efa33f7f9",
        "cursor": {
          "ref": "cacdc29f-759a-4d55-8e66-92875e119c52",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4a4db5d7-030c-4294-96f9-41beb161ce82"
        },
        "item": {
          "id": "0ff17d84-bab3-447c-858e-df4efa33f7f9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3f1da15b-d504-4e05-931c-00ff5f730dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52e23a-fb38-4883-8f6f-c92d14d994cd",
        "cursor": {
          "ref": "25c10c87-39ae-4a66-ae13-b23659b84353",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d3b1ded7-1296-4685-8b60-8d017009b188"
        },
        "item": {
          "id": "5f52e23a-fb38-4883-8f6f-c92d14d994cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "670fec82-c63c-4190-93fd-b64c9b5d53e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7908464-8258-4930-8a4c-50407019c07e",
        "cursor": {
          "ref": "84cf43f9-a18b-4cb4-b811-7ba11b20b3ca",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eb939ce5-6711-4ea0-8cb8-293464c3dac3"
        },
        "item": {
          "id": "c7908464-8258-4930-8a4c-50407019c07e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "33bff39a-3227-4a78-a51f-11b153891097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d86794-0ef6-40c7-9ca8-fb7f28404b94",
        "cursor": {
          "ref": "2942e2f7-17e3-4f3d-b2ba-04712f4dc184",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ebeec769-72d0-4479-b892-3f9bf96ea0f8"
        },
        "item": {
          "id": "27d86794-0ef6-40c7-9ca8-fb7f28404b94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "48b203e6-2df2-43fe-8fc7-304d40f6c9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb353ea2-2c75-4898-9447-5bcfe6c77f8a",
        "cursor": {
          "ref": "e54e4f36-be94-45eb-af28-0bb6a9072c4d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "039571d3-a8df-4c2c-a55f-2934363fbc62"
        },
        "item": {
          "id": "bb353ea2-2c75-4898-9447-5bcfe6c77f8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d29b2284-3be6-4911-8315-51d2ff429917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bdbcab-02de-464e-86e5-8bbfd533ac6a",
        "cursor": {
          "ref": "ea9f1ca3-881b-477e-ae0b-e3a6d6d16575",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9d6c54f8-afd5-49cf-993f-d6eae7be49b3"
        },
        "item": {
          "id": "c2bdbcab-02de-464e-86e5-8bbfd533ac6a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "19d1b9a2-f366-4286-ad97-b0d33590df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07181db-b090-4a7c-9291-0e1d37ad2037",
        "cursor": {
          "ref": "2f4f8b66-9ccf-42c7-9928-dce060f0e7a4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6bf94789-aea7-4f76-b651-f38532dddf0a"
        },
        "item": {
          "id": "e07181db-b090-4a7c-9291-0e1d37ad2037",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b969c0e9-29bd-4e11-bad1-295f6f25484c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae0f9f3-69a5-4056-af75-0d30f3e97003",
        "cursor": {
          "ref": "32ea136c-c473-4e23-ac88-186f9b75ebcb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8824c3ab-e1ff-4c86-bf8c-ab6437497184"
        },
        "item": {
          "id": "4ae0f9f3-69a5-4056-af75-0d30f3e97003",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09698d33-b315-4d8a-84d7-0847657b869d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469d3f07-08f2-452a-a884-2651dcecafed",
        "cursor": {
          "ref": "7bfe281e-bdd6-4bc3-b55c-d9bc5f76abc2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "89a0a73e-1f85-4ddf-b334-04841206de35"
        },
        "item": {
          "id": "469d3f07-08f2-452a-a884-2651dcecafed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e5b3b86-51bb-483f-bb5e-97fc01b46303",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c96129-46db-48ed-901c-e67b60833f36",
        "cursor": {
          "ref": "d9a5e87c-e25a-4421-b3cf-42f7f154044f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4675f14c-b5e1-4868-93b2-190c75cc1a33"
        },
        "item": {
          "id": "c1c96129-46db-48ed-901c-e67b60833f36",
          "name": "credentials_verify"
        },
        "response": {
          "id": "59034894-1fe1-4758-90d4-ae96011749e5",
          "status": "OK",
          "code": 200,
          "responseTime": 2927,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6713ac4a-23c0-4378-95ed-10a71562e56e",
        "cursor": {
          "ref": "520fd958-f3c7-4f20-bae6-e219858dffbf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8d635646-ae9b-48c4-826b-d64e14577630"
        },
        "item": {
          "id": "6713ac4a-23c0-4378-95ed-10a71562e56e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3f8e1c65-0fab-4fd3-8786-94fce1b63f09",
          "status": "OK",
          "code": 200,
          "responseTime": 3233,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e147cd67-81d4-4ff0-b2d9-91738a22b6d9",
        "cursor": {
          "ref": "afcc0c84-01d6-45af-9188-d0eebc44de2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f9d60492-2b64-4b0e-9f37-7323ff9c19c5"
        },
        "item": {
          "id": "e147cd67-81d4-4ff0-b2d9-91738a22b6d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7adc3bb-c74d-46e5-8973-7cf52d128de7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e147cd67-81d4-4ff0-b2d9-91738a22b6d9",
        "cursor": {
          "ref": "afcc0c84-01d6-45af-9188-d0eebc44de2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f9d60492-2b64-4b0e-9f37-7323ff9c19c5"
        },
        "item": {
          "id": "e147cd67-81d4-4ff0-b2d9-91738a22b6d9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d7adc3bb-c74d-46e5-8973-7cf52d128de7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b01559b-fcc2-4ec3-93bd-b4caf51d8d72",
        "cursor": {
          "ref": "fa414f78-d80b-4633-b5b2-41daa205d35a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9d704eee-ee6f-4e7e-b648-9d655e234faf"
        },
        "item": {
          "id": "7b01559b-fcc2-4ec3-93bd-b4caf51d8d72",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fd645480-f679-4335-9616-6c6990cf1c9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573d0642-1147-47b8-9277-de42ac5afc8f",
        "cursor": {
          "ref": "20a36f55-2192-44d0-a27f-d6f6319ec891",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "10f33e68-b55b-4bcd-b670-e9c229bf492e"
        },
        "item": {
          "id": "573d0642-1147-47b8-9277-de42ac5afc8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73278100-f167-44a6-a8d0-de8c9129cc96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}