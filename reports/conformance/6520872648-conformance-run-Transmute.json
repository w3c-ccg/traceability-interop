{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c05cef7f-92cf-4fea-8f8f-b3cd429ed33e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d4525cd7-3dcd-4e5e-85fa-4fae8d08ee8f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dc13f17-3100-4d95-a9a4-54dbc50f9728",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "721b145d-49d7-4865-978c-ac541c9e92a7"
                }
              }
            ]
          },
          {
            "id": "a8c35b00-80e7-4a0b-9027-12574223db60",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "690daf8e-c216-4102-a973-6131904768f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bdb2206-1ed5-4a64-b48f-014b916bb7e4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "08faba7c-5eb1-4dbe-a7fd-d5a1032b2043",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ed0ff26f-4485-4cbe-8ee1-013f9f904a0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a793f700-7c31-4fe9-a3c5-e0241765aab1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "98b5d416-2fa6-445e-b135-c3762d60d990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f32b289-b322-45b9-b5a8-db59b9a4bbf3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d42a57a4-0f55-49d2-ba44-2ab73ed275ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b32a56a8-3bfc-43bf-a094-fc3204b5ae1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1372034-8d63-437d-aa4f-7a7ebadc9992",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb1955fe-eca5-446c-a3b3-bd6f838e6913"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc06bbe-4465-4ba9-9396-12bc993fa2fe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "85fcf1d6-279a-4a3a-a60b-4c7ca55dc991"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ad50b11-516b-41ed-ac89-85c0050655f9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c34f4d1-28f6-4b86-b176-d915d50bfd0d"
            }
          }
        ]
      },
      {
        "id": "2ce0811b-152d-4011-8c7c-4aab67682734",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dc17f5fd-87cb-43e9-b87e-d678b6c84710",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cf4012c-4edc-4a1d-951f-038b1f9772f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f0ad82ea-cf5f-4260-bec9-adad071ead41",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4d5696-92eb-4a3d-b0e8-5455285d15f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15fa0393-cfff-4af2-aaf9-75e765e9cefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0046544d-6acd-40ca-a721-1a8071d5c05f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dd6d1b-566e-4dad-a116-954c13e2ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e03b3d74-2d33-43ce-b361-c75de2518907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384f01aa-f8ea-4935-80b0-745da498ec6e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17fb0f2-4fb1-49d0-ab4e-95eed04ff10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee53568b-878d-4c93-9b19-30a74a578049"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ace5119b-2389-4945-9fc3-3dc729982ec4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "020506f8-e8f9-46f1-8e01-7e32267d0b17",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e304df4-763d-418c-9586-bce19c900946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cdc4a68-286a-4310-a6e2-a7a2fb9dabb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e733946b-0894-463b-aefc-148b22411c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6025d3bc-5a1c-4612-9e87-d4d3cf43775a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e0a9a716-a044-4bb5-96c8-a00cf7bcbb01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ade08090-9e0f-4095-b132-ab2127bfeadd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7a9ee16-b7f8-4fab-b689-740fe40c5531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f58504f9-8b00-4ed7-a77f-09b5ab153404"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3b7dcd5-6831-44b7-b2ca-d8e887bf7ae6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d21999d6-a2b4-4b90-83a5-7aa7bc2498a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90d3a199-6918-4ee7-b90e-4f3f79b67b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27a067a1-31cd-4ffa-8524-71f3458930b0"
            }
          }
        ]
      },
      {
        "id": "fff4763e-31a8-4eed-ad40-02b5cd21354e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2d213e74-5e3b-44e9-b3a2-16468f5550ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "430a685b-1e2b-4e02-95f9-1dd08eb19876",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3320114c-96a7-47e3-a984-ffc82ffbaccd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decdf5dd-d99c-401a-9dc0-b3a1a403f55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150305b6-86c7-47b7-a6a9-cb2e62ed3b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69b3eb2-886a-480f-86e5-25244be6f7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce765c7c-4051-4276-9757-5c0597a5ed5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1681c79-c1fe-4717-a223-0bc902f7abec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1548f-c6c7-4c07-a142-84d50b1df97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbea148a-32b9-4864-9d3a-db8f5bdacf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000fe7f0-127b-4d61-a4aa-eaa21823cab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f21268c-7e2f-4dae-b331-02db455669da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f4b9d-679b-4003-b3aa-89be038c19fb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c73f02-a49a-4082-ad3c-6d5bac9f37a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a6a98c4-cda2-40c1-b194-52b481233cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb375d4-042e-47a7-9aa8-1cad2ed7f84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbe6fb41-9db3-4770-a65b-4fbe30341c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22de84e3-991e-4397-ad1d-efdc86821a4d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbff5b6f-4337-487b-82d8-287c8d0d3c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139e4758-cb04-4450-9e90-f8929020d410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d01299-8ec8-4e00-b8e1-60faa282df73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b36bdc96-7433-439d-b9c2-138fb6c7110a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2407ca-635d-4d93-a4a4-c6b40b686477",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7babf85-d8d1-4573-a628-0ad8c81f0350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bb9d77-82d8-45ac-9a15-54a0ac9d8473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01f7a1f-8860-4891-9052-1f2353d5fd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72df7541-4ce3-4f54-8a5d-8e4860ebe487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd741f9-e82d-44bb-83df-138dc386a320",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a017e05c-3ac1-4719-a1e4-d2fdd8cd71fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddf8da5-681b-493c-9998-235caf08e3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1333ea08-eca2-498f-9c42-cc29037be539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b2a1ae-35b9-42c1-a0df-bd6aeafc85a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225392b7-e184-4d24-8074-486ae7c248b6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e7df6b-4485-49d9-9905-6708b28e8068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b22fc13-1700-4682-8b08-4b26292c82e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13184c0e-5f78-446e-ba09-a3121418c8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9c249aa-bb70-43c8-934b-54a12964d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa77503-19ed-45c7-94d2-2ba8e543a303",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681d503-9349-4698-b427-4df7589e2323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d7ddea-d70d-4e5a-a151-b06c07080c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680fc545-8944-4c0b-b58b-30bef74266e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1687031-acd2-435e-878b-a0abf98303a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b11354-fce0-47f5-86f3-bac4234ac980",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b506f8-7cd4-4f48-8209-18f0cfd3c285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1a6cdd-ed7b-4680-be19-b719e4e739bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972a8c8b-cbe7-4780-91f3-6d59e70ba535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89ffa0bb-da85-4546-8466-01e2fc56eacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a767ae52-01af-4928-bd82-82bd4aecab5e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f612f9fe-b40e-41f2-949f-c5be06e8286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cba0db-79d9-4f45-a91d-8c7a313107da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f65d8d-b718-4310-b879-146371c82962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a55c6c2-e736-4f65-87e6-aad51ee4c451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584d9ce1-41f6-40ae-a2bf-0f7be3f61ffa",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446c6fc9-fe29-434a-9ad7-c9483bb9379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738e69bf-71e6-45e2-8a81-dafef7b528f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a001816-5ce5-46eb-9452-643b9d96d3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "154544cc-b9e0-4cce-b224-aa8967740b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4ec57e-a3ae-4931-a271-c86d9cf508c3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced287d6-72b4-4bbc-9a7d-4e07d67b177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d28f0d-5b7d-4c2d-8ce9-a016ed2a6346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633b9d40-fced-4ca1-806e-a42b0b396155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e75112-63a5-4543-813a-ecd5ff6d6807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8ee472-e2cd-4527-873c-72a4c8868c88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cae2143-1c1d-4c83-8c9b-a9100b601926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585b39b5-9735-482c-964d-ae0b6426ba0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c167e2e-423a-46fe-8ccf-c2ca178a6fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2cb7e7-b828-4dbc-a5b4-188e104c0892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce94910d-c853-4b13-ab62-153c3176d30c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6354888-02f3-487b-a628-a04d0f511960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c6d79b-e5e3-4ace-98c8-c5d102d421f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe9eb7c-705b-45c8-a61d-6f4de94a15bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "484d5a72-44e0-44d8-9f00-7240272cb3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53a2554-c106-4c62-8ae2-0d24da43139c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e014173-d9b3-470a-a6bd-5ad972c26232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7847ffa-35ec-4e76-9146-090b1b37ffbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0036c0f5-e11d-4eae-9d0b-6768040ebfad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bc1e7fa-157d-402a-88e1-48483ae68616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ea2132-bd1a-4ace-97d4-48e23ea97537",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afed42c-38b5-449f-9d3e-1a4a615b34fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae633712-637a-4b38-b0d4-f1aff50a3d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b94019-a7f7-4551-8048-d8ac14d511aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb92ac7-116b-4839-bd75-75bb40d9f093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d736195-fb94-4244-b1fb-df66e2d220ac",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90168b2f-682d-40b6-9678-03594cee78ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e826252e-bc11-4f48-afbc-2764dc0c6b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bd4289-3393-452d-854c-84906ddcee53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85c63fba-fd29-4411-9d33-bebb2d7add10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc820bb1-53c6-42b4-b453-b54dcd423b67",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90f3a9c-81d3-49bf-9e43-9e38f5a3b90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa51d36-0f68-4bbc-b55c-544d6e210dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815898a0-82fa-42a1-9599-7b4e9507ec31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0504c9d5-bfcc-4ab4-83b6-90dc84435074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9344eb9-5c5a-45aa-846b-f2a261b75a41",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf42415-babe-4f7b-959f-acd45efd22e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aaaaac-b95a-4e3c-95cb-1ef99f34fc15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f863cb7f-6faa-4e18-9201-a7253740b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a2ae5f-9adc-4a6b-bb27-8aa82a5ce532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3b8275-1ee6-4718-bf8f-93e84afb53f0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8a27e2-406c-436d-a7cf-c99dc0821a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629582bb-b8c9-4717-bc05-fa9d2cf9eeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc43c4b-1c52-4623-bec1-30a50832deff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8a73dc6-d6c6-4d18-a3eb-7cfcb2f8be55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dc83e9-c618-4510-9a30-05deb6a3f75d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aca533-4052-4249-8fc9-ae23cf933abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8773e6-cef3-4573-a74d-854f6fa24fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34f6f3c-98f6-45f4-85e7-1b38f4c7c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42cde65f-c246-4cac-87e3-71c1dfef3d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d399969-403a-4d75-ac28-a303406c8505",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e30c86-89c8-409e-9535-0a4a6c8eef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352fd2d3-9743-4d66-944e-554b4a1f9c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1fd199-c700-426f-9776-5aab1ac74fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62ecf1c-8eba-4452-be73-22be436a81e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60b60ea-6dc2-4220-986d-744c94f56e1a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aef2f6-6e2f-4db8-a497-802c99208c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f789735e-c3d8-483b-9f8c-05716278cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ea38ce-f970-4ef8-b303-cef33b4fb63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5984dc18-3314-4d4c-8028-24ef41ed3c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052a747e-952e-4460-875e-0c5b1ed6776f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab45c179-f306-486d-9a09-b9b2f7550d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139bf5b3-e922-4755-8c46-4950fb2d199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23008f55-59ac-4c88-a9e5-be65fd793966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "267c99a2-c160-4ec3-ac36-0029772bfed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57edc6-f24f-4442-90a0-19429c8f1748",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f2998e-0b97-4a92-80d7-e2b47a0eb491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ab1f2a-55a9-4bc5-a896-44f503530995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f11b07-0bfc-4477-aa1b-b941cb209a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e03cafc-be54-49c9-af7d-58e4b76a41fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f8c919-a9b4-4870-93cf-a7917d28ccc3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2ee8cc-0324-4066-9238-12eea58011cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db628859-d5f9-40be-9dbc-52ac343a9b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e708ab4-2fcb-4826-9a08-49b90befa392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30536809-09b3-4a46-9257-a8f7f500c753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e46bb80-e38a-4529-9e7e-ead2c0f0a6ad",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4959ff90-0606-459b-afcd-c91f62b2387a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4c4ba1-15ce-45df-a1c0-b5b3152bf1ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23edd65-0842-413e-95f9-4da415547e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc097ae-cd18-4116-8392-58c90feb6943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b448ea-8f47-44a1-b0a7-023c2c14902b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35b0225-5d30-488b-a71b-0e53e2d2ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7f0686-ea2c-4e5a-a699-4f8524398d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23b7630-5409-48e9-8983-3751918ce0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e77b1b9-6820-44ce-bd5e-5f7a69bf6789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35151d48-0154-43f8-a5c0-9752d7f71051",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ee3e01-e448-46b2-bbcf-adbb76010fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23aaa294-fb3b-4ac9-952e-52dc84512610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153b4d92-49e9-4cdb-b0d2-849c38390801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15aab5f6-8535-4967-adf7-fec611c9730e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e7bd23-895b-4e1a-9c80-bea79466b87f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fad9398-ac20-46e8-9846-786146508519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee1291-6048-4fb2-95fb-f2433b414b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85426f74-58dc-4780-bd6b-af74560b88a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85f000da-00bf-4776-8378-dd63ec95e6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfd2c56-ad84-4bee-98fb-3aa7dafa5ea9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa2154b-18e9-4fd3-a530-353dcde800ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9349668-0ead-4e89-aec4-5854bfd73567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5bdb00-5246-4972-b210-6f35a8a55777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "399f295a-9237-498e-80d4-fe9861aa063a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd31bd58-c9a1-42b5-9517-fc66976c5f67",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abd9524-1ea9-4ea6-9039-9d84f149269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac724289-2630-446d-90d1-beb2dff2c39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043bcfc6-d370-4fe8-985e-f856ee672f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7358af71-89fe-4d77-b8a0-14eb2da44953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb1b10-790d-43a6-b701-3e5280a03722",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15744c90-40c9-47d8-b122-78b4959c122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdebb843-9453-47a2-bd26-daacefc08de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5ed1b9-3681-4469-8239-187f811a9a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a4209f-ee00-492b-bec2-26ec2cd29ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564b8f00-5b23-4d86-a707-808da7e878bf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6bd7a4-1bcc-4362-a4c0-915f39fbf67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5560ca7b-5bf7-4b50-9db0-1f176c52a9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3a461-6d61-4ca7-bcc5-1599cd1bb1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e1aa7b-f67d-491d-86a0-aec03e467274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946eb9b2-e63f-4b61-9efb-1d85b475f443",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b378b3d-9453-4a96-aced-9fa54767cd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570b568d-a22b-4ecd-801c-e8db0e671aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cb291f-0b5e-416f-aaa2-0c65dc33883f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e1eaab-8d29-49c6-b459-775d577a89a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fc2652-ed36-41b9-9a67-bb59d37c7e4d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5871b4-43a0-40b7-9ebe-94f1afc036e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35ae6caf-23e8-4579-84ca-6463bd8b76fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98718cc-62c6-4b50-a2cf-48ec90e87c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08c74767-8b8c-4af3-a7b9-631fb62645d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940d880-c71b-43b8-8b81-8e7ee4a6a2c2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05851869-069d-4f1d-9d7a-4e945e8db3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc5ee62-93a5-42e9-adf4-2f945a830a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdebcd12-c79f-4dc0-b777-13fefaa7f94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5a2a0f-4dfe-4d79-8c0e-adb78b0f89ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989ebb93-6fb8-4188-be41-a776852a1228",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bccd51-1722-4360-b018-05f4ef67157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f4f08f4-3a9d-4a6c-bceb-190d99c09889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a58493-5114-4b4a-98ef-431a0770e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9335521e-dc58-41d2-8d7e-15619d4481d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b284f66-6f6a-4eff-988a-e9f68306d74d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93a444e-76fc-4134-8475-185532055089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7ba873-f630-4465-8961-71a0cea6b777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a2d0dc-e43b-4c3e-9207-5342c70fd4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "582d705e-d06b-4190-bdc2-7bc67645c0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e07176-f008-4eaa-81eb-8125b031c3b5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8854e2-b02b-4297-891a-37153ed7f7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e75814b-70de-4806-ae5d-bd44447d92c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee038290-d8bf-46e0-9da8-5ec3dd52c21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "42324364-170d-4b0d-8e2e-97898f341dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635de6c1-19f2-4386-9100-3e14ca82f4d8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b3ff3c-d104-4895-8011-a01ab58fb313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a9812b-5f1e-4627-b2df-cc3075e65e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850934d4-740a-4c39-8ab2-fc979b89d8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d487ea-e240-4f03-8c7a-84fa00fc602f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05df110-a706-435e-ae35-d66c15e9680e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6308d0-812c-441e-a854-44c617dc1bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5a0d92-fdc9-4f96-9d57-d12fc21969f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1827d41c-b9e3-4e75-b5eb-3726d8756396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25f09ea3-a765-4c23-860b-7c01021d396d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82eb193-abe2-47a4-ad2d-1f9f5f80fbea",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1cf3a2-7034-4435-95c4-cec67613043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fe1ec6-bedb-4936-8032-1ac6623bbb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708df1f8-ad95-49ef-ac45-87e2ed8e4ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "69df15bc-accd-4440-a77b-7b98b7295437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cfd0f1-0159-4bef-93c5-d43d401e7141",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0250789-995b-48b5-bdb0-955e94426bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24df3ea6-085c-4aeb-93ea-197a22c9451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187fb712-bbbf-4cda-b8ac-45dc9c34a322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d22651ea-d1a3-4100-b6e6-94a5076b5356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9253edc0-7e41-474e-8129-719d84c7707f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a0c1a4-eaa1-40cc-9658-0295d744d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6702800-3a12-4218-84f0-940e4d66d3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abef8d3-e414-4970-a884-4cf60c4ae7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28807e2f-9aeb-4b07-acc6-b64c96a3c39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b87d26d-df14-4a6f-a153-abc41c862cbd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3192f88b-b17c-4f2a-9a3b-185e7d91dc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb30fe8a-df2a-48bb-8208-1a6ec8113136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d8db9e-4e4f-417b-bf84-2614a3d4715f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c739d50-24df-476e-89be-1b3fb75535cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b0549-bbd0-4ec1-9948-f10aa2490861",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5fb96d-7ae8-4f56-859c-b9623b29a34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef7a30f-51c5-4f15-80fb-a0492b706076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bd3efe-a22b-4eb1-998f-d90d51cab9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11d709ca-a7b4-4e35-81a8-9dbfdd7d58ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "004b3dec-fe7c-4169-8f33-85bf79eaf729",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fd4514-b74a-473d-b651-bcc286292d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43032465-ab1e-4a59-a3c7-1514bc125033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086f597d-d597-4326-82c5-bffa0eb52218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e72392b-103c-47a2-962e-766cd4732dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6e67d0-3190-4a7e-8e0c-be3ddd2d5d0c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9fef55-a548-4af9-a6ad-9fe78d308a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5074c291-c761-4109-bb14-0e23fc11eb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de69aa61-051b-4b11-be66-d65f235d5b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6d4a91-7736-4efe-aef2-b57fb5b92000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d889e2-f184-4080-b677-b6be96fe99c0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8654ba1f-5216-495e-8a86-bde36e560523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0a0e92-ae9d-4ccc-8a9b-ef65f2bd75ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ed973e-0912-44bc-affd-68376c5907eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c577e3b-b5f4-42ec-b7d4-88dfff931d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28eef8ae-67aa-4ac7-99cc-5220a198091a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdd3dfb-ae9d-4c30-a04a-b5676bee2353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3081f922-ce04-46d4-ac1c-e86e4548a82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb549e78-5815-475a-824b-93aa3a637565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d18c2c3-1800-4e5b-8e20-63c5eb0d1ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d537dc83-1fea-4644-a20a-82ab8fd9abfb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411d2aad-fcfd-4289-8ca0-2c9daa7f5a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c834a3-50ad-4e41-b96f-5f938d06c8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadaec34-de73-4c1e-992c-fbc89eacf27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "338ffea4-cc6e-46a5-9a98-50cd1ff17de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd89feef-6f0c-4842-8cd8-5ec07858d523",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7920aa4a-d74a-491b-a785-9010535ae9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ffe46a-9932-4729-8aa1-071a11d93b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e8ce65-ceca-4b88-a296-ae8f451e5d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02080ceb-2a2b-45f7-b8e2-d6a62666776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892e6d4c-0f29-4e4e-bae4-abf065cb4bce",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353c9cee-5b3b-4e5c-910a-e9cdc07d0554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67757457-09e3-479a-a5a8-5e6e0e025e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993040f1-3c9f-4d98-8272-24ae8b55884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "621131e1-9278-4e7d-a663-b53b6d735a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191209ca-81c7-4d5a-b4cc-1ee9d3459c4a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f923bd-5e5f-4272-b0ee-38d568d8e81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9616f1fd-803c-434e-b9c4-86219ee53e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf47d4e2-66ed-4f76-b7df-9c0a63b346ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11044109-71e5-435c-931c-078abc0db892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28b7278-4080-4a5c-8f13-c1ab37acee20",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16af55ea-34c3-44d4-a0d6-13b859637fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b959d50-ef4a-453f-b655-95c45e321741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f094c3-fd1c-4dde-a95d-527e616b1f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f26d3822-cb0c-4f69-918b-d573a0766cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0caca194-750a-4fd2-bf17-5d27bd9893fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937fe4d4-6e86-4a79-8bbb-ecb1c1db04ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4f47ee-c064-4906-9674-9338a4b93d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c902e663-4df3-4d62-9390-86428a9cc4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21999ac4-cc39-4099-bf6e-9028079d6c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d26a848-1417-44e8-a117-c2fe3cfc9a64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a45b67-8be5-4dc6-9f46-7e5b2362bc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0761671-13a0-464f-8834-29dfc40c7275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae134770-be0a-4851-8659-f3201684c3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c36f2f-831e-45f5-b75f-0fe4e0266d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b952e1-3880-47c8-a52a-5d474caee99a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e0ff57-f89b-43e6-af3b-b192b5da0da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37669684-2d4d-4c1f-b00d-bef6a604603a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9b39e0-aa17-4b7e-b15e-e6d317fb8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ad9486-2635-4a87-aef9-5d4c5086de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da40d6f-1857-4eca-be15-bcea43091c41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db7c6c-1026-4a0c-bbaf-ee84f017b70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60270f1-1284-42aa-95f0-03f7acb130a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0fd0c8-1e32-43ed-8faf-e06dfa233b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "91052f7a-656d-4c5d-8966-1b24aea46ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf8a93-a00c-4c50-8434-a7f0fe0d8c23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b566804-e86e-481b-b390-e2a9770c46d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074ce684-220d-4f3a-9e10-1b5ee3fb935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15967d27-adf4-4dc7-b30a-d9848c6171c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d33e16e-a972-4f84-b472-56ffab74b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b50c0f-c80d-43ae-a95c-811eb9eaa76f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c053d6f0-8e68-47cc-98ea-73159e18f99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8de7c1-bda4-43bc-8f9e-2821c2fe253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decd4f5e-637b-4134-bcfc-b7368da058dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "00968018-f36d-42d2-8d9b-232104410ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2147c9-e9b2-4bc1-bebe-e40dabb61832",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218e033c-7c45-4244-b579-d5e9ae9cb88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e6569d-14f0-4dad-900a-5300a10af8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff48fef7-244a-4f6d-bb36-5b6c408ab382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10206dd8-0e29-4633-903e-19ef3fd40dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883551d2-d707-4164-8a5f-6122662b0aea",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afa4e12-d4c0-447e-9a2e-a6c374b5429f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485a45d2-9bfe-42d6-8ef7-fee5cc12c761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e1f21a-e827-4239-9af1-0d1f71d757b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c0acff-9ac6-4d38-999f-74b4196b9e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e38900-7221-438a-a5d1-a9daa0308ca7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8648d6f8-b1c4-43fe-9703-8ebbd734e8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191ab575-8193-4b33-a7f0-08a642284f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dd6876-3b3f-4a09-87e8-0cfc45eb75b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d73a145-0a9c-4f38-82d4-9dff8efaf0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ccc5a8-28c9-4ce3-b358-a4adbeca7189",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155254f0-ed11-402a-814b-6b2cffea1a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a33c68f-7c87-4459-89bc-a3406ba74060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb77461-4e3a-4c27-a9f1-0e34ac76b224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8d630f-d936-45d3-a648-d55cd7f1389f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e31e28a-6ab8-4bbf-adf6-17841e6e7d26",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87d662e-eb9c-49d4-adfc-cfa49be4ad7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a22d35-aba6-4285-a098-fdb5af570cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220b8941-5e92-40ef-ad67-7d0c994a845a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f362a86-38f3-4a64-8c0d-5bc83dca95a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da11e1c8-a368-4a90-95f1-292644f29f3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e58307-0510-4ef1-b7ef-ebd8468f90d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aeb0fa2-2e9a-4102-8246-fab05f60b56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683c6b58-f502-45d0-9241-d14c8c3050d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8043f402-8889-4995-bbb7-9cb75b0d1df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68db17b7-16d3-4f88-94af-4598045d31fa",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67894c86-0139-401e-be82-148eff4cafe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35a47d5-7cbc-4048-b831-cdf1cf2a244d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5250da-c4ac-4103-a5ed-e0ee19666398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24b80cb-aa1b-4e83-aa2c-95de2245207d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff97215-31c7-4b0f-bf7e-0d39accf74ef",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a65cd-33f6-4aed-be7b-5a33fba56061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c163ac-9f7d-4c69-892d-0a75e200c475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8939424-abf0-4749-9968-f830e9cc74c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d57b7ff7-2eb3-4e04-84f2-e2cde603785b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf73cf2a-54f8-48fe-b05c-2a7121e70584",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a733a2da-088a-428c-90d6-22b79140a67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4990b870-796e-49b4-9fa1-3356f2fc3b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ccfe9-4b76-4992-a72a-e825ae6dc649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0edb943c-cdcb-4835-a426-4ed62c7de0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf34f4-6c2b-497a-979c-df42ccba6fb4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3c37bd-354f-4a5e-bc52-ada5415708f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a099f8-7c96-4bc2-ab5f-b6eeef7e9cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c2fe47-9f35-4729-b992-a63de2891012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5349293a-9f70-406d-9b01-66438ce3d518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a765944-d9d7-44ba-a144-c0d3ba10f500",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20dfa17-cd19-4b82-ae04-2162a84daf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd20f05e-e00b-4e23-a85e-f56bf7591ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa981f35-39b1-4372-aba1-032a40fe1b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b67927-82b5-4db4-b15b-d28db93f3fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20957394-0250-43e0-bbde-d07be12437dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1457524-ebd7-479e-b695-7b73c4e3dea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4003d3ac-da58-4251-8db5-0c2fe5579c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4618ed46-98b2-44d6-80ac-9385d9b2f3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f937c966-e592-417f-a1b0-940b94f8799c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71ef21a-da61-425e-8ac2-fb2627f909d6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996846f-5492-4200-9395-6d4ec6605277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a37065a9-ee51-4227-a994-486955b3ad44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf169fa-6220-4869-ab55-a2ed6d15d7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "241ddf33-731d-42d9-81c8-d871ff35562d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc1a725-73a8-43ed-955c-8a4089190af0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e04e11a-1b1a-4cdb-a5f9-d5bbafc82518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f220b0f-0b61-4cf7-8298-ea18a1b43458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b25ba26-ace5-4610-b636-cf429c3dd9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5a416a-67a0-4565-92c2-850ca7b2782e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143bb8fc-f025-4fa5-afe5-85d35a95e9c7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e09ebca-b0ac-462b-a773-f5ca6f3afe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4650f25e-233e-44db-be16-a06ce569d7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70575baa-924c-446c-9f87-a6dc0c769d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c023f96a-0421-4256-a3bf-d084c0a223e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b253c9-0098-4d5a-b625-7aa5a1a969ea",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63db965f-399b-4852-bbb8-0a3fef4e41b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff1c5ca-3b9d-4a3f-8183-e0f9d26d3fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0401059a-87c4-4ede-808f-8f6a7fb95de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27e2496-6231-4188-b94c-6e2986a4bd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a3b06-dcf5-4ec8-bbc7-463d82873f04",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3df48fa-3428-4f45-8693-f6a0728fd274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7847564e-4f60-4389-aff1-a46b78bbe247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383c63c7-028a-438f-bb8f-4a6c9dae9921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cda28fc-30ea-4db1-944f-4c9648ff8348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd9ae8a-92f7-4317-9e6b-ccb2a9ac67b9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1763922-3b8d-47e4-b623-87c476c8e195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc146d28-b1fb-4f9d-a4d5-dc14e642ac97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58ee924-3e3c-4361-bef6-2f0434e5f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac49ed33-c7de-45e7-9e01-aa044c31d1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2830d82-1539-4a73-a8a0-d9079a02579c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2095ec6-d1fa-4dd1-a652-56671018afa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e227f94-8a98-4e57-a149-55406b0a6346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be96407d-e609-4af2-8228-ac1229a49ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8f1f3e-acfb-4063-86e0-56880335eff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb88dde-4858-4984-9cec-4a21c2254337",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc35551-ab1b-4368-a1e4-3e0e1903874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13681ad9-6040-4978-91e9-a5f4604a71f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8855a29-8a60-40ab-9914-5939fa283575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad6dfbf-38c8-48e1-a1d7-09a79cef8e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b723c50-2080-461b-8b63-e46657ad2cf7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e559b6c3-baaf-4142-8d82-d50a3fda6c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c6217d-3ac4-4772-a606-e8eb4ad57a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f804e05-66ed-414a-af1a-5e1fc2dc769f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8dfd46-2ed7-45cd-a43d-8bf6cec4e48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13d97d3-1d87-4e02-b17a-969c0f270e52",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ee279-cd85-4e70-92b9-43df777b6b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940bf682-dd45-4917-8c7d-989e8fdb9673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921ab348-a656-4f70-9651-d9704616231a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3555aa61-c7c0-48d0-9011-b556496951d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d8aaf3-7da4-4b65-ba34-1092b215a0d4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193687c8-e049-4c5b-ad57-d9e562541bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69d3613-1a0d-4a6c-ae60-2e36451ce522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c269bc04-e716-4607-a432-7626a9ef8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78299f5c-508d-4537-ad08-de78702251fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66871a8e-681b-4265-afd6-4fd657c38932",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516197a7-2e98-4d65-8c21-0f0bb75ed166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff37aa5-44b0-402a-9b47-fce343fa2d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1b83fa-25cb-45c3-bc85-70706d972ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4eb2e8-e035-4abc-8d07-9d4f33d3d6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be5d05c-e84d-4905-a7d6-0aefe4b4741f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fdebe9-2b88-463f-b1a2-534e99291d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e94044-b5c3-471c-9b3e-c2f53690b822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2cf040-d485-4bdc-8f30-46905ba4ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b13c957-2d44-455a-b6c2-7e2bea8fdaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f0b266-c85b-4524-bede-a82b2f457c2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bdb29b-ecce-477c-9ac4-3287b4e9511b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440bdb79-c19b-4527-85de-1fd9d53f209a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465113eb-a239-4c91-b03a-94d8d17b237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb8f46e-f2a8-447d-9084-5e87c100d880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1330b3-8878-414f-8b69-698ef9b6d3a0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1346d84-5910-412d-9fe1-62ec66f5a9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c969ba6f-fbe3-41d6-b261-04c1804dfaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95087448-8f92-4a28-8eac-b67f8a27a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e1172d-0d0a-443f-b797-0b5cc8146760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569eb265-a509-4a19-abe9-5834426b5a63",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ed6114-0ad2-4e09-971c-3889627bad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7872d15-abcd-4a60-8980-06233f165ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e467e7-75aa-48ad-a135-f8dca3c9cd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccab98c1-e95b-42e0-92ae-953b1f62cc72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5705e654-0afa-4ca7-877e-d7731c9ddc55",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936e5363-9487-4cd1-9622-1b6dcbc9d282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e8d9b8-7f37-49d3-b065-ada8791a02eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8644395-8bfe-430b-bbff-d061ecf1633c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "370ea040-6e3b-4e66-ace4-633716da7144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4670ab4d-5142-4d08-98a7-f2aa2a3ecae1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26335ba-5dcd-4e13-904d-05713880f145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c25d3143-b9a2-402c-a975-848061ee5a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e7d789-8cbd-41da-855c-2b0ccac6bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eafcf5ae-a99e-4777-b841-ca382757f709"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5bcc16d9-37bb-4c4f-9ff6-78a7ced5b974",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7be825ac-470e-4c9e-a0b8-bd038c00a2e0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea0da6c-391a-4128-b88f-5722bd8756c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de4fa524-75ca-43f6-a841-9275d74f7b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108ee3f1-8b14-4b80-83ed-8dbdf9fffecc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b655ff7d-1ea5-4e47-9391-04d520f005b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60bff359-a175-4daf-bdb5-082362b14d99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cd5eb0a-f0f4-42e9-b2ae-b38a427cc69b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83a919f8-33ae-4e4a-a9f0-a44b7f3ddc52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db1fafae-c452-44ac-960e-77ee79e92d09"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1893e146-f73a-4a04-966a-e8781acab07a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8069eee-8360-42e1-80ee-03ae0e4551fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99a13f7d-4a13-4edd-b22f-285959f45d10",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eeb64e22-e8cc-4245-99b7-c4ff683eabea"
                }
              }
            ]
          },
          {
            "id": "4add79bb-c367-42be-81ae-3aa4b054cca7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fbf0ef2-d31f-4c97-a9f1-6ed2e3edc74f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ce9912d-8001-4e90-8020-50af6215a7ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a876b11-e32e-4bba-b5c9-282a5d050d38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b4e9dbf-9d4b-4c9e-907c-b773d4d45c38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e753929b-d756-455b-a614-d95c31451890"
                    }
                  }
                ]
              },
              {
                "id": "6e6ab0e1-d2bd-498c-b36e-4d9e7dbd2778",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8f42458-d35e-4c03-a22a-ef98fae15d95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fefd48cc-b2dc-427a-ae64-4e73443a5d54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b43f0686-6017-46b0-9446-92f1c78b11cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3d9ed0a-c184-4ecf-9c25-05b2945d2b28"
                    }
                  }
                ]
              },
              {
                "id": "adb196a4-a96a-4103-bc7f-a3cbfe277fe5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfc4f57d-18b8-4f6d-b8fb-010ce538d6bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6330f335-89f6-4833-baba-4b69b446c709"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5715fe0-d16a-4943-8264-73b968793859",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2d537b02-385c-41b1-8e3e-4f734e99259e"
                    }
                  }
                ]
              },
              {
                "id": "b864c1ed-8a5b-4c44-ada3-dcfceb82356e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bb087e2-ef48-4d6a-91f9-7684297a4ce6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9556d98f-4613-424c-a42e-89bfc9f102ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fe0d0be-fcca-45cc-822a-b3e7da10a63b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "05e07372-8db7-4063-b6cf-eb2531edc6f2"
                    }
                  }
                ]
              },
              {
                "id": "a0c47dd7-a1b4-4863-a8e5-dbc8329fee18",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b2d32cc-5981-4a25-9bbf-59f0686782ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4041a9a6-9e80-4e22-96da-a6db1edd7a47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c6bb217-3df0-4066-a884-626332b92634",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "be2ff899-b565-41d7-b61f-7e10a574fb6e"
                    }
                  }
                ]
              },
              {
                "id": "6fd55d74-f49f-4957-8e34-558c69e8c25e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc0f122-1013-44e3-9756-294100471399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30171b0e-b752-4297-a532-c761b84f03ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f15faf1-6f33-4a81-a2f8-bf3ae579ba74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c5bb7fe-780d-431c-b2eb-f7a8ef7e3c1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81bca3e9-713e-498c-a7ec-36dc2dfceffa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bb78f96-e600-4829-9494-ced31a2d7c6b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fea1d527-fe3b-4c9f-8346-d5e268579a1e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e928565c-3692-4918-bb8b-921cbb30a677"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d0ecbc4-7362-4342-ab0f-14c4d59b1d91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "62f032be-fba7-44b3-b69b-ce3907ccdf6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df98b518-95cd-46cf-88df-9da155cfe054",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c42c668-eb2f-45f9-8c61-8af529dbcf7f"
            }
          }
        ]
      },
      {
        "id": "6b6e6401-de43-4356-b472-7c69c723127d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c0297db0-ce59-4957-854b-2f83270b2464",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13c9f636-fb34-4829-8367-1869cfb1a7e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2f83a96-2479-4cc7-8b50-4d465f52d393",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01419104-3f26-44ec-aa4d-80a346d46649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ad7f42-0b5a-4733-82d5-3fe73f666720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a351d0-f9cf-4cdd-b909-9f0528564f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cf4ccd-5f6e-4b92-be5f-782487e24d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04480b54-5a18-4b04-bce3-9fb76781d980",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884188e6-8e73-49ee-a90c-7770f4e87dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11343c8-284c-4a66-8d2f-def4c8003e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd78bcd-e277-4f3d-9d00-4eabbfa43502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10137de-779f-47d1-aaf9-f6706ba70e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4195813c-de6d-4efc-9f31-96a87b23a9c3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325dab0a-845a-4c03-b34a-e7d95f71351f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6464ea94-ae78-4f46-bb1f-07f8cb2ee9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a837acda-2730-469c-89c6-91b9debe1169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6485af4e-3855-4455-b056-7cbb88a2c404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde2f3b2-6f70-4252-b5b2-bbb92a4c771f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a4765d-7c17-4a85-bf47-d9656ec5136a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3a024f-f3be-434a-a457-485b9fad838b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc17dc3d-9e48-424e-b3ca-4318ed83e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab6878b-d21f-466b-8e75-4750eefa4cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c970f0-cc62-408a-8e55-4d343936f38d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfcde9e-68f2-4a96-8018-6f63318c1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0947473-ca22-469a-a085-b9e1c4b4b3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4bf524-faea-45d3-a67e-9394955f4bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b872a4-c7f8-4dd8-aba3-420923f39b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03a7116-52f4-4677-948d-1ec27cb326e8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe0243d-d0cc-4955-a8bc-bd644a78277e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02eeca60-fda5-426a-b3ee-74a9929e2c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bb7378-ea0c-4eea-9749-3cd5067883f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "617dcd1f-096c-46e3-8565-629d3b6acc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f688c75-c254-4c3a-8b0c-bb93b1b372d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef1127-d0bf-4daa-8439-998a566c9083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c2d95c-4030-4e68-adab-24a5726cc3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd5c39c-03e9-493d-88ea-47778bc74758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9a4411-b3de-4bb3-aa57-bb4573a9c890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dba634-e179-4af1-940e-8e4cf5622fc6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d027fa3-34a3-4fc3-84a7-d358dd90bd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafecb36-a8e3-4993-94e8-e1ce56e2cd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b047ae3-6b6c-4c68-a1e0-9d3b8bb40947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa937336-e665-4ec4-a808-f9d2cca63210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22acd5db-c57d-44ce-813e-4f77b62f7b79",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb42f2d4-4bde-45ef-8972-41e3e5bfa2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9d3a38-4ad8-47f5-ae19-01e5fddd3819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291edb2b-cba5-42b4-bd69-a5aabbabea9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e6390f-aa9b-4c4a-806c-8d150f2068eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf47316-1b29-4b67-a1de-efdab11b84cf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2bb067-2806-4904-bc75-09db4637af1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2e0f24-3eb9-40d2-b913-57f4c09dce3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4111c24-9ff8-471e-b425-5a3e290ef704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e39694d-d523-40b5-a9bc-8cecf65ac4f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eca7a01-509b-476e-aa52-e7fc4b3efb12",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eaa1bd-1cbf-47d3-a3dc-eb1c165c7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b851620-f404-436a-9748-61c7573b67b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644a7c96-5c62-4ea3-9c6f-ac0b0b888269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dbd604a9-f736-4702-9e12-4d130d8822de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420aaac7-24a2-4849-a79b-2b43eea72756",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513ad3a-8234-424b-b882-8ab7b86eaaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a402ba-68b3-4e65-97a1-ee1aa4da7ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79990d6e-2701-4b4b-a148-171ebb0689d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81442c9e-6e32-4a6e-8114-22a7bf8313c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44d01b-953e-474e-ac76-77e62c21c3c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b0d1f-6660-4dc4-8a86-83b88f70de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5cd1211-3181-4d43-a0b4-dcf31fcf17e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e491be-bac4-46f7-9fcd-f772dd6b5ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6a0531-53c5-4289-aac2-fbce7992bddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8c1db9-eabe-4913-8b06-a0702d2ccbc4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff2a35-9118-42b4-91c9-ddd7c15e470d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107fcd69-29b1-4ce1-bdc9-0278104ea27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de1940a-edb3-445e-969f-07a1d53dc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc7c2d1-506c-4b65-a5c0-5294d70f3a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0be5291-8e0c-4964-b298-bd44e6c1adfb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79771e2-0255-4e18-9e6a-a2d211544354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5776b860-44bf-4d91-b295-ef93be911721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6d7af1-2c2a-41b5-b3b4-512e8872ee8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f5c478-232d-4a0f-8a38-30ff5d17cf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5442f1aa-fe45-4adf-9366-242847bc5d70",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2f26e3-3150-469b-ae3d-0688fa25eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd2aec7-c122-4124-8f85-598090a13440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dee9266-3f20-4fb6-adc7-2fc32741293d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c48069cb-9af8-4097-9556-c3d52a30c89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0048d81-05c8-4460-9d76-d98262c073a8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746771ca-57a0-494f-9ee8-50f745f66154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b8ccd4-ca2a-4f80-ac90-f1671c18e093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e19797c-c69f-4fc6-ab3d-06c6c02aa7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be165958-e7f4-4519-9a78-09299dcc5be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b332ff52-48f2-45bc-a04f-5024ef9ac8eb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f249dd-9744-4772-add5-d2827a535015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ae707b-f355-40bb-aa43-7814f32294cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a39ec3-156b-45c0-bb26-1b5c66d97793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58551c20-bdb2-4f2f-b071-6e19719b0e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff2764d-e0a3-444f-9ac2-ba8f8e47567c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c5ed3b-fd8c-4300-8b61-a9c8617e12be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fff363-f071-41fd-9160-e980eefc1ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906619f-ad6f-43af-9d66-d8753a979ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8214a64-0d0e-41cc-bc8f-9ee65850e1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37837ff0-d628-4374-a9ae-02656933f502",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59543a60-1527-4216-8694-a467ef84e10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ee3b78-e871-4e2b-92e0-ca58cb1b0709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828fc78-d061-4769-b4f6-d7ea0fcc2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2e09c8-5b25-4e26-a725-26b2b485d6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50320c6b-b601-44c6-affa-e61563a1b125",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb616621-be77-4f30-b99f-4241fa62a126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e85c9d-8b70-4f19-83bd-6b108044eeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d56bbf-a869-458e-816a-39286535dcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6d9a09-4c02-4f84-b23a-35670c5c3577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7011e9d6-ee41-4f9a-8d23-ff54bc40718d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790e5427-79b9-4593-9ed0-ab97b77d1da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03addf7e-9549-40c7-bc5b-759f6a70e424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09584ee4-6406-4912-aabb-97f96b0c82dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debfb865-6b53-4e58-a618-8d17334f7832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28522216-7eaf-411a-a283-41e5efa38cd2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062c94e4-82ff-4302-a406-e636da8d2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412cee47-e116-4a55-a6ac-6928faf07cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65101a4-0bdf-4269-934f-86f03211e54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368c170b-1920-47bf-b5e4-be0f2172e00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74037ec-711a-43b3-a48b-87f19cde54c6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313cc9e0-4640-4514-980c-1b140dd49440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0528630-6148-4b12-a76f-e51d114d4305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc1d7dd-da5b-43f6-9b5c-b3c338b73516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6db565-42a3-4d0a-984e-16f7a3971802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b1ce31-61ed-495c-9044-3242bc5d5bcb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0284849-f75c-4314-b674-c8cef5d51e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84961b9f-a82f-4560-95bf-621d68d58899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b61ecc7-3f2d-4dbd-a296-e9d2b5492846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2a797c-db67-4717-ba48-1bfd5176995a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3235f483-5ccd-472d-9858-ef5fefc3076d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28a3b47-86bd-4cfc-8aa5-698615b48beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8543ad-bc3c-442f-b042-497598df8641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a56613-d16b-4f5d-b76f-93a2257f6300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db1ec15-74b1-4164-9f03-e730fbba1d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59eec266-1fca-4113-856f-bd23f6ac0d0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0389cdf5-17b8-4db5-ba4d-292fe820fd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096f7d46-0766-4bd7-b054-d604e21c3632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b4c1d5-a38a-495c-b7a0-95104f21e8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4214160b-da84-462f-a587-397d923d0f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9534df-b63e-4726-b94e-3932181ff1ee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcdd18c-f3a2-49dd-ae1c-78e31404d5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34f9810-314f-482b-8039-c48185b5235a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75078087-81e2-467a-b1cd-76f202d43cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a23ca04-a765-4209-a392-746a7407886e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c75bc0-a10c-4974-b1be-429765d3f370",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e202602e-716c-4ad8-a1cd-bf324544e32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6eeb19-f539-487f-89fe-90a6cb4cde4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1696d-d8dd-4178-999c-f1ac4c44a2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dbac63c-3230-4b90-8876-eb513485d0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6782f0-d8f6-4d2c-b299-099f99723d85",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0eb2ba-42da-4697-8e90-822145945160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d300059e-cc73-4e4b-b4bb-6357af76863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76abb447-9f10-447a-a983-62b06837e3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3108d3cf-c283-4cc9-8ab4-092cda6b4965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c1bfb5-cdbc-4967-a8a1-38b0c533e83f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1235026d-4a6b-4b4b-a54d-c435e4058edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40064ee-a7e6-4635-92d2-353f167839f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f80ed8-401d-4a14-9595-6960706f367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d2f7f7-0411-40f6-95d1-7563e1d86624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e54f7-2229-42b3-aeb6-e2bacb63d4e5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036c3eb2-7023-4853-af15-1d06f4e21982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eaeca5-5a8e-4805-a077-1c0bdde88803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f947e29-1b5e-47e7-96d4-89e0431fae4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d57c05-793b-49aa-87de-18a2435d5ec4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6b4f73d9-be16-4709-8f37-52300cbb56c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "589538d6-e20a-4f9b-94c6-586e1ed9955a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a935e4-16c6-4610-9b6f-97a83d73fb95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cea376-c69f-4f55-a74f-5cadb3828562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf7b063-14e5-46ca-84a9-d0947cef5c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b2b7898-a4ae-42f2-9037-2e3794668c64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2b858ed-e6c4-40f2-bcc5-ef0be4538462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b57411-958d-440e-b0ae-dfb2d664ef8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2697c81-10b0-4ac8-9273-4d37caee88a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f37c7f81-b8ac-4a5d-91ef-158d5f3f1c20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2ab2040-ace9-4ea1-aa90-1f5cdaf256ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e34a7318-8eea-4ef9-8ecf-d4a6986271e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88bd19a0-1648-4942-b52b-e7377ac5014e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fcbab72-6602-43ba-a8f6-b860067e93c1"
            }
          }
        ]
      },
      {
        "id": "03d575c3-b2c2-47bf-ad9a-fe8c5c7e92a5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "847f940f-3aba-4f2b-b93c-47161f52e332",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f6797ef-591d-4df0-8a77-b0b2c6986de7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df7abaab-0449-42ba-8070-09c2e4da0051",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270dbc32-ced1-4221-987b-611a35a92d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15697029-dd13-407a-88d4-6eb5be931407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d67ce4-d878-46ea-8ae9-371fd1662246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37a3592-62e5-463e-be3d-91b9c5d6b9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e8e9f8-74c7-47a3-87fa-aa2239dcf819",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a71836-50bd-491f-833c-028e763f49c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9f9eac0-6406-4c1d-b45b-66d455b945a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd02a1d-9ea4-4d48-a3cf-08c47a09c31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "327e7202-c096-4322-9da0-ad265a5e0407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8dc7cc-4778-484f-8a47-7b2b36e82ae8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6eb7aa-ec30-4d05-a672-f50b4862e059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9273522-c93a-474b-987f-9ee7bbc7a9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf5d7ca-742c-45e9-bc33-73717c30495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c966f3e-0e85-4e5c-937b-4194786ea051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592aa157-a20b-4f0d-b1e0-d9672c9386af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e2120a-bfd6-42af-b64d-47a07b131492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe384f7-d962-4572-b734-6afa114dc501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a40529-1f1f-49df-95b3-e808ce4d690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6178cbad-ad83-418b-97ee-29d04a66c95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d92ba-dfc9-4038-a32a-355a571d86e4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72822f8-4a86-4a6d-8b7f-bc27e5801405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2f06e8-07e5-4e3d-a8a7-8e8f436e4212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d9d30c3-78f8-4852-ab23-6292641d8801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d6f45a-ce12-4945-9377-1ea6903808fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3a0bdc-dcc4-43a1-9f63-a7ce58e50768",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f2f260-3118-4299-b432-639d56746cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367a0442-b81e-4990-a6b3-f77b837198f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a317dd1d-da0f-4063-89eb-f0eb3bbceef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d93eec53-4feb-4249-8a69-2e5146a9240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03e7bb1-a219-4402-bfe1-444bde70a3a1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb337ac-8810-49b5-821f-af7a58230485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca513b2-9343-4ffc-8633-581c0c38198c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11d39c8-a7c8-4e19-a50b-f8861d310291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff02a3e-991b-47aa-a0fe-4f28f86ce8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86fd281-e09f-45a1-b768-a514f92a3db6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a0841d-f1c4-436c-bab1-fd000a80a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c2f2ab-fa75-47f4-8fc1-05f090cb3517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6579877-f7a9-4712-98c9-bbd0cffd36e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14620201-04de-4340-a586-e220d7844d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e6a138-6cbc-4621-b40c-5d14ef645101",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a39c2e82-24cf-4a9c-a773-8ad65b1c4cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859c4c85-011e-4ddb-bc0c-982481a7cd7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f53da6-7ea2-456f-8d47-7aff6373c581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e467690-b6dc-4d4a-820b-0fc3d67ec183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06490afb-db35-420a-bc9d-2c802b4668eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfa99b3-d442-455a-b45a-de13212c5534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe3abd4-fbe2-47d6-b269-80f0b013074f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80cacef-a982-4b75-ac8c-035e75e9aed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afeb71b8-62a4-4600-87e7-e64f4a214ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30145d2-7518-4a0e-ad25-4752e24be3be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2789f7-5747-477a-81b1-10129f3b407d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3dc4c9-4544-449f-bc25-74aa6a472872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87b03c0-9e5c-4b50-92c5-4866c4a79f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "398a3c54-85b3-422c-b319-9064f0c52825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e1d1b-9e80-4d29-98ec-baa92179038c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852d2d14-ec7c-4592-a7f9-f2dcf6f6c4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373ee187-0b55-4d9b-89c5-69928ed6c0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fa1132-fc99-49da-85ad-a6cb6f6beb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc13df8-ebc3-425e-a3d1-73d19bdcc502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271f5955-96a5-4ccb-9972-a5ed721de2d7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5477882-3f0b-45c7-ace8-2a506fb1f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce37cbc8-3a3c-48ed-9c65-389c5ccc0156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32062816-2841-4f88-90d0-1f441725a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "519984e8-56b3-46a5-8d17-e2d74d5b5991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae67f09c-ddc0-4301-b6ad-a03449c8c3fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923ab32d-72b4-41cd-a4f6-828211c198cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac9add6-21c6-44ad-97b1-9ff0c2ea77ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34864e9a-fe4f-4648-9e29-555a9987c70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a28f73-a351-4aff-9dbc-d707375abd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4276e36-1315-468e-a815-45000c535472",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11f1b24-c56d-4cec-a3b1-fdb08c2446d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312089f0-8103-4757-84b5-2accc0652d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7180feba-3534-41f8-b6b6-eb1dc0a63311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d766e0a9-ac16-4a59-8f1c-682bb867d950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d03c42-6045-46a1-b29e-30420e2974c4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97190378-316d-44fa-ad18-3951e667362b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95913c2c-5706-43ab-83fd-38f7849efaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c3f51d-344a-4c97-8421-6735ceacb3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "edbfe6cd-8c4e-470e-b3b6-d8c44315461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e629165-1f3d-451b-9c05-a424fda06c77",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f528a4-4f19-481d-949f-d115d47dfb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36c486a-6953-4390-9ff3-1d6d2a1898af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59528b21-6f1e-4362-8aaf-14c188b1c757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "903aa030-8e17-468d-8af1-c20e1df81a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d01b98f-b265-4e49-bcd6-b761fb5366cc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89458a1-711c-4dec-ae96-f4ed4324e4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f609dbb7-30aa-489d-99b2-8b8750b50861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a98fa-3f09-4b6e-8f93-c5727b45e05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "112a7e71-7194-4af9-9604-27d761283545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2787785a-62ad-4d89-9140-c391cc33cc8e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf077e03-7103-4b0b-9af4-fbda9fbb7be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fa6bf0-434c-4a7b-bc62-6f1183e569da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102fff31-779d-4089-9e7d-8d5aa7fe5c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbfbe2f4-001f-4ceb-962a-377360b7dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6148ed4f-1947-4db1-a48c-8f31f7b7de1c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15225e0-2350-41b2-9d3a-e2b7fa6949a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5972765-8945-4bba-ac1a-a656b537be52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c1918d-2153-424d-9337-0f14f95825a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f870d31b-a951-4d23-bf23-0fe1ae28992e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fdd4eb-4fde-409c-acd4-7908163e5ba4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07d332a-7efd-4fb8-8a46-121f3ac0f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d69563b-49b8-4d0c-a60a-57eef17c13a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268f4bb5-7a48-4fb0-bb81-e9faf36c5560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47817d6-d9a4-41cb-86c0-e6c0876c1854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a2a87-a830-4ebd-872c-3f68330df8e5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4dcc9-4baa-4fae-84ba-841569577bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb4e76e-d101-42bb-bb33-a278aeb23b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4670fe78-3ebc-4540-a590-82c260a04e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aabb3cd-8b09-4578-afa7-60dbf7ee68be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e632776-8fd3-4af3-b221-503ea123ef1f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968d1d5e-bdf0-4e81-bd32-6b2cc03f52ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f3c1a0-9fb5-4827-a6c0-27691c4c0bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aeba74-edbc-4b46-8cfc-f50e4d03016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "737773d2-5356-4f30-b069-8829b8d68679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41227496-4523-4110-a24c-f07b2c38dd71",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1639a0fa-849c-4209-87f3-dbff0d35d20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a431a8-2327-4f99-b108-982a07edeba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4836aca9-b821-4f22-ad06-b91afd4d1023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3293ff05-fa87-43b1-b178-2d939bdba677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2005b9d-9abb-45f0-9a90-24019cbd6ddf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3436aa1c-5160-4dd6-8f67-2fa35e0df44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f93379-34b3-4bad-9c4c-0c32622d5949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51ee762-88bb-4b7d-87dd-18dd73646863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f42bc5-ec67-450e-9d58-a05e2eb85466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017ca034-da09-4cf3-afaf-38467d21997c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea50e3-93a4-43bb-b224-1b00f1388e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c067ae49-0f57-4d53-b1f9-046121abf043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d0b33f-e4f6-4f27-8a3a-7b670fbd6e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1372ef7c-431b-4811-9738-09e5214149fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512158a9-37ad-4e36-a7c8-f38429db7895",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a012c87d-a418-46d0-9de9-4c776e4002bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa493287-e3d9-4d6d-b440-3d1a45986812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0812570e-43f2-4ba0-871c-593798f0cc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63461b57-a392-44ed-b03a-a835b8350c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f73ae55-02ff-4036-83ca-8de174f4783f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160a48ed-d16b-4e9b-9998-2d90779f6693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834cc58d-a7ef-4f00-8995-eac762fafae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc0c089-de32-47b2-8018-4a0f32af2d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade53db3-ca37-410e-9461-fb0395f01ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e1d2db-1b08-42bb-aaed-9072d25d40e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b46f856-3786-4f3d-b3bb-4e3d119e4860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa70dc52-b51a-4c57-b47f-36f403ca7f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8181f71d-8267-46d2-b750-be42c4aefd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0feaff20-b36c-4324-8d02-a068237c0c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d34ab8-99a3-4ec3-b9ef-a058de9bc483",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cac5dc-39c3-4af0-84c6-a7ddcb0a76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e240b3c-e8aa-4ce4-9021-183d6f5f37a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799ca61c-e9d3-430a-b428-aa9ab4866785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c02672-ae10-469d-a4a2-5d9de19e7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e02f069-7df7-4a98-bb26-6f71bcbe27a4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be48c35-e04d-4a09-a4cd-96e833c98869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d820d8-f4f3-481c-b392-b8f0471d31a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2198ae9-bea4-4181-8fdc-a1b3b9574f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91789370-fe7b-40a4-bc54-432eca4d6c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a106bdc-cdfc-450c-80d0-9467c985cfb1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e7f570-7bf5-4b9d-8c34-4dfafd703fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8f9356-0f3e-4f75-9dbd-c0e1811cf66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0604a95e-9e85-4bc2-a7d1-ef4721af4971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b22ec5-e1e3-488f-a373-eec71d851295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a98f1cf-7c08-40a4-83d9-94bab5d3c3fe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c892eb-e454-4b39-9d70-d28ef409b3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6535e3-d60c-4ecf-a325-9caa45486236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26b5d1a-1ed0-485e-9b08-a0c5634b436d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddec61a1-782c-40dc-a6c9-b226f3485e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cd12cb-52a3-4c07-9a7f-05d8eeda234d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ebb34a-da0c-4928-9deb-207e9f734b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161cdb1e-fdc7-44e8-9477-377a5c513e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7081c3c-053d-4ead-a11c-391f640d0418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91503dbf-ab8e-4a0a-8d1c-48c7e6e086f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66410ce0-60e0-4732-80fc-0c143f43487b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca93b33-344f-4b8a-85fa-d2715378a03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b6aec4-8a5a-4e86-96ca-a0742c08ac39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db81b9e7-d45c-4421-933f-5077ac3988cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75b84eb-5c36-44da-92e4-b9267f70b4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e677960-4e3a-45d4-93d2-de73f205597f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dfa9af-001a-4c35-922b-0d553679b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298723a8-33ef-4273-8a33-f66c48b0c0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828dbe3a-6a4c-4922-8eed-31f804278f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e39ce9f-b7ee-4f38-b724-f406ff692e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501d468d-68a0-435c-b34e-ea8c029f9c1b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f50d6ac-d974-4743-80ec-742de07e14ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09d1b43-58e2-4303-98ac-1d6300768a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bd9491-2868-4bcf-b8f9-ad10d1ea20d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb636d7d-5a10-4e62-9dce-4e8f2da02dee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "090a3244-6411-49ed-ad96-65d56736a428",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1b0108b-ed1b-46d6-b69a-e8bd395a45b9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7cac96-e61f-458f-8b8d-bb031906eb85",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "555d1829-be3f-46d7-b52e-5b5fbce9efb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3727018-ace3-4515-af34-106dbe8c821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "144a2751-0529-4c51-b3a7-72357a8e83c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aba3831-9c15-41d0-be09-cd92ab856757",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6251003-b575-43b9-a2d5-e6f319f60dc2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07f3d74d-f679-4821-9cc6-9d765f5e995c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "380f0973-6017-4348-a585-790b17909ece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb6a2ada-66fc-49a1-a760-3df3fd8b6542",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "939955ac-ee4a-44ea-ab7e-c26b6271094e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0368df90-d13f-488c-a4d2-6847f0bf978d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "833afcf5-ea6b-4cc7-a8b3-d73e865920f6"
            }
          }
        ]
      },
      {
        "id": "9c846cfe-a121-4505-b506-b7edeb131bbf",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3036cdc-2bcd-42dd-bf04-68ec052755d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79a7621a-9b52-4604-ab70-aee301303017",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b50d857b-d4d3-43f8-91d9-a553820df39e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9400db07-eb51-4f7f-9d47-3d20c01375fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d256485c-3213-4d08-bff5-e2699ac1caa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d461b8dd-5278-4d58-b2b4-1e8e1e4d473e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f478ea8-d7f8-458f-a5f4-bffb4773f3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d0438c-8c54-4774-b3ef-3cbc9d72ebbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d0d32b-24c4-4334-a4ae-d589e706a29d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946e412f-7664-47d1-8481-f53e6d5add86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b5aba3-2c91-4c0f-9615-deb36336e199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eda2685-aea7-4a0d-b557-09fc05f698ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd6c833-31f6-41af-afed-7d6e8f589d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad4280e-669d-4550-9b36-d1d64c00f4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b295de-6d6d-4f53-83dc-26572071c9ad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b9e8df-5b3f-4d41-91a9-2d44b5e0807b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9b38cc-36bd-42d2-b8ad-188ec7b327aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cfa845-5113-4558-a50c-31f03d43422e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0a0703-44e8-424d-b50c-2da7bdd43a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c158a7f-aa9d-42a5-a71a-6ada6831ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e634510-4805-4194-b762-65ad539ac767",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e540dfa4-aa5b-4610-922a-6a452b8b0b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ff2c13-47c2-4fd5-8a35-5353a1caa83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e2782a-bf8c-49c1-83a2-68070512a083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb73cc5-b7f8-4bee-98ba-65eb5cb52e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c596b05-653f-4d3f-a798-f98672b25f3d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafe467c-17c7-4309-a52a-05ed45a23eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e74cca-8553-4ecb-a546-112052f1b30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f84113a-a1ab-4e41-85f7-487cc175246a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054c8276-39aa-405c-9e6c-552cfadc3a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018ef61-cbc4-4780-8ee6-33429790e56a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80829740-6b5d-44dd-8eea-57a53089be03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26d0d58-9cec-4c66-9b46-5107b0071186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebb4c47-d6ee-4fed-8e32-f5fb7408d256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abf12587-14ba-4605-98fe-4b28d1089428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66573f7b-9655-4f43-a264-46071c553911",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51234fa5-83a0-45ca-9db3-7cc39ad7814f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6d8afc-587f-4bd8-8ace-5397bdcedc2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6829e1e5-d043-4991-bc75-28e11d56d37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a87dbd1-8c14-480f-b0e6-77262604ce1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d61fff-06ae-42e3-9e61-f22daca83885",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a659dbf7-97dd-4872-9e69-21b71d612029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf50428-98be-485f-a93a-53648bd94438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cfa852-c822-4be6-891d-ebf78d09482d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6bfe709-086f-4748-af16-d52489d4c31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d5cd5d-a9ab-457b-b145-eb9cb596ef47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d887c77-7f7b-498e-a6c1-61bfd40bbf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e5f0e8-172b-4f12-be7b-d2cb2f86c2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b3fd71-761c-4408-bb1c-ef71a8a2ca76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51675a9-94e6-4a26-bb8a-527d818e08eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753117fd-1f8f-48bd-aee4-12d8ad7282f0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26d4698-7725-43f3-a41c-63f7fcf316c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c62d6e5-684b-4d82-ab51-f59e015a8da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f631212-4c9c-44da-a470-3bff9b79381f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdfbcb6-1763-4730-a921-9fefc932f7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436b820b-ccf3-470f-b17f-e8db8e8bfd4c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b02d39-631b-4349-af93-0a9b0df46600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df8a616-2461-4524-a1ce-beba01356a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239b0a59-4a04-4ecd-8517-ccd0da3f4d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37803110-dd8d-4879-a980-37cde94a17c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f717ad7d-be67-4eba-a5ce-08c48320a1f2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afe44b8-c226-4b2b-b365-2f88521836f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66f8b4fd-9db0-42ec-8488-3ef00ead6e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce922df4-a7b5-45ee-8d4c-70011ab3a2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4d4fc3-d23a-41c8-9ea4-4bb853c49277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebf73a7-5117-4188-a5d2-a00032a8a3d7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c40f71-41df-4a0b-84f6-3466e6ce090d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db6c134-3100-4630-854d-ef94f7ba5933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9b9c4d-671a-4bd3-90c5-8660642e74e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e9f6f4d-69f6-46b7-a0c3-278f86886f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dc4116-4447-4d40-80fc-cb9033acda47",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8aa37e-973d-48b2-b953-579906a72f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5009293-4054-48e9-85b7-a01c0af9a066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483a128c-e9d8-4b12-a9df-856ad38afe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "126e9fab-9f9c-4882-8db9-2b3f32f8bf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346d7f71-2b06-4ad9-a294-35047ce543dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403f0580-02f6-4bee-b941-20e561c4057e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b504b6-ac87-48d0-a62f-835e2d824fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d7cd48-d51e-4170-ad1a-57bafc42185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccdcc97-a025-4230-a358-1fb1f4721734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23004e1-325f-48a5-a79a-0824f9cb2d6c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f3f64f-028c-45d4-8614-51a5e1667aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9533a39d-57b9-4e2d-80a7-3babedbd7652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e48ac36-5e1b-4e75-84fb-1bce3ff30beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa80e73c-748c-497b-85c7-3fa97152db4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e3505b-10c4-496d-b52f-4e9e258edf38",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223a56ff-84b9-44a2-9565-be4dee8ff6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdcfdc7-cf66-4094-875a-deafb8be7df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4555a8-afd6-4f64-aab4-155312863fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa87d5b-b618-4ec7-8f3f-f8a0d7a64d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897a4bba-8ecf-4072-be5c-30883195a2f3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21e8ad7-fa00-437b-936c-49b17dad15a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afc4162-93e9-4efd-9258-f5bd9176adc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c52696f-395e-4f1c-bced-46c6e89d13aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dab9af0-868f-454b-92e5-8aa39e3337b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9132ca3e-3d2f-4cc4-90a9-661484f21edd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abd517a-e65d-4240-b23d-702658cd78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087463db-a638-47fc-9a3a-3c5bd1264385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06b9b6d-d221-4ec4-9415-d9699892aa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4119f9-699d-4866-acc7-f659fdcc4b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b759f2-a975-4e77-8ddb-d9b410566274",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101f0438-8a54-4941-b27b-d2180a623913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cbb7d6-4634-4a33-87b8-7b331edbb94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243f8645-7c05-4dd9-9c23-e7e4964f074c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241e4850-ebe0-48fd-a5c1-0ebf6dcf2956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fe0af5-c8cd-4cf4-8c0b-0acf70a4a180",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f7b6f5-2bd6-42b0-af03-fdfd85e23743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786a27a2-3b70-44f5-8337-a5d68224d77f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf59be0-39b7-4923-915e-a84f16a817ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd6c812-5bb8-4b7f-a8d9-0fa69395533f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c26767-5cad-43b7-a51d-4ee9aede3c16",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef5092-0e5e-451b-bbc6-0aa08c31addd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba542d1a-ae92-40c3-9296-bde64c3e3624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95598956-322d-45a6-a5ae-532a61c2735d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57515cb8-b3f7-42f5-896a-9a54edaa96a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430b9b93-3307-4d6e-b1ef-7c67cd9a06a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a602d7a-3918-4927-8a20-a18e22cc53d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79cc27c3-c13a-4ff6-9771-706ae80b250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a8c61b-1bbf-4673-9966-f6261d1abcc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c4b3bc-5ce8-4e55-935a-6e478ea5917a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4133fa9-aac5-4fad-8bef-6d8ca876e772",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fda7ba-02bd-4ffd-b4a3-278879ceecc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed76e47-7df7-4705-b648-32ed501ccbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7a5f0a-55ab-42d1-9f7e-b42d8e980e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d213888b-c99d-4c76-996f-42a41d048d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1df2f7-9c98-4c9e-ad2c-6745686205a9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aed3c0-0073-464c-a35d-c4eea130d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786f2a09-3e28-4d23-a0fc-12f0e9118b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e9406b-78c1-413d-ab49-b6877145e1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c5c767-cc12-44e4-81aa-5c7e7f8ac8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f24f7a2-c6c1-43b8-92d7-c81c1b36168f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d22ad-724f-4425-9169-b18c5191ae40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f71857-bd8e-45db-a8b9-dba8700d1601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945a6b37-c855-4809-9ed2-b55db354dcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab57102-2446-4dfb-ba95-bcf2409e573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc593897-83e4-47a8-bc30-15bbc61b207f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc13dc79-706f-4e59-aee4-55ff2fefe065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b024aa6-fad8-450d-b233-9d51bedce746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5697643c-72d6-4060-a08f-6b41ea92755a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5263cfa-60ba-462a-b5e6-a94e8deae2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007c22cd-4476-49a9-aa0c-1f248d2c461c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f578e084-1040-4223-b0e0-1dc4e14ec748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6754a16-e2dd-475e-a087-0a1aa2620a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91170561-51bd-4f48-b07a-24c852146dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135acf31-f346-4d0d-9fc5-60d3c2af2af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456c4a0d-584d-4909-a283-677374ce3fd2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35a9682-ecf2-4bdd-bb16-cf0578336889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3406a4c9-27a0-43d4-ba82-efcd3a9eca5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bda97bc-c2bc-4aa8-8a31-b11caa53f7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354045dc-8235-4aa1-97df-9fa9d09a577f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7262ba4-b0df-49b2-bd2d-03096f9af128",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeae4c5-d3c3-417d-80fa-5fd207b7f320",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb868391-399d-43c2-805e-9ba1afa8f55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cb6cc4-ee48-4098-86bc-0e3ba5b5d7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3cd801-ac44-4abb-962e-609d598d04ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa7ea96-11d2-4808-bd27-0c5b34b4e979",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d477b0-98b8-4584-8f69-2a372b9056f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c6b085-1668-4f24-8570-bdbd8e478482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee87267a-6768-4ecf-8d8a-f7f61ab788c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a23b26-ff2f-413a-80ce-f9f2d0591c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae036c2e-76c7-4303-aff1-230e1f55584a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636dce7f-dabf-48ae-b59c-a1682383351f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379df603-a8ad-4564-bbfd-18a664c90116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ecc438-41b3-4793-a169-fd8b3b507d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a32f72a-7fda-4b1a-8c27-008d2ef4e7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7eb86dd-c041-4cd9-8107-9bca37bceff0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003cddc6-e39c-4288-99a8-13845615d434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03893f88-80ca-49bf-8b6c-0bd979761ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bcd3bb-565b-4e13-b515-d1e336c83fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057b1ad9-0859-49a2-b362-476d44d6a342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aecbff2-541c-478e-b706-812a9b6706a8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff7ceca-6370-4ba3-96e8-b2007842ba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe4b024-63c8-4eb3-a275-11151effb323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a89e89-cb4c-487f-be17-991736bae314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9538b9f8-fe01-43c0-828c-7666443b2524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d96a034-03b5-4ec0-bdbb-01b50613421d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bee731e-7ea0-4db0-8758-a7ed2885f53d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb573e1e-de0f-464b-b93d-ec7e0f58274b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4735a570-50a7-4080-ae43-8330681790d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec64dd4-9bf4-492d-b733-f4e1ce6dd522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea70321e-3e46-4dde-a387-fe1e36be3694",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d54e49-3a60-4c7b-9e5b-ae9e9e61963d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f10684c-acc3-427b-b5e5-a28d8293a345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc861780-5e16-479a-bbcb-d8e856d0ec88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e01aaa-75f3-4ff6-9ff2-6605be443e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90451a8d-40e7-410a-96af-037aa1560e02",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158aeff2-437d-468c-bf09-d74c184be5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443b89d0-2078-4efe-9ac3-4a32fdbc6e27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49256cb8-00b0-48aa-b988-8d578efb4771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa21701f-5ebd-48c9-9f7a-60febe9d48b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa0fe1a-f33b-410b-85f8-3527b802bb48",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47909387-73ff-478f-be6c-c9d9047d429a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fad4ea6-28e2-46e0-a594-cc257b445186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6270dfab-609a-4c28-8b1e-1f5a427a932c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68e5ec89-d772-465d-a7b0-70c7c70e003f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce2c4b6-a69a-4d94-9c21-b6256d2d6e40",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632a2d38-a444-4fd7-8fdd-a676bbce26d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4830823b-42d4-4df8-b07d-8c96ec8673af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4129e1-2c04-4ef1-b357-a7f55a323ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0608dc-22ea-400c-85d4-ab45cf5a6abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5483af86-47e5-489a-a94f-b42966fd4669",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9104de54-fd94-46ef-b666-f4fd34a358aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca247b99-c946-40bc-938f-77d760e64bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1974bb68-fde5-4091-b60e-802e6d4133fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8a559a-7c68-41a7-a1c7-8e3db8c6221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237cf815-a0fc-40a3-bcef-f8ee454b234f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "264d8b18-e9e8-44b4-8b70-72408aaca164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b220ea72-bcfb-450a-9df1-5b9f3ed7beca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bcb9c2-6243-48de-9f54-d2d3e56d8622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7479e3b9-c226-4189-9ba5-1d99bbbf6771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e9c31a-e1ad-46b6-879e-86e1dacd39b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e94169c-4f0e-4fad-853a-61f401dd67e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580c2566-9514-4e70-b861-ddcdeb30d62d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6ca8e2-afe0-4617-9142-0444cda507b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e9f08d-2a18-4cd2-9243-0ba4cf9422d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6870ad2e-c45b-4cdf-9dda-0dce7dcd5baf",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8d876d-ed28-40e6-9dcf-d01607dcaa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ef2ca3-0696-4dc0-84e9-ee0b00601326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa9ad75-59d5-4ccb-93b2-6640a6d8cb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531faf6a-acb1-490a-bdbc-be26eb225a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf805ad1-b717-43f6-b0b6-61b0651764ab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc87eb9-4362-49a4-bff9-92de217fa177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e7c0d4-c3a3-4562-9007-5a30cc3519a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d45492-a87b-4536-bda3-d37c065c797a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d714ba36-aec3-4b6f-869e-b916b6398114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3568395-597b-426a-9c85-9fe1bfb202bd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389029c4-e51a-4366-8d8e-376467897ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7a8fd4-8e32-48c1-9e7c-cdffd863a1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9490f2cc-4587-4468-8f76-0aa8720b1d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbad5ec-a860-458a-a2bf-3622d03f455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed96dc0-28e4-4475-86a6-c20280eda6c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4817245e-c2e0-4299-927c-97d78b06b305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64408b63-83fe-47c8-9496-32c3be15a716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1b2ef5-b0e7-4cbf-bf72-21539eae6a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04637762-150d-4f78-a576-f8347d531acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a47e54-9ba5-485c-abc7-6b28f36bb751",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6684fd-7c73-4e1c-803e-beaf839bc3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6332a1a8-fe0a-45de-92a3-ef59bbd25f68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb9d64d-6c6c-408d-9f91-49e6c2441dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b7f7f8-b83d-4f34-a477-1949c8566c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bf9068-4e85-4fff-9c4b-397221d6d592",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763ff56a-d25b-4bf3-9869-5ff8dce6fc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f4e89e-2b4c-49ca-b5d2-18bb12f524b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073d867e-e189-4d89-8632-3ccdc82fe71e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82211e38-bb6b-485b-bf2e-60ba64c991c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e12787-38a4-41b4-b559-70a5baeef149",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f979c-63dc-4006-a9b5-7a63607e56b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae67e13-0de4-455a-a843-88ae5229879e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221dffd7-0dfe-4e9c-b2f2-9bf19e44f910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2264e2-9e51-40f6-a513-0dbfded2db73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e58cce8-686a-4734-89db-d8b50a251247",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9724fc-2621-417b-adf9-f9bbbdc147ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "592be97e-7540-4590-bc59-3a4736df934d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9def271-c98e-42e5-b262-d3553304d83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19ec80d-4892-4611-8008-6a24890660a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff4256a-6103-4728-893c-6dd0a56a0d59",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef35400-aefa-4760-a213-ac74747fcb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713ffc0a-e53e-45ec-86c6-9d12043d9764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00925dc0-72da-4587-830f-6dd9f5a80fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae519f5-e238-4407-a427-5965882c5a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918ac7a7-6955-4526-953b-881a8a1f8c85",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc82c881-66ef-41ac-b3e0-c6773e1054cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82f75a2-eda6-4455-bbf6-0ef9c89d614f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fccb8e4-e83a-4f15-8d57-d0a9a6eddc7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0071c99-81db-414b-944a-0b3da93a3fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a009e-a353-4961-99bf-1e9b36f2e312",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd43ee5-71c7-4f44-89df-1cf34fa14a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e85c1d8-560b-404c-8c4a-7df93d081547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64634c54-6000-4833-ae5c-3f87d4028eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a2b4c5-2d4f-4dc3-821b-f98adbf6a580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18ccae8-dcd0-4321-9cec-400247d96903",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b18f76-56bc-4149-a1e2-a823d4465982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d842071-ca4c-4e3d-aa8e-44819292a315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfed572f-da60-433a-b995-f66950b5f452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f508785d-94d9-41c7-b167-e4333c841c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52867550-02a6-40a8-b28c-5780f510a41b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592b137-182a-40b0-ac44-f3c94bb40323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e11387-a6dd-440a-baa6-9954a1e84292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f33a79b-2098-4e2c-9dd5-bf15bfcccff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2676008-b264-4dac-ab81-8e48ff98fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7971676-4853-4a5b-bc3b-52b1ef361c38",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38b993b-7021-4215-9152-6137ff712097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28123376-d331-47b9-ad15-0bced94bec78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c5fdcd-bbe1-4f4a-91ae-a363e07ebfe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7116e445-e970-4ae8-9e53-a176de9e93bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3cf2d2-0cc2-4008-b266-d66ede4678d1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5f4b8d-d237-4c4e-a36c-26fd6b30f6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146b738b-b539-447f-b8a5-5ec3de3aabc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19d82ba-7f8e-43ab-8dcf-e187d446542e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bf5bce-ae0d-48db-83d1-ea61e090fc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024695f3-8218-41da-9188-e28db005bf3d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9bc561-03d4-47a7-9cc6-0c062ad5c54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed38a8ba-852c-44b9-86c5-eed550bfb45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadad94d-55cb-4086-b43f-599506404d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975e9085-3dac-4d4a-a5fb-8957de31a97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6d2010-2a0b-43f9-81ad-276db23bff30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12742443-be41-4aaf-8fc7-fddbcba96f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3cbdb3-5c9f-401f-bd4a-070b14727b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1331bb8f-3f90-4f7f-abde-530f106e65a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70944c54-2178-4d13-b41c-a13e89d2cc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca5c5b3-5df3-4742-bff0-e97ac2ffe29c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7a4364-43d3-4738-b4bc-ce77bf18ee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46d2a57-c5eb-4d23-90d4-8d54ec8a98c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37455e0c-4947-4035-b04e-0ac3d2b9bac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d46476be-2230-4023-ba28-9d8a9a5fca08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975f3fcd-9a28-4fb0-afc9-cf209e1829b4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918988a4-f5ca-4eff-aaab-3c8cb0be221b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c81841a-ea8a-4dc8-a7f5-750335026a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbebd387-4548-4247-98aa-bf31732bc94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8fb2b4-742a-4b39-9c06-09e7c274348b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0b812f-d5af-471a-82c0-b82e83de8772",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bd37d7-b3ef-4729-a823-92efcf757a35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89e3ff5-afaa-4ef0-ba43-6c1b6b4b1630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714c140b-d444-448e-85c6-a45fb7e2f682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e761d39d-d039-45e7-9b42-f691ea5b0579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f067e6-b231-475c-99b3-840de9b86c5b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e676d0c5-ca3d-48dd-83d6-8ece2d8561a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6710bc1-3571-4a47-ae4a-b1a56a63284c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0046360d-142b-4ccb-94d7-31ab0fa4a15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7671bb-a7e8-4f19-85f2-2da63a344688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c8a860-7855-4116-b288-f689979bce2c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6eccf2b-e63a-4d5d-87bd-df2d7f9e258d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8632153d-eeac-4568-92e3-a869038e3419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b12021b-5e5b-44b2-bb4f-f07b3a223eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d8f29a-73a7-4131-b993-5a15cf10bce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89c96ea-1a29-47c1-9235-d467dca7ebfe",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5828b0ef-6bb0-4229-aca9-f3ae25f4224a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee843bf6-a0c2-4adf-ad29-10db3cf2204f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c698cc-4b33-4af4-a835-d01136922573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b950f61a-031f-4ba7-8338-bb68f930234e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d4a4d0-f03b-42ff-8027-ad2306e918de",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573f0ad3-c67f-4477-a08c-91d368427df9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af1306b0-8bc5-45c8-907f-f394ddebd3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38445a59-38f5-4cc2-8aa5-dbbfbd59f870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91205ca-204f-4cc3-9673-459d9206aaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900e3787-0e04-4c39-b46d-4473af097e7f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e357a427-96a9-4885-8bf8-aff017ddbde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "044c2659-80ce-4f1f-a451-c697f40f3668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "136bc623-5f84-45d1-906e-05ac6c45610b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146f460d-b89e-4fdf-b05f-2a02b5539b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c3e0ab-b89d-4dd5-a44d-e886a311254b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233b600-9fef-4497-ae22-5473f1e2a17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8615fc-39c3-46f4-968d-402ca1da2167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e627f86-5b06-4b14-97fa-79edcf70b1d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca46b046-7deb-46e8-8521-55e29b2e6c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e23e2b4-1538-43ff-97b0-1e3392e3087b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0043c33f-bd8e-488d-ab6a-aad1641e3438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac13dd6-77a6-4541-ad11-826f077097d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2562bf05-35c0-450a-aa25-dcf2caf26ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e1aff3c-4912-4810-a7aa-6b0d266506b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9198375e-7bd7-4367-8b56-8a8a334a0ac0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb436d9-a439-4c0b-b2cc-6f3fd5dd3276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb22730-8539-4870-9f14-4779212e9e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3912be-b9d3-4cd8-ac16-9540725db47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb986847-87b4-42b4-bac2-2d60f2726532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09728c39-f2ec-484b-9b66-15d1f3899796",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d305a97-6f0a-4e14-bd68-6e39138ec211",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb1eb05-7354-47c2-8e09-f062a106702a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a906f24-46eb-4043-90f2-ee56c8a64714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a1b1eb-edaf-4bb7-a315-ca09b2bfa101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df7d5c-09cd-4786-b46f-67ecd2a51425",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e806f1-e5b4-4b70-9e51-f428aaeffa56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa9804c-90e3-423b-ab9e-656dd121c148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53830cf-c4e5-47ff-a613-9fdbd7ed4d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cff6772-1e1e-4f10-b73b-02dff6b3d578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c8454c-6218-403f-9464-b9486e50e34a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31cccf-bd02-412a-a741-b50f41a5cc32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea604532-6161-4e29-8665-cd62908e0e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74df4f95-2bac-40a0-ac2a-cada957c69af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8b921f-d217-448e-bddf-49f7a92b2a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b0d244-57ae-4601-80a9-e972fa0c6636",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5160f86-f797-4050-a8f8-91bc2d10777c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91912532-9bc4-40cf-9703-6b0dae2dd59b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32741f00-b12c-4fb6-b982-f81ebccba14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8191d135-9b11-4247-a35c-91b26ba48ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d6c262-6ec8-4721-9572-36c14b78180d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15f5019-3125-4b1d-a7f3-7c139a1e630e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bba3d5c-372e-4c67-bd57-b7fef01e5577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3b8d1e-576b-476e-8cff-5df6d1f9a08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23be5a9-6651-4dc8-90a8-479fa566aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e58265-601c-4a1f-89dc-53f9ebd85ed6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d0b368-11e6-4784-a69e-c5233e451f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9ffd6bd-63f7-44ec-809e-c8e9bbb0ae8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5157ffe3-0aa3-4192-88e6-49dfe9c55a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1622d20b-1cbb-4c58-ab7a-309f0699b177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956a6d35-d041-420d-8539-cea0f5f54eaf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119660cd-510a-4763-bfca-de907e2abda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4783b514-dfa2-4c0e-a617-3076ee2ff518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b9659b-74b2-4772-b681-36934f6484d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec64dac-1a1e-4b72-97d5-cf61efcb53fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3520f065-035a-4bea-a3d5-bce4aa49ae3e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda4cb37-f3b2-427c-99c4-d8c8eee2020f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9782677-d789-4b61-a7d1-473508d776aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27df914-b6c4-479e-8016-1213117a70c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4709f39e-df9b-4a86-8604-d9d31d084502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ac9221-e0f4-4180-8f6f-93ff9f5f7d39",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7609bc-c744-4ea3-a292-93ac97956268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3a9663-3ac4-4d56-92fe-819dac486a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710fcad3-fe83-4c36-b240-30e06a591220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7872e90b-605f-4427-a3be-96249db31147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d272d052-eda6-4fbb-af63-316833233a47",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360db643-a82b-48b6-ac5f-6106eece45b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12c0afc-917f-4922-88e8-4a843f3edc10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3b1727-0561-4f76-a9c7-51ead68a0d5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab03835-8132-40e6-9bbf-26d1d7cc3117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7568650-e7ad-4403-986e-45cf65852bb3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee290c8-8bac-47c5-ab0b-18280ecbd15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61aa4d45-c1e9-43e2-831f-0815f4fe7aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa6ee2a-f0e8-438b-a19a-2a202e9c3b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f2c340-8bfd-4f7b-91b0-a5ed8d34c1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9980690d-1585-448c-b2e4-5bab0353bb27",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a78e882-49a6-495a-b633-39f79a28d0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fefcb753-47e6-4a1b-a147-35bb0ab371b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e4217f-a4eb-4fea-a651-15aa9d0ccd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b82aa9-7d1b-4af3-9aaa-c020bcfb1a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f9b069-8050-4296-b483-2b2cc6405b6a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac5d625-8b64-459a-af73-1a42dffc1b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae5ea273-5c66-4a6d-a08b-604bc667b22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cadd29-f42a-424f-9a2d-8034eba2479d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee301da4-fe93-40d7-a98b-32932f4df0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c9b072-3fcb-4692-9ed7-eeb671269cae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b4b1b7-de5e-4e8f-b6d2-c93c7c411944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5655383-3fc5-413c-9ac7-7b1baceae92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926259db-7e46-46b6-bba3-5da1f6fc2833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a481051-cc9a-4edf-9957-0194a468b49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b6e771-2f98-4e58-9b43-505152197825",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0473007-8e28-49cd-9f27-46b816983198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75b892e0-cde7-4c08-bf41-2a06b2fb1897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bba004d-9ad4-4d95-b5a6-def695b0bf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62742424-1155-4470-b76a-833dd14a3c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d27e0fa-5892-4135-a08f-c4f5847c3752",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7ad584-9730-4db7-81e3-74fbde53f913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c51e0e4-0871-4bd9-94f3-7ccff829636c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abaf985-faef-4cdf-90c6-be4904c2261e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dc6bde-805f-4488-869b-165e5db05e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b92813a-36c9-4e21-8107-4a9f6a8e8eab",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5084d4c1-11c0-491a-b95e-96851dab5db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0531ceca-c7a6-4c55-b11c-d6940214385a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593b2bcc-e8f9-471e-a442-c9a02c0025d1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af59c21-059f-40f5-9e1d-ffa3d65ec6bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dac880d-cda4-48c8-b7f5-455bfa778dd0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97297aad-2f7a-4ecc-90d5-cc7ceb15ec6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8540ad32-a3d9-4621-9558-f928c179fb8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9efc8-67cd-4aaa-8e66-9f41531f6fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445005ce-8e8c-4af2-9dbc-660e67024f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcfda99-9a04-45ec-9547-34588dc95da0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c4a6e8-5108-4251-a4ab-2e9205b41f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5f1d62-04af-4815-91aa-932cf91c1025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23a937c-1c62-462b-85e0-fa3a4b05b452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a828fb-c6f6-4a98-888f-35ce52c6eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ababf8f5-5f0f-4a9d-be95-08fadc70dd04",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1d1af4-88ec-4dab-bcb5-db61bcb051d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755f6b39-9ffa-4286-b40f-cf5855a78d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bc1000-0c27-44ef-b280-1431e1eae3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f02431-e2ab-433e-bb45-4ac0cc09bf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4102ec4a-4b53-4b55-9dd9-4ccbd48c1b37",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9f690f-2a81-4825-9428-b05f39df22a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b44c1022-b771-43fe-9856-84fc5642fe5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5218a33c-d191-41ba-88d6-ea2e660afcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd426982-52c0-462b-b7cc-59695a89a613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c19c89c-6f5b-4347-b692-09d237bbf502",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cd5327-d98a-4580-96e5-f90412bd1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b95a3e94-8705-4d05-bb89-4a0c781ca9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab6fa2-4cb8-40e8-971d-294719892090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f390291-56ab-4158-870a-cee505380a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d796d886-d84e-4d8f-ad19-3d1201b2e995",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b963e472-803c-4e6d-9cea-6dbede520fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3e79db-5ba3-4ce6-b023-5fb726fdeb82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3be42c-ec84-4ca0-8347-2f68bb44fb24",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45706fe4-5a72-49bf-9bbd-0f7608c8ee5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b712a8-f751-413d-9759-ae65cd005791",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e6ac02-8b71-45cf-ac2c-4a613b747560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98313e78-c269-4682-8d63-95a745c88a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3d3043-db9f-4973-9dba-4ffdc884a3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00497dc-b73b-4739-a379-c93bebca2f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1730186b-1814-4e8d-9cd9-1989ae75d6e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fc5e4ce-d73e-466f-8328-087cb50a45e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30cd19d0-9681-4f72-bc80-4efa77e3f4be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03a7d3dd-16a2-43f1-925d-8290da01cb16"
                    }
                  }
                ]
              },
              {
                "id": "4554090c-4322-4ecb-81d8-64671afccdea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0285bc5c-f82b-4a4d-8efa-5d6e6eb9c8dd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c69b2fc-6e39-424b-a129-dad98973f569",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7eb78b4a-5e65-4c92-ac71-da693ff57a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3870f749-cf5c-4291-9277-074e61d3d108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e908476a-f500-4475-aeae-b606046d7648"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34fae4e1-ec64-4eb5-8330-ed385ddb0869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc822b0d-7d8a-4427-a6c1-140f1ca944db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed1a36a-9a39-425e-9e59-3f23a4d17a58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a548521-1c5e-4900-b65b-2b30fdcbcfb7"
                    }
                  }
                ]
              },
              {
                "id": "85219b97-4027-449b-96a5-1ca4a217b6fd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9cf724c8-b9ad-443b-9c9b-01ba6078d718",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112057a-5674-48c6-baa9-fc99ea530c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ff703a6d-d449-414e-96ca-18e5f412128c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27131b1b-e684-45e4-802f-8671566335d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11337ea-b8fb-4800-9c27-0eb2c938d980"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37873789-620d-4800-9367-384d7a27310b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87544cbe-60bd-4a33-b44b-35adc43323e3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b67d4a24-5cb4-49a1-91b1-e3e7d95a14d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "754309cb-8eef-4195-93f6-b0264ce5c386"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1c6ef90-4f06-4956-a066-16381b2c6598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be3a8dff-07fe-40aa-a446-0033b8cbdb4f"
                    }
                  }
                ]
              },
              {
                "id": "fde0fe99-1f43-4f83-8ecb-a8b67e5c0070",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da294197-bc74-41ab-b0e4-00740bc522ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9b276714-c579-4f41-9a65-bd3e7594b042"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12ab3346-c56a-480c-b005-80d73cfb46a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5ed7b68-5fd2-42fe-8bff-aefb59dc9f8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ede79ca-5782-4a90-9e6a-dfefcb84f252",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a547e42-be89-4a7a-b861-f41eb81f72f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d688d82-ff4e-415d-b870-fbf6b17cb122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aed66cb6-ab3a-42d1-9484-2bc7909aa5b6"
            }
          }
        ]
      },
      {
        "id": "87934f7b-490e-4b29-9b04-b21ad731defc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "63001e6e-79c1-43e7-b61e-9852b3881b64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45029e8a-d671-4c68-bc70-695bc617c5b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1d90f76-92a4-425c-bb4d-847769d4c2ed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29404b5a-747d-4013-a02d-987086d4d56e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "292ec9cc-762c-40cc-a977-11bac7ab7ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3355efd-7a67-4ce0-96e7-db69197e0702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b09a69c1-959b-4015-9f80-4d40c656ccb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "840ebfbd-6351-41de-88f5-0018a6bb593b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cb0cffa-8083-48aa-bbf5-1be6ffe39549"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f19cd9d8-75bb-4ca6-9158-091c60175085",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75c6cc68-9e85-4d61-85dc-47c0a3a12e9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d9ff36d-b6a3-47aa-a87f-ff6f04d83e17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "68747a49-932f-4c25-b2b8-b4da9a242ca0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "405db5b6-77db-4c12-9910-a4f1d1be0e3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef531213-f6aa-42e7-a8b1-ca5d5f3f07b4"
            }
          }
        ]
      },
      {
        "id": "5d2a99dc-e14f-49a7-8f7e-b7c9921ce417",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "902e7d9c-5302-44e5-9ef8-c90696ad20dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26ed4b84-e333-4bb7-b5bc-03477abe83e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3a481b2-bbbb-42e8-9315-5fbe923f201b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc28952-f735-4c81-8d14-f8cb268522b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2bd2486-f1aa-4399-86a3-4bcdf896b79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553f54a2-4edd-4838-b640-b200d8be85f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b62c8079-9dab-442a-a8f7-aed11b7fa9c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d2b7881-96f9-4de2-a515-65f3e913be97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e81cf0ad-a766-4d1f-8a00-89c4a735bb15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a99012e-a5d5-4a58-ac3b-db97906237e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "903e0dcf-6a38-481b-9f4e-6352e2674543"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b831e2d-9759-4ace-851b-608fb795812a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f0a97c6-57cb-429c-81c9-d03e7c2a5f36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "457dc4f6-a4a1-48ad-be5b-3ee9fcb16aa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8296394d-0ef8-4e05-a909-7b7308aa8d94"
            }
          }
        ]
      },
      {
        "id": "e07ce45d-80c3-497c-9835-b45bbe24a35c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1687e524-59d9-4388-93d8-9c4aa4b9a418",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eab56214-8572-45c7-a7e2-2fcd02c076b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a059740a-f7f9-47a9-8f5f-92f853e9e354",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b4ac44-0109-42c7-9f9e-196efcfa338c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4bb5b20-ff4a-4235-b978-8b98dd2bac4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bd19e9-6c5b-4702-91ce-a52b3b99c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8ee36da-1c09-42a9-8a90-4bc019f8e4b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff0fe1a7-dd4f-4be8-802c-d13b643d0f81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "893470bf-bdfa-49a5-90fa-4af6b8c3c874"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8b74c9f-e86a-4e32-a341-315abc8c8197",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c38b3563-e160-4672-9f83-61e43bb74e20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ba0cc2c-eb3c-4c71-a9ad-54d187f0870a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4d4fd92f-a5ec-44f9-897c-b673dac0c97c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96bf9f4b-8217-4683-984f-e5485ce55767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fe77cbf-78f9-4844-8187-7e8bc4ff734a"
            }
          }
        ]
      },
      {
        "id": "7f7cd60b-6b33-412a-8ca2-4e124c75dbf4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a77603c6-3e66-4d5f-b965-7794ee643c6c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd23e74e-dd0e-4e69-bf30-b1b0e28e0b72",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2ee5e9ac-42eb-4ec7-94f9-55200eee6292",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea950bf2-ddf2-4ba0-a1fe-ca358dfa5906",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "122759e6-215b-480c-9517-2ccac48b2f0f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 513.5845070422533,
      "responseMin": 9,
      "responseMax": 21769,
      "responseSd": 2167.4525442534946,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697330178946,
      "completed": 1697330336998
    },
    "executions": [
      {
        "id": "d4525cd7-3dcd-4e5e-85fa-4fae8d08ee8f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6519388c-f418-4033-95dd-7875fc65b301",
          "httpRequestId": "6c41cbd4-d50f-49d7-a872-5a3cd6c3ed25"
        },
        "item": {
          "id": "d4525cd7-3dcd-4e5e-85fa-4fae8d08ee8f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a93fc8b4-8123-46f2-bfa5-bf83bc584885",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "a8c35b00-80e7-4a0b-9027-12574223db60",
        "cursor": {
          "ref": "3d22b4b8-0ff2-41ef-830a-75e4ca90a235",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "afcc5637-5f66-4fc9-b8a2-2d47e36b6e03"
        },
        "item": {
          "id": "a8c35b00-80e7-4a0b-9027-12574223db60",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "470f4bea-42ec-47a0-a9b6-d18c240b1482",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "a793f700-7c31-4fe9-a3c5-e0241765aab1",
        "cursor": {
          "ref": "8cf315c6-8669-4c0b-bb27-cc9ba0902447",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cccd6c74-6369-4233-a294-07b5301b1521"
        },
        "item": {
          "id": "a793f700-7c31-4fe9-a3c5-e0241765aab1",
          "name": "did_json"
        },
        "response": {
          "id": "ce28472a-5e78-4380-bfed-0f6d594d6d05",
          "status": "OK",
          "code": 200,
          "responseTime": 2414,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ad82ea-cf5f-4260-bec9-adad071ead41",
        "cursor": {
          "ref": "ab9b4530-5a2e-4b9a-bcdc-56eac65258e3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "998d884f-7522-44e8-ae27-d6605e9cf8c3"
        },
        "item": {
          "id": "f0ad82ea-cf5f-4260-bec9-adad071ead41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec884089-71a7-4b43-b48e-07d71198387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ad82ea-cf5f-4260-bec9-adad071ead41",
        "cursor": {
          "ref": "ab9b4530-5a2e-4b9a-bcdc-56eac65258e3",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "998d884f-7522-44e8-ae27-d6605e9cf8c3"
        },
        "item": {
          "id": "f0ad82ea-cf5f-4260-bec9-adad071ead41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec884089-71a7-4b43-b48e-07d71198387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046544d-6acd-40ca-a721-1a8071d5c05f",
        "cursor": {
          "ref": "b54065e2-594c-4f5d-b257-7e7432b2584f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f6eaafa3-adb3-4064-a3aa-45a520446167"
        },
        "item": {
          "id": "0046544d-6acd-40ca-a721-1a8071d5c05f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "287ca8ac-16b9-42bb-85c5-fe6d83f40751",
          "status": "Not Found",
          "code": 404,
          "responseTime": 314,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384f01aa-f8ea-4935-80b0-745da498ec6e",
        "cursor": {
          "ref": "0de21960-87d1-444d-83f8-355fca145761",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22b5a976-02c1-4d5c-b8ac-0e5b1083f568"
        },
        "item": {
          "id": "384f01aa-f8ea-4935-80b0-745da498ec6e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7188fba3-5f1a-4c92-8964-d03bd21ebd85",
          "status": "Not Found",
          "code": 404,
          "responseTime": 398,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020506f8-e8f9-46f1-8e01-7e32267d0b17",
        "cursor": {
          "ref": "bc5239b0-41d6-4d89-afea-4badb34842fa",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fa65a2e1-06ee-4204-8d16-4c3733cba030"
        },
        "item": {
          "id": "020506f8-e8f9-46f1-8e01-7e32267d0b17",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c25ca38e-a380-44a3-b8e4-1bbd7d17da38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade08090-9e0f-4095-b132-ab2127bfeadd",
        "cursor": {
          "ref": "e69e014e-1bee-4f81-98c4-758dd9ff96a3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f8756318-8a69-4dbb-bc5c-bd4d8b470d32"
        },
        "item": {
          "id": "ade08090-9e0f-4095-b132-ab2127bfeadd",
          "name": "identifiers"
        },
        "response": {
          "id": "93c4e18f-816c-4992-8580-506ed95585e6",
          "status": "OK",
          "code": 200,
          "responseTime": 2003,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3320114c-96a7-47e3-a984-ffc82ffbaccd",
        "cursor": {
          "ref": "eb1e9b49-b2c1-490e-bc2e-8c3042013dba",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0f33180b-b2db-49ac-ae6d-84f137cd6987"
        },
        "item": {
          "id": "3320114c-96a7-47e3-a984-ffc82ffbaccd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "beccc803-c600-426e-a59d-533cf8c54fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1681c79-c1fe-4717-a223-0bc902f7abec",
        "cursor": {
          "ref": "072ab9c6-8e8e-4aa1-918a-2079e1e2f1ef",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4b05ae55-0d09-452b-9be9-2478f7050a82"
        },
        "item": {
          "id": "f1681c79-c1fe-4717-a223-0bc902f7abec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "01569fd3-ea33-4655-a5d6-77f27208de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f4b9d-679b-4003-b3aa-89be038c19fb",
        "cursor": {
          "ref": "2bded306-7174-42ba-a204-604dcf90cdd9",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d13dc07b-28f6-444e-9315-6612d8f31efa"
        },
        "item": {
          "id": "ae5f4b9d-679b-4003-b3aa-89be038c19fb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8b65c7f5-7ba6-4d35-ba09-c386d3a1eed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22de84e3-991e-4397-ad1d-efdc86821a4d",
        "cursor": {
          "ref": "270865d4-a17f-4a4c-8a72-f43f4a10baff",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ae561085-4d84-4b03-8fc8-cd94809558e5"
        },
        "item": {
          "id": "22de84e3-991e-4397-ad1d-efdc86821a4d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1981dc53-afa8-45b9-8b86-526a27cc4e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2407ca-635d-4d93-a4a4-c6b40b686477",
        "cursor": {
          "ref": "196b060b-8bbd-4d95-8853-eb7c7e4b88b7",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "194359ff-d305-4b2c-bacd-e0914786f959"
        },
        "item": {
          "id": "3f2407ca-635d-4d93-a4a4-c6b40b686477",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0442f4e0-5fc1-45ed-bc85-066dddc5b284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd741f9-e82d-44bb-83df-138dc386a320",
        "cursor": {
          "ref": "a1832790-e284-46b0-a095-31382b2c5b65",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25665a82-a8d4-401a-8f0c-516748462120"
        },
        "item": {
          "id": "cfd741f9-e82d-44bb-83df-138dc386a320",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "229f8d25-2893-4699-885e-a82781918c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225392b7-e184-4d24-8074-486ae7c248b6",
        "cursor": {
          "ref": "55000142-2034-4d7f-9dfc-a771ccc83752",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b36e94da-f21e-4556-8e79-e0fd1b30277d"
        },
        "item": {
          "id": "225392b7-e184-4d24-8074-486ae7c248b6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ba6b03bb-747b-4e26-91e2-1da17e3d52ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa77503-19ed-45c7-94d2-2ba8e543a303",
        "cursor": {
          "ref": "a8219ffa-0659-409a-a21b-c0768ff93e7a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9bdda296-23e2-4813-953b-955f26829774"
        },
        "item": {
          "id": "afa77503-19ed-45c7-94d2-2ba8e543a303",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b31379d1-2773-4220-ad80-904536c86723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b11354-fce0-47f5-86f3-bac4234ac980",
        "cursor": {
          "ref": "6d72cb37-8b62-4c21-a71b-876b02636725",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6d6a3b7d-956d-48f1-a8cb-245f5c4e45b5"
        },
        "item": {
          "id": "42b11354-fce0-47f5-86f3-bac4234ac980",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "514e0f0a-1396-448f-8ad7-006a1bf2466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a767ae52-01af-4928-bd82-82bd4aecab5e",
        "cursor": {
          "ref": "53e6fa6d-1936-4e77-bb22-7bd49d092e52",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "da52f3d9-6174-4b32-ba05-116e548071df"
        },
        "item": {
          "id": "a767ae52-01af-4928-bd82-82bd4aecab5e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "10b338a3-5bd9-490c-b4ec-628177ccbb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584d9ce1-41f6-40ae-a2bf-0f7be3f61ffa",
        "cursor": {
          "ref": "4a5829c0-6e55-4125-9a2f-1a06da928f2b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81622b77-ef17-4290-a6f2-35f9b1ac4cf4"
        },
        "item": {
          "id": "584d9ce1-41f6-40ae-a2bf-0f7be3f61ffa",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d9f14a4f-b6d9-4173-bd2d-d43aedbb8269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4ec57e-a3ae-4931-a271-c86d9cf508c3",
        "cursor": {
          "ref": "5d321e78-4f3f-448f-812d-351474a79919",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c613f523-58ae-4717-ae21-a160daca1a20"
        },
        "item": {
          "id": "3a4ec57e-a3ae-4931-a271-c86d9cf508c3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a7ebe98b-cdcc-4ee2-bc8c-aa0f12578717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8ee472-e2cd-4527-873c-72a4c8868c88",
        "cursor": {
          "ref": "c04b2606-615c-4f01-be6f-16c296565c2c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "44994c59-fd9e-4542-835d-8ab2a3463abc"
        },
        "item": {
          "id": "df8ee472-e2cd-4527-873c-72a4c8868c88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c84b5d91-9fb5-46f5-93f1-e2b263ec8299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce94910d-c853-4b13-ab62-153c3176d30c",
        "cursor": {
          "ref": "6e11d70f-fff2-4c59-a464-71ec3e63c87e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a40b868f-1808-466b-9b3f-bb13dd0ae67d"
        },
        "item": {
          "id": "ce94910d-c853-4b13-ab62-153c3176d30c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8fe5dde6-6880-469b-9f25-eab7e41f6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53a2554-c106-4c62-8ae2-0d24da43139c",
        "cursor": {
          "ref": "b8c16da7-caf1-46d7-997d-31d4129e9eb9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "85bbe87e-d7ca-4995-9d10-6761805a4a9f"
        },
        "item": {
          "id": "e53a2554-c106-4c62-8ae2-0d24da43139c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4f533d9d-8ecf-474c-b9f1-1449b9efd32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ea2132-bd1a-4ace-97d4-48e23ea97537",
        "cursor": {
          "ref": "d1019ab9-e7a6-44d7-a72e-50c14673ea49",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "feaa56e5-9da7-4981-a928-19283a6011d3"
        },
        "item": {
          "id": "51ea2132-bd1a-4ace-97d4-48e23ea97537",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45b3ec93-7f36-4805-a706-90fad177f7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d736195-fb94-4244-b1fb-df66e2d220ac",
        "cursor": {
          "ref": "0b71deac-e3ef-4750-a1af-f942635cddfd",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f90ea94-d6c3-4ad7-b0c0-aa28bfcdeb70"
        },
        "item": {
          "id": "4d736195-fb94-4244-b1fb-df66e2d220ac",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d5762a9f-b517-48d1-b931-eb6f4609d5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc820bb1-53c6-42b4-b453-b54dcd423b67",
        "cursor": {
          "ref": "8dfe94ad-a254-4549-ae82-2a5a52f77c68",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "847cc5ec-2022-4f8a-b752-101a22238335"
        },
        "item": {
          "id": "fc820bb1-53c6-42b4-b453-b54dcd423b67",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "92eadb66-4d58-43e1-9cd3-451051ea7b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9344eb9-5c5a-45aa-846b-f2a261b75a41",
        "cursor": {
          "ref": "3bfc5d14-1b66-48ee-8277-312b67e90d5d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "20cea980-0756-4bec-8165-ebfe6d2c3d9a"
        },
        "item": {
          "id": "a9344eb9-5c5a-45aa-846b-f2a261b75a41",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2296ac8c-f900-49ee-a8b5-0f83623fc64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3b8275-1ee6-4718-bf8f-93e84afb53f0",
        "cursor": {
          "ref": "42a8c761-81a7-42a3-94c1-36a38884d8ce",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1c3c827b-7d4d-4416-bb2a-eb40173887bb"
        },
        "item": {
          "id": "ac3b8275-1ee6-4718-bf8f-93e84afb53f0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b9969428-2e8c-44df-94a7-9cf1dd1d9d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dc83e9-c618-4510-9a30-05deb6a3f75d",
        "cursor": {
          "ref": "a304daa2-e018-40a2-b149-afc2f44d2062",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4ac6caf6-fc58-4785-b29a-5af92bb81fd5"
        },
        "item": {
          "id": "e5dc83e9-c618-4510-9a30-05deb6a3f75d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6169e7f9-08a6-4d72-91bc-bcf4cdbb1108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d399969-403a-4d75-ac28-a303406c8505",
        "cursor": {
          "ref": "1c0d455b-ac75-4b4b-a7a2-b301b863a530",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "68ef1ad4-ea19-4b45-a0bf-f125a27d6da1"
        },
        "item": {
          "id": "8d399969-403a-4d75-ac28-a303406c8505",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e88632c3-dbd0-4b5c-b540-e2b9f574b7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60b60ea-6dc2-4220-986d-744c94f56e1a",
        "cursor": {
          "ref": "d8c0f76c-cbe1-4a40-b867-f2bb4e6cbb8f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "41f03ab5-0832-4225-bf87-e5da6ce23be0"
        },
        "item": {
          "id": "d60b60ea-6dc2-4220-986d-744c94f56e1a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c3b8b921-16de-49fe-a2b0-37f897d0b650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052a747e-952e-4460-875e-0c5b1ed6776f",
        "cursor": {
          "ref": "8e3e382c-7ac5-488b-89e5-f87d0a3334a4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6f2106b1-041e-445c-8d28-0ac11be4949a"
        },
        "item": {
          "id": "052a747e-952e-4460-875e-0c5b1ed6776f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72ceeb85-303b-4b2f-87dc-d068950085a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57edc6-f24f-4442-90a0-19429c8f1748",
        "cursor": {
          "ref": "dc3fc47d-dbc4-4708-a1a4-94ed115f8ed1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "eb9eb5f8-5bbf-4190-b11b-9514d279c34d"
        },
        "item": {
          "id": "8f57edc6-f24f-4442-90a0-19429c8f1748",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5d41c93b-ca16-49d7-b5fd-a306492677f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f8c919-a9b4-4870-93cf-a7917d28ccc3",
        "cursor": {
          "ref": "843d312f-4cdd-4a1a-993e-109155c2926c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4bedb9aa-9de7-48d6-81be-2fad786c12bf"
        },
        "item": {
          "id": "f4f8c919-a9b4-4870-93cf-a7917d28ccc3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "870e988d-ae15-42bc-91fe-6657cf0e277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e46bb80-e38a-4529-9e7e-ead2c0f0a6ad",
        "cursor": {
          "ref": "1a506c84-fc4f-4b0b-9ebc-945ad1eebba5",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5e5de6c-85ae-4c9a-ba14-04f5dbf6cfdb"
        },
        "item": {
          "id": "9e46bb80-e38a-4529-9e7e-ead2c0f0a6ad",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0de3ce7b-e654-47a0-a316-7ba54987fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b448ea-8f47-44a1-b0a7-023c2c14902b",
        "cursor": {
          "ref": "1746184f-f57b-479d-86f6-54144ea9c5db",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a45f069-a99a-4bdf-a602-cfe92c0482eb"
        },
        "item": {
          "id": "a6b448ea-8f47-44a1-b0a7-023c2c14902b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b5ebc7df-3200-4e64-93a4-937b5fd38f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35151d48-0154-43f8-a5c0-9752d7f71051",
        "cursor": {
          "ref": "4679d6ca-9652-40bb-8295-457ecd9d2e1e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9b79bf1a-1204-4022-a3e5-83ac8eb29d9c"
        },
        "item": {
          "id": "35151d48-0154-43f8-a5c0-9752d7f71051",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a89e4010-edf8-4e56-ac89-683c8fe16b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e7bd23-895b-4e1a-9c80-bea79466b87f",
        "cursor": {
          "ref": "2a5cf726-6dda-4310-a947-711dc8a0a934",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d256d5f7-fd98-4a1c-85c1-16809adb77f4"
        },
        "item": {
          "id": "70e7bd23-895b-4e1a-9c80-bea79466b87f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "805abe35-285e-4683-8fe1-8abd46ea4e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfd2c56-ad84-4bee-98fb-3aa7dafa5ea9",
        "cursor": {
          "ref": "9e13afa4-0720-4c56-9efb-e8d4a52a6a58",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "61002cd9-fd04-4e2a-92ed-004e7845f1c9"
        },
        "item": {
          "id": "0dfd2c56-ad84-4bee-98fb-3aa7dafa5ea9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fdcd1817-bdf6-4dbc-891b-1c2ca48842ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd31bd58-c9a1-42b5-9517-fc66976c5f67",
        "cursor": {
          "ref": "24369e48-079c-45b2-bbcd-0f4091c4d9a9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bea6cf35-0534-401b-b7a6-ddd0605e0e14"
        },
        "item": {
          "id": "dd31bd58-c9a1-42b5-9517-fc66976c5f67",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "58d73292-6114-4aa9-b4df-9f4df8ce8254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb1b10-790d-43a6-b701-3e5280a03722",
        "cursor": {
          "ref": "dfdc5e19-e8f2-4b8b-84f9-31d740531d9f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8411d418-7009-42fb-a581-f097ecbc7dad"
        },
        "item": {
          "id": "03fb1b10-790d-43a6-b701-3e5280a03722",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "330e8a1b-08b5-4458-bcfb-47424d828e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564b8f00-5b23-4d86-a707-808da7e878bf",
        "cursor": {
          "ref": "53749e4e-b992-4e1e-be9d-1b242a1915d3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4226574-7f28-4977-92c8-20b7bb6fa361"
        },
        "item": {
          "id": "564b8f00-5b23-4d86-a707-808da7e878bf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "eab54f06-8293-48a2-b0fc-691df7b574c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946eb9b2-e63f-4b61-9efb-1d85b475f443",
        "cursor": {
          "ref": "1334935c-cf12-4785-bd94-e94f582394bb",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ca0d67f3-05fc-47ad-8764-ea13c9dc0e61"
        },
        "item": {
          "id": "946eb9b2-e63f-4b61-9efb-1d85b475f443",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4d23e895-26fc-4ae6-920f-b6fe6d8f4c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fc2652-ed36-41b9-9a67-bb59d37c7e4d",
        "cursor": {
          "ref": "bb6f87dd-5fe3-4077-b2b4-96060c3b2834",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4b5c4754-b4f7-45e0-8825-22a5b0633e65"
        },
        "item": {
          "id": "e1fc2652-ed36-41b9-9a67-bb59d37c7e4d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c6e20f53-683e-4032-9ae1-733acf5b5db1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 3100,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940d880-c71b-43b8-8b81-8e7ee4a6a2c2",
        "cursor": {
          "ref": "6d23a6da-dc2a-4d41-9093-aaf12bc12177",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "083fa1cb-4994-482e-b307-7c5fc6cfe932"
        },
        "item": {
          "id": "d940d880-c71b-43b8-8b81-8e7ee4a6a2c2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c7cc9649-cda4-4d1e-9e2c-2c9e1a081902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989ebb93-6fb8-4188-be41-a776852a1228",
        "cursor": {
          "ref": "a89c150b-bc30-46d2-89a3-63410aa88148",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "15649b6d-64de-4247-abff-42807d0fbf8d"
        },
        "item": {
          "id": "989ebb93-6fb8-4188-be41-a776852a1228",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ce1b158c-faf8-4169-a477-a43bea7248e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b284f66-6f6a-4eff-988a-e9f68306d74d",
        "cursor": {
          "ref": "9f3e4f95-2a9b-46e3-bb59-13bc78515a4a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dbbbd3e5-60a2-4caf-be4c-17a54540109c"
        },
        "item": {
          "id": "5b284f66-6f6a-4eff-988a-e9f68306d74d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "98c84d96-4655-4035-a7ea-c4bb6c4cf9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e07176-f008-4eaa-81eb-8125b031c3b5",
        "cursor": {
          "ref": "8a0e4de1-0ab2-48f8-aa05-8f5216d84673",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7be8029d-b657-4af3-a3c2-95f5c305af8e"
        },
        "item": {
          "id": "b9e07176-f008-4eaa-81eb-8125b031c3b5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5faea3dd-2840-4e05-9da9-f952ffe873c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635de6c1-19f2-4386-9100-3e14ca82f4d8",
        "cursor": {
          "ref": "5048905c-cb04-4ea5-a396-b0d4e067edfb",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2de62bfb-e7ac-45d6-a6e9-0c283445abd4"
        },
        "item": {
          "id": "635de6c1-19f2-4386-9100-3e14ca82f4d8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "848e0dc7-014c-4e8c-8cf4-874c9c9d0b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05df110-a706-435e-ae35-d66c15e9680e",
        "cursor": {
          "ref": "87f94580-e8b1-417c-a6b8-364b0e3eb188",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "290f21d1-8e42-4882-81b1-101cd8e6de93"
        },
        "item": {
          "id": "e05df110-a706-435e-ae35-d66c15e9680e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e450c365-8f93-4d84-bd53-53a20abd02e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82eb193-abe2-47a4-ad2d-1f9f5f80fbea",
        "cursor": {
          "ref": "c2ccf4f5-ae67-4019-877e-5917d3232a4d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "efdeeedc-5d2b-4d57-b5cf-307a6bc4d57c"
        },
        "item": {
          "id": "a82eb193-abe2-47a4-ad2d-1f9f5f80fbea",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1f085de9-93e6-45b4-897e-bdf0d82d6401",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 2898,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cfd0f1-0159-4bef-93c5-d43d401e7141",
        "cursor": {
          "ref": "ad2ced5a-8074-4bdf-8d78-e74091514d15",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bf3dcdad-9a83-4144-8ed9-276f8eddda3c"
        },
        "item": {
          "id": "68cfd0f1-0159-4bef-93c5-d43d401e7141",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ebddd5a3-054b-4b75-bdcf-69d162ceb168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9253edc0-7e41-474e-8129-719d84c7707f",
        "cursor": {
          "ref": "e3002cf6-f39c-4a38-ba53-938f98e9c994",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0a04001f-1392-4d6a-a8ef-538a5cbb160a"
        },
        "item": {
          "id": "9253edc0-7e41-474e-8129-719d84c7707f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "792fc1d6-1b93-4245-8db4-099db38ac4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b87d26d-df14-4a6f-a153-abc41c862cbd",
        "cursor": {
          "ref": "25bebeb8-b469-4c08-9976-217fc222f335",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a429bef-fcd9-4717-99ac-7899f8bc66d7"
        },
        "item": {
          "id": "7b87d26d-df14-4a6f-a153-abc41c862cbd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ff196be-e648-4887-ab27-2684d4339b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b0549-bbd0-4ec1-9948-f10aa2490861",
        "cursor": {
          "ref": "4f96a856-0712-4bd2-8b43-443853292c5c",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e551bcb9-cca7-4e1d-a9de-46039f05f351"
        },
        "item": {
          "id": "d34b0549-bbd0-4ec1-9948-f10aa2490861",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2d838832-c3b2-4ff8-84ff-8b4ac9505f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "004b3dec-fe7c-4169-8f33-85bf79eaf729",
        "cursor": {
          "ref": "b19dfe07-c10b-4a7d-b608-5ed1b78efb93",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98efe682-0eee-4d13-ad5b-69ba20d810ff"
        },
        "item": {
          "id": "004b3dec-fe7c-4169-8f33-85bf79eaf729",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0f68d420-bfd3-46b1-bd53-08e4fb35a5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6e67d0-3190-4a7e-8e0c-be3ddd2d5d0c",
        "cursor": {
          "ref": "3444a7c0-3ecc-4ac1-bc50-788a360bac80",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0ebabcd2-fe76-4495-a4df-92f8e24e4331"
        },
        "item": {
          "id": "2c6e67d0-3190-4a7e-8e0c-be3ddd2d5d0c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fe622859-0d30-4a3a-84ef-7961adb8260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d889e2-f184-4080-b677-b6be96fe99c0",
        "cursor": {
          "ref": "6efd488a-7b28-41f1-8c4d-456a17761d61",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "12fd9c51-fdd0-4fc1-9201-da6a18b8e3bb"
        },
        "item": {
          "id": "58d889e2-f184-4080-b677-b6be96fe99c0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c6315ffd-bb50-4b3e-b030-7886f0a98431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28eef8ae-67aa-4ac7-99cc-5220a198091a",
        "cursor": {
          "ref": "e91b86b1-ebb8-4bcb-b699-0834ec7dcb7a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "118d0374-f2b4-4acd-8486-2a8754ac97ee"
        },
        "item": {
          "id": "28eef8ae-67aa-4ac7-99cc-5220a198091a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0ce323f2-bf90-4833-8350-7bd3ec7ca5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d537dc83-1fea-4644-a20a-82ab8fd9abfb",
        "cursor": {
          "ref": "6205f65b-ce3d-402f-9495-6ba47945b176",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fcc3c958-066b-4e75-8711-9ddf1091e595"
        },
        "item": {
          "id": "d537dc83-1fea-4644-a20a-82ab8fd9abfb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c0852c67-38cb-43bb-b809-cfcd72914f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd89feef-6f0c-4842-8cd8-5ec07858d523",
        "cursor": {
          "ref": "d348e5a9-9397-4c31-8c23-e3b20837cfa8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ab8bf441-2309-449a-ab82-1c46b3fb7e71"
        },
        "item": {
          "id": "dd89feef-6f0c-4842-8cd8-5ec07858d523",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "eed28f81-e092-45ce-8d70-bbce419653cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892e6d4c-0f29-4e4e-bae4-abf065cb4bce",
        "cursor": {
          "ref": "370a0b10-719c-4ac7-ba5f-98779bbf0a3a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ab5236cb-6ac7-4425-9eb3-bee7772bf04c"
        },
        "item": {
          "id": "892e6d4c-0f29-4e4e-bae4-abf065cb4bce",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d7b6af47-4097-4f60-a8e8-25a0ba40fcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191209ca-81c7-4d5a-b4cc-1ee9d3459c4a",
        "cursor": {
          "ref": "65d823ab-312d-4ded-b31a-e2c85fe0c14d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3fe43837-b6d3-4eba-911b-0549df2f021f"
        },
        "item": {
          "id": "191209ca-81c7-4d5a-b4cc-1ee9d3459c4a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "98be782d-87e0-4d66-acfb-7d814ca2b792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28b7278-4080-4a5c-8f13-c1ab37acee20",
        "cursor": {
          "ref": "dd8530cb-a324-4c64-a346-a6e677205506",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f43c3c48-c116-4647-82ce-f89699511be8"
        },
        "item": {
          "id": "c28b7278-4080-4a5c-8f13-c1ab37acee20",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c5e03b4d-12a4-4361-8ab2-2e0bfadd4db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0caca194-750a-4fd2-bf17-5d27bd9893fb",
        "cursor": {
          "ref": "9083bcf6-1b84-4e35-81a8-e8bd17dcde9b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0f97df14-8996-4c7f-b62a-975c67ac907d"
        },
        "item": {
          "id": "0caca194-750a-4fd2-bf17-5d27bd9893fb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "080aa3ec-3525-47eb-bd6f-2fc227f907f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d26a848-1417-44e8-a117-c2fe3cfc9a64",
        "cursor": {
          "ref": "aab02ad9-0e30-49d0-8fc6-e9b8ec58702b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6a3c6f2f-d1a7-467c-9219-6e956dd6aff2"
        },
        "item": {
          "id": "0d26a848-1417-44e8-a117-c2fe3cfc9a64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "49ff0076-e235-4ba8-8cd9-449d1e2a1206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b952e1-3880-47c8-a52a-5d474caee99a",
        "cursor": {
          "ref": "3315bc9a-f98e-4997-92e7-1bdb9cc08088",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f37ab123-e8ee-41ac-9b15-39043ea91c43"
        },
        "item": {
          "id": "30b952e1-3880-47c8-a52a-5d474caee99a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7697f15a-b477-481e-a67c-c73143128537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da40d6f-1857-4eca-be15-bcea43091c41",
        "cursor": {
          "ref": "c24ca5bf-cfaa-43fe-b019-08bef4bbd7ad",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9f51bec7-f11e-41d0-9a41-3eb98c41bd94"
        },
        "item": {
          "id": "7da40d6f-1857-4eca-be15-bcea43091c41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "940f6cf7-25d4-4e65-94b3-780765f4b192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf8a93-a00c-4c50-8434-a7f0fe0d8c23",
        "cursor": {
          "ref": "14b651c1-66b5-4087-a03f-d31ba17e4c74",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "08f3549c-656a-4af8-9ead-59336f5d38a6"
        },
        "item": {
          "id": "8abf8a93-a00c-4c50-8434-a7f0fe0d8c23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8f3d9feb-f890-4dcc-b0e4-9c7a22a0933d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b50c0f-c80d-43ae-a95c-811eb9eaa76f",
        "cursor": {
          "ref": "9598ecf7-3d9f-4a69-b2bd-275f981182ad",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ecbf3a92-2b61-4a84-a39c-48470394f5b8"
        },
        "item": {
          "id": "02b50c0f-c80d-43ae-a95c-811eb9eaa76f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7f7ec1ff-4397-4683-8cde-891a0dcd6ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2147c9-e9b2-4bc1-bebe-e40dabb61832",
        "cursor": {
          "ref": "a1bfe6e7-3960-4e15-9321-55de2366ce4a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5794e62d-e1d3-416f-b3d1-91b983797567"
        },
        "item": {
          "id": "5d2147c9-e9b2-4bc1-bebe-e40dabb61832",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4302edf6-f7c1-4096-b16f-67122a4281af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883551d2-d707-4164-8a5f-6122662b0aea",
        "cursor": {
          "ref": "13cb54a5-4b2e-42b7-8525-eeb92b958d5b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "96c30895-5f5f-4827-a557-166c62638f58"
        },
        "item": {
          "id": "883551d2-d707-4164-8a5f-6122662b0aea",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d7268eac-292e-4315-9629-a47e38946b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e38900-7221-438a-a5d1-a9daa0308ca7",
        "cursor": {
          "ref": "6a9ddb3c-0d1b-4b5e-b867-cf92db094baf",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "86c9c2d1-2774-415e-acf3-2028be6c4d79"
        },
        "item": {
          "id": "55e38900-7221-438a-a5d1-a9daa0308ca7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "100d7051-e9db-48c9-a866-bd3fff6a9447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ccc5a8-28c9-4ce3-b358-a4adbeca7189",
        "cursor": {
          "ref": "b2ecb7bc-fc35-4303-a062-b1a63cfc8188",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ecc305d-bb93-420f-9730-077c402f6d58"
        },
        "item": {
          "id": "f1ccc5a8-28c9-4ce3-b358-a4adbeca7189",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a90275b-ef81-47ef-85de-a19c8b41c0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e31e28a-6ab8-4bbf-adf6-17841e6e7d26",
        "cursor": {
          "ref": "1999c7f2-005a-4433-971c-61df3eed7a17",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3cd1258e-fbda-4399-9289-e5b6bc44f11a"
        },
        "item": {
          "id": "2e31e28a-6ab8-4bbf-adf6-17841e6e7d26",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "341a811d-00b5-4a2f-b32d-5186e76a87ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da11e1c8-a368-4a90-95f1-292644f29f3e",
        "cursor": {
          "ref": "ed322b0f-4c25-4583-9f1d-bff53ac13def",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "99831ba9-f48e-4cbd-ace2-8c630fa70bca"
        },
        "item": {
          "id": "da11e1c8-a368-4a90-95f1-292644f29f3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "430be071-2f52-4665-b8bd-fba8e167f477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68db17b7-16d3-4f88-94af-4598045d31fa",
        "cursor": {
          "ref": "197197ca-d13f-450e-9421-14a6c67cc9ec",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "058e48f3-0f5d-4a70-a6c7-ebefef418f38"
        },
        "item": {
          "id": "68db17b7-16d3-4f88-94af-4598045d31fa",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "11e702df-141d-4dd8-8630-4ddc2f7a4ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff97215-31c7-4b0f-bf7e-0d39accf74ef",
        "cursor": {
          "ref": "b26f0ba1-a188-432a-b690-16c1443c2be9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "00ebb782-ab73-4795-ab98-b844721d5887"
        },
        "item": {
          "id": "2ff97215-31c7-4b0f-bf7e-0d39accf74ef",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dfe831b3-21ff-4562-86f3-eba617007808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf73cf2a-54f8-48fe-b05c-2a7121e70584",
        "cursor": {
          "ref": "8b37517e-d148-4acb-8f22-9b78eeb5689f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9d58127d-dc56-4598-9697-d3b8a740a77e"
        },
        "item": {
          "id": "cf73cf2a-54f8-48fe-b05c-2a7121e70584",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ca311da7-0ac7-45f1-8ba6-bb657e142aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf34f4-6c2b-497a-979c-df42ccba6fb4",
        "cursor": {
          "ref": "6450ffa3-55c3-4d90-8a68-f6a831260b3b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "35f92bf0-5565-4ee0-a2bd-a7e85278e2dd"
        },
        "item": {
          "id": "5cbf34f4-6c2b-497a-979c-df42ccba6fb4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ccfba2c4-d2e9-407a-ada4-ea45307ce627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a765944-d9d7-44ba-a144-c0d3ba10f500",
        "cursor": {
          "ref": "6ba30afa-dd5c-4f0b-9bf2-8df79e826cc4",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9fbf778a-81ac-480b-a326-dfb7c8577b98"
        },
        "item": {
          "id": "5a765944-d9d7-44ba-a144-c0d3ba10f500",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa140e7c-126d-41d4-94cb-e2203f255e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20957394-0250-43e0-bbde-d07be12437dc",
        "cursor": {
          "ref": "490613f2-c59f-48f6-980a-267eb7b22a6e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fe50aef8-6746-46e1-8bef-50fb33a87ca4"
        },
        "item": {
          "id": "20957394-0250-43e0-bbde-d07be12437dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ed82dfd6-a81c-47c4-b65c-bc1c81672b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71ef21a-da61-425e-8ac2-fb2627f909d6",
        "cursor": {
          "ref": "4f9d2a46-7054-4082-b711-4c4a7ca8f5a5",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f1e05237-072d-4daf-8dd3-adc0a176af6f"
        },
        "item": {
          "id": "b71ef21a-da61-425e-8ac2-fb2627f909d6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1777cf2e-4c9c-4fa5-b966-a294d6dfdd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc1a725-73a8-43ed-955c-8a4089190af0",
        "cursor": {
          "ref": "387d43fe-aa4c-41c8-85fc-179f585b44d5",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9de921d0-9860-42d4-a63e-6eeda24ef4fe"
        },
        "item": {
          "id": "dcc1a725-73a8-43ed-955c-8a4089190af0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cba59ffa-7a12-4097-9177-6a26d4f54130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143bb8fc-f025-4fa5-afe5-85d35a95e9c7",
        "cursor": {
          "ref": "dc44d9d2-32bf-453d-b24c-dde268012fa4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "51de972d-cdd4-477e-8dbb-5cf7d7f81432"
        },
        "item": {
          "id": "143bb8fc-f025-4fa5-afe5-85d35a95e9c7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "862bd4f5-08c3-4b00-9374-ea0408277a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b253c9-0098-4d5a-b625-7aa5a1a969ea",
        "cursor": {
          "ref": "340b869a-acd4-48d0-8deb-9def56ad250d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "835d5aad-a197-4ccd-b57f-fcd9af2ec2bb"
        },
        "item": {
          "id": "c2b253c9-0098-4d5a-b625-7aa5a1a969ea",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2afe9d01-565c-4912-b27e-9e4e21b53953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25a3b06-dcf5-4ec8-bbc7-463d82873f04",
        "cursor": {
          "ref": "e4c5a3eb-4feb-487a-aae1-38721b87c5ac",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f9db4bdd-8938-4f1e-b5e3-9b224750a94c"
        },
        "item": {
          "id": "c25a3b06-dcf5-4ec8-bbc7-463d82873f04",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ca2d8516-57fd-42d9-95c0-5ce6b9f5ed44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd9ae8a-92f7-4317-9e6b-ccb2a9ac67b9",
        "cursor": {
          "ref": "55a22919-4044-446a-88a9-26a3c7efcfcb",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7243013e-9e38-4cf6-82d6-0a9d9daa39bc"
        },
        "item": {
          "id": "8bd9ae8a-92f7-4317-9e6b-ccb2a9ac67b9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24009267-99c4-4667-9cd5-2614a31b8717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2830d82-1539-4a73-a8a0-d9079a02579c",
        "cursor": {
          "ref": "e4aef2f3-3a56-418a-849f-de8f7464c737",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a2709646-9911-4dae-8dfd-1494887de96a"
        },
        "item": {
          "id": "c2830d82-1539-4a73-a8a0-d9079a02579c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dd12a404-3bcb-42cf-99e8-45e8626d5a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb88dde-4858-4984-9cec-4a21c2254337",
        "cursor": {
          "ref": "cf3420e0-b309-4a53-a551-a7571fcc38bb",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3c5291fe-4164-44f7-88f9-de1f1e6fd5e4"
        },
        "item": {
          "id": "cfb88dde-4858-4984-9cec-4a21c2254337",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9287bcbe-7b8a-48c8-a8fb-73b845b9832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b723c50-2080-461b-8b63-e46657ad2cf7",
        "cursor": {
          "ref": "1385cb55-51fa-44be-8b5a-0531db122854",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dbc4c68c-794d-4274-b60e-3f38d3bae837"
        },
        "item": {
          "id": "8b723c50-2080-461b-8b63-e46657ad2cf7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "66ecc044-4356-49a0-b1b5-65c5915a5990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13d97d3-1d87-4e02-b17a-969c0f270e52",
        "cursor": {
          "ref": "efac8580-20b6-4018-acae-cbedb6f7ae01",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "73b7a3a4-127d-4771-83db-e1d961bc98fb"
        },
        "item": {
          "id": "c13d97d3-1d87-4e02-b17a-969c0f270e52",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc705f96-7fb7-437d-8914-b4034bbebcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d8aaf3-7da4-4b65-ba34-1092b215a0d4",
        "cursor": {
          "ref": "4ec8f86b-187c-4e01-b2de-a625cb92828b",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c57f6642-1c72-4564-a80a-edd2df43af68"
        },
        "item": {
          "id": "17d8aaf3-7da4-4b65-ba34-1092b215a0d4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c498517a-407a-4bcf-99a5-d0971e79bcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66871a8e-681b-4265-afd6-4fd657c38932",
        "cursor": {
          "ref": "74c5be8c-0ef5-48b4-afb4-1c3637c2344f",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "00c9aabb-822f-4ca4-9516-cf96fe01a717"
        },
        "item": {
          "id": "66871a8e-681b-4265-afd6-4fd657c38932",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f100fda8-4781-4c98-8a18-a024edcab930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5d05c-e84d-4905-a7d6-0aefe4b4741f",
        "cursor": {
          "ref": "b17ed08f-1eeb-4902-b90c-8008760fea27",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a1b7f027-8891-4f9a-a192-638cef7bff58"
        },
        "item": {
          "id": "4be5d05c-e84d-4905-a7d6-0aefe4b4741f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fcbe82a5-a210-4f99-943e-c6549fb59497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f0b266-c85b-4524-bede-a82b2f457c2a",
        "cursor": {
          "ref": "8b8f6a85-edc5-4718-bfc3-6930275dca49",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c3ee0268-bdfc-44ce-8300-dce9ec2cc6a7"
        },
        "item": {
          "id": "46f0b266-c85b-4524-bede-a82b2f457c2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ac3a8b40-eca3-4d3c-9175-6532d1dcbe2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1330b3-8878-414f-8b69-698ef9b6d3a0",
        "cursor": {
          "ref": "bf09dc2f-522e-4c72-b98c-4fe4b3227e50",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d349a0b7-4ef7-4238-8db9-bb70ab3e5e32"
        },
        "item": {
          "id": "cb1330b3-8878-414f-8b69-698ef9b6d3a0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bb0c91bb-37bc-4595-a2db-10e3e9d42f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569eb265-a509-4a19-abe9-5834426b5a63",
        "cursor": {
          "ref": "f3397554-6835-4278-882f-c1abc80edeed",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bba885f2-9ada-434e-b46e-aeea10811b1e"
        },
        "item": {
          "id": "569eb265-a509-4a19-abe9-5834426b5a63",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "07a91760-7fad-488d-a94e-78f18bc6f385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5705e654-0afa-4ca7-877e-d7731c9ddc55",
        "cursor": {
          "ref": "6ffb6e1c-a3ab-4bf0-96af-1dbb83bb1009",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9c36dd6e-a10f-416c-b7a0-12e5ecbd556d"
        },
        "item": {
          "id": "5705e654-0afa-4ca7-877e-d7731c9ddc55",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "26344fbc-c17b-4a69-a79e-e38fe3d00add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4670ab4d-5142-4d08-98a7-f2aa2a3ecae1",
        "cursor": {
          "ref": "fb22ee52-b791-4fa0-a21c-6c5b410c489d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d8e0ac56-168e-483a-8034-44c3c7f2e0d7"
        },
        "item": {
          "id": "4670ab4d-5142-4d08-98a7-f2aa2a3ecae1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d8976070-28bb-4414-a675-0eb1a0c357a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be825ac-470e-4c9e-a0b8-bd038c00a2e0",
        "cursor": {
          "ref": "b45e1381-e309-4d94-acee-a40fbb3b6aab",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "40b20ef9-56be-43ba-90a4-dc9d1de21717"
        },
        "item": {
          "id": "7be825ac-470e-4c9e-a0b8-bd038c00a2e0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "356e6d09-4268-4799-ab45-65598bacd2c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbf0ef2-d31f-4c97-a9f1-6ed2e3edc74f",
        "cursor": {
          "ref": "c87d95d0-a439-4ef3-979f-bc4645a9b96e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ad87bfa6-222b-477c-b19b-9df3341cf2f2"
        },
        "item": {
          "id": "6fbf0ef2-d31f-4c97-a9f1-6ed2e3edc74f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1e0308e0-0d44-41b6-bd96-56407bf9ac71",
          "status": "Created",
          "code": 201,
          "responseTime": 14575,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6ab0e1-d2bd-498c-b36e-4d9e7dbd2778",
        "cursor": {
          "ref": "41da6aa9-96db-4d9c-87e9-a74f300a1c76",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b71d7c0f-288f-47db-a598-17b6b25111b9"
        },
        "item": {
          "id": "6e6ab0e1-d2bd-498c-b36e-4d9e7dbd2778",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e3f2b8c3-50ea-46d6-8daa-2dfab03d6739",
          "status": "Created",
          "code": 201,
          "responseTime": 13504,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb196a4-a96a-4103-bc7f-a3cbfe277fe5",
        "cursor": {
          "ref": "ef7db76b-3589-442e-a888-be2705171aad",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "83e0d2ae-ffaa-41c4-88dd-5ae1e7fb6c77"
        },
        "item": {
          "id": "adb196a4-a96a-4103-bc7f-a3cbfe277fe5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1ccb40da-088f-4a76-aa5e-b9f76ef4aa63",
          "status": "Created",
          "code": 201,
          "responseTime": 13626,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b864c1ed-8a5b-4c44-ada3-dcfceb82356e",
        "cursor": {
          "ref": "5126e43a-337b-4dbf-942d-e45782f8f0b1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cc86e018-c26c-4498-a785-0ef1d2d6e612"
        },
        "item": {
          "id": "b864c1ed-8a5b-4c44-ada3-dcfceb82356e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "28c210f1-8665-4baa-ac2d-4c48a5b79240",
          "status": "Created",
          "code": 201,
          "responseTime": 17545,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c47dd7-a1b4-4863-a8e5-dbc8329fee18",
        "cursor": {
          "ref": "0cc53f7b-219e-4555-9ea5-616ea6fc94ff",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1e26ebac-cbc2-4176-8c88-863bdb4fa18d"
        },
        "item": {
          "id": "a0c47dd7-a1b4-4863-a8e5-dbc8329fee18",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d912c36f-9476-4410-b381-f949df5db2d8",
          "status": "Created",
          "code": 201,
          "responseTime": 21769,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd55d74-f49f-4957-8e34-558c69e8c25e",
        "cursor": {
          "ref": "36c7cc1c-9bbe-4039-b580-23bb05de5bae",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2c14472d-9cd5-4e37-97d0-6d5a59aab8f6"
        },
        "item": {
          "id": "6fd55d74-f49f-4957-8e34-558c69e8c25e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e38ab112-d00e-45fe-bb25-437a3f594243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "d2f83a96-2479-4cc7-8b50-4d465f52d393",
        "cursor": {
          "ref": "10863f80-8f1d-420f-afc8-a0c863eda8c4",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c9c594c0-1f12-4449-a4cc-64302f1be26c"
        },
        "item": {
          "id": "d2f83a96-2479-4cc7-8b50-4d465f52d393",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2825fb5f-f239-4c37-b774-9ea269b0b786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04480b54-5a18-4b04-bce3-9fb76781d980",
        "cursor": {
          "ref": "642d0708-ce7e-42e7-928f-5e0b0f99ed27",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4255bd84-86e5-4e97-9ce2-ed4ca8ba19e0"
        },
        "item": {
          "id": "04480b54-5a18-4b04-bce3-9fb76781d980",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ed33916d-aabe-415e-9957-896d3c1c2f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4195813c-de6d-4efc-9f31-96a87b23a9c3",
        "cursor": {
          "ref": "a4f49fde-d083-42ab-b0d7-c024c247aebb",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f125024-6dd2-4fab-be5f-be094649c398"
        },
        "item": {
          "id": "4195813c-de6d-4efc-9f31-96a87b23a9c3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1429b402-e900-402d-ab45-4c18048af3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde2f3b2-6f70-4252-b5b2-bbb92a4c771f",
        "cursor": {
          "ref": "a6ac379e-9039-41c0-a39e-095288b0e1ff",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "aa90557f-9478-4d8b-846a-c9f243ce2d2d"
        },
        "item": {
          "id": "cde2f3b2-6f70-4252-b5b2-bbb92a4c771f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb504daa-5446-4889-8f1d-3e26b04c89a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c970f0-cc62-408a-8e55-4d343936f38d",
        "cursor": {
          "ref": "ee820e00-8543-496d-b982-3813d1860ec6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e5aaf19e-f28d-41db-9173-1bafe1d85b51"
        },
        "item": {
          "id": "a7c970f0-cc62-408a-8e55-4d343936f38d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "82f306f8-ca26-4cdb-8449-a25a7287bb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03a7116-52f4-4677-948d-1ec27cb326e8",
        "cursor": {
          "ref": "2b067776-6068-446d-baca-f28cc8f2a4b2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8ed55745-cfb8-49e0-9132-1f0c62dc59d9"
        },
        "item": {
          "id": "a03a7116-52f4-4677-948d-1ec27cb326e8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "462929cd-49b4-4595-818a-b9c95fae3894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f688c75-c254-4c3a-8b0c-bb93b1b372d4",
        "cursor": {
          "ref": "87db6e82-c2b4-49fb-bfc8-70dc69a51fb3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "19ce1a3d-9313-4861-8371-b7c33ed2f7bf"
        },
        "item": {
          "id": "9f688c75-c254-4c3a-8b0c-bb93b1b372d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c038a96a-cb2d-4a5c-a009-a5ffe051df27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dba634-e179-4af1-940e-8e4cf5622fc6",
        "cursor": {
          "ref": "c74d01b1-e6ed-4965-b3cd-1d4f334e9904",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8a15f5b0-ac65-4783-a168-6347ef409719"
        },
        "item": {
          "id": "79dba634-e179-4af1-940e-8e4cf5622fc6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c32d9e59-57c5-41e6-aa27-38dbd1bf0e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22acd5db-c57d-44ce-813e-4f77b62f7b79",
        "cursor": {
          "ref": "caa7af52-c73e-41c7-b5af-ef8593988f87",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1f299e71-168f-424f-97fc-b85302f2a5e6"
        },
        "item": {
          "id": "22acd5db-c57d-44ce-813e-4f77b62f7b79",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eaa54db2-3ac2-4fd5-9e3e-344e295b69ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf47316-1b29-4b67-a1de-efdab11b84cf",
        "cursor": {
          "ref": "36a0a2dd-8211-4770-8c87-db77b9a8d667",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4c901ec5-ecbd-4120-bd28-06bc1f2ef9ba"
        },
        "item": {
          "id": "0bf47316-1b29-4b67-a1de-efdab11b84cf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b8f3bf8-69b4-4361-a784-c8e5df3ee083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eca7a01-509b-476e-aa52-e7fc4b3efb12",
        "cursor": {
          "ref": "39a5e71e-dbb9-44ae-a044-21f5cb6a62de",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "38aafa03-679b-4462-97be-81d8247fed66"
        },
        "item": {
          "id": "8eca7a01-509b-476e-aa52-e7fc4b3efb12",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fd52a289-9114-401e-9b7f-1e9071602c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420aaac7-24a2-4849-a79b-2b43eea72756",
        "cursor": {
          "ref": "50de0ae4-b10a-4bd9-9efd-faffe7b4f3c7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7aca730e-52be-4ebc-aed0-e86cd4a98c99"
        },
        "item": {
          "id": "420aaac7-24a2-4849-a79b-2b43eea72756",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ddcedfb2-fa8d-49a1-986e-30deeee49514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44d01b-953e-474e-ac76-77e62c21c3c5",
        "cursor": {
          "ref": "5c3b52be-55c5-4ccb-bc63-812258544423",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cc8ba80d-f2f5-4f95-9dde-f39ee58f5727"
        },
        "item": {
          "id": "7d44d01b-953e-474e-ac76-77e62c21c3c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9a3b8177-5a47-4269-a67c-fc7f6b7244aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8c1db9-eabe-4913-8b06-a0702d2ccbc4",
        "cursor": {
          "ref": "a162393e-ea29-444b-b4cb-94dcf220757a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a3ce526e-31ac-4b3e-bfe8-81e2c20d21f9"
        },
        "item": {
          "id": "7e8c1db9-eabe-4913-8b06-a0702d2ccbc4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fdd80392-c834-49f0-9342-eae991c75f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0be5291-8e0c-4964-b298-bd44e6c1adfb",
        "cursor": {
          "ref": "86adf600-7a32-4fcd-9493-0f4457c545f5",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "90b5aca6-2491-4ebc-91ca-0ad60c2ed895"
        },
        "item": {
          "id": "c0be5291-8e0c-4964-b298-bd44e6c1adfb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "11537e72-6c14-4637-8657-88ff01a8319a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5442f1aa-fe45-4adf-9366-242847bc5d70",
        "cursor": {
          "ref": "4f23b999-680d-45a3-b0aa-91a32e1ecefa",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ee1a3dfc-d9dc-4b4e-ada7-94f2c357163b"
        },
        "item": {
          "id": "5442f1aa-fe45-4adf-9366-242847bc5d70",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f94db992-c985-45a5-a70b-3b4ff71582e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0048d81-05c8-4460-9d76-d98262c073a8",
        "cursor": {
          "ref": "bab5d8ed-8b7e-4f37-8096-4ee412c000e2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7ea99d9f-b9e5-471a-87d3-2d651bb1af55"
        },
        "item": {
          "id": "b0048d81-05c8-4460-9d76-d98262c073a8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "197cc179-db10-4740-9125-f841d30bb52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b332ff52-48f2-45bc-a04f-5024ef9ac8eb",
        "cursor": {
          "ref": "d3655f12-5254-44e1-99b1-e87e6338945c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fb4d1b9a-eb6f-4efe-a7f2-240fef9d0ead"
        },
        "item": {
          "id": "b332ff52-48f2-45bc-a04f-5024ef9ac8eb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6ccdcc8f-3196-4796-ba01-929dd9a4ec52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff2764d-e0a3-444f-9ac2-ba8f8e47567c",
        "cursor": {
          "ref": "a753ed48-4792-4f4b-8c70-7b02a40ba20c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d0bee288-0d26-4f36-a79e-ee5a10442a03"
        },
        "item": {
          "id": "cff2764d-e0a3-444f-9ac2-ba8f8e47567c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "266d8fce-c174-48c4-ae27-138e44658ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37837ff0-d628-4374-a9ae-02656933f502",
        "cursor": {
          "ref": "3ee52d33-165c-4479-a853-beadf52023e4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5209055b-a5c8-40b3-bd6f-04a6708958eb"
        },
        "item": {
          "id": "37837ff0-d628-4374-a9ae-02656933f502",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "629fd844-a6a1-4d54-be4c-aa4db07692af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50320c6b-b601-44c6-affa-e61563a1b125",
        "cursor": {
          "ref": "8fcbcd6a-9001-4bb5-bfce-5b3ccfd4645d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da246ad6-b805-41f1-b7c2-a6e7ada50b73"
        },
        "item": {
          "id": "50320c6b-b601-44c6-affa-e61563a1b125",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e435336-b6ff-4582-ba5b-56c19c5312e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7011e9d6-ee41-4f9a-8d23-ff54bc40718d",
        "cursor": {
          "ref": "e9a38526-a6f4-4c84-9bad-8be284fc334a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0880fcda-ed0a-48bf-8675-b7a628257c14"
        },
        "item": {
          "id": "7011e9d6-ee41-4f9a-8d23-ff54bc40718d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f8aef565-c7cf-4878-b972-688dbd2df84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28522216-7eaf-411a-a283-41e5efa38cd2",
        "cursor": {
          "ref": "b79fe47e-8ed3-4d1c-98b6-c64eb6b95e57",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b61366d3-4d29-4dd7-8831-c1c0ea1e9c38"
        },
        "item": {
          "id": "28522216-7eaf-411a-a283-41e5efa38cd2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "170f1908-afc2-4d2f-b15c-ce8ceb1183fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74037ec-711a-43b3-a48b-87f19cde54c6",
        "cursor": {
          "ref": "806aa3d5-af37-42b2-832e-7ca0353124d6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "efac3866-c2a9-4fb5-93ab-97619ea95804"
        },
        "item": {
          "id": "e74037ec-711a-43b3-a48b-87f19cde54c6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4771f084-f821-4528-b25d-ec4f2ac97864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b1ce31-61ed-495c-9044-3242bc5d5bcb",
        "cursor": {
          "ref": "4a1487b0-ee6a-498c-bfa8-c90360d484b6",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "05480c68-efdb-4722-bfd0-3e34f51f60a6"
        },
        "item": {
          "id": "31b1ce31-61ed-495c-9044-3242bc5d5bcb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "21e7a50f-4271-484e-90ba-183f076d64b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3235f483-5ccd-472d-9858-ef5fefc3076d",
        "cursor": {
          "ref": "2259c1d0-a376-4b07-83cc-3d581fb9b7dd",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1c7bf1f8-7b5d-46ec-aec9-026ba743a823"
        },
        "item": {
          "id": "3235f483-5ccd-472d-9858-ef5fefc3076d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ea157c15-6067-4eff-8bb7-8e3598741355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eec266-1fca-4113-856f-bd23f6ac0d0c",
        "cursor": {
          "ref": "b2560fc2-343a-499f-a561-06b8b285d396",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1f7d1474-2b30-4d47-9be6-e3ccb4756dfb"
        },
        "item": {
          "id": "59eec266-1fca-4113-856f-bd23f6ac0d0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b98fbdc-90c3-44cc-a16b-9ae58205d4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9534df-b63e-4726-b94e-3932181ff1ee",
        "cursor": {
          "ref": "24cf68b8-27be-4555-a543-34a736cac4af",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6f04a02b-c8e8-4183-a919-f35d64f62074"
        },
        "item": {
          "id": "7d9534df-b63e-4726-b94e-3932181ff1ee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "da21b461-fe64-4832-85d0-ed922448a6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c75bc0-a10c-4974-b1be-429765d3f370",
        "cursor": {
          "ref": "3e20ef41-e853-418f-9f12-2e70495de010",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac70afdc-b261-409f-8a47-1922dfd77552"
        },
        "item": {
          "id": "32c75bc0-a10c-4974-b1be-429765d3f370",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "80363a10-c056-4848-a97d-a702147cc9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6782f0-d8f6-4d2c-b299-099f99723d85",
        "cursor": {
          "ref": "117c6417-d456-4a92-b763-36759c843679",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d49f0495-a244-43aa-afd9-53c9add184b6"
        },
        "item": {
          "id": "5b6782f0-d8f6-4d2c-b299-099f99723d85",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "40fa5882-549c-4afb-82e1-543dc15c23d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c1bfb5-cdbc-4967-a8a1-38b0c533e83f",
        "cursor": {
          "ref": "3667806e-bf66-4209-a335-6e1ccb519e4b",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e2772ca5-0f10-4b06-b0fe-5a75700bcf1f"
        },
        "item": {
          "id": "e8c1bfb5-cdbc-4967-a8a1-38b0c533e83f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aeb25a36-304b-4abb-ad71-5833ac79c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e54f7-2229-42b3-aeb6-e2bacb63d4e5",
        "cursor": {
          "ref": "c438f4ed-a330-4cc0-a6db-d67d8b557b2a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "df7ec948-e566-43a7-86ee-8a20562e4e29"
        },
        "item": {
          "id": "362e54f7-2229-42b3-aeb6-e2bacb63d4e5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d788721a-5720-4332-91d3-f1de87a342c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589538d6-e20a-4f9b-94c6-586e1ed9955a",
        "cursor": {
          "ref": "ef4eb1b6-381f-4d44-acf7-fc9127f585c5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3218be70-dc49-4786-9e9d-c42352d115e1"
        },
        "item": {
          "id": "589538d6-e20a-4f9b-94c6-586e1ed9955a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35589d33-74d9-4db4-8a09-7836f7244e6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7abaab-0449-42ba-8070-09c2e4da0051",
        "cursor": {
          "ref": "c67f0db0-46f3-481f-8f3e-848d10b6a8d7",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f736e0c0-061e-4e4e-8ea2-c6a1c1ea46be"
        },
        "item": {
          "id": "df7abaab-0449-42ba-8070-09c2e4da0051",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "748f34eb-1f67-47bc-ac02-29101afe2fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e8e9f8-74c7-47a3-87fa-aa2239dcf819",
        "cursor": {
          "ref": "2de82689-4d4b-4930-8bcc-adc8501e119e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "beac8567-2dc4-4238-9975-feb42b478d9d"
        },
        "item": {
          "id": "13e8e9f8-74c7-47a3-87fa-aa2239dcf819",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "da5cd06c-f4de-4faf-a314-a8bb61c13fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8dc7cc-4778-484f-8a47-7b2b36e82ae8",
        "cursor": {
          "ref": "0d53ee6d-f47e-43b5-83f9-8d998c4e3484",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "efdd4737-1075-41be-a461-ce7cd776a1c4"
        },
        "item": {
          "id": "8f8dc7cc-4778-484f-8a47-7b2b36e82ae8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dba54c80-7927-4cb7-a1ca-064980782eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592aa157-a20b-4f0d-b1e0-d9672c9386af",
        "cursor": {
          "ref": "9bed8154-d3de-427b-b729-1a64a5ebb1ed",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "299c119d-3549-43f6-b48c-a04dd0c76e82"
        },
        "item": {
          "id": "592aa157-a20b-4f0d-b1e0-d9672c9386af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "171b4511-81ab-48a2-a7c0-514fc871bcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d92ba-dfc9-4038-a32a-355a571d86e4",
        "cursor": {
          "ref": "3a61ec59-96a0-4668-b3a8-a17ffbdcdbea",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b342d2eb-a032-45a6-9cde-14c1d8eb1db8"
        },
        "item": {
          "id": "c26d92ba-dfc9-4038-a32a-355a571d86e4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "646f6d3b-243e-4b92-9290-fbaea4cd243a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3a0bdc-dcc4-43a1-9f63-a7ce58e50768",
        "cursor": {
          "ref": "33e98acc-1eec-446d-933c-083b40fd4d6d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ada43ddf-6cfb-4d81-8c39-08d898558b3b"
        },
        "item": {
          "id": "6d3a0bdc-dcc4-43a1-9f63-a7ce58e50768",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "74a7393d-8239-48b1-acd3-1976f784ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03e7bb1-a219-4402-bfe1-444bde70a3a1",
        "cursor": {
          "ref": "bdc78576-316d-4d03-a7c6-d2d1541ee86e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d235feae-d875-4060-bd5c-c8ca338c1240"
        },
        "item": {
          "id": "c03e7bb1-a219-4402-bfe1-444bde70a3a1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ce74cff6-ae61-4b7a-a586-9d29b6cadabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86fd281-e09f-45a1-b768-a514f92a3db6",
        "cursor": {
          "ref": "5d2af655-a708-4903-977e-cc30aa7c9702",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6218a3ba-d247-450e-bece-f443b93d2e87"
        },
        "item": {
          "id": "d86fd281-e09f-45a1-b768-a514f92a3db6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "65177a24-5683-41fb-95ca-c52fe898a5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e6a138-6cbc-4621-b40c-5d14ef645101",
        "cursor": {
          "ref": "5bed0971-8057-4826-9730-3da51de4e5fa",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "afaa1e0a-104a-4830-8fbf-19e23a324586"
        },
        "item": {
          "id": "10e6a138-6cbc-4621-b40c-5d14ef645101",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f3ed0c4-a0b6-4db0-8593-5cf77bb26923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06490afb-db35-420a-bc9d-2c802b4668eb",
        "cursor": {
          "ref": "e9364a53-eee4-47c0-9114-451ee698f3f7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92b06b68-53e3-464d-b832-51413551bbbd"
        },
        "item": {
          "id": "06490afb-db35-420a-bc9d-2c802b4668eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0784ea16-63af-444e-bd07-c49523a0e43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30145d2-7518-4a0e-ad25-4752e24be3be",
        "cursor": {
          "ref": "b7686b9f-15a0-4af3-9c87-bc05a37f9a13",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b45a1f16-b04a-4740-8f55-43a43e32c8a0"
        },
        "item": {
          "id": "a30145d2-7518-4a0e-ad25-4752e24be3be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f3305557-3d6d-4d1a-a194-70bc99be4a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e1d1b-9e80-4d29-98ec-baa92179038c",
        "cursor": {
          "ref": "d7e82a24-473e-4cf8-af28-b1892c9aecbe",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4603c4f-1b67-40fc-a481-ac7bd0eac586"
        },
        "item": {
          "id": "113e1d1b-9e80-4d29-98ec-baa92179038c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ea7da3b-c62c-4ccf-a84b-914ffa45dcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271f5955-96a5-4ccb-9972-a5ed721de2d7",
        "cursor": {
          "ref": "4e78ba11-fbb6-4ac4-9e0b-9581525deef2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a1d9d9c1-4fd1-4d1c-8973-7b4a84110022"
        },
        "item": {
          "id": "271f5955-96a5-4ccb-9972-a5ed721de2d7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bc25bbba-b36d-4396-a389-e609ee9dd667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae67f09c-ddc0-4301-b6ad-a03449c8c3fe",
        "cursor": {
          "ref": "b116c66d-fac2-4c0d-9bed-62e40fde53f8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3702d617-0774-4e1a-b86d-390bd7460656"
        },
        "item": {
          "id": "ae67f09c-ddc0-4301-b6ad-a03449c8c3fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "55aa4d39-7d04-4d0b-b530-e1a07f3863e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4276e36-1315-468e-a815-45000c535472",
        "cursor": {
          "ref": "4e165002-7757-4e15-94a3-b7577078e2da",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6b38183d-2806-4489-ad1b-4bb8b1ac0396"
        },
        "item": {
          "id": "b4276e36-1315-468e-a815-45000c535472",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "64f0b4f5-2a20-407b-8dfc-40b8277e86ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d03c42-6045-46a1-b29e-30420e2974c4",
        "cursor": {
          "ref": "c471f26a-7c2e-448e-8199-06b7a6549f52",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0522dffe-d312-430f-9895-7627d1af8039"
        },
        "item": {
          "id": "56d03c42-6045-46a1-b29e-30420e2974c4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "46020d5b-4695-4146-aba7-6d97e9826de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e629165-1f3d-451b-9c05-a424fda06c77",
        "cursor": {
          "ref": "d1e8f8eb-d95f-4bfa-ae9a-d1264587261d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3194a9eb-067d-4a92-bd4f-38f49da198e0"
        },
        "item": {
          "id": "6e629165-1f3d-451b-9c05-a424fda06c77",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31224d1b-e54a-4a6c-ae0d-8579ea0d047e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d01b98f-b265-4e49-bcd6-b761fb5366cc",
        "cursor": {
          "ref": "0b74f565-20fe-46a2-b8f7-caf2fd8111b7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a414e07a-688e-4ba7-8587-87477b42d317"
        },
        "item": {
          "id": "1d01b98f-b265-4e49-bcd6-b761fb5366cc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c94459a3-408e-47d2-9d95-0d268f6d08c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2787785a-62ad-4d89-9140-c391cc33cc8e",
        "cursor": {
          "ref": "da8a369b-3b53-4d70-85ba-2566c2c0817d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7d88b2bb-aaf0-40e4-a483-b25fc436cbd4"
        },
        "item": {
          "id": "2787785a-62ad-4d89-9140-c391cc33cc8e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b20fcb05-b84a-4400-83ee-a1fd4d3dc885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6148ed4f-1947-4db1-a48c-8f31f7b7de1c",
        "cursor": {
          "ref": "3252e1a0-334b-4d45-aace-807fe80579e5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "152d82ad-fdc6-42f0-8e3c-9a51252c8ba3"
        },
        "item": {
          "id": "6148ed4f-1947-4db1-a48c-8f31f7b7de1c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8968a8b3-0407-463f-a850-49721aea8c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fdd4eb-4fde-409c-acd4-7908163e5ba4",
        "cursor": {
          "ref": "a4cde417-1cad-4c0e-9b69-8522d734d558",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6d333441-4217-49a3-9be7-10b3b6d01363"
        },
        "item": {
          "id": "34fdd4eb-4fde-409c-acd4-7908163e5ba4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b12e342d-079e-40ce-b95b-7e58415e6e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a2a87-a830-4ebd-872c-3f68330df8e5",
        "cursor": {
          "ref": "032d2a15-fec7-4137-96df-90344f557020",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5a42741c-17d7-4aa4-9a84-ec04b6157d0c"
        },
        "item": {
          "id": "852a2a87-a830-4ebd-872c-3f68330df8e5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aefa3bcb-3df3-4d65-90b8-2a513d245a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e632776-8fd3-4af3-b221-503ea123ef1f",
        "cursor": {
          "ref": "9efa08b8-53ed-4ee6-b772-7938d5d49a61",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "05a480f9-b96d-46cc-83f5-ad1b04dae870"
        },
        "item": {
          "id": "6e632776-8fd3-4af3-b221-503ea123ef1f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1f95635a-6d4d-4eef-b8c8-ccc9f937e715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41227496-4523-4110-a24c-f07b2c38dd71",
        "cursor": {
          "ref": "9e3623b7-0b9d-4e4c-a1bd-c8bb265b4693",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ff8012f3-63b2-4bfa-8105-33d6d7635cb4"
        },
        "item": {
          "id": "41227496-4523-4110-a24c-f07b2c38dd71",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f7c7da93-b3e9-4a65-a635-500a28b05615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2005b9d-9abb-45f0-9a90-24019cbd6ddf",
        "cursor": {
          "ref": "1ef154e5-1633-4c65-9848-8d79b950ade2",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1026e430-e45a-4c09-bb15-394305337458"
        },
        "item": {
          "id": "a2005b9d-9abb-45f0-9a90-24019cbd6ddf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "37a2e153-6f6d-4a99-b50a-a7f60cc109b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017ca034-da09-4cf3-afaf-38467d21997c",
        "cursor": {
          "ref": "962acaa8-419a-42f2-b452-cb5e4beeac0a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9cf81245-5256-476f-855e-0b55bf8c033d"
        },
        "item": {
          "id": "017ca034-da09-4cf3-afaf-38467d21997c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1166f547-bbce-426f-ae3d-fbd87a07e5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512158a9-37ad-4e36-a7c8-f38429db7895",
        "cursor": {
          "ref": "0b4bfc2b-2d9a-426a-a862-b77b70c93431",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "480ddaf7-9a2a-4c58-ad81-eba480fee9f3"
        },
        "item": {
          "id": "512158a9-37ad-4e36-a7c8-f38429db7895",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f35c8dce-21f2-4aea-bb02-649ce79b4bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73ae55-02ff-4036-83ca-8de174f4783f",
        "cursor": {
          "ref": "4bb233b7-10ab-46ab-be66-762444addb67",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "13b06bc3-9260-47e3-b07e-231b8afeb93f"
        },
        "item": {
          "id": "0f73ae55-02ff-4036-83ca-8de174f4783f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b39df274-02cc-4b13-a0ca-ae3e2cbf7802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e1d2db-1b08-42bb-aaed-9072d25d40e9",
        "cursor": {
          "ref": "55e4e603-94cc-43ec-b7a1-e646e51cf10c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8e061e85-8449-47fd-8363-211cb7764b43"
        },
        "item": {
          "id": "80e1d2db-1b08-42bb-aaed-9072d25d40e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fabb52ab-5a6c-416e-8663-1f873a8ab4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d34ab8-99a3-4ec3-b9ef-a058de9bc483",
        "cursor": {
          "ref": "84f3adb2-24c9-4e47-ac50-11e06575ca42",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8fdfd4fe-0157-41bf-b5af-bcf2ab797944"
        },
        "item": {
          "id": "d4d34ab8-99a3-4ec3-b9ef-a058de9bc483",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2dcfaf4-b781-4173-96f1-3c6f5bcca893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e02f069-7df7-4a98-bb26-6f71bcbe27a4",
        "cursor": {
          "ref": "c299051f-5fa7-4e7f-8f4e-2b8d433c50e2",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d6432641-3961-4d2c-a416-bcf058d01bf4"
        },
        "item": {
          "id": "2e02f069-7df7-4a98-bb26-6f71bcbe27a4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "14c112cb-0af4-428c-a2f8-ed4130fe6ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a106bdc-cdfc-450c-80d0-9467c985cfb1",
        "cursor": {
          "ref": "c3ed6505-9afe-4526-bfb5-d57d1d81afa4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b4d9c09d-aade-4163-a5e9-4b0ce795e131"
        },
        "item": {
          "id": "1a106bdc-cdfc-450c-80d0-9467c985cfb1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "cf7079d0-6cb9-45d9-8c98-ead7bca1bdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a98f1cf-7c08-40a4-83d9-94bab5d3c3fe",
        "cursor": {
          "ref": "597a507f-8b10-4424-a152-e44af1cbb67b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0aae86c6-4e85-4c32-96ae-a588c1e4fb60"
        },
        "item": {
          "id": "0a98f1cf-7c08-40a4-83d9-94bab5d3c3fe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5fe6f341-c5ba-4bdb-8f21-dc32c7323ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cd12cb-52a3-4c07-9a7f-05d8eeda234d",
        "cursor": {
          "ref": "a090d759-2126-4c48-b8c6-6c9187aa06cc",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e439ea1e-a262-4322-82b7-48a06fdc5ae1"
        },
        "item": {
          "id": "e6cd12cb-52a3-4c07-9a7f-05d8eeda234d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "01825b35-f81a-45a7-bbcd-5c03d84184f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66410ce0-60e0-4732-80fc-0c143f43487b",
        "cursor": {
          "ref": "659e2f28-6e84-468c-b88f-a12e63f7c56a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "510d967d-bbea-46dd-8f5d-617b8b3ebce4"
        },
        "item": {
          "id": "66410ce0-60e0-4732-80fc-0c143f43487b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "585f611b-3857-42af-9ba1-71ec94822ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e677960-4e3a-45d4-93d2-de73f205597f",
        "cursor": {
          "ref": "f8b8f301-ea66-44be-af67-52c377989e37",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e4a5f0fc-d73a-4c00-8631-8d765050aa44"
        },
        "item": {
          "id": "5e677960-4e3a-45d4-93d2-de73f205597f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "06dfb4fe-8e7f-4b64-8758-e64b89568990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501d468d-68a0-435c-b34e-ea8c029f9c1b",
        "cursor": {
          "ref": "4a407249-8020-492a-b66b-ac33d0bc14e2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bfaca784-2c7a-464b-a9d3-fa1fd0e2b4cf"
        },
        "item": {
          "id": "501d468d-68a0-435c-b34e-ea8c029f9c1b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd17adda-f325-409e-acb7-ad036245a38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b0108b-ed1b-46d6-b69a-e8bd395a45b9",
        "cursor": {
          "ref": "f532f8eb-dfe8-41ff-959a-a37fb87464f8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2e3e7c4-b9de-4ddd-bef1-4d418b4d90ac"
        },
        "item": {
          "id": "d1b0108b-ed1b-46d6-b69a-e8bd395a45b9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "014c4fe2-1d46-45be-9edf-aa191220b5f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d857b-d4d3-43f8-91d9-a553820df39e",
        "cursor": {
          "ref": "f664946b-8d5b-4073-8d6e-ef01d1628dd2",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ba186388-e3c2-4927-bdf8-5853aa648a82"
        },
        "item": {
          "id": "b50d857b-d4d3-43f8-91d9-a553820df39e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b21e8de5-c42f-4cd0-b2b2-005311ffade9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d461b8dd-5278-4d58-b2b4-1e8e1e4d473e",
        "cursor": {
          "ref": "a5c4b082-5514-4d2a-b523-94ddd9fef406",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2e938495-7624-4b44-872f-9469168cdd0e"
        },
        "item": {
          "id": "d461b8dd-5278-4d58-b2b4-1e8e1e4d473e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d10f5b45-144e-4854-8cb0-75d64fbe8b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d0d32b-24c4-4334-a4ae-d589e706a29d",
        "cursor": {
          "ref": "46baf150-2f47-46b6-acbc-12de57c52dd3",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "68088e25-d139-4617-b3da-c768dcbfe23e"
        },
        "item": {
          "id": "a8d0d32b-24c4-4334-a4ae-d589e706a29d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0aebd575-7014-498d-9631-f208637cbdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eda2685-aea7-4a0d-b557-09fc05f698ee",
        "cursor": {
          "ref": "db998c14-644e-4036-a446-fade832f5c23",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a88dd312-a0a4-4444-8c4e-efebfa2a9309"
        },
        "item": {
          "id": "1eda2685-aea7-4a0d-b557-09fc05f698ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cb439aaa-6802-4ff5-a090-cecd4119196c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b295de-6d6d-4f53-83dc-26572071c9ad",
        "cursor": {
          "ref": "16d28229-823e-4273-b8ba-c192a5d2e42e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b991e268-30c9-4c10-96cb-e270c0458dc9"
        },
        "item": {
          "id": "38b295de-6d6d-4f53-83dc-26572071c9ad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7350a102-f287-4bd8-878c-e101759bc03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cfa845-5113-4558-a50c-31f03d43422e",
        "cursor": {
          "ref": "f02dd649-dbb6-4fbf-b2b4-b95ee3b3cefc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ce7889a1-3690-421d-95d2-48dc5615a5fe"
        },
        "item": {
          "id": "e1cfa845-5113-4558-a50c-31f03d43422e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "039a575b-3a47-48aa-aab5-eb1422551f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e634510-4805-4194-b762-65ad539ac767",
        "cursor": {
          "ref": "c91a2db4-e044-4216-b549-496962a0b50c",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7daaba66-2731-4359-9ff1-51feeae22e8a"
        },
        "item": {
          "id": "6e634510-4805-4194-b762-65ad539ac767",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "349eae9a-0a94-4c90-a75e-87d59f3f11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c596b05-653f-4d3f-a798-f98672b25f3d",
        "cursor": {
          "ref": "a17e85f6-4f98-4a4f-a758-9722f9576cd9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e25b937e-313c-4bb7-8a9c-86fd8636a70d"
        },
        "item": {
          "id": "8c596b05-653f-4d3f-a798-f98672b25f3d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "bef8b177-cc5e-4797-b938-06c7fa6059ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018ef61-cbc4-4780-8ee6-33429790e56a",
        "cursor": {
          "ref": "3a3d3f62-4bd3-464b-b6fb-9f9a1f27f605",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "70d24dbd-99c7-47ee-a1f8-6d13b7796740"
        },
        "item": {
          "id": "b018ef61-cbc4-4780-8ee6-33429790e56a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "47887baf-b0d1-4447-aa07-d086a0e19b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66573f7b-9655-4f43-a264-46071c553911",
        "cursor": {
          "ref": "2131e30d-8a4a-46f9-880f-c6a00b3ae6db",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8612dac8-e93c-48c2-a3c6-57e8a05d7979"
        },
        "item": {
          "id": "66573f7b-9655-4f43-a264-46071c553911",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6d908f1d-0ded-470d-86b8-2f2523da3029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d61fff-06ae-42e3-9e61-f22daca83885",
        "cursor": {
          "ref": "f09daef4-e1c0-46e2-8689-56d581436d87",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8eed1c09-1815-446c-bf19-e10b5b17156c"
        },
        "item": {
          "id": "24d61fff-06ae-42e3-9e61-f22daca83885",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5d50e001-4abe-45ff-a8a3-c43d329f3f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d5cd5d-a9ab-457b-b145-eb9cb596ef47",
        "cursor": {
          "ref": "a578ed86-0832-460b-b069-30d17064c956",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6fde6772-375b-410c-aa29-4a2698965ffc"
        },
        "item": {
          "id": "f0d5cd5d-a9ab-457b-b145-eb9cb596ef47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "65a9d1ae-97e7-4f0a-b859-662e4f4b7766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753117fd-1f8f-48bd-aee4-12d8ad7282f0",
        "cursor": {
          "ref": "6194bb8c-3dce-4c5a-80b6-e4a64c1b93e1",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3abbafe1-b31d-4d1c-918c-9f5a067e337f"
        },
        "item": {
          "id": "753117fd-1f8f-48bd-aee4-12d8ad7282f0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2f2eb9d2-0f69-4b2f-ab4e-cd8f86037dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436b820b-ccf3-470f-b17f-e8db8e8bfd4c",
        "cursor": {
          "ref": "e599a6b8-07b4-4b7d-b5d8-c9ef22f34676",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "da3ef236-a80f-4166-b3b3-57ee6e77d569"
        },
        "item": {
          "id": "436b820b-ccf3-470f-b17f-e8db8e8bfd4c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7bccf71b-3deb-41df-a0da-400f510130a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f717ad7d-be67-4eba-a5ce-08c48320a1f2",
        "cursor": {
          "ref": "850861a0-0adc-47eb-b724-68c1d51329ef",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "12a21313-d0a9-4856-b1a7-a23c0047fbe3"
        },
        "item": {
          "id": "f717ad7d-be67-4eba-a5ce-08c48320a1f2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9de108c7-363b-4f03-b898-5406527ca5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebf73a7-5117-4188-a5d2-a00032a8a3d7",
        "cursor": {
          "ref": "65f74c51-3288-4b7f-9a06-97c5dea53d59",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9df9a1d1-6a3b-47a1-94f1-7b042164cf47"
        },
        "item": {
          "id": "7ebf73a7-5117-4188-a5d2-a00032a8a3d7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0c293911-03d0-46d2-b4d8-6f157ddf6683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dc4116-4447-4d40-80fc-cb9033acda47",
        "cursor": {
          "ref": "d607c856-5d66-495f-8cbf-ed637a04638a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cfc77e1f-b5b3-44eb-b414-8f75bda0400f"
        },
        "item": {
          "id": "d2dc4116-4447-4d40-80fc-cb9033acda47",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5314444c-df43-4293-bda4-aa88a0b33670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346d7f71-2b06-4ad9-a294-35047ce543dc",
        "cursor": {
          "ref": "a2c14fb6-8ce6-422a-bc3a-3815a74cf2bc",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e30373b1-2969-4968-8e1c-a46b41129b22"
        },
        "item": {
          "id": "346d7f71-2b06-4ad9-a294-35047ce543dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7ae0e772-8502-4447-9a93-70b843e2857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23004e1-325f-48a5-a79a-0824f9cb2d6c",
        "cursor": {
          "ref": "470a4ef5-9871-4856-b37a-9c03aac4dbf7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e2d67c99-70e2-405f-9a75-d0bae693a985"
        },
        "item": {
          "id": "b23004e1-325f-48a5-a79a-0824f9cb2d6c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "56362fcd-cd69-4b47-8f58-f360c79f7a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e3505b-10c4-496d-b52f-4e9e258edf38",
        "cursor": {
          "ref": "215e984c-049f-4000-bbe6-1f10d61e1780",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a0ad4e4c-b946-4ccc-964e-82f63bc1f555"
        },
        "item": {
          "id": "a5e3505b-10c4-496d-b52f-4e9e258edf38",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8ee49e6d-f36e-47e6-b712-3c0ac4e9d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897a4bba-8ecf-4072-be5c-30883195a2f3",
        "cursor": {
          "ref": "63d09695-9a40-4cad-8391-f84da42bdf78",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "13d8f593-d623-4a16-b3fb-843bdf7bcd7d"
        },
        "item": {
          "id": "897a4bba-8ecf-4072-be5c-30883195a2f3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8087e6ac-7939-42d1-935e-76646303d036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9132ca3e-3d2f-4cc4-90a9-661484f21edd",
        "cursor": {
          "ref": "24abde1d-1f86-4f6c-bea1-d1bc08fbd1b1",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0e0f5fe8-90d5-4538-96cc-2eb9f464ee0a"
        },
        "item": {
          "id": "9132ca3e-3d2f-4cc4-90a9-661484f21edd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3cef1da3-c3d1-4800-ba92-20f0b354454d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b759f2-a975-4e77-8ddb-d9b410566274",
        "cursor": {
          "ref": "7613ac5c-edac-4dd9-8702-1bcbdbc03556",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aad7cb31-cae6-4134-a6f7-43fa630ac3d4"
        },
        "item": {
          "id": "12b759f2-a975-4e77-8ddb-d9b410566274",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ff328af5-1f7c-4e46-bb28-91b2d174ab62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fe0af5-c8cd-4cf4-8c0b-0acf70a4a180",
        "cursor": {
          "ref": "a7d45327-b249-495d-aa33-398962bb530e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "82c0993d-98bd-4271-9b4d-7a19ac84c6f8"
        },
        "item": {
          "id": "33fe0af5-c8cd-4cf4-8c0b-0acf70a4a180",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5d1f7654-8372-4a2a-ac71-7d671160cf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c26767-5cad-43b7-a51d-4ee9aede3c16",
        "cursor": {
          "ref": "65c4a4ed-5c85-413b-b4b7-5dc211a0c8a0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d4af443-b63e-4a95-be86-74896da1ad3f"
        },
        "item": {
          "id": "55c26767-5cad-43b7-a51d-4ee9aede3c16",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3168716b-31df-4fda-8681-285287c3ae01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430b9b93-3307-4d6e-b1ef-7c67cd9a06a5",
        "cursor": {
          "ref": "16c87bbb-5d9a-41b3-a2dc-59b39c286ee9",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d4d229bc-564b-4dde-bb88-4cc1ae30b180"
        },
        "item": {
          "id": "430b9b93-3307-4d6e-b1ef-7c67cd9a06a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6e45239e-a9a9-49e4-b792-aae35f3c49b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4133fa9-aac5-4fad-8bef-6d8ca876e772",
        "cursor": {
          "ref": "344d52f6-3f9f-4a45-95d1-056f7911890a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a943ed62-ee22-46e2-a6c5-63c75069db06"
        },
        "item": {
          "id": "a4133fa9-aac5-4fad-8bef-6d8ca876e772",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0acdfb7a-25c7-478c-b2e5-28ea9c2ebbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1df2f7-9c98-4c9e-ad2c-6745686205a9",
        "cursor": {
          "ref": "9f10ac87-8331-4c3b-9629-5798975008c9",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7b08b6fc-8e13-4b04-9a87-a46fe4cdbb22"
        },
        "item": {
          "id": "6b1df2f7-9c98-4c9e-ad2c-6745686205a9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3d706f9c-6a92-4e18-abc8-ea37b679f1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f24f7a2-c6c1-43b8-92d7-c81c1b36168f",
        "cursor": {
          "ref": "39284931-8556-448e-9acb-c9d5edb3e56f",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4fb114c6-eb5c-4605-afbc-53e73f5f7323"
        },
        "item": {
          "id": "9f24f7a2-c6c1-43b8-92d7-c81c1b36168f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "121fa1ad-de54-439e-8117-bb3ac3aa76b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc593897-83e4-47a8-bc30-15bbc61b207f",
        "cursor": {
          "ref": "65e3e0f3-2d8b-4df4-9768-d35ea0ce9003",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e3622ea4-3194-44f4-bf5d-702c35d028de"
        },
        "item": {
          "id": "dc593897-83e4-47a8-bc30-15bbc61b207f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8de5014c-1d70-4bfc-a4a7-0d94431cbb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007c22cd-4476-49a9-aa0c-1f248d2c461c",
        "cursor": {
          "ref": "561ef145-0ec9-467e-a7d8-5a78f4c01f03",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9492606e-c108-45e7-a2ad-79ffe377e1f9"
        },
        "item": {
          "id": "007c22cd-4476-49a9-aa0c-1f248d2c461c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "df12c543-932d-4780-bebc-a8b553a80d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456c4a0d-584d-4909-a283-677374ce3fd2",
        "cursor": {
          "ref": "233d5666-b299-48f4-a1f4-9e97e85295f8",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "73e2e75a-d215-4256-8f05-7a3f1f2944bc"
        },
        "item": {
          "id": "456c4a0d-584d-4909-a283-677374ce3fd2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8c95300a-6e6f-4e42-adb6-141806398398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7262ba4-b0df-49b2-bd2d-03096f9af128",
        "cursor": {
          "ref": "57729557-fcb7-4d3f-93a0-7f8a7af3b76b",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "54c15da4-19c4-42d0-8bf0-1f9f9fee4365"
        },
        "item": {
          "id": "e7262ba4-b0df-49b2-bd2d-03096f9af128",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c11a3435-f033-47ca-be28-9749d1061eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa7ea96-11d2-4808-bd27-0c5b34b4e979",
        "cursor": {
          "ref": "a32a6cc9-cd31-4394-9912-1690a82dc03f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "abb471d1-bf86-45d8-9939-501203b95252"
        },
        "item": {
          "id": "4aa7ea96-11d2-4808-bd27-0c5b34b4e979",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2e2fdc5a-0d91-4eb2-98e0-cb179f932c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae036c2e-76c7-4303-aff1-230e1f55584a",
        "cursor": {
          "ref": "31de0be5-b027-44e0-a763-d6525d5bd002",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d6fb944a-5b69-4b62-aba5-f8acea7a566c"
        },
        "item": {
          "id": "ae036c2e-76c7-4303-aff1-230e1f55584a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "41cc5288-709b-4383-979a-20f2f1efc581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7eb86dd-c041-4cd9-8107-9bca37bceff0",
        "cursor": {
          "ref": "c3f05c85-6c56-4709-92ea-2e7470b09059",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89bdd4f6-0ecf-4c9b-bd5f-c661f1750c7a"
        },
        "item": {
          "id": "d7eb86dd-c041-4cd9-8107-9bca37bceff0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ed7c7fcb-df85-4f3d-b04a-dc9af7b35324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aecbff2-541c-478e-b706-812a9b6706a8",
        "cursor": {
          "ref": "e1093fb8-939d-47ce-bd76-699db8534696",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "20b2fa0c-36dc-49c3-92c9-d0a1bd124d0f"
        },
        "item": {
          "id": "6aecbff2-541c-478e-b706-812a9b6706a8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d9fcfbe3-3477-455d-9d5e-cb61ee5e28aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d96a034-03b5-4ec0-bdbb-01b50613421d",
        "cursor": {
          "ref": "6aaa6938-ec93-40e3-ac62-0990b5b04902",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6d39f5c9-76b4-45a6-a66d-c37d1aea0069"
        },
        "item": {
          "id": "4d96a034-03b5-4ec0-bdbb-01b50613421d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8ab4bd9f-7561-4948-8be8-727696469116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea70321e-3e46-4dde-a387-fe1e36be3694",
        "cursor": {
          "ref": "9ac14bb5-334b-4417-b6e9-9621b16ecfad",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fe726835-790d-451b-b679-e2dc7a73c691"
        },
        "item": {
          "id": "ea70321e-3e46-4dde-a387-fe1e36be3694",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b3bf9514-5d98-4170-8189-589b42dd958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90451a8d-40e7-410a-96af-037aa1560e02",
        "cursor": {
          "ref": "1bed329c-5c27-423c-a2cc-d9430e82dac2",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a8f748f7-193d-40c3-9adc-0a48f98f4372"
        },
        "item": {
          "id": "90451a8d-40e7-410a-96af-037aa1560e02",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a8453c84-6c47-4f83-b89e-ae0060276b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa0fe1a-f33b-410b-85f8-3527b802bb48",
        "cursor": {
          "ref": "57f1b0f1-12d8-47ac-ab12-7cb224770e8a",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "209820fb-c2ec-40aa-9fc4-40ee24079ae4"
        },
        "item": {
          "id": "5fa0fe1a-f33b-410b-85f8-3527b802bb48",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "69f867f4-1712-415c-b7f8-914a6fd20713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce2c4b6-a69a-4d94-9c21-b6256d2d6e40",
        "cursor": {
          "ref": "8980dec1-7845-4d5b-a571-09f3b8b47d1c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4c59b9f3-9ea3-46d0-a3c1-b872d7b812e4"
        },
        "item": {
          "id": "bce2c4b6-a69a-4d94-9c21-b6256d2d6e40",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0605be9a-8d03-47c4-abe1-f425bad305be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5483af86-47e5-489a-a94f-b42966fd4669",
        "cursor": {
          "ref": "a8de6a0f-3966-42c3-b6aa-47197ccfc52e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dd86cd42-f96d-44e0-a378-86fba3029f86"
        },
        "item": {
          "id": "5483af86-47e5-489a-a94f-b42966fd4669",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9fd11d8f-21d0-4395-875e-cf96e1ef74d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237cf815-a0fc-40a3-bcef-f8ee454b234f",
        "cursor": {
          "ref": "0952536b-b87d-447f-89a4-3b898af02e61",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3ee004b0-6a25-429f-8fb4-3eff917c2575"
        },
        "item": {
          "id": "237cf815-a0fc-40a3-bcef-f8ee454b234f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bcfda8d0-2c57-404f-8b4f-d89bcdd890ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e9c31a-e1ad-46b6-879e-86e1dacd39b5",
        "cursor": {
          "ref": "2d7e1be2-471e-4836-a63a-8c2416618ad1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9f80aa39-c946-4963-9383-391c43eff0a4"
        },
        "item": {
          "id": "22e9c31a-e1ad-46b6-879e-86e1dacd39b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6385b8df-c945-4953-8705-f66a6ed2612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6870ad2e-c45b-4cdf-9dda-0dce7dcd5baf",
        "cursor": {
          "ref": "13d1b753-bf16-478c-9531-a9897933bf82",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "91720ff6-b57f-4fcb-be98-59138fd7b73e"
        },
        "item": {
          "id": "6870ad2e-c45b-4cdf-9dda-0dce7dcd5baf",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6a0aab3a-7501-4c55-837a-d794cdfe9e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf805ad1-b717-43f6-b0b6-61b0651764ab",
        "cursor": {
          "ref": "4a432263-4fd8-46ef-bdc2-827771f073ac",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2821837d-dc65-46aa-b7ad-21901d9b0d85"
        },
        "item": {
          "id": "bf805ad1-b717-43f6-b0b6-61b0651764ab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7e0ec012-b210-45cc-9173-088940aa2a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3568395-597b-426a-9c85-9fe1bfb202bd",
        "cursor": {
          "ref": "8608e181-ed59-4f5d-917d-df2ea533b88e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1bbfdd58-bd6a-4f69-b679-d8a96d0b3714"
        },
        "item": {
          "id": "a3568395-597b-426a-9c85-9fe1bfb202bd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cbbe3f41-93c4-4835-b81e-7f61b50ad3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed96dc0-28e4-4475-86a6-c20280eda6c0",
        "cursor": {
          "ref": "df2f3500-cb54-488a-bc0a-9b4c76bfa5b4",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a069a0d5-4ef0-43ee-88d8-fcea287d82ee"
        },
        "item": {
          "id": "5ed96dc0-28e4-4475-86a6-c20280eda6c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "daabf6d2-fb84-40c7-ac3a-09d1ae94a34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a47e54-9ba5-485c-abc7-6b28f36bb751",
        "cursor": {
          "ref": "0605a782-e788-4bac-9b44-b4bba238e902",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8cb418a4-0a7b-4deb-94f1-137a4540cf67"
        },
        "item": {
          "id": "a8a47e54-9ba5-485c-abc7-6b28f36bb751",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e3d74ec3-c677-4ee0-8cf6-9c4d6e4a1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bf9068-4e85-4fff-9c4b-397221d6d592",
        "cursor": {
          "ref": "ac865ca4-2ba6-4ae0-a0a6-dc1c0faaf6e6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec56219b-0ad7-4db0-bbbb-aa693f928b21"
        },
        "item": {
          "id": "a2bf9068-4e85-4fff-9c4b-397221d6d592",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9616f298-d8c3-49dd-a866-6cd69b8da3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e12787-38a4-41b4-b559-70a5baeef149",
        "cursor": {
          "ref": "f371e481-71bb-4b3b-9909-635b7aa56dae",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5e6effd7-96e7-4f73-82cd-ccd89d0a9a9f"
        },
        "item": {
          "id": "64e12787-38a4-41b4-b559-70a5baeef149",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "73236f64-fffe-4cfa-b257-cab40d53d724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e58cce8-686a-4734-89db-d8b50a251247",
        "cursor": {
          "ref": "60370f49-64f8-4bbd-baeb-c3f2c7c5fd78",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e1024865-cd2e-4477-8dbe-17821dffc016"
        },
        "item": {
          "id": "0e58cce8-686a-4734-89db-d8b50a251247",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a80def07-5611-490b-a117-3827d3386e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff4256a-6103-4728-893c-6dd0a56a0d59",
        "cursor": {
          "ref": "548e39ea-c44f-46d7-8474-450a2cd03d8b",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "752a6d0c-af5f-4ce8-a155-58d325cac149"
        },
        "item": {
          "id": "0ff4256a-6103-4728-893c-6dd0a56a0d59",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e7a8eac3-eaa3-41a2-9cac-84acd1ee9a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918ac7a7-6955-4526-953b-881a8a1f8c85",
        "cursor": {
          "ref": "100bd18e-218f-4033-9676-ea62bf5891d1",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d0be21f4-ab2b-412d-9069-eae36bb86e53"
        },
        "item": {
          "id": "918ac7a7-6955-4526-953b-881a8a1f8c85",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "57252193-7df3-4f4c-980d-e687de923bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a009e-a353-4961-99bf-1e9b36f2e312",
        "cursor": {
          "ref": "27ef5e2c-5206-4511-a7a0-ca7bbc9bcf69",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e3c45db7-2109-4e27-9110-803bb7ffd949"
        },
        "item": {
          "id": "159a009e-a353-4961-99bf-1e9b36f2e312",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5d3e2b17-df5e-4a04-b450-8683505ab412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18ccae8-dcd0-4321-9cec-400247d96903",
        "cursor": {
          "ref": "a185609d-8a25-4247-8d2b-916f56c16873",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3b4640a5-0016-41d3-8ae5-9f1e4e8a82aa"
        },
        "item": {
          "id": "f18ccae8-dcd0-4321-9cec-400247d96903",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c26171a-d6d6-4f8b-b533-507eaa58565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52867550-02a6-40a8-b28c-5780f510a41b",
        "cursor": {
          "ref": "27b64f35-974c-4f69-a41e-7fc3521c71bd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bb2bb809-dd73-4f51-bb5c-c2df0a1c9cba"
        },
        "item": {
          "id": "52867550-02a6-40a8-b28c-5780f510a41b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7e50a3cc-1b97-4a0c-ba8c-f822db5c1927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7971676-4853-4a5b-bc3b-52b1ef361c38",
        "cursor": {
          "ref": "99fb08d6-9770-446e-ab48-7c038961aa0e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab09fbb1-feec-4921-95b3-bb8fca9989ad"
        },
        "item": {
          "id": "f7971676-4853-4a5b-bc3b-52b1ef361c38",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "afbe9f88-2fe8-47e6-a62f-ed4b78fc57c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3cf2d2-0cc2-4008-b266-d66ede4678d1",
        "cursor": {
          "ref": "1c2fedad-3f0a-4af0-8250-44f5c0803d46",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eb3857a3-b281-4480-993a-cf489b62f386"
        },
        "item": {
          "id": "7c3cf2d2-0cc2-4008-b266-d66ede4678d1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ecd92093-6f5f-4cf8-8d72-1dc1645929eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024695f3-8218-41da-9188-e28db005bf3d",
        "cursor": {
          "ref": "9363f026-2647-4240-a2a1-8af856b14799",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "766a3de4-111f-4917-920e-2c99138c0717"
        },
        "item": {
          "id": "024695f3-8218-41da-9188-e28db005bf3d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ac890146-2240-40b2-a07a-e37b33238796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6d2010-2a0b-43f9-81ad-276db23bff30",
        "cursor": {
          "ref": "385677b5-0524-4e67-8504-5ddcf421d38d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d391c2f3-b4e2-492d-9af1-f262950b696d"
        },
        "item": {
          "id": "3e6d2010-2a0b-43f9-81ad-276db23bff30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d030f530-1b9e-4011-9861-3d2646bd574d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca5c5b3-5df3-4742-bff0-e97ac2ffe29c",
        "cursor": {
          "ref": "ec66725a-80f9-43e6-9186-bcb8c3ddd54c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea53c2eb-189e-4ff9-9472-a52a2852c192"
        },
        "item": {
          "id": "9ca5c5b3-5df3-4742-bff0-e97ac2ffe29c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "789afc57-12d8-4e55-8f0a-db44bd6b9de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975f3fcd-9a28-4fb0-afc9-cf209e1829b4",
        "cursor": {
          "ref": "8a4ab967-f198-4ce5-a2b1-e20d06152bcb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "58bd7a4b-c416-46c8-9e8e-f8d52618d8ab"
        },
        "item": {
          "id": "975f3fcd-9a28-4fb0-afc9-cf209e1829b4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1abf7d8a-a2b3-469a-9c1a-8340993ad0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0b812f-d5af-471a-82c0-b82e83de8772",
        "cursor": {
          "ref": "0c12a5c3-50a7-4369-8f04-e3444325183c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "88224ed4-d80a-4758-b743-2eb9f0201d2a"
        },
        "item": {
          "id": "8a0b812f-d5af-471a-82c0-b82e83de8772",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "436f1e62-0e7d-4efc-81e8-8015b2a45ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f067e6-b231-475c-99b3-840de9b86c5b",
        "cursor": {
          "ref": "5f3846bd-bb21-442b-a36a-1ae03d47d02c",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c3430ef4-2b0c-4d78-90e8-7cdb90a71045"
        },
        "item": {
          "id": "86f067e6-b231-475c-99b3-840de9b86c5b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "28cbf52e-cf07-4ee5-ab34-c0d04f7b5623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c8a860-7855-4116-b288-f689979bce2c",
        "cursor": {
          "ref": "a2708898-68c0-44b8-8929-389d082be12a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ae610acf-1771-49f4-a55d-6c7565856d30"
        },
        "item": {
          "id": "d4c8a860-7855-4116-b288-f689979bce2c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b6ede66d-5304-46ca-980c-3b6143472179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89c96ea-1a29-47c1-9235-d467dca7ebfe",
        "cursor": {
          "ref": "6fcdd747-6034-4bc4-b7e3-2bf308bccb59",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1a2b325c-937b-44af-a003-a8dbc02763b6"
        },
        "item": {
          "id": "c89c96ea-1a29-47c1-9235-d467dca7ebfe",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5d9bd4aa-7533-465f-bf54-3b2879f656c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d4a4d0-f03b-42ff-8027-ad2306e918de",
        "cursor": {
          "ref": "69871803-9a89-482f-a802-95a32d42c903",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6b85b8b9-67d5-4551-a988-171074748eb8"
        },
        "item": {
          "id": "19d4a4d0-f03b-42ff-8027-ad2306e918de",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "72b6faa0-0456-4de8-a43f-8434e1f9ac77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900e3787-0e04-4c39-b46d-4473af097e7f",
        "cursor": {
          "ref": "ab2df68a-821c-480d-ad11-6eaef56baf07",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "47c2c2f0-57d2-4437-8495-7495b24cb24f"
        },
        "item": {
          "id": "900e3787-0e04-4c39-b46d-4473af097e7f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "df5c38df-a218-4787-82ee-39303a650ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c3e0ab-b89d-4dd5-a44d-e886a311254b",
        "cursor": {
          "ref": "887b2392-2ad1-452c-af99-8565bf2bf4ca",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1898a044-b00d-46d0-8d72-fd471cd5e6c7"
        },
        "item": {
          "id": "d9c3e0ab-b89d-4dd5-a44d-e886a311254b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "22b542ea-fa73-4511-8270-a19cc79e80ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e23e2b4-1538-43ff-97b0-1e3392e3087b",
        "cursor": {
          "ref": "8d101cb5-dad2-45c9-b762-f0fa04c3f3cb",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e8cf5519-b842-4873-bac1-bf190b3263e9"
        },
        "item": {
          "id": "7e23e2b4-1538-43ff-97b0-1e3392e3087b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4dc5bb4c-0ed4-48f9-8552-863850eac904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9198375e-7bd7-4367-8b56-8a8a334a0ac0",
        "cursor": {
          "ref": "d43a3550-6a2e-4ff8-bd7a-690b407b79af",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "41a32465-9608-4d2c-ac8a-a7388890d6b2"
        },
        "item": {
          "id": "9198375e-7bd7-4367-8b56-8a8a334a0ac0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "07be16a5-d776-4411-bc2a-812d3d293281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09728c39-f2ec-484b-9b66-15d1f3899796",
        "cursor": {
          "ref": "d741fb29-03b3-4ec1-97c0-0cbea163b46e",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0a8809e4-5db6-45b0-a220-086881ce4bea"
        },
        "item": {
          "id": "09728c39-f2ec-484b-9b66-15d1f3899796",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f91a6d1c-2b35-48d5-8ca8-bf8382274ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df7d5c-09cd-4786-b46f-67ecd2a51425",
        "cursor": {
          "ref": "ce2da8ec-cdb0-4f5f-923d-957bd2c5aa73",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "87645676-e81f-4ad6-98b9-8e22dc7c338f"
        },
        "item": {
          "id": "e3df7d5c-09cd-4786-b46f-67ecd2a51425",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72d90a11-1ddb-462b-bf3a-1310b8b14ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c8454c-6218-403f-9464-b9486e50e34a",
        "cursor": {
          "ref": "7045b9c3-066c-4e48-b59a-6474416768ed",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "33b19e6e-02cd-4fc5-8dad-e1dd88223184"
        },
        "item": {
          "id": "c2c8454c-6218-403f-9464-b9486e50e34a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "055ae691-2892-4858-9815-b8c1624ad0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b0d244-57ae-4601-80a9-e972fa0c6636",
        "cursor": {
          "ref": "0d72418a-0d60-49b5-9426-8110a886cded",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "928ec055-d0b3-4829-b342-9ce0da03b244"
        },
        "item": {
          "id": "00b0d244-57ae-4601-80a9-e972fa0c6636",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7a12db3c-7f3e-40d5-8072-18e9591e7930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d6c262-6ec8-4721-9572-36c14b78180d",
        "cursor": {
          "ref": "c558e57d-7114-48e1-8844-ea68d6365fa8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3399bf9c-80be-49d2-aee7-55b7dde48928"
        },
        "item": {
          "id": "f8d6c262-6ec8-4721-9572-36c14b78180d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "28d14d16-621f-4014-895a-3b7ecf71e31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e58265-601c-4a1f-89dc-53f9ebd85ed6",
        "cursor": {
          "ref": "78c1ed67-e853-49e3-8cba-09cff81847ab",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "98bad82e-8e5b-45fc-8093-c0a59f53ae6f"
        },
        "item": {
          "id": "51e58265-601c-4a1f-89dc-53f9ebd85ed6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25908a1f-44c8-485a-af49-27de4c7e1383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956a6d35-d041-420d-8539-cea0f5f54eaf",
        "cursor": {
          "ref": "a76b76a8-e948-44aa-ae0a-1e7252ce5daa",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5f36f127-ff0f-4115-9174-aafcf044dc6f"
        },
        "item": {
          "id": "956a6d35-d041-420d-8539-cea0f5f54eaf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54cc6a80-b85a-47ae-ac54-c8e0dc3ef815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3520f065-035a-4bea-a3d5-bce4aa49ae3e",
        "cursor": {
          "ref": "78a5587b-4a9e-4fcd-858a-a1a15e8e2580",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "84392a8c-f1e0-491a-86d3-2c00df637cec"
        },
        "item": {
          "id": "3520f065-035a-4bea-a3d5-bce4aa49ae3e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c357bf6-2a54-42f0-9d00-a7dac2687d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ac9221-e0f4-4180-8f6f-93ff9f5f7d39",
        "cursor": {
          "ref": "695e4efe-3b79-4599-b464-d966c33befae",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d4c53451-566d-494f-9bef-4d9da6558663"
        },
        "item": {
          "id": "55ac9221-e0f4-4180-8f6f-93ff9f5f7d39",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f2d1e181-3938-4fe6-8c59-7e6849e9057e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d272d052-eda6-4fbb-af63-316833233a47",
        "cursor": {
          "ref": "13a61ccd-9cfb-4192-b10f-453bc886ebc9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0fab7b46-0873-43fb-b4ed-5b2eefbf4e95"
        },
        "item": {
          "id": "d272d052-eda6-4fbb-af63-316833233a47",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c9763d53-3bca-461d-b340-290b33657829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7568650-e7ad-4403-986e-45cf65852bb3",
        "cursor": {
          "ref": "87a67532-269f-4ff1-874b-18f6c0c8a3c8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "52b82a37-322e-4136-84e0-e5af37de5f5b"
        },
        "item": {
          "id": "e7568650-e7ad-4403-986e-45cf65852bb3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1fd0aa85-febc-4340-8193-12520bade074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9980690d-1585-448c-b2e4-5bab0353bb27",
        "cursor": {
          "ref": "aace3326-e21c-4478-baaa-734a71134b6f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ae8e479d-169d-4e1d-93eb-958e93b9f189"
        },
        "item": {
          "id": "9980690d-1585-448c-b2e4-5bab0353bb27",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25d56ea1-9c69-4b10-b2db-d1b699bf45f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f9b069-8050-4296-b483-2b2cc6405b6a",
        "cursor": {
          "ref": "f7bb700a-b483-4be4-a9d0-7add89d38c92",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ba4e1aa9-1ffa-43a5-830b-ab4e72bd7d27"
        },
        "item": {
          "id": "d0f9b069-8050-4296-b483-2b2cc6405b6a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "09ab9ae4-ca90-41c8-aa35-ff42c6962b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c9b072-3fcb-4692-9ed7-eeb671269cae",
        "cursor": {
          "ref": "6bc6cee3-5cba-49e9-ab64-a18627f49c88",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d61b36da-a633-479c-877b-af385e2372f9"
        },
        "item": {
          "id": "60c9b072-3fcb-4692-9ed7-eeb671269cae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "36bbcc19-7bf9-4eee-aa46-c99548ce6e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b6e771-2f98-4e58-9b43-505152197825",
        "cursor": {
          "ref": "361c8ce1-aa96-4b9d-82af-e0acceb1b1f1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "69d58a8b-f1f1-4cd1-b1f4-7d5b64bb7c66"
        },
        "item": {
          "id": "55b6e771-2f98-4e58-9b43-505152197825",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9a1826fd-0632-484d-8a84-aaf280b32685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d27e0fa-5892-4135-a08f-c4f5847c3752",
        "cursor": {
          "ref": "c708bf1f-1f8e-4cc8-aa8b-eba535afade1",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bd6e980c-5b81-4604-8382-12dfe22aa228"
        },
        "item": {
          "id": "9d27e0fa-5892-4135-a08f-c4f5847c3752",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6d83405b-f9f8-41a8-bb56-83af1429e0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b92813a-36c9-4e21-8107-4a9f6a8e8eab",
        "cursor": {
          "ref": "bc3bb069-6b44-4092-a0b1-987c56656a98",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "16de56bc-bc16-454e-ae98-542f47883e61"
        },
        "item": {
          "id": "7b92813a-36c9-4e21-8107-4a9f6a8e8eab",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "300e62fb-c710-4cba-a76b-2f4fbb9a9ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dac880d-cda4-48c8-b7f5-455bfa778dd0",
        "cursor": {
          "ref": "8779e33a-a6ce-435f-a4c4-d5e2e8ff3b41",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "55a021ff-ec2a-4b3e-9ffd-e70e81397a3c"
        },
        "item": {
          "id": "2dac880d-cda4-48c8-b7f5-455bfa778dd0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eccbc626-9ee8-4b76-988e-f56faeda081c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcfda99-9a04-45ec-9547-34588dc95da0",
        "cursor": {
          "ref": "be5df1eb-6df9-4d13-84f8-3fcc21be51fa",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bd04a209-8857-48f8-8aff-cbc89baff64d"
        },
        "item": {
          "id": "edcfda99-9a04-45ec-9547-34588dc95da0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "57da16d3-3a3d-44a6-9702-f39c528c4922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ababf8f5-5f0f-4a9d-be95-08fadc70dd04",
        "cursor": {
          "ref": "96a083d6-c57e-41c5-b1ea-d031b521f439",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ccfb4420-a023-4a74-af2f-46a839fbf78f"
        },
        "item": {
          "id": "ababf8f5-5f0f-4a9d-be95-08fadc70dd04",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9e277479-87e8-4cdf-b9a4-54f38aa080c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4102ec4a-4b53-4b55-9dd9-4ccbd48c1b37",
        "cursor": {
          "ref": "69084c1f-19b5-4e14-8a26-a6851a70a2fd",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b467ba4e-35f5-4244-8cf6-de19ba4b36f1"
        },
        "item": {
          "id": "4102ec4a-4b53-4b55-9dd9-4ccbd48c1b37",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5862523f-9642-401d-8071-e12a1ecb334f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c19c89c-6f5b-4347-b692-09d237bbf502",
        "cursor": {
          "ref": "2e6e9bf4-b71c-43ff-968c-9f2400a1caa5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6b44deb6-a1fe-410e-ad78-776631cf06e9"
        },
        "item": {
          "id": "3c19c89c-6f5b-4347-b692-09d237bbf502",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3364a460-ea4d-48db-919d-654fe7c6bbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d796d886-d84e-4d8f-ad19-3d1201b2e995",
        "cursor": {
          "ref": "87456776-796a-4815-9e9e-901443451cbe",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "95a9a8ce-c4a3-4963-b158-5743a719475b"
        },
        "item": {
          "id": "d796d886-d84e-4d8f-ad19-3d1201b2e995",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cb72cd13-01f5-487c-a2da-855644e1d304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b712a8-f751-413d-9759-ae65cd005791",
        "cursor": {
          "ref": "18fcbb49-ee11-4138-bc1b-ed7fb82fbb9c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b3967531-5e9d-4093-88ef-aa3ad6821f86"
        },
        "item": {
          "id": "90b712a8-f751-413d-9759-ae65cd005791",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a21c49d6-3604-4650-b281-77ac8292f934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0285bc5c-f82b-4a4d-8efa-5d6e6eb9c8dd",
        "cursor": {
          "ref": "b3d6ef37-e423-4012-a9ae-fe3584de2714",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "57d482b5-7ff6-44b8-8541-2a97cb83e1f5"
        },
        "item": {
          "id": "0285bc5c-f82b-4a4d-8efa-5d6e6eb9c8dd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9f1de9f8-a5fe-457a-9b5c-5dc011fa2ddd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf724c8-b9ad-443b-9c9b-01ba6078d718",
        "cursor": {
          "ref": "d5475a51-aaaa-49ad-91cc-7c7da27a45b3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4f72ada8-a8e6-4ce8-85bc-2e2fc3e65802"
        },
        "item": {
          "id": "9cf724c8-b9ad-443b-9c9b-01ba6078d718",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f6c94834-0b65-4c19-b164-bcf4f0678761",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "87544cbe-60bd-4a33-b44b-35adc43323e3",
        "cursor": {
          "ref": "2a859d34-3f48-4626-9b61-e2b8189a34f7",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7562d0ef-bfb1-4f39-9481-d2e622c13999"
        },
        "item": {
          "id": "87544cbe-60bd-4a33-b44b-35adc43323e3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fe780a43-f0f3-4188-9fce-d34807f50730",
          "status": "OK",
          "code": 200,
          "responseTime": 1524,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0fe99-1f43-4f83-8ecb-a8b67e5c0070",
        "cursor": {
          "ref": "573593a9-73de-4ee6-9eb4-574e15837771",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1f900ab9-2cf6-4831-95f4-8c2e086b781f"
        },
        "item": {
          "id": "fde0fe99-1f43-4f83-8ecb-a8b67e5c0070",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "db3612aa-086c-4d0d-9d4b-dd75d02b9768",
          "status": "OK",
          "code": 200,
          "responseTime": 1264,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d90f76-92a4-425c-bb4d-847769d4c2ed",
        "cursor": {
          "ref": "9bb98601-51e3-4830-a88b-5922ebae1a2e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "733b4bfd-0929-4881-9565-c7744762fabc"
        },
        "item": {
          "id": "f1d90f76-92a4-425c-bb4d-847769d4c2ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14fe49fd-c7cd-4df6-ba32-55d167893582",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d90f76-92a4-425c-bb4d-847769d4c2ed",
        "cursor": {
          "ref": "9bb98601-51e3-4830-a88b-5922ebae1a2e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "733b4bfd-0929-4881-9565-c7744762fabc"
        },
        "item": {
          "id": "f1d90f76-92a4-425c-bb4d-847769d4c2ed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "14fe49fd-c7cd-4df6-ba32-55d167893582",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a481b2-bbbb-42e8-9315-5fbe923f201b",
        "cursor": {
          "ref": "fa2ffdf9-93d6-451a-9f00-b4e2d4d9b68b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "eabcedd2-8adf-457a-998c-b78595c1d35d"
        },
        "item": {
          "id": "a3a481b2-bbbb-42e8-9315-5fbe923f201b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0f4645ab-7533-434e-b4a4-fae27a831c81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059740a-f7f9-47a9-8f5f-92f853e9e354",
        "cursor": {
          "ref": "2ebd02c6-7a98-4ba5-81c5-0d1ca6f28b1a",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0bcc2b16-8fdd-4da1-88df-c4a88d8571c7"
        },
        "item": {
          "id": "a059740a-f7f9-47a9-8f5f-92f853e9e354",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "840483af-67ed-4a84-a1ee-36802f85aa55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}