{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fd198017-047b-405f-b862-30055165eaba",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c2f1442f-2222-4e98-86c2-2aa3ec85f23f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18acad96-126c-48ee-902c-758e8d33c0f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "01c9e8c9-9afa-42db-b477-408db310d930"
                }
              }
            ]
          },
          {
            "id": "dc606d92-f42f-48ed-8962-5b9f5b7511b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed662d64-b922-4411-80ba-b15ea61c47da",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d5125df-912b-4eae-9972-66a2a8d03902"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3797d061-a47e-4841-9910-0843ad809d20",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8c02da94-8ec6-42d0-a9aa-8d9db3100ff3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfe1ad83-6339-429d-987c-05539397ecee",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0409816b-f45b-41b5-b1c5-d8b6b461566e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e73517ab-80b4-4c3e-b464-18220af70f14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21700c5e-6e55-45f3-887f-e9846aa006ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e670420-357a-442f-9f4c-76035e055eac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b7be526-35ed-41c0-a484-49acac14664a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a94b722-7ec6-442e-93f8-71660550b110"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b1c1701-1c4f-42c3-9b3a-1f2f907dea5d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "42cd204d-f27e-404d-9af7-73d32e53ab38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e8124d-f951-4da0-a7d9-865f101e98f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00c1bfe3-2b22-4877-a3ac-b193f50326d2"
            }
          }
        ]
      },
      {
        "id": "4b86e797-69c7-4d33-80d4-925062f4f2ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5865065c-f5dc-4695-951a-6521723ddeb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "daebb20c-0b16-4473-9e8e-be9fcaecfc2c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eabd15ca-4d47-450d-a056-79a0762a5d0d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d6e339-1a93-47f0-ac65-fc2c70dfa3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95177760-feb1-46df-b2f4-472536f4e414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f030a375-762d-4563-8993-d0a73ce08017",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d82a83-1b91-459e-be76-22ef7df8fa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb5ee003-98c2-4753-afe4-12beb54f36a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54253d34-2ecd-4b7b-9c64-942bc3d9793e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85565a4d-4474-4738-8384-2eb60830def2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02bdf2eb-9084-4ec9-bb99-16b9ba9d3da1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "436a3f10-65d5-474d-9d01-42166768b927",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba5e6781-3854-43fa-9830-f8b643557ca4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e597fff-db1a-443a-8c21-7a4cf8347e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d7c0eb1-11d5-46f0-9a6f-600c2ea484eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a6b078-cd9b-4718-b48d-20e5eb018923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14cb47e-9590-48f1-acf9-d6743d2b92b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7398e8be-68cc-4fc5-b105-b9301d715f9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc6daec4-eb6d-4bd7-95f6-ba4889658394",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6fcd6b3-0bb6-4ad0-93af-01cc835f0837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "61b37e9c-f686-4180-83a1-79a388d49378"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "239d4114-9532-40de-b87d-2c4ce0eef71e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "455f1e68-d57f-45ca-8c32-7f3fda6490ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c6513d4-3a71-49a8-acf5-5730091557cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "534f5c7c-e125-4f7c-a657-723560925bcb"
            }
          }
        ]
      },
      {
        "id": "2368fb12-b7f0-4b81-8d15-71881c44f93b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c4f8c2c2-5512-4f39-8e7c-97ef9fea1dbb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "787d440c-84f4-41f4-803f-53f7273c7c92",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b14097d6-ad13-4c84-a4ec-802b6989aa82",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632fea9e-85e6-4d2f-aee2-a88a4054adfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726b3448-e97a-4f93-b19d-d3ed6f9fb48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d9d76a-0925-45de-96bf-9b90ffea11e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e773dc1f-c927-4f66-af4c-06acdc0bffd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6ab7ac-53f8-4227-b214-16558f748dc4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68329cbc-1684-4896-9502-684e30645fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0765155a-1cbb-4bb7-b821-a23c166aafa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9439dbb2-c167-4e0e-b176-480135d10f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36bbe607-c596-4b48-bd20-81538631d2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597ae58c-8069-4995-87d6-5a259e9cd640",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198ba86c-3722-48be-bf7a-749f3ccfea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74317caa-6638-4c0d-a6ee-e311b900e7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2e8eb1-7180-406c-80d1-8a801664e029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98607df2-bdfb-4518-9ab2-7856d2367e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15825006-ae15-495b-bb5c-da923025b30f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ff0025-8112-4c0f-8ae8-0f56965244f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c435273c-4fb5-462d-b561-14e2853b013a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1348e694-1e0c-4079-b8e2-7cad9c168286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e77ed4ab-ed04-4cce-9246-ecfd3b982363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0588689c-7302-4038-857f-f2c436d1ec99",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121bb7d0-f36d-4a57-9264-bf0ae595858b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0146f67-5109-42f1-bee5-67d2c300713c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc292cb-787b-4ba3-97c7-8faf6af42250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6836d1d-a0ec-4427-a00d-ebf7842f778f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7255f6-1a42-4085-b188-e93860ae6cf8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bd57b7-a3c5-4d0e-b964-bf032bbf5865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051efa9b-2fee-4a5f-b138-f41e754d9192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a4f085-9cb7-432b-ab07-2e46ff16604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2cad8e4-9d86-4d75-8aa7-0e7f4a9b6a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94777fc2-462b-4b01-ac39-dcd14e1e3513",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eddab02-32b1-4aa5-88ae-3d83e436eb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349eba47-4b7e-4f8c-8383-ef14efa2cddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaac74c-b450-4165-9200-b3d0a07d01ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb50199f-199a-4d14-9aa9-dfa5774d23cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45388d55-8222-4f78-b89e-91b010a06a5c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a3d43-6f32-45b1-ab50-9f6c090ad0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962d9fb0-914b-4007-a37c-ff1bb1711332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8996422c-7733-452e-8049-36799b9b7951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24cedcfe-9783-4180-b656-900c4ce4f00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c229200-16d5-407a-b685-77997f98b9c8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941a452b-2c3b-415d-bb17-3da0c78ebca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c54c3a7-d3b8-49b0-bec8-8e322b434367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7394d7d-c644-4703-b9c6-4fe3749ec247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75c13134-674b-4041-807d-98dd24fd3296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a0267-e9cc-42bc-9825-cb83da553ba6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89bcdef-475f-41d2-8f89-42421042277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f941dd-681f-43d8-a6c8-c2dab83ef8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b22459-9760-4707-809e-cc2a15f83991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c5d8d61-6320-4483-993b-8e1f87dd8832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc2118-3afa-41b7-9f2b-4a1556854f0d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097dd5bd-a036-4b2f-833c-bfc4de040cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02b1f8e-d174-4d1b-bfe6-df74d73a274e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b95d59-9c1c-4b95-ac95-2248ed782089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3df19c3c-77a3-4a65-9bb4-24bd3c6d0380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1adb7f90-9d5a-4637-8e48-f081ee09fc4e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751a475-a437-4da4-93e8-679ffd038d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167f7da2-a084-441a-b37f-c0f8dbbf8d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8e3c29-8e4d-4960-8dc1-8aefb3ebcef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8826a712-d384-47da-b9a0-c73ab63dae08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8578994b-47a5-4c52-bd31-b0668ed5a347",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb681e2-2b7c-4fc4-b321-f86031fceab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c20e6eb-d6f8-4c48-a7e5-c44bfa1a4ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e818a40b-f002-4cc9-af82-de936b895f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96d72ed5-dce9-4379-ac0f-379e5092d84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440bbf6d-534e-41a3-adf2-a5aa34d9e673",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3df4aaa-0f63-49d8-a17a-eb96ea143a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1fecd4-0f66-451b-85d4-f7b6141a1d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026fdf38-b3b9-4269-91bc-8c5cf892c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "753ec706-bb70-4b7d-9b17-bf3e238ee485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e439fab-c027-4d89-acbd-18241b3e1b87",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce9d6b8-f3fe-4294-9348-29d99d389fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e203509e-4587-464e-bf21-3df0d98a2e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b18c945-2e3b-4131-8363-ed20a5238c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9a2bef6-5f0f-4720-b2be-76edce1b9f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a329fc84-49d2-4ac1-8df9-3a935e2f83b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25201dd9-60c5-45be-afbb-415df527bba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43865d23-0a08-4c62-8e29-0ec685870f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae26cc50-1cae-44ca-a97b-b62e75412763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3f1d439-766e-4d6c-b33f-d9e0ad72dd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5911f4-e696-433a-9718-263d38268207",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e62ed00-81ac-4f14-9324-49419abe1533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca34852e-d33d-458a-8f96-5da9fad3de37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a2dfb4-0028-46ab-abab-4063002723c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321cdfb3-1d91-45f0-9108-d9f48c5ebdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677dbb56-b8f0-46fe-8473-438371482371",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34f50d1-a8b4-43e7-ab5e-2b0b14199c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f98bbc-af0d-45bb-a44d-80f89ecb7c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc493dd-789f-4a05-a5f5-06b430d40c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1149d4-f6cd-4d70-87dc-7715cf3609bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6809c86c-a6e4-497a-bbad-fbb22af7ddd6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc93b42-67b2-4413-961d-ba886f4bd8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2768f75c-aa38-4631-b1ab-476d7c191f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b73d9-6e90-46a1-8660-e9c983f80d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74af5212-7a8e-420b-8aa6-0119d713dc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80494e5a-0902-41b5-b1f0-9cd342e3bce4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940dcf0a-14cb-4afe-ab89-6db315099ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0531e639-d0c7-4303-acae-e9810d93febb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39757d3e-456f-4fa1-a4d4-52db5d647ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10dc3e1-25fc-4b9d-b12a-25a261c6379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a1d226-2fd4-4737-88ee-c19cf1c30f5a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0795014-cbb6-41d6-897f-93f7f3df0397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d03a055-2b54-4100-89ef-ed216c184ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b9bac2-1e1a-4994-9c95-f2b71f3e38a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcd494e-3a30-4347-8f26-f9832b1d5c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca65841e-7f6f-4b8e-ab22-f4c2de27dd17",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6bee02-7580-43b7-9dbe-03a6df57d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5a23bd-219d-4ab9-a8ab-b60f1bb9413f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e36f1a-f9db-4372-b9bb-b290824b9c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e21b01f-cce3-40f2-90c3-c7a0329309f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299127c7-a805-4739-98d2-5249f2f8b371",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9de2c0-aac4-4d46-999e-d11c4e67107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e680a4e-5546-4957-847a-05bdfbe19f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb62383b-ad13-446f-acde-4d6a73577f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0b844f-3cc6-4742-9119-10fb2186a8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c092f92a-ab59-4d65-bb1b-20282a0dead8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77395bb-e7ac-4eeb-b569-d6208dec24cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c6098d-115a-4482-bf48-6b6fd1952581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fc251a-7a6a-4125-9682-0638cad38886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a262a9-4e73-436f-a650-42769129969c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5f0b23-a279-4811-a002-2596e69614cc",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67142690-3abd-43d7-bd94-dedbb8bbdf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64747071-aeac-4e5a-9ed4-1cb51105bca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a2766a-4b84-48f8-af73-4965e51b4fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e06d552-10fb-4e40-829e-4c27e2f53add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2801ab6e-ac13-4021-9caf-93c05a2318f2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3adad5-7eb5-455f-9700-e1e229d43a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de26da72-dd18-4be4-ba01-e732945df130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbca097d-4683-46e6-9019-65b41cd93cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "faddfdd0-e876-4291-b78b-49f0c65f6efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f0a59c-7237-4498-9f81-f0962d105b25",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "701faa51-1fb9-4886-bd6a-2083b8e28176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499add85-459d-4ba0-b26b-019da942d350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd7b94b-e3a5-4b70-988a-dfc68ce91664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae4536f4-2bde-438b-b055-b9f2251b8104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448d356c-5b9b-4d38-9511-819570a23bf2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1344281-aae4-47c6-afe2-1e74cb51f76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5471ca06-ae81-40cd-aa68-0ac637617278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7fc589-2003-4dbd-9a28-3ee9855bbacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d917f5da-5ecc-4065-85ea-b78cdb7a0bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9881ecd-e2eb-4832-81fa-70a93ad012d1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a522a63-4bfb-4963-aca4-86ec16281791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4e9136-6512-4bf2-a6dc-144259bcfdbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b48c3fd-0a29-4138-88ca-46b1f4d2cd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e73ae3d-0d3b-4d93-8331-f03beb28f68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7a2129-23d8-4af0-a0b2-c5ea4e9526d3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60b71f1-dfcc-4b18-83da-49692c21bb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5cb492-fefe-4f41-a85b-2348ee74dd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375c1d47-814b-4299-94d8-04eab22670cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f695d0-a348-4c18-a7b2-d5488f45dc59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55aa396f-9277-44d9-8778-0589dd9c6bef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4d277d-5988-4ccb-976a-f07ec5489af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c64030f-8c51-4b14-973f-456ba5a6116b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ccfd1c-e01d-46fc-b22d-b4cbd60a5bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9804c454-3cbc-462b-9ee9-acdc2c1ef0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fc755d-2765-4bf4-aac5-e812a7e5bb1a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d1f42-945b-4518-9659-309b17f93129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c83db0-c537-4b0e-a623-f1b4ecf846c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f3eeb7-f17e-4095-8bc1-4601878df070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "478ff9dd-9097-496d-bad6-acded7eb1b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df731ccd-a396-4cc6-9853-92cfc51d0456",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d910861-0d70-42a3-b911-990f5aa66700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f49fd15-33ca-461a-b956-fe242fafd9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18299ca8-f636-45a8-96d9-4073f7df2635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8de1a2-d829-41f7-9196-e4f194a92095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65be2be7-a51f-474c-9a20-53ed6144e654",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2715d1-faa8-44ea-9347-bbcae8c63b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cded31-a466-485d-8a80-4070865e18ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60d4459-6a13-41c8-8e0c-07230918d5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2289050-89bc-49d0-82f6-522374d69902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f7cd72-fbd0-4322-8aab-445478e53110",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fae6f6a-90b0-4e53-b277-9d4b6a1db449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bc107a-687f-48f8-966d-e9b1c1163988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484680fd-8821-446c-ad16-49ea7441b29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "91da669e-f142-476c-95ae-dce1aea1a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afe9822-8d05-417d-8086-bbb03c94b672",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67997c53-9127-4fe5-b282-0993ce940d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e771a2e8-10e9-4ca8-ad44-a9d54e01d468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9da67dd-ade7-4bcf-b4fd-210826267e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e43d08d1-f770-44c1-b8ae-2f08a8895be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d416e8ad-e768-4c7f-baab-ac2f260f51e5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2e32ab-1689-4917-8a02-451c49e17273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf0f692-f6f4-49f0-8ed8-58a233dc8585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd9e9de-3720-4a65-9ba3-d1752b2a90ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07868962-2ac8-449d-a603-b2d668817a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57a16e5-2e0d-4238-9c26-c45e01711a60",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371ac75f-98a8-4084-9d81-89e15f9aec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df95d6c3-745e-4517-b924-7860da833add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8f4dc2-d187-4b51-ac2f-0771dd7c4fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8b6be5-102d-4bf0-8312-4f3e3ed5014e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec078d82-c1f0-4b27-a5e9-347077a0f83f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3860accf-52c6-4d8e-9d4f-6c591d975865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9f61d8-5022-4ec1-8f7c-2f48eefbafd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f63399-eb06-4a0a-ada5-c5acbbf33121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e25e808-bd21-4ac5-8652-9aefbe1ba7d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ae59c5-0258-4b51-acbb-0e9682f44d48",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fade8817-5613-4ff1-ac85-0b85ec5f30ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dd794b-4e20-4c2b-bd10-e37a2ba6480b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b691e4a3-878a-4761-a26d-649af013244b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f53a7fd3-e382-4dee-a7c4-724833347a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ea0899-7e74-4351-9a74-b5040e2f36b3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48d1b78-5955-4556-89b2-e048de298ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3563b78-4ebc-4b40-a8f9-2366b6436a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba47c3f-4936-44a1-8337-8018d9933e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc40a3cf-8154-4839-b74b-68ecf383f77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd7055-a835-4896-ade4-78b777d29ecc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72fb02e-d23b-4d81-ae43-001de07d6b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25da125c-fb40-443c-bce9-af388d9f4de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec94767-c501-4106-9875-4436ab8ffe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9524d8c5-081d-461a-855b-ff5e96c6c2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8abe6e8-8ea6-437c-a40a-5d00c8a8d5d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078c5fe5-1af8-4951-aa97-91088beedb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d61b54-22bb-41f6-9d91-a60710a212be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c98a4a-46ca-4f44-9361-ec8d55fdf48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "377c4ce3-ec37-40f8-8538-a18cacef08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ae11fd-3dcd-44d4-9155-70026524ee6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ebcf4d-3d14-4c63-b625-3eb82c440ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15971a85-2d68-45dc-b184-96918b0ef438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e564e0f-fca2-41cf-becd-2a49f848bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ba0a40-5deb-4ccf-ae08-144545b550b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe0021f-21b2-420a-8b6a-171f7b0b9bd7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43806676-4b91-4478-9fc6-141730085cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5617fff9-da3a-47a0-aac7-72502da85737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5caaea-b152-4d6e-97c5-79bb31cc6c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30380e64-f27e-4fc7-9114-c0cbd77d4107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a331f1-261c-4ec7-8b43-3921c278f157",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69be185-2c67-4581-adbe-e3f802e9658c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13e7be2-c024-4ab4-ae56-14e15f9fd0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339acf7b-148c-40ae-b134-60e5b6f4fa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3098a5b-cfaf-4ab4-b823-679d47c5bfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9992d8-2bbf-4260-9888-e222f6641cd4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e9e40d-a8b1-4ad9-8f74-8b3a2d2e857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7f8a80-f213-4109-b6fe-6f72d774c57f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fce328-7d1c-4b22-9c64-84f5e0839ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee08f95-a3c0-4688-96ca-01dc0edfd5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e514486-70a5-4e47-a281-e305d8ead04f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e500ef-29c3-46c9-9ef1-40665c9b117a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e02cd44-4443-45ee-8ca8-a898cc147923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e8b185-7fc0-445c-bc44-0550668f7333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4eab13-40fd-4e55-bd3a-1ec9c1a0130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7153d1b8-4988-4a39-a7f5-ce4c8047fed6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951de984-ff3a-4d90-bdae-7a999e2e3847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeeabb6-7aa5-4dd0-a9eb-032120a8056c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655cf4b5-d0d9-49f5-ba2f-7bcce64d5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6af0d65-0bf7-4ad2-859f-322d9c9a777e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d65b6a-30a1-43e6-81c8-ecfb4b158edf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78ccf05-06ac-4520-bb7f-c9cced25dbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f47599-71c6-46c4-b77e-0c4e5cb82123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90dcc0e-bfdd-4172-b279-3f7ad848c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8140f9ec-28dc-4d8c-9167-939a0dae44cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d912b-2e09-414e-acc7-42ec89b2c7eb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f8f89c-8a50-4a32-9fd0-d3f04d4816ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48f6bd0-e4f3-4936-9eaf-c2d0816cd375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8295dc01-3de4-456b-aba0-39e1d70824ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "531bb833-650e-4741-a2b6-9ac0c1bfe4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56badbc3-6434-41ed-a1cf-5a8026db9587",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd029df1-19bd-48a2-8b0c-94a3be84e72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0603b502-3f15-4bd0-90ee-25714d56101b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb4f284-ab20-4fd9-953e-01c0f69010a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24aa5f84-a76f-421a-bd43-892a7d3bc67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40b7f05-7b19-4b7d-8b86-00b9e7aa1a20",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60fb107-832d-4708-9e1f-c7d9a054c36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd46455-39db-4b28-9535-03d33a875434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b4eaf6-bfdc-4fa0-ae9f-ebb9bcd425ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1a243a-7dff-4da1-9841-0a69972a787f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bf7f6e-ad6c-4231-92ab-9cc3bfd714b4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded595a9-95da-4744-84b5-4c4e9e703311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e712bc04-3209-4788-a41f-6a9fe17b7cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bf5247-012f-4b05-a8aa-7125bf4c0c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc42af2-561d-4b7e-8d0c-769ed0aa7d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df2ed6a-c150-45a8-9bee-f4944d335e8c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f3f79a-433e-44ed-81cb-2cb8864e62c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce57dc7-f9b4-47ad-8b01-273896ce7b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629b5cc1-1427-4556-aeb1-00fe3eff011d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa647a89-cb81-4123-8c05-ce61579fa071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e329f463-b90e-4f4a-807d-765b35daad22",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e87812b-34a0-48d4-818a-9495ae3bac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4cdb95-19ce-4da8-bae9-aee93600069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b782d5a-34c0-4c6d-adf8-ba13df47edbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "32bf406d-bad3-427f-b256-4eaa86e127ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6befe4d4-d938-4405-bba6-c44738d2e255",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996911aa-12bf-4461-bbf5-12017b4b74b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a73048-efe0-4fc3-91ff-a91e3684ab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49ae8e9-2707-4c90-8446-2f3be1cfc168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a02812-cb0e-40e4-94d1-c867121b7d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84ba836-ad2a-44bf-8b0a-ad92d9941b41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0b57aa-9b89-4367-9c4e-ce2ccf2d0a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e377ccbb-d592-4dee-9063-8ebe7e379d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a1756d-fe28-4338-8e61-d444399a8b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "86771888-092d-4abc-b6d1-6577aed4a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909e0df3-06e2-4c42-9239-be6a6960ae03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f02af-920b-4151-b044-091c138b1d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ee91bb-2541-41dd-9b90-c13cc3be5891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b3f87b-78f0-4f89-9e7d-b5ee9bf69829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac2314f-2590-46d5-b424-fe519a2016d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8b3b12-e36e-4101-9ac3-43cb895c115b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a96b2f-4223-421d-a489-3cbc99f9d892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772decab-bbbd-4b12-8ee5-36cb63a0aa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a4543c-0c76-4d87-b9b8-1553cd95a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c180fd0-6413-4d70-a160-6fe8386cc10d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ddf4d8-778c-462a-8cc1-a964c68acbfe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5eca83-bcba-4ee7-bf08-1304f4147361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2122ad49-9f45-41cd-96ca-40a5ee9b4977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb95e0c9-0d38-4a96-a182-eb33606af3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c19d937e-d50b-44b8-8bdf-cb2b9c88ae00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594a3799-e047-4783-9e5d-9b1abc374eeb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eee0d9e-5c08-4fa1-92de-1f987a265e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ca4f29-d65e-48e6-bf20-604d20ae90aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776d94e3-0d2d-4aaf-903b-8127e3bd4d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "46fb266b-d76b-4f57-8956-055569e90ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d06b91-310b-482b-bcba-388d8ae3a0f1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d45a3-6472-48b3-86e5-43ae8d464033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811660fb-0b12-415a-9ab4-c3623f810151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84d2ec4-47ab-43a6-990b-153830d76488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aca7797-714c-4db3-b12f-4c4f7ed3bb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bb1f49-52a5-4497-bdd2-32e226f463c4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601dc01d-fcef-4bdf-a4ba-38f42f5efc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3b98dc-c18c-4599-b176-afd75381d428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a03218-efad-41ef-8acc-006879b49dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ea8c33-858b-4719-a10f-0d1df3b53d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbaf0a4-34d7-471c-81e7-defbcb3d87e3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2dc4dc-f507-4abd-9e64-ad4541bb7035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac22feaf-5746-4bce-97c6-27cc0f776604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75318fa2-028a-46e4-a5d0-eea62fe414ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "200ef954-5a64-49ad-ba31-52e2e5854794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67007ba-e9b2-47af-99ad-8b671980c4ad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1500e58-257b-49c6-8c7d-efb87b7f22d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e258a493-1b66-4609-9c80-545ce9e37aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eefdf71-c35c-46ab-adaa-1e4cfdd685ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d16a7aa-8023-4496-a22e-4b0b9951aeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a41ebf-79ca-40a2-bfbd-509f4d94a502",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd2ce02-c5cc-4b66-8bc8-49566e55d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdccfe6f-b65e-49c4-a94c-a994f9966a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8824b41f-f1fb-4120-aaae-52afe41e4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15850e7c-eb5c-4388-aeb4-b90340c18543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054b1659-1002-46d6-931c-b204fe89000f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38c2850-0a44-463c-b470-1d550abed0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa117512-630e-4b4c-be8d-e6c998a59827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c87ad3e-9f22-4e3a-be7a-6b9c35764561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "061e5c22-4623-4516-90f0-49e7adff641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2773eb-90e0-46b0-8fbe-926f06326d1b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9f7d7b-912b-4eac-a92f-f29fc0bbb8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f74932-d846-47e3-9c5f-a498f3021b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987659a6-3601-4623-ac14-08a81a087bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20de6cdb-fb75-48d7-b485-aa325834c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c895a673-5c7f-405b-8af2-32724afcb584",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92f15b0-43b6-40d5-98ad-70c54a3fac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3269621d-daaf-4fe4-bcfb-acf1cea1ab54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfd1c47-6d07-4632-b4a2-88c59b6e363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fc4257-8a31-4b75-acf2-4b5c5b5bd399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39490c25-7294-4684-ad38-ed6caa2782a9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697b00d8-594c-4835-9346-5fd85078b409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3567fe-5dbf-4638-9a46-78c781bb4a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fc3c21-a49d-49cd-ba5d-4c29fb71dc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3770f01a-9240-4890-8973-abd8c83564c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4635a565-3a10-416f-914a-58bdb5d80ef4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8157cb3c-cb6d-42c0-9823-b2928921fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a8d8d-b4e0-482f-b949-39b0da172037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a705da40-9452-4921-9dac-77b0e7313451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ed5087-256e-45ac-a006-f37b108eecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cb0b79-28a1-48c4-99ed-914de3f88ec7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9578b5ec-107d-4678-865f-22cddeb76162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a9817b-4d00-4015-96f5-fb314b5a215c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffe864f-706c-453a-ac46-17c7c3314bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61e06232-71d3-4226-b29a-1776505e5042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eea9118-7ece-4655-ad51-cef184d11aed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4372a59c-fa42-4e32-8376-fe9342b34a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6f37e4-bea1-4c03-a436-da0aea031d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00e1fc6-d1e9-4cf2-93fc-1db68e7f56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77706ad8-8e3f-4883-a27c-2292e7d8461b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f43b22-c9a0-4d0e-a097-291a5f691590",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a457fa61-6b1a-49ba-b9b0-3d34dd1e3619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0af5059-22d4-4d23-8e03-8fbfc600864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7db137-19b1-4f89-88bc-3f7bb8d578cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42dcf82-00c2-4627-be83-063bcb314ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e665ccc1-2c9a-4d05-a9b7-ab4b5d9f5848",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d0f8db-49ca-477a-870e-7bc4a5e36d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55956f77-155f-4cac-ad9b-580e47c0b722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891fc2d7-3a5f-47f5-956e-f81b38889e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e82056-8088-40e3-9491-d9c81cf78f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2039a613-ab8e-4ede-a675-d3538aa23d9e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de811a9-a7d9-4252-a92a-1255ef0a7e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689ed551-d174-42bf-8f71-1b71d61c7e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a81ad1-db16-4f22-82b8-1f46c91f7f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "232f40f6-c9ba-43d0-898a-9d06ee233ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf08290-d5c6-41e9-9bdb-eed87fccaa8b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4597b5d1-f58b-4ee5-9d5a-1205643c5dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b4fd60-a77d-4c9f-9514-76b7acd864bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aff491a-0395-4958-a805-71133c8839d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "759274af-7bbf-4398-bf01-2040749eeb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a98df-cc18-4801-9409-47cb7ca113b8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c90c24c-7a41-449c-8bfb-d37e56ff46ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f08a513-f7e5-4d08-8466-caa296a6b374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300958eb-b99e-406c-a0f5-47b6b415f34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea07e10-a7d9-4057-add2-3603f1c1557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18715f6-0878-4836-bf97-f07073ce7096",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339f5668-d6f1-4b1a-96ef-9ca1dbf4909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0059dca-7cf3-4c08-81df-7c034b468f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f505b20e-6407-41c8-a108-6f307def38c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0122d28-face-40b9-872c-2bd52db2e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51df4e85-62f2-4ccf-b255-1aef7a88d5c3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f253f7-45d8-4866-98fd-621412389022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42cd54d-3067-43be-8854-05757ebb8fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f2ad68-c327-48a9-92c4-611320b59a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8837015d-3bc2-4c31-85f9-16eddb665d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f8872d-d2da-477e-93c8-d064912ac640",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e70e99-0531-48ce-80a9-68132a9e2caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f027c4c-20f9-49a1-a79e-3e358d58cf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026eeb57-509e-4b80-a661-9d77060bf83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a200d376-4e71-49f4-8725-55214b7de7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78174a9-4c3a-45f2-84a1-694f6f1c56f6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf30192-491f-471e-8c80-f8a9c24fe1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac820ee4-6a8e-4465-b313-5741f372adef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97ecceb-01c1-490a-ad10-893663689134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8faea8-b18d-47f7-a1fd-a8e0e3f0d1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a64f42d-7c4e-4bc6-917b-cb496a920607",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb9a30c-9ef5-4822-ae74-877a3cbbf079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e3f7f3-47da-456c-a40f-aabdb05ac5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e748d02-0163-48dc-ad95-913f184ac47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "847efb6a-6426-4bec-8f65-94ae5b919d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d6e9ad-a0b7-4d43-8651-0c8a52c7b881",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedac0d1-bd89-460d-a241-cb996819b2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e66a1b-74c2-4687-9562-7a133c438107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd45330-4ab7-4439-b051-7b77a8bb6e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82a5719d-5d8f-49b9-bd7d-e7d510c386b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa45f264-7559-43a3-93b0-d3e7095435f3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83f8531-ae08-409b-ab1c-d97d6d593b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef3b6dde-35d5-4bf3-9714-4118bedec75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c011c706-c1c2-4a25-b361-6d847a37e45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f55a1bba-6995-42e4-878c-db67e8b27487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aea8c7-01bd-4871-a391-bfc94d504d0e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11b79cb-add8-4126-a15f-fafa0c944477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bae33d0-6ade-41f5-9f0e-04a29f1f21c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bfe840-f3a8-49df-8db4-23e13cdade6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37249b1d-d0c3-43b0-89ca-52642c636199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1af755-e374-4795-b88c-edc6366d97b2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02638ee3-e7b3-4c09-92d7-c3effd4660a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006e45ec-7919-4bc2-9023-9bd499ba79ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6654ff-0986-427c-ae50-e7b455ea74b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0075f1-8796-4ceb-88d6-4d7b88a2185c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8fff3b-149f-4183-a472-e2e4f6b23ac0",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2a820c-11c2-4c8a-81ab-285cb7317322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2088988-6043-4de7-8096-e128be379612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f96d4e-679f-4a1c-aa00-2681a24b1305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "204d7c87-402e-438c-b16e-005a17ab9815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b23db02-e982-4a0b-880a-9e131995251b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0887c0b9-a48b-4cc0-8b23-6467e17f50f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2341bab6-c6a4-411e-a77f-0a7b2e17011f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea430c-f018-483e-890c-a87d923a4b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e226ba56-18e2-453d-95c5-eabab2df4b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7eb2c4-663f-400a-b136-61493b1e832b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b065a-71a4-4809-9a13-5978699dc009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe71989-09e1-4e67-b56b-312b031a452f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9454ffe-71bb-4082-82a2-ea637dd99e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e604a41-023c-42f7-8058-f4b10e2b5653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46495745-7ce1-42b8-837b-511d97def3fc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "876e78ee-82b3-4cac-9e64-d7c251f843d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e7d93054-8874-43b8-8d9f-019b1fd032e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee0db6a-acb5-4a23-91b4-2675dca0dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e497e2-9fe0-4735-a6d2-d2b64d9715e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf15a52e-aa5a-4d0a-aaaa-c85d12982389",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27e757f7-8e57-4a0d-8726-f994cb2dcfdf",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a4007c-a60a-48f5-a239-4dc23ed9805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2117bb3e-6883-4a68-9bde-3ccbb6379f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f89ff10-4bc2-4eaf-a0e9-6fbd7938b695",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b73f7651-0952-44ff-b932-971f72448977"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01bcaeb4-1284-4bbf-8209-55ea98c13dd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "260355be-0c24-499c-b2b6-d6ef33cf1e6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0df704a9-9f81-4a7f-a523-4b726383c396",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f905f735-a1f6-48ab-b5a7-c18d796c579d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4c7dc4b3-2421-4bb8-a973-67c55bdaabf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6056e6e-d193-459b-98a5-b9d4e771131c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c392ac1c-4434-4d1d-bf38-8fb592b78640",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f8d8761-6f91-4e82-9189-707288cf28d1"
                }
              }
            ]
          },
          {
            "id": "27fb8d51-e455-4c06-96b9-7a260dd9a65e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97d5b884-532a-47fc-8730-87f50a1a0adc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3b1792e3-3c2b-47c0-afca-c5771805f9e9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03ecae5-fc6c-409a-825a-86eb3e7f59e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f5388633-6629-405f-baa1-eccf868cd649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f588a8-6749-4acb-9ca8-0b734e42f25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc39201-5ab3-4ebb-86ba-5718626595e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1050106b-732c-47e6-831e-76e0271813fd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9863243d-d859-48a5-87eb-6b236df39eca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "362d8d57-c832-4c9f-a45e-ead09c74ca4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6404bfc7-cd27-4d0d-8468-322139a13c67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0462ffb8-b171-42d4-8559-1843dedcd4c3"
                    }
                  }
                ]
              },
              {
                "id": "82c0824a-727f-467a-938f-080704fce772",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7858bd9e-d685-4def-b0e5-8140444d08ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a207722-35aa-425c-99a5-df28cbd40c7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfb9059f-cd0d-4e9f-b250-0e218fa0cfa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "11d3add3-94a5-486c-bf40-e6ad199aa07c"
                    }
                  }
                ]
              },
              {
                "id": "6b1d93a4-24bc-40bc-8a7f-9b468a19f978",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "767dd912-cc66-45a4-90ae-bcba35193e1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e10e0b7a-3a8e-4e5f-97ac-db5013420cb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0306b923-f06c-4a7c-b714-b98ff0149fb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de951630-9e2e-4378-a65f-c51a01d712b6"
                    }
                  }
                ]
              },
              {
                "id": "6752fcad-8983-4f9b-b9e5-97763e72d4f1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f8f2ab-985b-4581-96e6-9c24e1296d75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b8db71a2-a6e8-4b05-b8ce-796867646367"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25240e06-98a8-4307-a2c9-189326c536b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6f70c87c-53a2-4cf6-add0-11c26c87074d"
                    }
                  }
                ]
              },
              {
                "id": "ffaef85a-e7f3-4621-a89e-e6f8441b429b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fd0aace-29ab-4bba-86da-02a18848034a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5dc6ec9-bd20-4682-a631-17074cd9949b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f73594a5-52d0-4032-a0ad-98820d1431d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3c661fad-ffc0-4f49-9f14-49a40c88eb36"
                    }
                  }
                ]
              },
              {
                "id": "a59f249e-5b77-46a8-9cd6-ddc0ad9ffe76",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00667f6f-5064-49c3-8155-83190d59e095",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2932aa60-4d6e-4d30-bd2c-979e391e07f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8354333e-c79f-4462-a5a6-597b9aeabf55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8fb74d1-92da-45e7-81d0-2295689e08c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff10bd6d-beff-4c80-b5fd-dd847fd3cfa9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18d7fa5d-75eb-4281-b4e8-fd49876f572e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4e87099-e1bb-42ba-92f2-e32d5ee2e83d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1843f162-d0e6-44f0-be95-3f84cf1e7064"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3b4eba7-462a-49f4-becc-c813253604e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "055d1d58-5102-4582-a0cf-61fd9d3eb020"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4ab1a39-96ed-4359-925e-7df637ac998b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21f170c5-fa2b-47f7-a8ec-8b84730db3ca"
            }
          }
        ]
      },
      {
        "id": "ad804533-e713-470d-8cc9-ff5eb3523089",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f7aa4f10-9e94-45fc-84d1-9afff95fdcdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "137ff867-07f4-4cd0-b26c-fd23054ceb8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d7d2c616-bd15-40db-8c22-1e24c36dc276",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606bea06-3d0f-4445-89dd-28ef62bd7da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913bca28-972c-40eb-8627-88548a2d20ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9c8ce4-7771-47e2-a8bf-b14d9e7625d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "95bd1511-3232-423e-acc7-28313f2dadb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4befa81f-db15-4687-84d1-cf5b3973b355",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260d3ae8-087b-4c10-8a37-39ddaa17d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6114584-dca5-433c-8ac8-4ddaf7708cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cd977e-2590-4815-8861-6933a185485e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3897aa-c306-4bd9-bcc5-b2cbd1dd1284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2dedd0-d952-4070-a473-18c68327cc0d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d43c781-375e-455b-9025-4d91972c6688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2f1a68-f0ea-430c-8e27-be5034080456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f85f3-d570-4cf5-8369-d0626878eedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b586858-3a2c-457f-b9f5-42fc897e419a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6968aa0f-4833-4bc7-99b5-1fbdbe0993c8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be26a25d-ed79-4e34-b1f9-f48f64b23fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39270b8-3664-4d00-b804-d9d119ed4031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ae7c2-9fda-412f-8854-41b9916b1303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f8f5e8-105b-4550-b46d-5e4fab52ec68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2174b59-7f83-401c-bfff-8bd3f4c2679b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35553387-d88a-46fa-82b4-4d28cdc12eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ac6272-da3a-4422-9034-6dfe81fafb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5af674-9a1e-41f3-b6e7-23707271c00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc68feda-e38a-4ff6-8eaa-7c16253e7e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b13d5ea-e109-4a24-8290-b23797f3cbb8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818ed6af-963f-41f1-9083-b53dd3ca2091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fd3734-99b8-40bb-b4ea-58e9fd07265a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a00534-87f3-4300-b314-5898bb0b7c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e7f362-f654-450b-8c95-7a1f4807ff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8814527b-03ba-4fcb-90aa-2e4315d0b450",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c92e0c6-9890-44d8-9128-11300a96233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db022ff5-cdba-4e20-8e72-302fcc9d29fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d71d29f-dd2a-457a-987c-3b468273b592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c845dbb-da7a-43a1-80ae-2121836ff884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93bd0fd-6eb2-4655-b24a-97cf34892935",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180c5654-2134-4c74-b141-873359db0f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a30da31-fbf4-4f09-8d61-326de9a71a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739e2159-3f85-4a6c-8048-4518090afbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff71d05a-088b-416f-8449-a23903d635ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2e1735-339f-4f8a-a7a1-5ed8217addbd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c148f1cd-ed2a-464f-a53d-506a57dfe05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e62d4bd1-141a-48a5-a63b-6d7633449009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d94011c2-edaf-4d40-994b-f3b2542a7696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4811c920-5b4d-4f50-9538-3a39d6aa9063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef79d25-4a74-436d-8a82-980c8b1cb52e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334aeda9-14b4-46ae-8a4b-add7f6c372e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905a888d-210f-4735-9e07-b628535b2aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba65fe78-cd2e-4a43-9d6d-87e6eaf830f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bac0139-ad40-489d-b395-e27767bc2588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb5f605-0a76-4b64-8433-4bac032fe491",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a2c90-c396-44ae-a2d2-1d18f27fa0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e64af54-0bc9-46cf-adcf-d116f0aa4a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0526086-3e6e-45a6-864f-9db1ad69c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "43cd9bef-227a-40e6-a513-9b46fe03c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1282082d-ed8b-4a21-95ef-731d7db3429b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d16938d-ae22-4be3-b87f-70e2a42243ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418de62d-a821-4f04-a849-7b229fa500e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0b03db-087c-4b25-87f4-ee40534c66cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43ae0185-358a-4204-8011-d9c91af652d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2533905-44c6-4185-9596-d45c60133ad2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d575d19-b8fe-417b-9cb7-d14096889517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285c09c0-e5bd-42d1-9aee-85e7ef5f456d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0334ecc9-7c63-446f-94f7-359757e6feb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9fa527-338e-4425-880b-933efffec16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce3111f-27e3-48eb-9bec-dff0cda3992e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614eb347-93d5-4dc1-b159-b16e303df39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9105b6c9-7cd5-4e62-a378-04846bf128e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4666431f-6f61-42de-9715-db4ca40aceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba67af92-311d-40ca-a30f-dabd1a283a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b78ccd-247f-434b-bce3-912ac5bcc89b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb231ab-d52b-4354-9d18-c2a07da1bd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c80ae01-8dc6-45dc-bea1-6d5a66af88f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd904c3c-9cb0-4aba-891e-d7d88146f864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f77a4fe-a4a7-4843-b49f-300af3fe9f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5591c642-0c8b-4d4d-b2be-cfe0bba12496",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d3b839-6fbc-42a2-b60d-46fda49644fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cac1bf-04ad-47af-897f-a3a1645fd640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f9eaff-1b97-4a04-93e7-6d05b07d3dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b88282-b7a4-4627-afed-12c691dcc082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddcd4f7-19f0-430c-b1e0-7922f5ca8237",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872b57ad-1bc1-4c09-bed8-b52e7d459aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84847929-66eb-4153-807a-6cbb9f462353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a5f08d-8e9f-4f3d-aea3-ebc08516ae29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06af800-58a4-4b32-acdc-bc86a53b8838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f2942-3b91-44d2-964a-64f9c1585936",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a477e5-c69e-430c-9ee6-e764059bc67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fcaa69-766f-4310-82b8-f9cb70e0c8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f2c402-7692-4463-851a-f4986f8c2abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b414d0-f95f-4f2a-be2e-3cc40c217c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d670986a-f1b9-416f-aa03-ef2fbaad4ab7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1a3318-12e2-40e2-bcc0-4fa13e0eb537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c401754-e07d-434b-8145-415f10a1856a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8617bf-dbe6-4acc-ae09-6a1a15a49f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e304966-0163-4d13-a8b5-36eb6fda0c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d87f663-e667-48dd-bb71-6ca92fff152b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008679b5-0a26-4719-88d0-ffd60e55122e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc357660-59b7-4fb0-b448-2276e6f6233b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd65257-d7a6-4fcc-82c8-fcb8499abc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdbb205-0dc4-4c96-8dec-bae5059acdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fdfdb9-e3b5-43cb-824f-d112e425ae69",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c24d1a-e811-49e1-bad6-f2903aaef1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b193903-f80e-4389-b606-74caeb3a67a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f233862-3f9d-4160-80a8-3a1e1abc1e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "318247d2-5a90-40d6-85d5-9c8c5aa05701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6634726a-fc89-4c3c-9740-3acf85bf3aa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2816d68a-a66c-4e68-bafd-2f63b9cbd16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a430e935-775c-42c0-a858-a9eadc8e6dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88731277-29d5-478f-acbe-6358000f8b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2a0c63-9852-4651-b271-4fa50fe99dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e938b69-c5ae-4efb-ab48-1c3bcf7bde95",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e443326-80c3-46d3-9d12-af113561e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96916b1-8dcf-4952-9754-c7e923362269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1a0e01-9840-4af8-bd69-3b07bfa5001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ced720be-6b69-4fef-8821-f95c9889c364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e43210-f6d9-4111-bd26-dc87905bf3ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c536c58-f4b4-4734-bc47-1156a457b540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977a91fd-8f66-4633-877a-163feff1ccd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae79bcf2-e686-45ec-8d85-63e9a0389135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbb1629-a594-4dce-adfa-491bd24e0bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ba5f6-b235-4020-a112-191fa5936a96",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0002b6e-b46d-404e-92a5-07c806901269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4178450-4f87-4006-addb-51d88ad9ea43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1e45eb-0d7f-457e-a29f-c096b9556726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2c7ff0-b52d-4c52-bab0-fee04ef574d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d98fd54-9b7a-413d-a811-a2feef7baa1a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be47c0d-0b17-4f80-ba9f-9a5bf2800fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e6355b-04c9-446e-b522-57fea18c2811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f0db1c-142c-4a26-a560-52fb2c7a51fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d828c5-30b6-43b8-844e-525c4f81957b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570d7261-3b37-4480-96b3-70d2c6016bab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4c0d6b-e56d-47f5-bb71-0f05baec2f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f9f640-e176-4b98-bb41-5caa498c2d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845e9254-7135-43e6-9f49-7a68bf4bc26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "531d0858-536c-41d0-8a75-c9ceb1e726f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e48f03c-c902-4738-8eda-eeaf39723db3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667e1b2c-d289-4162-83b9-911c375ec02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f94b3d4-ba82-44e3-a470-f793f085816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0489e67-6242-41da-9778-fa3aa6bdc7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "985b9f3c-4ef9-4f4a-8124-5adb8e5e5e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae657fcb-d520-4d5a-8009-d58b232074e8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a7989-26ad-477a-9805-3622a4d14fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea3e961-acfc-4ec6-9db0-6e6d5446f5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e644c8-0577-469e-8baf-3e564cd10d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3648ab-db77-43a5-b63f-3929120bf333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e3b01f-3dc8-49c4-94e4-ad3d2ff5eadd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a8d519-c4ff-428b-b442-fbae49453567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bafbeba-f2bc-46fa-bc81-6a2d5d4242c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da64986d-3533-4625-887b-081a9e76cbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e28758f-81f4-4cff-8252-8169974da34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbcbc32-abdb-4341-848f-6b8717bd8495",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ba57c9-4fab-41c1-b783-ba26cee957c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01026c19-d78a-4c25-b10c-0c3e65b34cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e78556-2b96-4230-9063-48c4a75a6e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d3f507-21af-46e7-b427-5f5473fe3779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3937e30-9400-4b39-9a54-dff112e96464",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc8ef5-861a-478b-a1cd-7078829f6ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa47b08-ae27-424e-938b-0887bc6ceafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ff3e5e-3d10-4e67-84e1-0fcc1d554376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01373e70-5f7e-4298-af39-641a699a4c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cd4888-c82e-48b7-83e7-5da04b5d5fe5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c26ed5-b810-4078-91ec-c24838eee23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ecdfdf-5e3a-494f-a2de-87d0d852fc1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9aeb4f-2637-4f2e-80b2-cef90b243bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d74271-7e79-4fb1-af24-8bc8853f5fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3b9c46-7010-4b95-8a50-9380cdfc81ac",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139e2d25-6eb4-4702-adaa-879664787912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140d5a3f-c744-424a-8a62-15956da54615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1920e26-3c1e-407c-82cc-cde6da556fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc25a7d-abb7-4aec-9204-2460c9b07272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b344d2-4a9f-47d7-a44f-4039ade8b595",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af15cc42-0796-42d6-8c4f-730bfbe293d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9069089-87c4-478a-ae3c-5857befc9900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cef46b-91cc-4523-9a17-f26be3d5222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0d1a72-e759-4d0e-81ab-d61c4b25ccce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5052f986-85a6-492a-a36f-3e3863cd85bf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1d1b98-96fe-46dd-8d62-89c531fa93c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fd4e27-604f-48fc-b953-d9e78a2ffe02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5a6fa0-d13f-4bbe-8753-3b6977740624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66015c78-4f48-4ed5-a5ad-09aebf7669a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c6f2a6-c7e7-477a-9e3f-55c75da9cc39",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151ea44a-3e54-4bdc-b22e-70fd7752bba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ef2157-c84e-451d-a7e5-977ca1f805cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6281018-2077-40c9-8b1c-261990b7ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2b3bf1-b380-46e0-8200-b4be16731185"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bfed5145-50d0-45f9-a6f9-5d71ba793c16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94a92523-d7ac-4da3-b713-df0001da6d1d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ddea8c-7ae3-44de-bafe-42565a8c5581",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "061e0fbd-3382-41bf-8386-9153b63fdfac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab3debf-b4b8-4ce2-b8bc-a99ecb95f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "813dc9bb-e9ba-4146-ad90-a0fd36f47afa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d948d5b2-fd6f-494d-9331-515303969f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2691607-f702-469d-8727-924778b2f737"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c6ade09-1b39-42a1-a63d-c77038fd9a95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a51b9552-f634-4f40-a942-f32bcab9ccb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47d374e0-9acb-4414-b1c5-b59e98b170d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c9d0bb9c-ceb1-4bda-9d26-ae31b645c7ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2dd268c-6376-4089-8ea2-37ae8f99690e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe1d41b0-a68a-49fa-ab84-3dfdf91e5535"
            }
          }
        ]
      },
      {
        "id": "76f79dbf-676d-401a-8b0c-2607622fd87c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0b16eb58-9817-41ae-adf4-2544836f914a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72ee0a7c-b769-44ac-b10e-1c9c7e079309",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "177fd22d-b170-4954-9600-0ff77dde7aaa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66397643-c423-4bc6-8dda-580e9ebc0a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16de8ccb-53d3-4fcd-a9d9-8a8c4d1758b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7a3f21-5d03-4732-9789-e3c434cc0457",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826e925c-f2b4-49ce-8030-1c5e471fd284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa243cb6-af47-4cb0-a3db-9198b9708313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2eb63a-1df6-4357-a268-7089d0af227c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca5c56b-1787-4e5f-92c7-c7fbcec2aa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "517f2c69-7878-4b88-8333-baa2be76133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be292427-6264-4aa2-9f21-6f502e06d1ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b73671-e2ee-4eaf-a76a-a4e5bf003d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e068a2-da82-4ad7-aa31-d8f426757178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61d2183-e94b-4505-9947-85f1acc35edc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b8d34d-6736-4cc7-9176-c7e3e0f72ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68acd7a-3e1e-4114-9fc6-3767c9ca0834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54766fe1-0aaa-4062-956b-162de6ab3631",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba99bf36-3a94-4fb0-83f8-9d8c8b12dfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9df60ed-2fc0-4bc0-a36e-db1b9cb03f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b127df6a-8c1b-4cc9-b2e1-8da647f9c0ed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dabaaee-6cf3-4bd8-a3cf-8657900ab8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910f87eb-86fc-40ec-b798-6a3423555da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d32c9a-d07a-4a49-970b-a9af985d3351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0926ea26-d474-491f-b0ce-e6b6a12308c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf99d1-f02e-45f3-8fcc-b8729c69d0cd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c20b61-367a-4832-9578-17a00bfa2ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccdb8b43-d22f-48b1-98ce-c8e0ffd20532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3711c-fd1a-419b-8460-0789bc84420a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda276cd-26f8-439f-b28f-f9d6f7e6053a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697113d5-f440-41dd-9168-7de8eb02baa3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a05fed-9863-4d1a-ac59-6462445ffcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "774e7514-3ff9-4b60-9cd4-eeb30af022a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be77be-597d-4806-9fe3-791549781561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f53bd74-8b54-4ef5-bd81-f74042a062f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf08824-c5ca-4cfe-98df-7918ffc3a839",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23121a39-a7cd-4a6f-bea7-7f49063b3808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a36d02d-e2ac-45a9-a3a1-ad3df96d76d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9dcb53-973f-4da6-b36d-f1d75a74b6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3bb508-5a99-435a-9e11-b6bab4d4b183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f591f8-4e72-40c1-8f49-17de088cd26b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281cea64-caa1-45c2-b1c8-4088911c08b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16bce8cc-edc7-445f-84d6-53ee34721a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d982ed-0e14-4d96-9982-32409bff49bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c5be49-31d8-425f-ab24-b964ca5e397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c0e53e-0f6b-40b2-bbca-51f92eaa16d1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4860ba4-c344-4fa8-ae29-0f5742d1df64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c310a41-a30b-47a0-8cf3-8a3636a4dc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702edb0-2185-466a-aad5-e3b797be3bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbf735e-0671-4b6b-ac1e-25756045c4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ad9f52-de6e-431b-8413-76e4136474e2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7c94b0-4b57-4840-b084-d12c303d9be9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ab3f26-107d-41d8-b530-b150bf2287ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb4b374-a196-42ed-99ff-ff15afddeef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba08f7a-eac9-48bb-abe9-daf0ea8ac42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17faee8a-7c70-48ce-b106-b668e42371df",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c819b73-550c-475d-ba70-6eb4c82cdeca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276a307d-cd3e-401d-bc6b-9418056f9ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f7233b-0ba2-4bdd-b720-bba9aa6c9c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3767ea6-fcac-41f1-8c04-8cb39adeffa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09943748-aaa8-463e-9e2d-1dceaa77d03d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e94bc6-72c8-4a92-9d23-1536825ec8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a290d8-3eae-48ea-b90f-0fee16f73ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37048eac-f2d3-4690-b4f8-2bdf6ed5b2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fea8a6-f773-4f33-b15e-22f47c930ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979a8682-6a11-4c5e-981e-17c8ff38d22a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db34b9-0ccd-4603-86cc-fdbea1801c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1e2555-920d-44e3-9a16-a200fa0f17c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61684aa7-06b1-4fc6-b9ca-ef8e21e4a971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1a50a1-9460-4c7f-87be-429b84709c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b003c5-2b07-4855-98b3-5d6a86e47f85",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2605bf6-391c-40af-8591-eaffa3faef03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaddb62-4696-48c5-b428-c1a0b6eeafd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9275f-e8eb-4f49-b8b4-b380da7cbf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb61e1c-681f-49f9-89f5-645c7152b942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3909696c-a883-44b9-a66b-2bd3fd287f17",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d88f8a-692b-4d53-ab41-915820236ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31c4fc9-bb4f-4422-adcf-fd5c96af2f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf3af6-1f05-4ca5-8eee-51c5dcd5a36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b028ddd5-524f-4768-b100-e71c29d9d908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844b0fed-a603-4221-a2c7-de2f2719ecf6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc48c91-d70f-4858-ad65-096cde612b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b866a0-8a3a-46af-8c27-0b18297cf037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3230225-5f00-4303-aa39-68cfb78b43bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8f4028-635d-4ae5-a2ff-77f992432f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa868780-2519-4599-9cb9-9785d8ccc4f2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb01b4e8-0e22-4e74-b7a3-95910179dc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e180353-8b44-4e3d-94b2-41e3a4cfcd46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77efa18a-c059-4f23-9f40-f3bd3831d4c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8848301c-f5d0-43a5-8cc8-4f5a96cbd258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd87f630-c185-47a7-aa37-1a2ebe15a4b1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bb7c09-ccad-4e5c-b1a2-18b8b66a39e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa7dad8c-133d-417e-8d37-ce38143a9b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c888123-6ec2-43be-92bb-6a9a80c4895e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972a75bb-58aa-4c87-b8c1-d06a9cff20af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbfcbed-01b2-459f-9ba8-37a455338056",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d003041c-e0a7-40c3-9081-9ce9fea15928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e11f253-067b-4203-a539-2b91f505d8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3addf9-98ca-43f3-812c-cd77a1ca71e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c551f79-8fe9-434b-a3e3-0566f552aba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf6c73-fc36-43a1-a58e-9f200824ec29",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83992049-f138-4a1e-89d7-5797f68230d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cfb919-6050-4038-8280-4929146e12f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfb368b-6431-40e5-8bbc-c0932b87c364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ce2de8-12ea-473b-a3f4-3320cc3be396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d6fa1-fd79-4743-816c-6c1bd90a4488",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cba735-d33e-44ba-b98a-a3eec484a11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30def582-0cd3-428e-9d2e-5138e06de2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3976f5-d0f8-450d-ac90-6c2c0ecc8036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469bb6d3-3bde-47f6-bea4-53db25484403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbc430b-a8b2-48e1-94dc-11024af29a6f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55e0372-614d-49f2-9dc8-50f5ccb3a309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496d3213-8a3c-411b-ac17-c2854c23f1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe752e9-2a0d-4a51-a2b3-744e85ea5b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692ae997-a7b9-4501-b8e2-5906fec7f71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb77ace-4e3a-4512-8483-15d833cf0fe5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8676d11a-929e-4a3b-8050-fec0c8d0aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c933aed-b0f1-46a1-ab3d-c856e3183b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e3616e-c881-4ec1-8678-6256d5985523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda8c702-d40d-4cb8-acad-41fa79701cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea744bb-c840-415c-a7e1-575d11643d6a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f7d85f-9e7c-4321-9d29-d744db716ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd6eec8-a13e-40f7-8a7c-d6606a453cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83939a34-5d0b-470d-ab5e-2dc40310ddbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c766c07-7743-490a-8a77-00a362d9fc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4405695e-524d-46c3-80fa-c16f2b6d0fb5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d61bcb-7c3f-4ceb-97a4-b28947d16378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187ad0be-a9e9-443c-bb6b-6df2eac03800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6951ba3-5199-417e-94c8-fa13d8c6ed15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1445bc-827f-4913-b1e9-2055fe27f0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6bcec7-30f7-4c42-9fe9-af9707288df9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c8eae7-7a8b-4536-a12b-a72e4b75ed77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7823ecb9-8347-4bc8-b7e2-e7371a106c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c3d564-6ebc-44ca-af25-f1c4465451d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55774d5-b220-4fdb-a0c2-afa7117f1d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d91bd7-b8a2-4c4d-8014-61874e94fb4a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2341372-fcbf-4115-b6f2-6e8f902d0529",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed32980-4edf-4bfb-b34f-b4321f00f4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87aa5cc-9820-4e53-b297-983bc751cef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc32891-9b97-4de6-8813-5816068de7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e51cfa-78aa-4b88-85ad-aab274e3bd26",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70629ea-b353-4fdd-a1bc-f4760127e21b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf63a70-f864-48bb-8cfa-cf65f2639e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030b7079-6169-4c04-8584-1cf598a06f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8362e9-12f2-4479-8a4c-5b5b60200243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d9da0b-b861-4161-a274-f0846213dc75",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c195557-83c1-4a6d-91df-ce8f4837f115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c60b912-7df6-4361-9f0b-3da6f6cb9688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b14fb5-77bc-4b6d-bdfe-7894255a02ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03f57ff-8813-41c9-8ce3-1c4507d57b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3eb9bd-b2c9-4902-b0a3-e1038eeb554a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaf3791-bab1-4f13-ae9c-fb48156df28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "248174b1-712f-4511-8a6b-85517365e1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44fce49-0c7a-43ad-a269-8cf0e8772b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e624533-2d40-4e0f-81e5-91f40bffca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb564b-8946-499c-8de1-eec3248e39b1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd6336-9b61-4fff-b707-cbff7562f469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa48bae-c9c1-4d60-a9a5-f38ecb328520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c03637-bdc7-4e0b-b992-8de22fb05d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0809ad8-2776-4fb3-8cef-4eb3e9ddfd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98159ef2-d784-460a-8f34-0dc518e49e43",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a73a9c-cedd-44e6-aebf-73cde7af7943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f84f5d-f5b6-43ef-a6ec-559b8b3130fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c11fd-7639-4f84-a0dc-931423a93fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2593a32-b0eb-4ad9-932e-14d1de07c3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edb6868-0bde-4f7c-966b-616d109244bf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0633b712-7fdb-4eaa-84be-d319805421d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27571c85-dc51-4030-b8c1-ac92af69c212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ea5766-9d37-4b77-9bb5-7c7a80511df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f140fd64-1d23-4175-b0e1-6d5625ec4d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c533c-11e9-4097-ae6f-7bab6780a775",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c461469-556d-49f8-aaf4-e3ab27339e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa6046f-e318-48ac-8b72-dc9b8beff9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76ee70b-cc96-4c68-ba17-9131be128992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc86459-df25-40c9-ab46-c42ef5dd1502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c473551-5c08-487b-a227-15720ef83912",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a5149-aa70-4665-945f-d9f713d616b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154b91d0-f815-4ae1-9562-a170706e9cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0cc22e-4f93-4817-93d9-333db135cb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c601e3-0a49-4631-a834-10cadbb1c8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3dbfc5-cab3-40d4-989b-8bb8ef475eea",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadc5864-f131-411b-8203-ce36ec8354be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a51ceba-4fbe-4055-81b8-d94ce2dd4a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9953400c-863a-4f66-bd2d-1694b0d3a056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9cec5b-3974-4a19-97f9-66cee5f4c21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d576a4-17be-4974-ace5-1c90ee1016b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96659811-91c4-4602-ae36-ecd16146c31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2625bc79-6683-4d22-b32c-3ff4b4ad465f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed67ed67-4dc7-4793-95c2-d35536fffb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc51a02-9e58-4e85-bbb9-79e927d08285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22107be-284d-4b13-ad50-dbc402b7da70",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13e5f2c-25b0-49fc-b08c-d0afc92f6161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7814145-395e-4480-beac-5e81ebbaac22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7b527a-5092-4ffd-bd52-ba999e95cbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d2701-f576-450c-adec-f84bb22af8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2230df9e-5673-4127-8ae1-9d2c99d79e7c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f160dfa0-07ea-403d-b678-63f953bca4a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a5083a-077b-44d6-9d78-e5b0eed92490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b748836c-7390-4c31-b7d3-462d219698cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d4ef7f-2656-4b05-88dc-a62f2e790e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7ce2d8-86b7-4a2a-ac4c-b00c06629cb1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a4080e-a9fd-4bf9-83bb-e836d7a400f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d813f0-bb23-42f3-b948-b567a5def79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72485f7-8f9b-49e3-9c8b-0bcabae3ab30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1524a63c-4156-4734-833e-88054e5ade3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c37780-6f9c-4901-9c21-c1c4ad3c87e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eb5156-f3ea-4a78-8592-2ecf62953bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595045cd-971f-4b10-ad69-6f50c74253df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c996f-89a8-4384-8f2e-8ba403497455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7fc4b1-f50a-4cea-9080-654cb15cdeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51afce9b-3ba7-4933-b98d-0a95b75af7f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5e3ffc-d5df-4b01-ae8e-678c2cdf14f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec6bf43-eabb-47ec-b0c6-1475356021a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8924113-de23-407d-a1ef-762cc7e3b6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9807ac-fab9-4b18-b8af-0c7a657ca91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84415c-860e-4233-9940-caefcaa49624",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b145fa-0d9e-4630-aaab-b041d10ed239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76597e82-0229-413c-9431-d84876850ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55eb890-994f-432c-a4e0-0c08016d22c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7417a5ee-dfa0-4e09-aa29-60b73990f7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef85c19-e94e-4b33-aa75-0a39c3b6aa12",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1b97f1-fefb-490f-b8ae-57424d7ba687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ebe3fe6-7ee5-41b0-b66a-aecd98e012a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "482adc9c-a17c-4b0f-84f8-4f8691ea0d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcefa036-5287-452d-9a87-6ddb4e4b49e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807a6bf5-f9d7-4369-972e-0259a9b24325",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74e7065-d842-42bb-a270-4761301f0f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea87764-96ab-4e48-a269-2acfe36eeb50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f511dd76-8085-4a23-a088-dba51590e215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6362d58-060c-4eeb-a8e6-342a5f1a66c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b29324-416c-465b-b7fa-f1121ec87e9c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a87b2a-9711-4dad-9aaa-770da84fcbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a18cfd-f78b-4a24-881c-feb95f514b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a838bdf-8f04-4416-85be-06749e467189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c076ebf-aa5b-4091-9562-21a75c3a8096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4d610-b170-4777-8b8e-0843f33a66f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cb51bd-e716-4834-ab7a-2c741de16eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96446d9b-4fb0-4a06-b416-e5adbf25220a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53902b3c-fefc-4fef-98bc-e4823ce0dab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f5d7e8-b556-4d4b-a511-d0c0ffecdaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4005458b-eb74-4fb2-8547-4b8771f52641",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09449059-0b90-418d-9e57-5cb12913bc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0462da14-4b12-4215-abbd-8b1043cfc2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf36ae4c-8f16-409d-b364-2f2e515d54dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e480751-1afc-4d22-ac40-adf729ff6b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5903785-3364-4fa7-baad-d03b1b6964f6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb23cfc2-4203-484d-9a51-a814b52757d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302d16a5-f86b-46c4-acd7-9a8671a45871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c23b8-7430-4919-a850-d3b581cf2c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341a67b4-40a7-4609-bb49-e7d4e081ca2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89115177-154d-44fa-a990-6dde193a68dc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ab1288-f3c2-4784-ace3-3dc58ed019b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95839a4a-8599-436e-b07d-31c26284e8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26295e9-4647-4294-91a9-c3cb3cc3be8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5539de8f-175e-48ec-9fc9-d05efb1fc7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1a3fbd-8bf9-4751-b3f7-cc9b309c9eb7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09399ea-7656-4721-bd2c-af878c771df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a159b2-3912-477f-b88c-f7f4bcc4adf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "798f35aa-71b6-4135-956c-01c2542e5b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203bbb9e-625b-418e-b598-0a43e42e1e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f76f31-5e09-40f4-8c91-cb7119623fa7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee69375-ea16-4401-99ba-70e042cbf40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066b96da-4572-4fcc-9561-54ee3f7be70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe8513-7663-45ad-8264-611b2de5a3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845d903f-ac70-463c-998e-5c0194b8cf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5995ef35-32e8-45e0-b1ca-39b2bc724b99",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33980635-8fef-45fd-96e4-971747e821e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e8cb13-003d-457f-8874-b98b0554a288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bef0f5-6980-445b-ad46-a8d1434cbc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14294b81-13a1-4f17-811b-a58a0886dab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d8da93-62bc-415d-8624-646b86a3a0d6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9f73ee-0ae7-4d42-9a6f-0a9d1f4324a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b548d436-082a-466e-ab2a-495248b99b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab47de0-d862-4b33-9689-d208aac8eb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850510f5-8cfd-49f1-ae63-d3e7e291a990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c0adca-0c49-4b62-a70a-7fc549cfae4b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b720b96f-e2db-4884-b390-30e50504b0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab66b0c7-fe69-4c4d-b300-824aafb707fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6535f4e-b5fd-43c0-90d3-123f1a0a0ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677d5314-081e-4359-a7f2-c5c6beae8f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7263ec-eb33-4f46-9597-6323efc58cf5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e075104-30e8-444b-ab02-659bbe06e732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f411356a-5f7b-4449-965b-024ec085418b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06d2982-d5cc-4058-9af8-fbf38c157d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee4124c-4d00-43f5-98d8-78ece0db6631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a0d81c-d6d1-42e0-93aa-b5436aa2307a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f408069b-da7b-4b7c-87b8-f1b319b3104f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e52665-f8d3-44e0-bfda-d9dd1db998bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38fe7a5-615c-47eb-a013-f2c61bf326c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2af77d-8c24-4f5c-a3e8-ccbcaf1f653c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf26ff9-1a08-4495-b815-b26ecc8cd6a4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af236eb9-5847-4729-bc46-affc70ca2979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6a768a-4325-4500-bd4c-2645e7ec0e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ad840f-7b96-45d5-8c1b-1c93ceca1523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89b8023-c98c-4117-8e0c-814aa8974c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4fcea0-0933-4a7b-80c9-2a76b212daa5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eddd6c8-2eb6-4a73-9ad0-bf30260eff6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f92f566-58f8-4722-b23b-31292b622866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5311008-95c7-4348-8f51-07a45e3e5d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41574905-9196-4a15-9659-f58e33da96f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6268a74d-23e1-4e11-b81a-f7b757b86497",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d74604e-c045-4d0c-a47a-dfb676467b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "296d7a61-117b-442c-aedf-74598caeaf4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bbdb52-be1f-4e2e-a0cb-a237893b189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443e3320-e1d0-4981-8c2e-0a2086df04ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c152911-e428-408c-94f3-8eaba113be31",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d9a2b-cddc-4266-bb41-7efa9b98e642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "666eb08a-e527-4f7d-a98b-75354928577a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303b5b68-4cc1-4130-b20f-1e6f653d8553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431ef7bf-fe53-4daf-ae83-572200bc721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35550702-a9a7-46d6-8080-158647256a87",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f65984c-983e-42ae-b285-ea166add0ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4216eb-ce66-449c-8e92-d8b983eceb42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d08ceb1-8aeb-4658-a278-c2efef073e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db34194a-be9b-4b0a-9682-72860e30e8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfff57a4-2c05-4919-99f6-58842a497643",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff1a550-aaf1-4778-b2f7-1487df995f67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a83e6e-f2c0-4bfa-9506-615afab6de32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9869b7-523d-4e3a-9ffa-79f38b265dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4470f652-bef4-48d9-a125-7ac0505ceb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e0da99-9c04-40e5-aa54-61df2a6cbea6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8554fc8-6c9b-40d3-9d81-5ebea56fc65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb3f149-1b12-4de2-ae35-c0e01c2ea59a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b110000e-b790-4391-9ce9-6319f2b6751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf05ba01-d927-48fe-8905-da39e90a13d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd41a81-06f5-4f72-978c-c96cf4583d63",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ff027a-e7cd-4707-9882-30f1aa3dd8db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "220151af-9935-42d1-a629-8467ab4f92fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc60ca-55d6-4b81-93fd-d7eb2c7770f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685ebe7a-6ba9-4644-b4d8-c9cf4f1ba408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccb516d-c718-4094-abe9-c0e66cd32b18",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7030ddc8-5a0d-4bc2-b2e8-d5436ef03c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27d3ddd3-c688-4f43-8ab0-b7adf2bf9aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e5c0e4-45ee-4c9b-9c88-5dab0ccdb943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad49ab1-3c96-4085-90f2-573472686bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dfcf21-0204-4dfc-a912-14f7cf3a11e7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9842151b-edea-47e9-9bfb-519a5af515da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4c92e6-00fa-4dcd-a4f7-15432f5521c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b547b78-1296-4689-a716-788f84ab6046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5b3949-894c-43a6-8fc5-93c2617a84f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48ee4ad-bbdf-4392-8fd4-61294471f44f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556180a-651e-4143-b45a-cc0399fc8188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f40ade-c348-4b17-948c-42fd941abcca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf3cac-f9d8-415c-a299-e929cd33d9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58f493b-7a54-4305-abdd-d5bd551cc0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d098e-b2ce-4699-a2b8-866be72be82a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eaeb65-4325-4d06-96db-7cef3ce37d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a9377d-acda-4911-bf16-565015ce0894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b342e2-6433-4782-9fe8-7a84df60d1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ba1522-1978-4cd7-a82e-c2dd07dbde1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a7733c-b07d-4b94-b579-c3ce611741ee",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae59cbd6-1f48-4c7d-8470-9fd2c92a5c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89be4d94-aa97-4ea5-a1f4-5da0d7fda8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d1f34-8d3a-4388-a92b-d285cb297b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fedd0a0-22db-42b9-a754-a59c35fde4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1460a883-759c-47fa-8349-e33de36fe33b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87cbe59-c020-4ecb-9e97-824be8d7d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f302c835-5e99-4417-b77a-0b4d75200773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79429e0-5f6c-44b1-9e0c-f9468cac97e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03202ef4-6cce-4a46-a60c-34c9e5dc2758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff4d54f-ef2b-4135-9088-7d0db22c9f64",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc74110d-30ca-41cb-9b3d-457e254a7e9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be070ca3-5776-442f-afb2-be85e5cd6cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4005456-5b8b-4caa-9894-a309cee9890b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c656b92-acaf-4092-9991-009c17ad4589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c3a1d-ec1b-411e-aaa4-a23fed802f03",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90701e5b-a6cf-4f65-afce-e29952d50640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7c3517f-934f-46af-beb7-e2af580a192e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bc4304-364b-43a1-9775-45e6eec2fdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2ef4f7-1282-4f6f-94bf-81ff74e6e4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e1578b-caed-4c5e-94a1-eca4c84a21fc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840268f8-cf5d-4ddd-9fad-e73b1a3e4800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d4b08ef-6dc0-4702-bf68-140e6a0abeee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6a78b6-56a0-439c-af91-243cac05c2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33b5627-50ac-4149-b3d4-ee814c4ccd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb5daf2-7285-4616-a567-8cdc61e02ad0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96da580-f1de-485a-a439-587ccff44ce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e52aaa5-79e1-4697-8390-8f80c7a1f8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8424577d-87ba-4d07-8f70-7b07cb98c4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4538ed1-5b09-4ab6-8b68-9d80b0d03868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8430f76a-fa92-45bc-9daf-983c5c4323fe",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d30c00e-3559-4f29-b5d5-4130a8b74501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f8efba-d052-4b05-85f4-5a4feb373034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f448a-36a2-416b-899f-a1053e5748e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca02d040-5ae6-49c8-98a6-088a5be3079a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2395085-cace-42ee-8bd6-55e7ffa06c85",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de05476-d1cf-456a-b7b8-9777fc38477d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92541caf-c0ae-4620-9f45-87c4eda76d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31401afa-425a-4f9b-a1cc-de0821b8ae64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9bdce2-95d3-4cc7-89be-f6f08109a037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff11c962-c2b5-4224-99d8-05e76ba39e6c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f637c63f-3323-4e70-be81-6c53b4e93928",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6198ad9-d33a-419f-83e0-2072e7bba5e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d63ede-b52a-43dc-90c5-00e7a2b16b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09259d4e-9088-4016-9f44-52f7df6bc3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fb9371-a31b-42f5-a1ea-1c9e33487000",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3472f4c-ee6e-4d24-b63f-635b8913565d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147fbc99-354e-4b2b-9f5d-349272e88c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eafb34a-d2df-499d-a93c-897fd49a2ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d984894-029c-4cdf-af11-32dadf764d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be1b8bc-6ffe-487a-ac2e-f03d92a5144d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d057401d-c540-46fb-b3bf-70bae43c3d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4166aff3-2bd3-4c8c-9151-5a5e5843ed66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b13f1-d6fc-465c-8550-c2d720baadab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a58bef8-bdaa-435c-87df-4b3a67448f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570059b8-0e5f-4d22-9579-d7f59622411f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e339b094-6f62-4a49-b6bc-2c6b8c7d934b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7d41c8c-b341-4662-ac4b-e655e0163c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "502118aa-7f1a-43b7-bc60-67c5bf809c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db71377-fb8c-45e5-abaa-9ea3fa036912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60734aac-9bd9-4460-8804-f220602c9b62",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae6c9dc-2ceb-44fb-81d1-ca3d34c77543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef41b5d1-7ca7-4fcd-8819-3a39874e7cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddc295e-da85-466d-b83e-a1d602a3a29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250e8a21-b401-430b-bdf3-816270e0f610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a2ab01-b2d8-4878-af14-e60399e1031c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8355e5a4-4aa6-45e4-bc18-28a29a64c4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb23c5f-9ce3-4721-aa5b-a2f34571b411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712ac64-a87f-47a5-83aa-f7665a9bebab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b930a82d-e0ed-4129-b53f-f974a3fda9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6685a9a1-9e0c-4888-ba79-f5c9e1a3e2a8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa5513a-39c1-4b70-b06d-f00411a199ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a686ce3b-3ec3-4f13-9b33-6788723caf81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300ed991-a9e1-470e-b1f8-8ff6eb8a13a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c38a46-ee0b-4d23-a318-38d44c8a00e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea794b2-7dca-4981-9314-a5e49489ddc7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f103cfea-7cce-4452-a635-76bcced8e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbef815c-a4cf-45d2-a239-5bfb6b24832d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed3f8a-5bb8-479c-8742-c4eac57239bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23270422-d201-489a-a5d8-428dd7d7990c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1a5df8-b106-4e0c-ae71-4faa3357d089",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c159607-7bed-4828-8639-da2937e3e2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2befb7a-ec91-4a6b-a86f-67b5756ba0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2493e91e-49c3-4db2-a209-e1006ff84ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b943af-e24b-4626-bdb1-71cc3d57a417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a85c11-fde7-436a-bb45-80ab05fdc86a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d988c8e8-00db-460c-a9c7-3f06c404d697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853c84e9-b979-458c-972c-b544d61d168a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcfb56c-bf24-45b4-9b6f-9eaec7f0cabe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "352d6587-9984-4d7a-a7c5-af5186fc4040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758d2b30-d947-4adb-b669-d460392ec877",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131636a9-2fcc-4e75-a917-127147493ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2be7e3-cc24-4686-bb88-bd0c79652614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489baf31-dbde-454b-83a0-cc69875b050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efef417c-6703-4181-a4c5-74278268a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ac8434-3382-4937-acae-5fd5db41fb45",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd2e2d9-967a-4705-a082-c92a6b350899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79ff79a-0ae7-41eb-a335-2bc20efe46e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9b75f1-447e-4a45-b5bf-422c43274920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9743ba2-e564-45da-ac4c-a236f7d72ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239cfde1-ab44-4084-b06f-da12418d89fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33036b8-b7d1-4b63-b3ba-0814e740f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39006286-c992-45ba-b26b-c3a6d51a2cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a43c8-776b-48ca-9a68-1fa1fab2f0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e891dc9a-872d-445e-83c9-a598a7ad68ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80de059a-68a0-44cf-9f66-13bd8834b916",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1582dce6-ce42-4c4f-8ea4-b6e32bf89246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a422a3da-da7e-4719-a632-a8fe927ca964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ebc0014-9baf-438f-84fe-05692840a185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572e2ba4-e0f1-4bc4-8fff-ff7edc13cde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2d5334-b019-4531-8b60-dd9a06bc1b42",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef423097-ffde-484a-9d95-fc51aca0c766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc0fdd58-269c-4d3b-aa84-0401f5cff9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dc380f-0136-42af-8e23-706d49952c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d324e3d-2068-4355-a67f-7c76537b4891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368cfe6f-a71d-4ff9-8562-f586a58a5b7c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cca564-16e8-40a0-8ccf-6ded56d5bc72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9e9a0c8-ec01-4dec-99eb-a69de5aab6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4d2aa5-d8ad-4298-a122-c60b72a75aa7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ec03b5-e363-4f47-ac78-fca5e80ce53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c99e0c-6302-41ac-a54c-70cb31399e25",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279148d7-63d3-49d7-a012-facb310233e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607cb7df-7ebf-4b4d-a342-ab0906710e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c9053f-7453-48d8-98f6-3e006c913b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff484ec6-93c8-4c91-8233-3f6cd3549220"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfeb064a-7613-4d76-9567-0e2bea0f3c79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15e46cfe-edf9-47c1-8938-918b5e8a0398"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "924ff3ae-4dd5-490b-9192-bffd34a34a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2db6d641-5b2a-4755-8d87-826bd6ef9e99"
                    }
                  }
                ]
              },
              {
                "id": "f20a790f-99cb-4e86-aec9-33c17c4c3e8d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11517d9c-984e-4db7-889b-b2e01040cf52",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c6a94-84ee-4d98-a037-1dcd2f5b0140",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f3bdf37b-808b-47c1-ae71-846bcba5a144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f61da81-04fd-4fea-8646-cbafb5c55f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb4ff1e1-fc7b-4890-a7a7-206dcc98bc7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7649600-2dcb-4f8b-9b74-d43ac6f66d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7148ae77-9410-405e-9997-7eb5d0a9e218"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c1bec27-e368-4bee-b3a9-241eb184c0d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e5a8465-131b-4ad3-9418-b41dfb8cd94f"
                    }
                  }
                ]
              },
              {
                "id": "88d8be97-e0bb-474d-9434-7a3c16ed5e90",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "04141cff-7fa2-4dfb-abc4-a3e22567bc86",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f896ab7-4f30-474c-b445-b59651918372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b5ff936a-0e33-4eff-994b-3d575c142033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc586bb-24e6-4987-9806-a66ea24aa7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77aaefb-d4d7-4c97-a248-aca8e2986adb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29906ec8-3595-4a7c-9442-fb0c7b4b4705",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11219379-6cf8-44b5-ae80-24e80cd560de",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16df53f9-b2cb-4a26-98dc-f3c9e5155cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "694c4dc1-65df-46ae-b90e-542312986aa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e80e4750-d4e2-4cbc-a895-7921bb0f4f19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92cc4192-0ce0-4361-9830-3cead5f51a65"
                    }
                  }
                ]
              },
              {
                "id": "b1015c50-ef8c-4c2b-a9b8-735cfd100919",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a77932e5-7a9b-425b-8f2f-eddd5b4f2c6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a574f79d-daa2-4ecf-8c22-64c264ce760f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e32b4013-3b5d-4b5d-b48e-e637c21d7c08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff292237-88b5-4e4f-92c8-4003b3f78b58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9e68b1e-caf7-4575-b829-38b357aed38a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "639e94cf-c0a8-4b2a-b6f4-1e61542ba807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8845ab4e-f60c-46c7-a08e-01d14cadc473",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83bb10de-4dff-410e-89cc-35680179fa7b"
            }
          }
        ]
      },
      {
        "id": "9c8ffa92-6f5f-4b11-90fb-db292c115f8a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "18970324-0f8d-45d5-acd3-74d3dc769550",
            "name": "Negative Testing",
            "item": [
              {
                "id": "534ac430-4736-4008-9151-940e3144eb38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5422016-68c4-47b5-9aa6-f895c287f249",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668018ff-0bca-48f4-9735-d237685caa89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c1dcc639-1a9e-492c-a156-14a0d82857f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "216dbf82-a8a8-41a9-8a46-dee9807f7183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dca3f4a0-fa0c-4fac-859f-97b5b40475ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbc7205b-8194-4152-ba3d-3165aa75f45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6d816e1-5443-4703-bd60-7b063ed582f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c8ede8-4ebc-4255-baa9-0309a60eff9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47279016-ff73-48b7-95db-edaba8808b12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c0683d1-9a52-4709-8d77-35400f4f3ef1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "90167874-3fc0-4062-9c71-fc0daa6f5589"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8489a582-7d3d-42cd-a4e3-402d4c176a83",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b97438b5-02f8-4a91-a242-f498a1764be1"
            }
          }
        ]
      },
      {
        "id": "cbd423a5-3e72-4067-89ac-0ff0111cd9b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "01b0f75a-582a-49dc-af4d-3fcf105d64fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da2070c4-3cb8-4fe6-8081-4137588e94fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "352925f8-be8a-4315-af10-923c5ab8ceb3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc57652a-f04f-4503-825f-19c834e07f22",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a144a4d-3b33-4c7b-84f5-6ea91a2312f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd58f7b-c79c-44fe-9f14-c23cca073a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55a8b7f8-b2ca-47f7-9912-04159b6f291c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93127a7f-38fe-4f16-8386-11bd5f008d24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53f59d8c-18e6-4946-a66c-1af29f4d1793"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a49891c1-4db0-4848-93ab-a6f43800b0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3854e391-65d0-4a3c-8fd1-58555bb48c21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be167881-1e66-4c0a-b6fa-0bb344cf588d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52528f22-77ec-42aa-8397-ce1fb356a8b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a310e5a4-a060-4f74-b1cb-34c7ca3698a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27066c83-29db-4488-bc47-0e401c88bd74"
            }
          }
        ]
      },
      {
        "id": "535c76bb-242b-4507-8c86-bb689e4bd424",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "21dd8e3f-c495-4169-b0c2-7eae9f503103",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dc9a9ef-c4a9-40dc-80b4-def167ca0181",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a77d7635-b837-4e07-8882-39f2725c0fa0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f901c6a-4786-40b2-826f-74b1a84b2d4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f58008bd-6b3f-46b2-b67d-75312303234a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ebadf4-cb3c-433b-915a-a33d6c281aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "747549d7-cad1-4241-a387-c00e278cd0cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3298d6ea-c46a-46aa-8a33-4784ff1d7507",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "521d60ac-140e-4a75-a48d-5c3cc77e70f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ddc8821-33cd-4f77-be24-e5bd68d3d27f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c096b4a8-0321-47d1-9c9b-e6e70b65523f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28584649-7e69-4a4f-8ba8-b80f151f136a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5db155d5-3f23-4191-ae49-85a847c5e515"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92437ff9-6502-45be-9346-ebf89c12b4ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f4dda77-81ba-42f2-99d4-d403bd80a8c2"
            }
          }
        ]
      },
      {
        "id": "49f59ca3-f160-4877-8774-ab3b1a4ccb7f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68e78c2c-f42c-49b9-9d68-32efac72003a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "662fe623-6cdd-4580-aa84-5479c9f55ce7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dcbeb08c-26c3-47ef-8bc3-36d9357e7dbc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a6310356-0dbf-4637-b8e8-0f3a2433156c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b948164c-ebda-4461-be88-729db5cfbf6b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.75396825396827,
      "responseMin": 4,
      "responseMax": 11808,
      "responseSd": 807.0848403162955,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717115840624,
      "completed": 1717115874958
    },
    "executions": [
      {
        "id": "c2f1442f-2222-4e98-86c2-2aa3ec85f23f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6a86cb47-714d-4139-95ed-11e91ca243b2",
          "httpRequestId": "3e14e63e-280c-471b-bb67-07e83dacba43"
        },
        "item": {
          "id": "c2f1442f-2222-4e98-86c2-2aa3ec85f23f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8ff3ddae-8da3-4a46-a7c5-83aaaa8dd528",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "dc606d92-f42f-48ed-8962-5b9f5b7511b4",
        "cursor": {
          "ref": "4fd4c060-fff8-4679-bd2c-5d711a9e29fa",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6216f588-b52c-49bf-b98c-0138862f66ce"
        },
        "item": {
          "id": "dc606d92-f42f-48ed-8962-5b9f5b7511b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc46b473-aedd-4e61-b9c6-94a69493e97d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "dfe1ad83-6339-429d-987c-05539397ecee",
        "cursor": {
          "ref": "d8f94170-74a6-477b-b5cf-f6c0cdd88c05",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "46b34c0b-e3a9-4194-aadf-6bce259f7880"
        },
        "item": {
          "id": "dfe1ad83-6339-429d-987c-05539397ecee",
          "name": "did_json"
        },
        "response": {
          "id": "aeb68906-3bc7-4251-8f66-0505f25b8ac8",
          "status": "OK",
          "code": 200,
          "responseTime": 240,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabd15ca-4d47-450d-a056-79a0762a5d0d",
        "cursor": {
          "ref": "086189d5-9b95-4e12-9581-4a42b284d742",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7f383c2-9f81-459a-9396-040d2b2cd234"
        },
        "item": {
          "id": "eabd15ca-4d47-450d-a056-79a0762a5d0d",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b62ab4f-1134-48f9-800f-a5d35902f710",
          "status": "Not Found",
          "code": 404,
          "responseTime": 387,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabd15ca-4d47-450d-a056-79a0762a5d0d",
        "cursor": {
          "ref": "086189d5-9b95-4e12-9581-4a42b284d742",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7f383c2-9f81-459a-9396-040d2b2cd234"
        },
        "item": {
          "id": "eabd15ca-4d47-450d-a056-79a0762a5d0d",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b62ab4f-1134-48f9-800f-a5d35902f710",
          "status": "Not Found",
          "code": 404,
          "responseTime": 387,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f030a375-762d-4563-8993-d0a73ce08017",
        "cursor": {
          "ref": "a6a125e8-be4d-4d37-9ca4-499bffc40c6e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5aa7c9d6-a06e-4ef7-9f0d-14fabacbac11"
        },
        "item": {
          "id": "f030a375-762d-4563-8993-d0a73ce08017",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c176859b-d05b-4849-92ea-bd22b33da655",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54253d34-2ecd-4b7b-9c64-942bc3d9793e",
        "cursor": {
          "ref": "155a1368-1c1b-4e06-bd0f-4496e5e60148",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "99fb9952-2da0-45c6-b513-5f85a168db5f"
        },
        "item": {
          "id": "54253d34-2ecd-4b7b-9c64-942bc3d9793e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df6e78e0-d12e-4acc-ad28-2a70030d26fb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 18,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5e6781-3854-43fa-9830-f8b643557ca4",
        "cursor": {
          "ref": "d4eb2f9b-0e25-49f5-9961-47da649f79f4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "23c3ce42-809c-49d3-80ad-b0b3f0c624b5"
        },
        "item": {
          "id": "ba5e6781-3854-43fa-9830-f8b643557ca4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "72741fa9-a4cd-4a57-8339-ae535c6226d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6daec4-eb6d-4bd7-95f6-ba4889658394",
        "cursor": {
          "ref": "fc75df37-f3a0-447e-949e-e2348cc3bc8a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "feef6761-4ad1-417b-bff5-69bd4d80def4"
        },
        "item": {
          "id": "bc6daec4-eb6d-4bd7-95f6-ba4889658394",
          "name": "identifiers"
        },
        "response": {
          "id": "460291d0-2ae1-46de-b3ed-c5dde6112f9a",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14097d6-ad13-4c84-a4ec-802b6989aa82",
        "cursor": {
          "ref": "4edf04c9-4a8a-410f-952e-e28fdc1947b4",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff8aad44-2d16-47fd-9b71-b694aad01fdd"
        },
        "item": {
          "id": "b14097d6-ad13-4c84-a4ec-802b6989aa82",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2726ff77-9340-4a65-835c-77fe0e29f185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6ab7ac-53f8-4227-b214-16558f748dc4",
        "cursor": {
          "ref": "4281c768-bad6-445e-b5f2-c55cda06b4d0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c80950c2-f3a9-4d29-af47-1c7e7a594d3e"
        },
        "item": {
          "id": "4b6ab7ac-53f8-4227-b214-16558f748dc4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "24e5cf74-7621-4d27-a7e7-b42d8d67a7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597ae58c-8069-4995-87d6-5a259e9cd640",
        "cursor": {
          "ref": "705e735f-c210-4109-a6db-7553b87d53f7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a4f394d-4e86-475e-a93b-ed22b6eb29ef"
        },
        "item": {
          "id": "597ae58c-8069-4995-87d6-5a259e9cd640",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cde879d8-23a6-41da-b2f8-734193e5fa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15825006-ae15-495b-bb5c-da923025b30f",
        "cursor": {
          "ref": "56039874-9a4d-4221-b0d0-f8c970855cce",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b59c4a1-769d-472c-8cea-e92b44a6e383"
        },
        "item": {
          "id": "15825006-ae15-495b-bb5c-da923025b30f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f7c1142d-58c5-4a43-99f2-f15454afa843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0588689c-7302-4038-857f-f2c436d1ec99",
        "cursor": {
          "ref": "a01d8f6b-da31-4bc5-bd9d-a3bbbe79f0e8",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "33b06344-52d4-4ff5-93c2-085fd3e4ab62"
        },
        "item": {
          "id": "0588689c-7302-4038-857f-f2c436d1ec99",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6a7d8aa4-6933-48dc-bebf-618a8de87b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7255f6-1a42-4085-b188-e93860ae6cf8",
        "cursor": {
          "ref": "78123874-3807-439b-a80d-2a8e719941b8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b1703b87-49e9-41e5-b8f4-213be9807ff1"
        },
        "item": {
          "id": "de7255f6-1a42-4085-b188-e93860ae6cf8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a6247689-76ad-4d82-82a1-db31ed5e6216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94777fc2-462b-4b01-ac39-dcd14e1e3513",
        "cursor": {
          "ref": "67ec030b-2f3d-4e43-96cf-3dccb4499bd4",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ff2caca5-1db2-45c3-b3ec-417ab7c6cadf"
        },
        "item": {
          "id": "94777fc2-462b-4b01-ac39-dcd14e1e3513",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ebcef450-7f4d-4411-800a-9e920ea004b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45388d55-8222-4f78-b89e-91b010a06a5c",
        "cursor": {
          "ref": "e5b12369-07eb-4ef5-941c-8ce6d08d4a44",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8184ab17-ae68-4893-a6c3-80c39485b3c9"
        },
        "item": {
          "id": "45388d55-8222-4f78-b89e-91b010a06a5c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7fb045af-746d-4984-9292-4d8e41503d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c229200-16d5-407a-b685-77997f98b9c8",
        "cursor": {
          "ref": "34afe7c4-2f65-4323-9063-ef9048d497ad",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4b8c328b-bc01-4b82-a296-e8cf397d2cdf"
        },
        "item": {
          "id": "0c229200-16d5-407a-b685-77997f98b9c8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b18df781-9ac0-4635-895f-a7b17274fc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a0267-e9cc-42bc-9825-cb83da553ba6",
        "cursor": {
          "ref": "b9990758-b9a9-4aa9-9e13-390d53af0914",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "97daaa03-33ab-4a6f-9be2-286681511678"
        },
        "item": {
          "id": "597a0267-e9cc-42bc-9825-cb83da553ba6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d741549b-b503-4991-bb60-36728bf5e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc2118-3afa-41b7-9f2b-4a1556854f0d",
        "cursor": {
          "ref": "5488b225-0a37-4e78-8b5f-8498ff593e5b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c4eb4e2a-8474-4c4d-a777-cb5d3384b1ac"
        },
        "item": {
          "id": "73dc2118-3afa-41b7-9f2b-4a1556854f0d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8d3caba7-249b-46b8-a00c-3a6fa828f1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1adb7f90-9d5a-4637-8e48-f081ee09fc4e",
        "cursor": {
          "ref": "83951e7a-7945-4c64-bc97-878bfb34cb77",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "96a61885-0fc3-46f4-bba4-58a50adcfca0"
        },
        "item": {
          "id": "1adb7f90-9d5a-4637-8e48-f081ee09fc4e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ee17526d-ac5d-4039-a7e7-122b196d5daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8578994b-47a5-4c52-bd31-b0668ed5a347",
        "cursor": {
          "ref": "a953779a-82ab-4907-b23f-edf0b86c0637",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "14ef1601-9c36-48cf-abbf-74677d35c01b"
        },
        "item": {
          "id": "8578994b-47a5-4c52-bd31-b0668ed5a347",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "52dc3c19-1e38-4d40-a52d-16101f847e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440bbf6d-534e-41a3-adf2-a5aa34d9e673",
        "cursor": {
          "ref": "939ec157-c87b-49c0-ac5d-2d8f07259237",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4ce21ea8-cd8a-4383-8db7-ce36526c522c"
        },
        "item": {
          "id": "440bbf6d-534e-41a3-adf2-a5aa34d9e673",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9cb9fa42-837d-4403-9ea3-5bf1fbcf94a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e439fab-c027-4d89-acbd-18241b3e1b87",
        "cursor": {
          "ref": "a6654153-3289-4bd2-b0df-e241b49d1319",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d7c52b43-3b93-4583-9155-7a9fded6d701"
        },
        "item": {
          "id": "7e439fab-c027-4d89-acbd-18241b3e1b87",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "85a76645-fec8-4bbb-a1cf-c35be3bfd5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a329fc84-49d2-4ac1-8df9-3a935e2f83b2",
        "cursor": {
          "ref": "23d5a5f7-076c-40ca-b26d-3a40d96db2be",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1628d2ed-5e8e-47b7-95b7-56e1bf8c1cb6"
        },
        "item": {
          "id": "a329fc84-49d2-4ac1-8df9-3a935e2f83b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5a395e89-fd94-4dcf-bed1-32c191bc2e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5911f4-e696-433a-9718-263d38268207",
        "cursor": {
          "ref": "c8b664ca-cf77-4c87-bc8c-eef3ce7235c7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "31a3793e-f2d0-462b-9650-b390b221cf05"
        },
        "item": {
          "id": "5d5911f4-e696-433a-9718-263d38268207",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e2c9892-660e-4dd9-a40d-f80e87c07d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677dbb56-b8f0-46fe-8473-438371482371",
        "cursor": {
          "ref": "fd64d2f9-093c-4cd2-986e-6e841d4f36a1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d5326ab8-5892-4387-8f53-144b21f182c4"
        },
        "item": {
          "id": "677dbb56-b8f0-46fe-8473-438371482371",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c5ab8c6-92f1-4964-9d93-7fefb83892bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6809c86c-a6e4-497a-bbad-fbb22af7ddd6",
        "cursor": {
          "ref": "32e4dcc4-1c0e-4799-adaf-bedd2e5d2496",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "417e13a5-869e-46e5-a024-b72cce3c3bba"
        },
        "item": {
          "id": "6809c86c-a6e4-497a-bbad-fbb22af7ddd6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f9555c74-ba71-41f9-a129-8759492703e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80494e5a-0902-41b5-b1f0-9cd342e3bce4",
        "cursor": {
          "ref": "8a12de39-5112-42d8-a24a-f7483f340892",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4974efe9-16f5-4428-8d4b-258908721cbb"
        },
        "item": {
          "id": "80494e5a-0902-41b5-b1f0-9cd342e3bce4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "919fbee8-6b0f-495b-96f5-8a49ae01340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a1d226-2fd4-4737-88ee-c19cf1c30f5a",
        "cursor": {
          "ref": "07930f9c-c27f-40b3-916e-c553413a3247",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "78bc06f3-098e-4a05-8ee6-d01e58cdb452"
        },
        "item": {
          "id": "15a1d226-2fd4-4737-88ee-c19cf1c30f5a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d6262225-ec91-4d13-b168-352a3b19ecbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca65841e-7f6f-4b8e-ab22-f4c2de27dd17",
        "cursor": {
          "ref": "54ce7981-892c-4e31-b7cf-7ed373131b84",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f8f2dbc8-c73a-40de-b086-f0c7758a739c"
        },
        "item": {
          "id": "ca65841e-7f6f-4b8e-ab22-f4c2de27dd17",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "62ee6e41-bb78-41f9-a4db-f36fd4cc10cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299127c7-a805-4739-98d2-5249f2f8b371",
        "cursor": {
          "ref": "054fcf03-391e-4c30-97d4-bb5c037be376",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b8e39f46-4a7c-402a-bffa-b4d381730456"
        },
        "item": {
          "id": "299127c7-a805-4739-98d2-5249f2f8b371",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ac9b321d-a09d-4c1d-ae4d-26f9f030ec88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c092f92a-ab59-4d65-bb1b-20282a0dead8",
        "cursor": {
          "ref": "cf83e71a-899d-413d-b7d8-e819e47a0aac",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4943c885-a37e-466b-a26a-4358031d9f5e"
        },
        "item": {
          "id": "c092f92a-ab59-4d65-bb1b-20282a0dead8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8c35ac85-ff68-4742-8023-39cfed5a9266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5f0b23-a279-4811-a002-2596e69614cc",
        "cursor": {
          "ref": "7e20bfc8-9a81-4f36-b79d-240f7be9450f",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "803735fb-6584-4b9b-afd0-e8e22aa26d7e"
        },
        "item": {
          "id": "7d5f0b23-a279-4811-a002-2596e69614cc",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6fc1ecad-8fd5-4147-ad7f-fb1ee7382124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2801ab6e-ac13-4021-9caf-93c05a2318f2",
        "cursor": {
          "ref": "7f4130f0-7e90-4c87-9083-dc9dd149b710",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c0c591e4-6cce-46f3-b64b-cd3dd964b16c"
        },
        "item": {
          "id": "2801ab6e-ac13-4021-9caf-93c05a2318f2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4e11947c-158a-4623-ad29-fbfc817e22f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f0a59c-7237-4498-9f81-f0962d105b25",
        "cursor": {
          "ref": "97737552-18a0-477b-9b3e-1651373eef30",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2965bdbd-dccd-4543-a8ce-c51be337915b"
        },
        "item": {
          "id": "e7f0a59c-7237-4498-9f81-f0962d105b25",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a4e2bd08-8b9f-4893-96d9-8c308f4ba05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448d356c-5b9b-4d38-9511-819570a23bf2",
        "cursor": {
          "ref": "929e858a-00a2-42e8-8980-b707c472319e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "32a8949a-da7c-4941-9fd1-9428d7bcd517"
        },
        "item": {
          "id": "448d356c-5b9b-4d38-9511-819570a23bf2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5bf078db-ec75-4620-a801-3598c20a0492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9881ecd-e2eb-4832-81fa-70a93ad012d1",
        "cursor": {
          "ref": "968eb1cc-e800-4f29-aaa6-86e56ecfa937",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8d29bb1c-5be2-4eb0-b6da-4cf140a779b0"
        },
        "item": {
          "id": "b9881ecd-e2eb-4832-81fa-70a93ad012d1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "41d15d4c-23cf-4313-90d0-6c6ac8f9b7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7a2129-23d8-4af0-a0b2-c5ea4e9526d3",
        "cursor": {
          "ref": "fad9a056-1b20-4d4a-9108-39f8fad921e4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "af41e501-d6f6-41ed-8ea3-d5a0c89c6db6"
        },
        "item": {
          "id": "df7a2129-23d8-4af0-a0b2-c5ea4e9526d3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7611f455-0f8c-45f7-bfff-46797a0ba716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55aa396f-9277-44d9-8778-0589dd9c6bef",
        "cursor": {
          "ref": "910793cf-a624-43b0-9541-6abe2c8ab3ec",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d0b5f30b-7f0c-4465-82b0-4c73e12e5fe6"
        },
        "item": {
          "id": "55aa396f-9277-44d9-8778-0589dd9c6bef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "df37bb95-ce89-40a4-8edc-7b41480cda1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fc755d-2765-4bf4-aac5-e812a7e5bb1a",
        "cursor": {
          "ref": "462a44aa-4651-4c41-b3f7-e62ca966e3d7",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "08598d05-1cca-4acc-98eb-2ce3e6a8edab"
        },
        "item": {
          "id": "d9fc755d-2765-4bf4-aac5-e812a7e5bb1a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "caa180d8-bb1d-4138-81c0-a3717ee928be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df731ccd-a396-4cc6-9853-92cfc51d0456",
        "cursor": {
          "ref": "f4db1937-8634-4131-ab00-494096882cd2",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f3290ee5-da96-4ea7-85f1-88c89bfc6b25"
        },
        "item": {
          "id": "df731ccd-a396-4cc6-9853-92cfc51d0456",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "43ecdcbd-bb1d-473b-8a8c-e13cd8dc20cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65be2be7-a51f-474c-9a20-53ed6144e654",
        "cursor": {
          "ref": "7cf52eb5-edb6-4f57-9d90-adb04ce50b37",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9e101385-d442-4445-9b96-1231e0eb8997"
        },
        "item": {
          "id": "65be2be7-a51f-474c-9a20-53ed6144e654",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "71ce0915-a6e8-438e-8f70-92abfc88a368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f7cd72-fbd0-4322-8aab-445478e53110",
        "cursor": {
          "ref": "1129e9d7-ac02-49f6-8128-fa77c1824138",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "81835226-93aa-4a70-ab30-cef19e54dc9d"
        },
        "item": {
          "id": "f8f7cd72-fbd0-4322-8aab-445478e53110",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "202f9807-387b-4411-b6cf-12b4dbf5ba4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afe9822-8d05-417d-8086-bbb03c94b672",
        "cursor": {
          "ref": "113a6f0d-de9f-434a-ae83-5ac1eaaf4b14",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93b928d7-7e6e-4877-b439-61cb59373599"
        },
        "item": {
          "id": "1afe9822-8d05-417d-8086-bbb03c94b672",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9af6dbcf-ad36-4413-bcc1-d7ede001081b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d416e8ad-e768-4c7f-baab-ac2f260f51e5",
        "cursor": {
          "ref": "b87386bf-db2c-4124-b874-90a2deaf06c0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "17ce4e0c-bd4d-4214-8a77-c622394db762"
        },
        "item": {
          "id": "d416e8ad-e768-4c7f-baab-ac2f260f51e5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47413ccc-424d-4220-a3bd-74fce28dcd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57a16e5-2e0d-4238-9c26-c45e01711a60",
        "cursor": {
          "ref": "470a1a2d-5f48-43cf-b8d0-443eb80586c3",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a006e5a4-9aa0-4e60-ba73-437e881686ba"
        },
        "item": {
          "id": "a57a16e5-2e0d-4238-9c26-c45e01711a60",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b8d8ea55-7d5a-4c31-a286-bff3c23dbf0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec078d82-c1f0-4b27-a5e9-347077a0f83f",
        "cursor": {
          "ref": "0342f7cc-d8bf-478a-b643-1b7c40630bed",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "92e096c5-e867-496d-8365-64555edf18cd"
        },
        "item": {
          "id": "ec078d82-c1f0-4b27-a5e9-347077a0f83f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6af56484-58c3-4412-9a29-ad0734e8befd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ae59c5-0258-4b51-acbb-0e9682f44d48",
        "cursor": {
          "ref": "747584ed-c4d8-4ac6-9a27-47adace67eec",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d7135760-dcad-401d-a2b9-63d364a0ed1a"
        },
        "item": {
          "id": "87ae59c5-0258-4b51-acbb-0e9682f44d48",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7e315ea8-bbbf-4ff2-a9b7-489a74423ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea0899-7e74-4351-9a74-b5040e2f36b3",
        "cursor": {
          "ref": "1376bdb7-2d58-4d64-9acf-5ec27b99cd70",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7678af39-d6e8-4c55-ba2e-4f630090488b"
        },
        "item": {
          "id": "a5ea0899-7e74-4351-9a74-b5040e2f36b3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5b3c0bce-f0d0-4ba4-953d-06a6fe7da412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd7055-a835-4896-ade4-78b777d29ecc",
        "cursor": {
          "ref": "5289afe9-a40d-46bf-ba8c-894c54cb5f93",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7cc63166-9f98-4bcb-96bc-f3d3ca6ce189"
        },
        "item": {
          "id": "81cd7055-a835-4896-ade4-78b777d29ecc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a4c6c6ce-53e3-4ba3-acf0-e1bb711af137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8abe6e8-8ea6-437c-a40a-5d00c8a8d5d1",
        "cursor": {
          "ref": "1264365d-c833-48dc-b1e6-0706c261986b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "82328ab3-2a34-4067-a6e4-dd091cf7cf6e"
        },
        "item": {
          "id": "e8abe6e8-8ea6-437c-a40a-5d00c8a8d5d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c3fdbb43-3268-4e78-b9d4-ed3068f870c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ae11fd-3dcd-44d4-9155-70026524ee6b",
        "cursor": {
          "ref": "4eb23835-8117-4693-a138-9f6ac06b221d",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e9e6dab0-6579-4f63-b198-799707ddfb9f"
        },
        "item": {
          "id": "25ae11fd-3dcd-44d4-9155-70026524ee6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f1db0c76-382e-4404-932d-6c17830966e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe0021f-21b2-420a-8b6a-171f7b0b9bd7",
        "cursor": {
          "ref": "565d0305-9ffc-4fe6-a395-8989dec99859",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3d0cf293-c8f6-4ebe-aefb-bca0cf35a3f7"
        },
        "item": {
          "id": "3fe0021f-21b2-420a-8b6a-171f7b0b9bd7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d8f5a78-8af9-42de-9259-cb3c7dea8047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a331f1-261c-4ec7-8b43-3921c278f157",
        "cursor": {
          "ref": "2cc785d2-76f6-476d-9040-b569e3695157",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ad2a7099-ed59-4568-a8f9-e98fdee0ce36"
        },
        "item": {
          "id": "f4a331f1-261c-4ec7-8b43-3921c278f157",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "226889d0-b6a3-435f-bb73-62f45359941e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9992d8-2bbf-4260-9888-e222f6641cd4",
        "cursor": {
          "ref": "6af46954-af30-4a6b-a096-768c9ec2e18c",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d4b97d3-241f-453b-a6c2-8565711c927d"
        },
        "item": {
          "id": "df9992d8-2bbf-4260-9888-e222f6641cd4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9d879f7f-5136-4eea-b981-787030c9cf54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e514486-70a5-4e47-a281-e305d8ead04f",
        "cursor": {
          "ref": "a3bf2568-74f3-4d5d-b32f-3aa88d5cd87e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "427584d5-2f09-4cc1-97df-73784bdc4612"
        },
        "item": {
          "id": "5e514486-70a5-4e47-a281-e305d8ead04f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4900ac61-a730-4bae-b519-f25b9dd22880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7153d1b8-4988-4a39-a7f5-ce4c8047fed6",
        "cursor": {
          "ref": "5a44e2ad-a8d4-42ed-b0e3-5358a434eadd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "12b330f4-1c89-45e1-b3f1-288e1773ea26"
        },
        "item": {
          "id": "7153d1b8-4988-4a39-a7f5-ce4c8047fed6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7d4aaec9-80c5-4351-9fcf-24aa56db23f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d65b6a-30a1-43e6-81c8-ecfb4b158edf",
        "cursor": {
          "ref": "d128e355-7259-49da-8b04-036b6dff73a1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e721de98-a3fb-4dff-b3cf-12243caaebc1"
        },
        "item": {
          "id": "78d65b6a-30a1-43e6-81c8-ecfb4b158edf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3ddef132-4b38-4cfb-bd3e-7140cd76c199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d912b-2e09-414e-acc7-42ec89b2c7eb",
        "cursor": {
          "ref": "0113d80c-a3eb-4535-be18-03c4b0d78135",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8da5815b-fd03-4f33-b029-840a7a37d33d"
        },
        "item": {
          "id": "665d912b-2e09-414e-acc7-42ec89b2c7eb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e521953a-34b4-4216-a44b-44ec019b4b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56badbc3-6434-41ed-a1cf-5a8026db9587",
        "cursor": {
          "ref": "e66818ce-44e9-40ba-9185-b6668ed3c6cc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cb8cc90b-99a4-4ecb-b539-7257c97d3765"
        },
        "item": {
          "id": "56badbc3-6434-41ed-a1cf-5a8026db9587",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "496fcd70-691c-4735-b584-be99bdd10a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40b7f05-7b19-4b7d-8b86-00b9e7aa1a20",
        "cursor": {
          "ref": "2a1f2aec-09ac-4edb-8b84-8cda194313f7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f2b26194-3cad-4b5e-9979-5cccb577f7f9"
        },
        "item": {
          "id": "b40b7f05-7b19-4b7d-8b86-00b9e7aa1a20",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5efcede4-bdbd-44f5-b144-20d8cff28e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bf7f6e-ad6c-4231-92ab-9cc3bfd714b4",
        "cursor": {
          "ref": "b3359903-4bea-420e-8d29-87ea038f69a1",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "24794390-1f76-4043-8c18-b220182f61be"
        },
        "item": {
          "id": "84bf7f6e-ad6c-4231-92ab-9cc3bfd714b4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9a739d60-18ea-4195-bab0-d781f252f79b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df2ed6a-c150-45a8-9bee-f4944d335e8c",
        "cursor": {
          "ref": "3882ed18-a816-4ac6-a2dd-74e0c91975b9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bd5be4c8-6d43-48a7-91b0-ac9e500a0fb7"
        },
        "item": {
          "id": "5df2ed6a-c150-45a8-9bee-f4944d335e8c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bc997601-5c1b-4475-90a8-4b16ab431b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e329f463-b90e-4f4a-807d-765b35daad22",
        "cursor": {
          "ref": "41fa2e1d-61f2-4e3d-b137-114347da56d9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "71ae85f6-5ba3-48b2-b081-9c3d617e7bc5"
        },
        "item": {
          "id": "e329f463-b90e-4f4a-807d-765b35daad22",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2fc8eacc-805a-4691-926a-7bddcfd6dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6befe4d4-d938-4405-bba6-c44738d2e255",
        "cursor": {
          "ref": "31875e31-a48b-43e2-ab28-72fc673a92f6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4a9298cd-e8a8-40ec-abd9-828664987574"
        },
        "item": {
          "id": "6befe4d4-d938-4405-bba6-c44738d2e255",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4a941c8a-edbd-4e3f-8d02-59762df238c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84ba836-ad2a-44bf-8b0a-ad92d9941b41",
        "cursor": {
          "ref": "01dcc025-bed3-43c0-858a-43ee41c1895b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "04c24ca3-dc0a-495c-87c0-8fa1a0f2806a"
        },
        "item": {
          "id": "d84ba836-ad2a-44bf-8b0a-ad92d9941b41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb4e8a1a-1d7d-4852-a526-b9c32834d544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909e0df3-06e2-4c42-9239-be6a6960ae03",
        "cursor": {
          "ref": "f90f7571-1431-47e4-9dc6-7e068a0e4d13",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e17dbd43-14f7-4b7e-8bd1-65b42bf31a42"
        },
        "item": {
          "id": "909e0df3-06e2-4c42-9239-be6a6960ae03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54d78b01-ac1b-4cfb-ba71-16aa4e78cdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8b3b12-e36e-4101-9ac3-43cb895c115b",
        "cursor": {
          "ref": "47a84c24-e34a-426e-915d-403b3c3b250f",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "577c64d6-5c1f-4139-9422-dc49ad92fd9e"
        },
        "item": {
          "id": "ca8b3b12-e36e-4101-9ac3-43cb895c115b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ff08cb6b-77b2-4f3d-8c7f-7fa6090d8c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ddf4d8-778c-462a-8cc1-a964c68acbfe",
        "cursor": {
          "ref": "09f09037-c25b-4ea9-835a-afe7c71ade41",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b2a79c15-8c0d-4b28-bb5f-690440f4fb98"
        },
        "item": {
          "id": "23ddf4d8-778c-462a-8cc1-a964c68acbfe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8f6d725c-158a-4699-99b9-994c5aec7401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594a3799-e047-4783-9e5d-9b1abc374eeb",
        "cursor": {
          "ref": "1cb70c01-f3f4-41ec-8326-1d0fe3602562",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c129f825-fb20-4e7a-8988-58bb79e20ee9"
        },
        "item": {
          "id": "594a3799-e047-4783-9e5d-9b1abc374eeb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "396e17da-7375-4c48-bca0-38a3ca492efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d06b91-310b-482b-bcba-388d8ae3a0f1",
        "cursor": {
          "ref": "0fd4b64e-ba43-4c87-9aa4-8ad761831665",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "13a903d6-76dc-42e4-b7c4-b1cd3011380f"
        },
        "item": {
          "id": "07d06b91-310b-482b-bcba-388d8ae3a0f1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21de2dc0-6704-40a7-b6cc-cd14512969e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bb1f49-52a5-4497-bdd2-32e226f463c4",
        "cursor": {
          "ref": "7e419f57-9025-4d76-b910-12eadff41468",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a466a0c0-e16a-4d1e-a727-662b10d6a417"
        },
        "item": {
          "id": "d0bb1f49-52a5-4497-bdd2-32e226f463c4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2e58d1fb-3f11-40fa-b736-39d9afa74098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbaf0a4-34d7-471c-81e7-defbcb3d87e3",
        "cursor": {
          "ref": "373743aa-8300-408f-92bd-f1c9ed0819c9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "06998de6-ae2d-4046-aeb3-9ace7a1ceeb1"
        },
        "item": {
          "id": "ffbaf0a4-34d7-471c-81e7-defbcb3d87e3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fece6452-9879-42cc-bf7c-643e025cdd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67007ba-e9b2-47af-99ad-8b671980c4ad",
        "cursor": {
          "ref": "0f30a694-143b-4742-b8fe-851ae6ff5af1",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a9f2f46b-72b7-4cce-9cf7-ee6b6b07b5fa"
        },
        "item": {
          "id": "b67007ba-e9b2-47af-99ad-8b671980c4ad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "03a9fe58-b71b-4d19-a468-e78c1b12e898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a41ebf-79ca-40a2-bfbd-509f4d94a502",
        "cursor": {
          "ref": "e24222f2-61e7-42d4-ab5d-0fb7b6a0aa82",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4532c379-109e-4c2f-acd5-d3241b9afc4c"
        },
        "item": {
          "id": "96a41ebf-79ca-40a2-bfbd-509f4d94a502",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0ef1dcff-6568-4605-8cd3-78fc073aea4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054b1659-1002-46d6-931c-b204fe89000f",
        "cursor": {
          "ref": "a7bd5315-e4a0-4364-9b8b-c0c33244fe41",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae2d2ae9-fbd2-49c0-a97e-1dc0ed8b2ad9"
        },
        "item": {
          "id": "054b1659-1002-46d6-931c-b204fe89000f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c0193699-b68e-4fd4-9bc3-f41bba2c7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2773eb-90e0-46b0-8fbe-926f06326d1b",
        "cursor": {
          "ref": "0e882dd6-04e6-47ad-820c-8f2e7fb64398",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3728464-38c0-4eb2-9a40-e86f70fa6a41"
        },
        "item": {
          "id": "fc2773eb-90e0-46b0-8fbe-926f06326d1b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9f4b12be-518e-4256-88a3-985279c4fc01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c895a673-5c7f-405b-8af2-32724afcb584",
        "cursor": {
          "ref": "6340ff4e-f033-48ee-ac4a-3c39aa022889",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "330e333f-426c-45f9-b93a-23a8471417df"
        },
        "item": {
          "id": "c895a673-5c7f-405b-8af2-32724afcb584",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7d372934-14ba-46aa-8af4-a5881bddf75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39490c25-7294-4684-ad38-ed6caa2782a9",
        "cursor": {
          "ref": "2dded653-9593-4d16-a7d3-f707f950e722",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "410cce42-490e-4ac7-84a0-c610ce46c335"
        },
        "item": {
          "id": "39490c25-7294-4684-ad38-ed6caa2782a9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f23daa2c-ae6e-477e-91bf-456fd27b2d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4635a565-3a10-416f-914a-58bdb5d80ef4",
        "cursor": {
          "ref": "d2660ca0-7a17-4e17-9306-fcd8c1cb4815",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77aa112e-a4a1-44bc-b93b-dfdbeb84dc73"
        },
        "item": {
          "id": "4635a565-3a10-416f-914a-58bdb5d80ef4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e36a731a-bdb7-437d-9eee-17fa129d5f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cb0b79-28a1-48c4-99ed-914de3f88ec7",
        "cursor": {
          "ref": "f632c75d-bfd9-45f3-b97c-e42c0bd45204",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4e01eda4-bfa9-4719-90fd-5d829d992a4f"
        },
        "item": {
          "id": "a2cb0b79-28a1-48c4-99ed-914de3f88ec7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0d6cbd9b-04ce-4dc6-9bd6-1445f133b9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eea9118-7ece-4655-ad51-cef184d11aed",
        "cursor": {
          "ref": "b62274c1-a1f0-4fbc-a5c1-8bc59b79cf4f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4e591d64-ce08-4b24-88c2-cdffd9dc8715"
        },
        "item": {
          "id": "0eea9118-7ece-4655-ad51-cef184d11aed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9a756194-affb-4ca5-9633-4a5df71bffeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f43b22-c9a0-4d0e-a097-291a5f691590",
        "cursor": {
          "ref": "1dacce09-04ba-40d6-826c-023e01491882",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e56b61f1-acf1-4b99-8fc3-60c2337a6936"
        },
        "item": {
          "id": "81f43b22-c9a0-4d0e-a097-291a5f691590",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "15b05dba-7c10-44d6-a12f-2959f379159d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e665ccc1-2c9a-4d05-a9b7-ab4b5d9f5848",
        "cursor": {
          "ref": "81394e1c-9a39-4351-be16-bd53cd8a69ba",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "205f1c72-378e-4db2-a8cf-9c44a50200db"
        },
        "item": {
          "id": "e665ccc1-2c9a-4d05-a9b7-ab4b5d9f5848",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "31e9079b-53e8-4c3c-ad99-64a058423f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2039a613-ab8e-4ede-a675-d3538aa23d9e",
        "cursor": {
          "ref": "299dea68-40dc-44c7-abda-db1ea449750d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c490244d-60aa-48fb-82d6-17b50c14108d"
        },
        "item": {
          "id": "2039a613-ab8e-4ede-a675-d3538aa23d9e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a64e368f-8aa0-4d9e-ab2f-fbf746b82169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf08290-d5c6-41e9-9bdb-eed87fccaa8b",
        "cursor": {
          "ref": "7236bf67-96f2-4d86-81c7-1ee51026230e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4820e47c-da98-48db-93c0-05488fe98cee"
        },
        "item": {
          "id": "0bf08290-d5c6-41e9-9bdb-eed87fccaa8b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "722f6ef8-0da0-4062-a1c9-593fe1c72d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a98df-cc18-4801-9409-47cb7ca113b8",
        "cursor": {
          "ref": "c62de1ea-af9e-44d1-a58b-b8f0c6cbeafd",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bebf613f-ee18-4233-b610-574a9be2a81d"
        },
        "item": {
          "id": "a15a98df-cc18-4801-9409-47cb7ca113b8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f47c6c2b-1ff6-4d1b-95bb-a9a1994e5a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18715f6-0878-4836-bf97-f07073ce7096",
        "cursor": {
          "ref": "dc35b8c3-609d-4668-8325-58e00ac569e3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "22ca36d1-1123-474f-b94b-1321e438e054"
        },
        "item": {
          "id": "d18715f6-0878-4836-bf97-f07073ce7096",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1d2f241a-7564-4039-9a01-371fe8d081d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51df4e85-62f2-4ccf-b255-1aef7a88d5c3",
        "cursor": {
          "ref": "fb7c7741-edc3-4a9d-80ed-fcb37507fa76",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "27a95a5b-56d9-4455-94c6-bc55f0d641af"
        },
        "item": {
          "id": "51df4e85-62f2-4ccf-b255-1aef7a88d5c3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cb889a02-310e-4ee3-8453-2a5334c96aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f8872d-d2da-477e-93c8-d064912ac640",
        "cursor": {
          "ref": "3ae6a6ab-d8ce-4046-b0a8-5874273319e4",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c6b076c6-e711-48c0-8e38-113c2cb2f294"
        },
        "item": {
          "id": "88f8872d-d2da-477e-93c8-d064912ac640",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "da1012b2-fcf2-49d9-b4de-fd171103ff34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78174a9-4c3a-45f2-84a1-694f6f1c56f6",
        "cursor": {
          "ref": "a55091c2-edbc-4208-9243-f2ae9d1fb6e4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "256cf311-e165-441e-8dcf-c473393983d9"
        },
        "item": {
          "id": "d78174a9-4c3a-45f2-84a1-694f6f1c56f6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7a9b96ea-8aa1-4ce6-9c0a-5044b697f0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a64f42d-7c4e-4bc6-917b-cb496a920607",
        "cursor": {
          "ref": "edb47848-e0b2-42e1-9428-ceccbf18d25b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0ee7929f-72c9-4f70-ae96-de1833e884ab"
        },
        "item": {
          "id": "2a64f42d-7c4e-4bc6-917b-cb496a920607",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "13091366-9dab-4070-8692-233c60d8edc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d6e9ad-a0b7-4d43-8651-0c8a52c7b881",
        "cursor": {
          "ref": "1496132c-9374-486c-8f4c-6867b5dfb49a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cef8d05f-449f-4be9-967b-c05c3ea0d2d4"
        },
        "item": {
          "id": "48d6e9ad-a0b7-4d43-8651-0c8a52c7b881",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb32aac1-b86a-4ab3-8c9a-e95729f18bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa45f264-7559-43a3-93b0-d3e7095435f3",
        "cursor": {
          "ref": "d8e5d16b-d92a-4114-8762-d3d632e990ab",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0838c74f-6cef-449a-a666-c0671ff59360"
        },
        "item": {
          "id": "aa45f264-7559-43a3-93b0-d3e7095435f3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "47d4c629-8ed3-4b6f-a337-75f5558cbb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aea8c7-01bd-4871-a391-bfc94d504d0e",
        "cursor": {
          "ref": "89eb6b5f-0d2e-4d1e-a412-ae3a9a9967dc",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9191bbcc-7569-472a-bff7-c1518dd34aa9"
        },
        "item": {
          "id": "03aea8c7-01bd-4871-a391-bfc94d504d0e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc58bf57-6b83-46d7-9c1c-fbc4703a18a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1af755-e374-4795-b88c-edc6366d97b2",
        "cursor": {
          "ref": "76c1f2b5-6d1e-4254-ab8f-3782746c3e9f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7ee5fce2-16d3-472b-b10d-5067ec805448"
        },
        "item": {
          "id": "fb1af755-e374-4795-b88c-edc6366d97b2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f58135e3-a6f1-4686-99db-7497893c89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8fff3b-149f-4183-a472-e2e4f6b23ac0",
        "cursor": {
          "ref": "aa8e3ec8-5e93-4045-8550-5a8db3e14b1e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "10a2fb8d-543a-42aa-a1d7-fce65e1d2688"
        },
        "item": {
          "id": "bc8fff3b-149f-4183-a472-e2e4f6b23ac0",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a14b921a-7b05-4e6a-ba28-3fa4c6195826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b23db02-e982-4a0b-880a-9e131995251b",
        "cursor": {
          "ref": "89bea76b-6c29-44f5-83de-1de6f266e60f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ddb4a67-8ca2-4e48-8f58-882928a797fb"
        },
        "item": {
          "id": "8b23db02-e982-4a0b-880a-9e131995251b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7edec7e0-eca9-4bfa-b0b8-97d572d08cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7eb2c4-663f-400a-b136-61493b1e832b",
        "cursor": {
          "ref": "cd48a355-0b2e-4ebe-a7df-5deaf85b66e4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aaaae7f0-1216-4299-9894-3101b51a32f2"
        },
        "item": {
          "id": "ad7eb2c4-663f-400a-b136-61493b1e832b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ce4bc85f-d935-474b-8509-25c170622314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46495745-7ce1-42b8-837b-511d97def3fc",
        "cursor": {
          "ref": "d1d91bab-e962-46ba-a0e3-606ed8f5cc7e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3a4cdcc6-84cd-489c-aff0-d2da9b0745f0"
        },
        "item": {
          "id": "46495745-7ce1-42b8-837b-511d97def3fc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a215165c-2941-408c-9be6-642524f4b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e757f7-8e57-4a0d-8726-f994cb2dcfdf",
        "cursor": {
          "ref": "78cfa3e0-df2b-47d6-ba28-aa276b8c2960",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a9c6e0fe-5b79-47b3-8e64-ebadb92bb23d"
        },
        "item": {
          "id": "27e757f7-8e57-4a0d-8726-f994cb2dcfdf",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9cd64ccb-df8d-4d3a-b357-6fc8a9bddfce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1792e3-3c2b-47c0-afca-c5771805f9e9",
        "cursor": {
          "ref": "f88e002e-cb04-4aff-951a-594601fe6464",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "677f664b-c239-4c47-9dc5-7923f7948cd4"
        },
        "item": {
          "id": "3b1792e3-3c2b-47c0-afca-c5771805f9e9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "db7f4355-c336-4ece-8a67-82e69ff707f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1050106b-732c-47e6-831e-76e0271813fd",
        "cursor": {
          "ref": "1e70049e-9c7f-46f8-a34c-1f0524401cd8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a43af5a-3c99-4ebc-8660-bd68b0352e28"
        },
        "item": {
          "id": "1050106b-732c-47e6-831e-76e0271813fd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a993b18b-5e99-4106-ac88-d4f300bcc198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "82c0824a-727f-467a-938f-080704fce772",
        "cursor": {
          "ref": "2b1a4d2b-8020-49b6-baef-70b79c52213c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4f85cf0-7909-46ba-95a3-ecf995e6e259"
        },
        "item": {
          "id": "82c0824a-727f-467a-938f-080704fce772",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fca61ec5-d16b-4796-acb1-1f20c3e3e069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6b1d93a4-24bc-40bc-8a7f-9b468a19f978",
        "cursor": {
          "ref": "aba093a4-52a6-491f-ae31-6ed94b6fb322",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1b544ba6-eb9c-4a70-ba8a-1e6caed2aede"
        },
        "item": {
          "id": "6b1d93a4-24bc-40bc-8a7f-9b468a19f978",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f71d35a3-767a-43ab-8ece-f0acbd15400e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6752fcad-8983-4f9b-b9e5-97763e72d4f1",
        "cursor": {
          "ref": "34632929-1c85-48e8-8872-114b604e23ae",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a403664d-7773-40d4-8748-0ee7725b859a"
        },
        "item": {
          "id": "6752fcad-8983-4f9b-b9e5-97763e72d4f1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "79e5840c-b86d-461f-bcdf-749c1b911559",
          "status": "Created",
          "code": 201,
          "responseTime": 11808,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffaef85a-e7f3-4621-a89e-e6f8441b429b",
        "cursor": {
          "ref": "f48a28a4-d4bb-4d48-935c-261f0c38dfc9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0b688ac3-57b6-4879-a7b2-e63542877912"
        },
        "item": {
          "id": "ffaef85a-e7f3-4621-a89e-e6f8441b429b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "62ea902b-c413-457a-85f0-3e72a7e98ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a59f249e-5b77-46a8-9cd6-ddc0ad9ffe76",
        "cursor": {
          "ref": "456273ae-93e1-4f28-b1cd-6008de91c601",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ecea5a1e-dddc-4dcb-9d86-39d4dea9de2c"
        },
        "item": {
          "id": "a59f249e-5b77-46a8-9cd6-ddc0ad9ffe76",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6bd30e82-d561-40e1-a708-2528f5f371a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d7d2c616-bd15-40db-8c22-1e24c36dc276",
        "cursor": {
          "ref": "81db78a6-4794-4e90-8387-077ee82717f6",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "193db237-9772-41b5-9bfe-8aad1e2b4b9f"
        },
        "item": {
          "id": "d7d2c616-bd15-40db-8c22-1e24c36dc276",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "80f9db7f-4836-4cdf-b3c8-27fd83d20eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4befa81f-db15-4687-84d1-cf5b3973b355",
        "cursor": {
          "ref": "6e9cb2a9-adcb-462f-95eb-1fef19133f98",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8db5b9dc-af4a-4b98-bfee-a06225647798"
        },
        "item": {
          "id": "4befa81f-db15-4687-84d1-cf5b3973b355",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "214ffcf1-05fe-43e4-94c3-ea19e2b54bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2dedd0-d952-4070-a473-18c68327cc0d",
        "cursor": {
          "ref": "8e74adfc-395c-4628-9973-74a0d806b92a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4e888f04-24f3-421d-9e7f-29039b50ee23"
        },
        "item": {
          "id": "2a2dedd0-d952-4070-a473-18c68327cc0d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9d4335aa-8051-443f-9669-e72472802684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6968aa0f-4833-4bc7-99b5-1fbdbe0993c8",
        "cursor": {
          "ref": "0067f1d4-f298-49c3-95bd-44744564e43f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "79a61d58-6145-40a3-86c5-ecfef4a2b1e3"
        },
        "item": {
          "id": "6968aa0f-4833-4bc7-99b5-1fbdbe0993c8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6807e9f8-8a26-4cbf-ae3c-2917a8aa28f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2174b59-7f83-401c-bfff-8bd3f4c2679b",
        "cursor": {
          "ref": "3e8f0876-dedd-4b3f-8cea-cefa50a37586",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f426792a-52d3-4919-98a0-4aabc8c012cd"
        },
        "item": {
          "id": "b2174b59-7f83-401c-bfff-8bd3f4c2679b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5ee1426b-6d99-47d7-8e51-e934097dbfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b13d5ea-e109-4a24-8290-b23797f3cbb8",
        "cursor": {
          "ref": "47082951-7018-4fa8-bdbb-b51095cfc924",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5ca949a8-4a9b-4df7-a05b-7824f77a836c"
        },
        "item": {
          "id": "5b13d5ea-e109-4a24-8290-b23797f3cbb8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8da44601-de81-4baf-9ab9-6b70433e0fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8814527b-03ba-4fcb-90aa-2e4315d0b450",
        "cursor": {
          "ref": "2e838612-289f-404e-b8be-d126fe4b07be",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9d7012d1-b683-4629-ae2d-5b95d0dfe963"
        },
        "item": {
          "id": "8814527b-03ba-4fcb-90aa-2e4315d0b450",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e4cfd027-1988-4836-999e-352eecceb8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93bd0fd-6eb2-4655-b24a-97cf34892935",
        "cursor": {
          "ref": "c0e46943-f838-4ccc-83fb-eb8d89c0eea3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c71c2b68-af5a-44f7-8fbc-857731962ae0"
        },
        "item": {
          "id": "a93bd0fd-6eb2-4655-b24a-97cf34892935",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7cd9a441-3707-442f-a8c5-a4e7fd62991c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2e1735-339f-4f8a-a7a1-5ed8217addbd",
        "cursor": {
          "ref": "8e2961e2-4784-4d83-a7b4-a91aa2fd7297",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4c1083b0-10e5-4db6-a5d8-fd14eb83de19"
        },
        "item": {
          "id": "0c2e1735-339f-4f8a-a7a1-5ed8217addbd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a1798a90-c76b-4978-afe6-a74e0cf7c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef79d25-4a74-436d-8a82-980c8b1cb52e",
        "cursor": {
          "ref": "190722cd-989e-40c5-a982-2ae4cc857b14",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e906654e-9bae-4870-94e3-15df1610af6a"
        },
        "item": {
          "id": "3ef79d25-4a74-436d-8a82-980c8b1cb52e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c75cecd-f39f-43fe-93a8-b48b91177f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb5f605-0a76-4b64-8433-4bac032fe491",
        "cursor": {
          "ref": "536e6030-0985-49ac-a660-2b999fbafe8c",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "926e8827-9d80-4b26-86f1-99352b3661c5"
        },
        "item": {
          "id": "dcb5f605-0a76-4b64-8433-4bac032fe491",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef40abeb-bb2e-4953-b783-e4522189dd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1282082d-ed8b-4a21-95ef-731d7db3429b",
        "cursor": {
          "ref": "a9515cb5-d241-4f0c-bf63-2463fb9dda62",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8300987a-6294-48fc-9dda-50439373321d"
        },
        "item": {
          "id": "1282082d-ed8b-4a21-95ef-731d7db3429b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c1f02b9-a3bb-42e2-9915-349744000996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2533905-44c6-4185-9596-d45c60133ad2",
        "cursor": {
          "ref": "e617f4f7-e01d-4e2d-95f7-7ebdc2d3e28f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7d21e4b6-4b2e-4ae2-bf35-e651c5728400"
        },
        "item": {
          "id": "f2533905-44c6-4185-9596-d45c60133ad2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1573a81b-59b4-4d4d-8bc0-9b266411b6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ce3111f-27e3-48eb-9bec-dff0cda3992e",
        "cursor": {
          "ref": "c450857f-0b87-4dc1-b013-c67378c9ff81",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c9c8629c-57f9-4e56-b441-7cc074d812e9"
        },
        "item": {
          "id": "3ce3111f-27e3-48eb-9bec-dff0cda3992e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5e209b73-f553-4eb1-a5ea-67120f315689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b78ccd-247f-434b-bce3-912ac5bcc89b",
        "cursor": {
          "ref": "8d5cd2a8-560b-457c-b912-9ccb517b674d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9e0d3a44-edbc-4d43-8031-a4378c57d038"
        },
        "item": {
          "id": "68b78ccd-247f-434b-bce3-912ac5bcc89b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e6df670-3916-4ac4-adfc-00a67c9581e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5591c642-0c8b-4d4d-b2be-cfe0bba12496",
        "cursor": {
          "ref": "501a243a-6eec-4f6b-8e70-d761f70bd215",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3743edac-5410-4fe3-be9a-d6e7ef217481"
        },
        "item": {
          "id": "5591c642-0c8b-4d4d-b2be-cfe0bba12496",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ce77fefa-7ea5-4125-936f-be52caa75919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddcd4f7-19f0-430c-b1e0-7922f5ca8237",
        "cursor": {
          "ref": "fccf0bfd-f36f-4bde-9ae2-6d3742f3be9f",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "72ee79c9-7962-49ad-a664-bc9764750ebd"
        },
        "item": {
          "id": "dddcd4f7-19f0-430c-b1e0-7922f5ca8237",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7a020d19-8aef-4233-a4dc-31f9d1d7b681",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8a2f2942-3b91-44d2-964a-64f9c1585936",
        "cursor": {
          "ref": "f365207b-8de1-48d6-9ec0-deb24b0bf85b",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "96da6609-bb04-419f-ae82-cd34cf7d5d64"
        },
        "item": {
          "id": "8a2f2942-3b91-44d2-964a-64f9c1585936",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f5bedc4e-d901-4a00-b959-6f5c2cd90524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d670986a-f1b9-416f-aa03-ef2fbaad4ab7",
        "cursor": {
          "ref": "e11df50a-d122-4f0d-9a35-7ca6ae0820b5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "18cfc418-f8f6-431c-bebb-cf4cbf000482"
        },
        "item": {
          "id": "d670986a-f1b9-416f-aa03-ef2fbaad4ab7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "16aa0d09-a25d-4fa6-a0f0-059bcfea4a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87f663-e667-48dd-bb71-6ca92fff152b",
        "cursor": {
          "ref": "220c0c33-9717-48df-931b-550b8c691ff4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ae5de475-312c-4508-a504-9b2aad0c8c8e"
        },
        "item": {
          "id": "1d87f663-e667-48dd-bb71-6ca92fff152b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0b3039b-b1ba-4c8a-b98b-f7ccca33929d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fdfdb9-e3b5-43cb-824f-d112e425ae69",
        "cursor": {
          "ref": "8e39d7ec-becc-4016-a319-6b4e31b516ed",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9a3bef5f-2fe3-4d84-af89-85afd21ca99c"
        },
        "item": {
          "id": "08fdfdb9-e3b5-43cb-824f-d112e425ae69",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27e9c951-5ec6-4738-b3c6-e70c3084327a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6634726a-fc89-4c3c-9740-3acf85bf3aa1",
        "cursor": {
          "ref": "864e23aa-f499-4b09-856b-243dd8f72f45",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2bd4c88a-b203-407f-a00b-369e6d3e8e8f"
        },
        "item": {
          "id": "6634726a-fc89-4c3c-9740-3acf85bf3aa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "063ba906-d599-40da-b013-f62d5531a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e938b69-c5ae-4efb-ab48-1c3bcf7bde95",
        "cursor": {
          "ref": "cc680e56-a6fa-4f58-b620-d710a9268a8e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c7f84ae1-bf47-46a1-bc28-ea7052c7bdf2"
        },
        "item": {
          "id": "4e938b69-c5ae-4efb-ab48-1c3bcf7bde95",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fad375f-80df-4984-8e53-b353b3e41a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e43210-f6d9-4111-bd26-dc87905bf3ef",
        "cursor": {
          "ref": "bc8f3ed1-8203-4592-8079-1ef27f46ca03",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9556e1db-07ce-458a-a106-65c6a1928621"
        },
        "item": {
          "id": "98e43210-f6d9-4111-bd26-dc87905bf3ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cb6a4af0-fc6c-418b-9b65-ede73e57274d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ba5f6-b235-4020-a112-191fa5936a96",
        "cursor": {
          "ref": "2868c592-0c3c-4452-8d84-ec69f65536a3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b871c1f-4d67-457b-b055-ae620b3d1fa9"
        },
        "item": {
          "id": "210ba5f6-b235-4020-a112-191fa5936a96",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "45bf01aa-d8a2-4984-8625-6b448d442e44",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "6d98fd54-9b7a-413d-a811-a2feef7baa1a",
        "cursor": {
          "ref": "5decebd0-9c2a-4959-a12d-ec1b5e25a327",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8df212c1-4ec5-43dc-aefb-cc55688dd2df"
        },
        "item": {
          "id": "6d98fd54-9b7a-413d-a811-a2feef7baa1a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4351ce1f-4ed3-4816-964b-475aaabc172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570d7261-3b37-4480-96b3-70d2c6016bab",
        "cursor": {
          "ref": "f5a1cb97-4c57-4757-9622-2fdc4c50aca0",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1d99cdf7-3bd9-4016-a256-46d5e691b74f"
        },
        "item": {
          "id": "570d7261-3b37-4480-96b3-70d2c6016bab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c2c392f5-9fdb-4253-b2dd-5cc0d835d3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e48f03c-c902-4738-8eda-eeaf39723db3",
        "cursor": {
          "ref": "cf19de6d-ec5d-402d-81b6-2b4b3329d801",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f5f49fb-4bf5-40a5-8e1d-a88de18a2e2a"
        },
        "item": {
          "id": "9e48f03c-c902-4738-8eda-eeaf39723db3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "114a2014-53a6-4477-b7c5-dd780acaf4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae657fcb-d520-4d5a-8009-d58b232074e8",
        "cursor": {
          "ref": "76ae337b-a334-49d5-82f9-49d01b8dec7d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "444a6b6b-a216-43b6-9df9-96a3f5140da0"
        },
        "item": {
          "id": "ae657fcb-d520-4d5a-8009-d58b232074e8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "aa656976-4e37-4242-bc74-cb50e3010e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e3b01f-3dc8-49c4-94e4-ad3d2ff5eadd",
        "cursor": {
          "ref": "f6e56df2-4ed8-429d-be25-2269408382e9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0d85358c-2860-4a39-8e1b-01b1893386fc"
        },
        "item": {
          "id": "a5e3b01f-3dc8-49c4-94e4-ad3d2ff5eadd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e45a5663-6544-48ca-bbc5-ad76ce1da623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbcbc32-abdb-4341-848f-6b8717bd8495",
        "cursor": {
          "ref": "a1ad2de0-980f-4494-acb7-e726c9cfaa6f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "204474b3-029b-4066-94b9-a3024ffbeed8"
        },
        "item": {
          "id": "7fbcbc32-abdb-4341-848f-6b8717bd8495",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8cee03a1-58da-418e-a2ab-de10099aacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3937e30-9400-4b39-9a54-dff112e96464",
        "cursor": {
          "ref": "96dbe2ea-21ed-4337-825e-0206e13b2eb2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6c2239d4-20d1-48d9-9108-a7f9d3681d2a"
        },
        "item": {
          "id": "c3937e30-9400-4b39-9a54-dff112e96464",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "82bbb65b-c963-4895-b4aa-681274cc8528",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "71cd4888-c82e-48b7-83e7-5da04b5d5fe5",
        "cursor": {
          "ref": "4eed34db-006b-475e-891f-13cfa1012ada",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ee4157d2-5d8f-4219-85f3-951b80d74e60"
        },
        "item": {
          "id": "71cd4888-c82e-48b7-83e7-5da04b5d5fe5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d6d53cb7-08c4-4203-b9db-2b741ed3d75f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "8c3b9c46-7010-4b95-8a50-9380cdfc81ac",
        "cursor": {
          "ref": "fc619ff2-e547-4c82-b1ee-9d0630472fc0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "27b342fb-14f5-447a-bd5d-701c2ae58edd"
        },
        "item": {
          "id": "8c3b9c46-7010-4b95-8a50-9380cdfc81ac",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9859612c-e8ad-464b-8469-b3a8e0adf33b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 25,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "d2b344d2-4a9f-47d7-a44f-4039ade8b595",
        "cursor": {
          "ref": "d82cdd3c-cfbe-4491-aeb7-b6e0d3518859",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bd3a4383-c6a3-438e-abd1-e4b061049e38"
        },
        "item": {
          "id": "d2b344d2-4a9f-47d7-a44f-4039ade8b595",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "13706524-5c4e-448e-96e3-d636723673f0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "5052f986-85a6-492a-a36f-3e3863cd85bf",
        "cursor": {
          "ref": "50cebd9b-e539-4d87-ad02-3f3392fe3608",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "782db224-27ba-432a-b963-8885dec6b1fa"
        },
        "item": {
          "id": "5052f986-85a6-492a-a36f-3e3863cd85bf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4965aee8-3313-4c96-bd53-070bd178d6e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "34c6f2a6-c7e7-477a-9e3f-55c75da9cc39",
        "cursor": {
          "ref": "d6ffce93-25e6-40de-b72f-3c86e21ff06f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d1c1d462-f70a-4c08-a5ab-704df6664fc5"
        },
        "item": {
          "id": "34c6f2a6-c7e7-477a-9e3f-55c75da9cc39",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e2646b98-0d73-45a2-8b8b-0780b4b8c090",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "94a92523-d7ac-4da3-b713-df0001da6d1d",
        "cursor": {
          "ref": "4d37f818-066d-45c4-b84a-3f7a521a4148",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4f5018a1-9606-4ff6-9f90-dd201c8489b8"
        },
        "item": {
          "id": "94a92523-d7ac-4da3-b713-df0001da6d1d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fc32be1f-785d-4c46-adc1-7f0f128b190c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177fd22d-b170-4954-9600-0ff77dde7aaa",
        "cursor": {
          "ref": "ab77d1be-db40-4afa-afff-5970ce48050c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "96699c84-a168-466b-bd82-53e101b2e1b9"
        },
        "item": {
          "id": "177fd22d-b170-4954-9600-0ff77dde7aaa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c4338629-5403-4d1e-a4ed-b35b6460bad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7a3f21-5d03-4732-9789-e3c434cc0457",
        "cursor": {
          "ref": "5d71a26a-e8e1-43c4-a6e0-19cbd9c6b4b1",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40d5180b-f8fb-486a-864c-9eb33f90f6a8"
        },
        "item": {
          "id": "0b7a3f21-5d03-4732-9789-e3c434cc0457",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9e79d201-b4e0-4d51-a76f-aedc86a23c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2eb63a-1df6-4357-a268-7089d0af227c",
        "cursor": {
          "ref": "a1c523a5-4cf1-41a7-8000-7dc821ce6a4a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4fe5af34-8306-469d-a75d-f67e3e24b6ed"
        },
        "item": {
          "id": "7a2eb63a-1df6-4357-a268-7089d0af227c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "145d8db7-ba4c-43b8-a989-95041b842398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be292427-6264-4aa2-9f21-6f502e06d1ea",
        "cursor": {
          "ref": "b10d11b9-69ca-426b-895d-4fe833c53546",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "22518913-24fb-4b4c-a308-8f54bc790d8a"
        },
        "item": {
          "id": "be292427-6264-4aa2-9f21-6f502e06d1ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "83d0fd0e-3546-4915-a022-7ba5260838e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61d2183-e94b-4505-9947-85f1acc35edc",
        "cursor": {
          "ref": "a6ff011e-434c-408f-be50-86dbc4880a84",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d76e63b8-860a-41bc-a86f-060398c60814"
        },
        "item": {
          "id": "e61d2183-e94b-4505-9947-85f1acc35edc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "833dfb20-c4d2-4c13-9154-104f61d7c314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54766fe1-0aaa-4062-956b-162de6ab3631",
        "cursor": {
          "ref": "2b87e02f-eebf-4e04-83f0-172e0f5ea62f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e246aea5-400a-4c37-8c89-71b7e7e618f2"
        },
        "item": {
          "id": "54766fe1-0aaa-4062-956b-162de6ab3631",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "df940b82-a3cd-42a9-a809-45d75eb52433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b127df6a-8c1b-4cc9-b2e1-8da647f9c0ed",
        "cursor": {
          "ref": "27d95f49-7278-4fff-9f4f-fb7aeac935f8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f70f0753-acbb-4100-954f-a1ae19f1a469"
        },
        "item": {
          "id": "b127df6a-8c1b-4cc9-b2e1-8da647f9c0ed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dc041de8-3b95-439c-a2cb-5ceb945ea193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf99d1-f02e-45f3-8fcc-b8729c69d0cd",
        "cursor": {
          "ref": "440b200a-4036-442b-892d-54b6b008321a",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8cd4f752-1cbe-4e77-9bb7-c3c7742f2899"
        },
        "item": {
          "id": "d8bf99d1-f02e-45f3-8fcc-b8729c69d0cd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c3e4a088-8de7-4c18-8a55-f8dfa7710973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697113d5-f440-41dd-9168-7de8eb02baa3",
        "cursor": {
          "ref": "2faf57f7-0007-45c9-89bd-4e1faf62ad72",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f618cbcf-fe22-460a-a25e-48df22751345"
        },
        "item": {
          "id": "697113d5-f440-41dd-9168-7de8eb02baa3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7ca407d5-eb1b-415f-88cc-1781ff374307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf08824-c5ca-4cfe-98df-7918ffc3a839",
        "cursor": {
          "ref": "b3218c38-4929-4687-b039-5e757f6da826",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd57984b-75d8-43f7-8591-efcdb9470273"
        },
        "item": {
          "id": "ecf08824-c5ca-4cfe-98df-7918ffc3a839",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "28736373-546f-4a7d-aa10-853ca9ac4637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f591f8-4e72-40c1-8f49-17de088cd26b",
        "cursor": {
          "ref": "eaf409ff-b69d-4699-8759-14b9dae2ee24",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "af778e3e-f3f4-4e48-83ea-f5d7d62f44d6"
        },
        "item": {
          "id": "c0f591f8-4e72-40c1-8f49-17de088cd26b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f80b4799-fa37-4029-bb81-b00bc02fb92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c0e53e-0f6b-40b2-bbca-51f92eaa16d1",
        "cursor": {
          "ref": "086cd0f1-d41d-4898-93c3-81026a785001",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9314ad7b-0e36-4636-85c5-3dd3818e657d"
        },
        "item": {
          "id": "f9c0e53e-0f6b-40b2-bbca-51f92eaa16d1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83536de7-2bf7-48e4-b22d-f9a026f12142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ad9f52-de6e-431b-8413-76e4136474e2",
        "cursor": {
          "ref": "4ad2726e-9ede-4eae-bf21-77e9fd19622e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d59ed4c5-1857-41ac-b4d4-48dc4018fccc"
        },
        "item": {
          "id": "22ad9f52-de6e-431b-8413-76e4136474e2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "26a173c4-0dd6-4d79-a9bf-3e6bbbb3af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17faee8a-7c70-48ce-b106-b668e42371df",
        "cursor": {
          "ref": "95b48e5f-718f-42da-b40b-c588b5d7f636",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "def8b4eb-c8f3-4b45-a5d9-93e1048c90c4"
        },
        "item": {
          "id": "17faee8a-7c70-48ce-b106-b668e42371df",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e031efb7-bbc0-47f7-9a31-535180efc443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09943748-aaa8-463e-9e2d-1dceaa77d03d",
        "cursor": {
          "ref": "6d25d719-0afe-48e8-8d7a-211ee4af22aa",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "37df553a-e44b-4d82-b1ec-1f43337319bb"
        },
        "item": {
          "id": "09943748-aaa8-463e-9e2d-1dceaa77d03d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d61a48e5-b5d1-4dd3-b646-bd55e19935e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a8682-6a11-4c5e-981e-17c8ff38d22a",
        "cursor": {
          "ref": "66904845-3dbf-4efc-8cdb-7f0684540539",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b60e38cd-8419-497b-8007-69b7f0fd9641"
        },
        "item": {
          "id": "979a8682-6a11-4c5e-981e-17c8ff38d22a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e46faa1-53e8-45e7-81d7-8a1b239f1bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b003c5-2b07-4855-98b3-5d6a86e47f85",
        "cursor": {
          "ref": "6b031f08-0a97-4576-8516-698392323369",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1ace9fda-f95f-4383-abd3-61a6095eb3d3"
        },
        "item": {
          "id": "32b003c5-2b07-4855-98b3-5d6a86e47f85",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "93765220-f31b-4192-a945-01f393d3c48d",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3909696c-a883-44b9-a66b-2bd3fd287f17",
        "cursor": {
          "ref": "68b766a2-8d08-4507-a6f2-4f130a646b57",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "df64620f-a05e-4c75-b16f-57ff8ac8f63a"
        },
        "item": {
          "id": "3909696c-a883-44b9-a66b-2bd3fd287f17",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b21c71ea-b6d5-4718-8c46-7aec007e63ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844b0fed-a603-4221-a2c7-de2f2719ecf6",
        "cursor": {
          "ref": "c768b6ce-7543-4f1a-9c8f-2855f61daaa7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3a453c86-a739-4bb1-9be5-a07499010736"
        },
        "item": {
          "id": "844b0fed-a603-4221-a2c7-de2f2719ecf6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5df27f98-8b1d-4918-9a79-00e7c41fc75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa868780-2519-4599-9cb9-9785d8ccc4f2",
        "cursor": {
          "ref": "7ab5af66-f943-4fe4-a4cb-556414e0d240",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c421ef0d-1587-4cd8-a377-04863eff6c57"
        },
        "item": {
          "id": "aa868780-2519-4599-9cb9-9785d8ccc4f2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0a98daf2-13ce-457e-8154-232de1b03145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd87f630-c185-47a7-aa37-1a2ebe15a4b1",
        "cursor": {
          "ref": "5ba4e92c-2c01-4fb0-b88b-ac53f5e985cc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cfcb0a32-018d-4139-a231-a33174c496c7"
        },
        "item": {
          "id": "cd87f630-c185-47a7-aa37-1a2ebe15a4b1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "73ce5119-866f-4843-a8e6-fed21d49038d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbfcbed-01b2-459f-9ba8-37a455338056",
        "cursor": {
          "ref": "d51cd049-c46e-4390-8590-d15dd71b9d90",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d08631f4-389e-4fb5-9385-943f39526aae"
        },
        "item": {
          "id": "cbbfcbed-01b2-459f-9ba8-37a455338056",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5905da8d-5778-4739-ab8a-b66a95f046bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf6c73-fc36-43a1-a58e-9f200824ec29",
        "cursor": {
          "ref": "9bc034af-8c29-4ac4-88a1-d8674d1b181f",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "effa6417-d05e-4ce0-bade-56e56b4196ad"
        },
        "item": {
          "id": "edbf6c73-fc36-43a1-a58e-9f200824ec29",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "016a50e7-c5e7-4a33-a61d-48b81c32fe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d6fa1-fd79-4743-816c-6c1bd90a4488",
        "cursor": {
          "ref": "cb81deb4-cd97-4c20-a826-d9196f802df6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b788b8b9-0156-4ee6-adcf-fcb430be56a3"
        },
        "item": {
          "id": "6b6d6fa1-fd79-4743-816c-6c1bd90a4488",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2d0cb759-ed1a-4339-b52c-5a3c2c0bd07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbc430b-a8b2-48e1-94dc-11024af29a6f",
        "cursor": {
          "ref": "a86a4a78-c6c4-4808-93b0-1cf6b90b58e1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "836350a2-6999-4506-82c2-460e07a5e666"
        },
        "item": {
          "id": "9fbc430b-a8b2-48e1-94dc-11024af29a6f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a3d5944e-84bd-4c16-9fec-89e2e25f17ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb77ace-4e3a-4512-8483-15d833cf0fe5",
        "cursor": {
          "ref": "c1bf415b-516a-4a93-a82a-fd5b949b8df3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a9fde462-5745-46bf-bea6-a161d0a311f1"
        },
        "item": {
          "id": "4cb77ace-4e3a-4512-8483-15d833cf0fe5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d9731643-1daf-4678-9497-a3533ef315c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea744bb-c840-415c-a7e1-575d11643d6a",
        "cursor": {
          "ref": "f6ec0b16-aa3e-4a8d-b510-b477254b2ebd",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "70343cf1-c07f-486f-b9dc-ea9dd03b2b18"
        },
        "item": {
          "id": "2ea744bb-c840-415c-a7e1-575d11643d6a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ea2f3db5-df5d-4e1e-82bc-c3542b3a44b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4405695e-524d-46c3-80fa-c16f2b6d0fb5",
        "cursor": {
          "ref": "b6695005-fe40-417e-bd66-4102aa86d82e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e61ad36b-aaac-458c-85c8-3a75895a6500"
        },
        "item": {
          "id": "4405695e-524d-46c3-80fa-c16f2b6d0fb5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8534cb6f-14ff-4347-8741-fbb17a2d0d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6bcec7-30f7-4c42-9fe9-af9707288df9",
        "cursor": {
          "ref": "1628e3b0-a7dc-4350-b7fa-0e1370edb0ae",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "43c8b496-7467-40cc-9460-1aabcf0811d1"
        },
        "item": {
          "id": "ff6bcec7-30f7-4c42-9fe9-af9707288df9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "be67f29e-1805-4cb8-ac08-846988fdb5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d91bd7-b8a2-4c4d-8014-61874e94fb4a",
        "cursor": {
          "ref": "d01f4176-b2d4-4772-869b-f7631f233562",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0dc3ba80-d43f-49d8-8927-11235d9a44a0"
        },
        "item": {
          "id": "f4d91bd7-b8a2-4c4d-8014-61874e94fb4a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dac4e19b-1c82-4b85-8606-14fd8b7acf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e51cfa-78aa-4b88-85ad-aab274e3bd26",
        "cursor": {
          "ref": "e6f1882a-8abb-4702-bbfb-9282143dd23c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8174fd65-4e47-4993-bc65-39394b33d040"
        },
        "item": {
          "id": "46e51cfa-78aa-4b88-85ad-aab274e3bd26",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "550e0c09-f86a-4f3b-b4eb-89a8bed4040d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d9da0b-b861-4161-a274-f0846213dc75",
        "cursor": {
          "ref": "e194e9a9-c3c2-4daa-bbf9-adb79e4edf21",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "551d5e2b-579b-4016-a302-9dcccece3f09"
        },
        "item": {
          "id": "d8d9da0b-b861-4161-a274-f0846213dc75",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "56b6d80e-27ef-4bef-b81c-42e18aa52b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3eb9bd-b2c9-4902-b0a3-e1038eeb554a",
        "cursor": {
          "ref": "74a0b7af-cced-4d1b-a858-5ae69f48cd0e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "087faabd-7478-4e59-b0c4-9816bfbcd8ab"
        },
        "item": {
          "id": "0b3eb9bd-b2c9-4902-b0a3-e1038eeb554a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7db75726-1a89-4b74-8f7d-fb01abd87909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb564b-8946-499c-8de1-eec3248e39b1",
        "cursor": {
          "ref": "d45df489-ab69-41ad-9cac-df1ad36a89a9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cadbfdc5-2267-43b1-b358-cb482175ec7a"
        },
        "item": {
          "id": "a5bb564b-8946-499c-8de1-eec3248e39b1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9283fbc2-7ee0-4d5e-8258-d5d81c66a0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98159ef2-d784-460a-8f34-0dc518e49e43",
        "cursor": {
          "ref": "dddc280f-8a81-449f-8482-29f587be0f7a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3c6ee5a0-f870-477c-af8b-3a0e06ee8935"
        },
        "item": {
          "id": "98159ef2-d784-460a-8f34-0dc518e49e43",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3beb64c2-b613-4933-9dbe-77797a478141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edb6868-0bde-4f7c-966b-616d109244bf",
        "cursor": {
          "ref": "d28abe3e-7784-4f8c-913f-2eefc64a0b0f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e0ade6a9-9339-4ab7-a068-4182677cb163"
        },
        "item": {
          "id": "7edb6868-0bde-4f7c-966b-616d109244bf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "63d04a5d-479f-4929-88de-bdc5f1f5e4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c533c-11e9-4097-ae6f-7bab6780a775",
        "cursor": {
          "ref": "55d6fad8-4cc6-4c60-a64c-6b6cbc88369c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6c98acf1-fc56-4abd-86d1-8bfc8dfc21e3"
        },
        "item": {
          "id": "b53c533c-11e9-4097-ae6f-7bab6780a775",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4d4cf335-54d2-4d55-8511-50dc96de5adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c473551-5c08-487b-a227-15720ef83912",
        "cursor": {
          "ref": "e670b410-4863-4e83-9db9-d85eea826218",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76c1ddd5-5ebf-4811-ac82-729458674b05"
        },
        "item": {
          "id": "2c473551-5c08-487b-a227-15720ef83912",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b5b9e1d9-4f2d-482c-aa58-6d10666b0e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3dbfc5-cab3-40d4-989b-8bb8ef475eea",
        "cursor": {
          "ref": "678d1e43-504a-428f-8881-a6e7695945ab",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fbda2fc6-5086-49f6-845c-2b66cce82294"
        },
        "item": {
          "id": "2a3dbfc5-cab3-40d4-989b-8bb8ef475eea",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "98c79655-e745-44e6-ad5a-795af83e07bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d576a4-17be-4974-ace5-1c90ee1016b9",
        "cursor": {
          "ref": "cdfa6c30-ee4d-4024-a288-9ded512c98c2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2288d3a3-e7e7-49f1-8e5e-2ff08d8f9b0e"
        },
        "item": {
          "id": "b5d576a4-17be-4974-ace5-1c90ee1016b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e0aa7616-f40f-4c88-8f66-7c1011bded23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22107be-284d-4b13-ad50-dbc402b7da70",
        "cursor": {
          "ref": "6b9cdc09-412f-46a2-a4a2-02b6b3071db4",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7997a5e7-f2ca-46f5-afdc-00fac490af94"
        },
        "item": {
          "id": "b22107be-284d-4b13-ad50-dbc402b7da70",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ac93bd91-60ad-43a9-bd9b-0ee03b7ea27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2230df9e-5673-4127-8ae1-9d2c99d79e7c",
        "cursor": {
          "ref": "9feba091-1043-45e2-a369-b38487610fed",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0bb00ec4-576e-48e4-8810-b6be8ed0791c"
        },
        "item": {
          "id": "2230df9e-5673-4127-8ae1-9d2c99d79e7c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "05659e34-a3b3-4c7b-8d67-b95c40fe4184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7ce2d8-86b7-4a2a-ac4c-b00c06629cb1",
        "cursor": {
          "ref": "68de02d8-98b2-4403-ba29-1ee7a8aba026",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3279fede-c853-4be0-9873-e6412f076b71"
        },
        "item": {
          "id": "2d7ce2d8-86b7-4a2a-ac4c-b00c06629cb1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2eec19cf-c314-48da-8710-a3e344e9cb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c37780-6f9c-4901-9c21-c1c4ad3c87e3",
        "cursor": {
          "ref": "71d03962-97cf-4626-a153-77f2fabeb398",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "809d0ba0-77db-4ab8-9b2a-99c337844451"
        },
        "item": {
          "id": "f8c37780-6f9c-4901-9c21-c1c4ad3c87e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6fda5e83-64e4-4baf-bb43-b622f8b222c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51afce9b-3ba7-4933-b98d-0a95b75af7f7",
        "cursor": {
          "ref": "28b26b1d-24c7-4c19-9bf7-6de43a238a1c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6a9949bb-84f4-4506-b04b-45a61bbc40b9"
        },
        "item": {
          "id": "51afce9b-3ba7-4933-b98d-0a95b75af7f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99cbb986-8fc9-47f0-8ebb-95250822257b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84415c-860e-4233-9940-caefcaa49624",
        "cursor": {
          "ref": "d5f6321d-4b97-4dac-916c-aa0665c247ca",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "951a3328-cbe7-4e2a-8136-b0bc80134024"
        },
        "item": {
          "id": "db84415c-860e-4233-9940-caefcaa49624",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2833f769-44db-48ce-9085-30f1d72c1963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef85c19-e94e-4b33-aa75-0a39c3b6aa12",
        "cursor": {
          "ref": "4aa4a853-8564-485f-925b-876530e9d519",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a56c4c21-71e4-4569-9174-0ca19c42d1dd"
        },
        "item": {
          "id": "aef85c19-e94e-4b33-aa75-0a39c3b6aa12",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "614d9a5f-96a5-44fb-be2f-dbce3c7143cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807a6bf5-f9d7-4369-972e-0259a9b24325",
        "cursor": {
          "ref": "67aa9442-daff-4372-921e-cf12817b044e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea37c8d8-c99a-4f09-aeeb-fa93983dcde9"
        },
        "item": {
          "id": "807a6bf5-f9d7-4369-972e-0259a9b24325",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b891a92e-3979-49b5-965f-569b005fafb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b29324-416c-465b-b7fa-f1121ec87e9c",
        "cursor": {
          "ref": "0e977fbf-0d8a-4c3b-b87a-16c4e7005fc9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d63e782f-9b6b-4b3a-8a0a-abfae63ab307"
        },
        "item": {
          "id": "e9b29324-416c-465b-b7fa-f1121ec87e9c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2da9a9ce-7f5c-441e-b47c-b3e333c527f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4d610-b170-4777-8b8e-0843f33a66f5",
        "cursor": {
          "ref": "3e444604-8157-4df0-9a5b-bce3409ad4bb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b6f97f33-df37-43da-a0b7-fd33ce122b45"
        },
        "item": {
          "id": "5fd4d610-b170-4777-8b8e-0843f33a66f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4050e2ac-471e-48bd-8a9f-8b0bbbc606f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4005458b-eb74-4fb2-8547-4b8771f52641",
        "cursor": {
          "ref": "b3ccb49e-ae9a-4b10-91d4-d07a68db0f12",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a789eaef-3e78-4274-bfb6-2fab86b2e2da"
        },
        "item": {
          "id": "4005458b-eb74-4fb2-8547-4b8771f52641",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3f6ef482-782c-4ebb-8572-7d4c4a0760d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5903785-3364-4fa7-baad-d03b1b6964f6",
        "cursor": {
          "ref": "fbdb254e-6f70-4a8c-98b4-9d2d5ccb5a9f",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3b8af5c3-ca6e-4167-bb86-5c52c417d990"
        },
        "item": {
          "id": "e5903785-3364-4fa7-baad-d03b1b6964f6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7904f5e0-28b9-40a4-a86b-2081396dad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89115177-154d-44fa-a990-6dde193a68dc",
        "cursor": {
          "ref": "20f9b440-91c2-4106-9d6a-bc0f26c4f086",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "833f890c-1b22-40c9-a608-734d6841c845"
        },
        "item": {
          "id": "89115177-154d-44fa-a990-6dde193a68dc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5f02094d-7dd2-4518-a68c-aebff9cdd7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1a3fbd-8bf9-4751-b3f7-cc9b309c9eb7",
        "cursor": {
          "ref": "d798415b-5097-44b4-a9e9-681c849986c6",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7b2fc804-9c4c-4500-8192-24779ac1f10d"
        },
        "item": {
          "id": "ad1a3fbd-8bf9-4751-b3f7-cc9b309c9eb7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c39112e8-a866-42c8-bfbb-b5f99e1320c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f76f31-5e09-40f4-8c91-cb7119623fa7",
        "cursor": {
          "ref": "5be19fba-de4d-4697-a39f-5f03868a0886",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0827a0e8-1c51-4ba1-aa02-48429261c900"
        },
        "item": {
          "id": "70f76f31-5e09-40f4-8c91-cb7119623fa7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "480cef2b-9e78-4db6-b8b0-29176675ebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5995ef35-32e8-45e0-b1ca-39b2bc724b99",
        "cursor": {
          "ref": "e5df65be-7bb2-423d-be8b-f503634b8563",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01cab958-b27a-4488-bfa3-d462e0c656dc"
        },
        "item": {
          "id": "5995ef35-32e8-45e0-b1ca-39b2bc724b99",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f4f6ebd-dc50-4b10-b7db-ba4f5b226ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d8da93-62bc-415d-8624-646b86a3a0d6",
        "cursor": {
          "ref": "01ca7dd2-3675-4ec3-a250-16cbbeb5182c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d09b4834-33e3-416a-ac82-e448475d7ce8"
        },
        "item": {
          "id": "72d8da93-62bc-415d-8624-646b86a3a0d6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d74775e7-2602-460d-a552-e837e7c3ca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c0adca-0c49-4b62-a70a-7fc549cfae4b",
        "cursor": {
          "ref": "c303adcc-c238-4793-9750-a3661b1ed28f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bbec3c52-3689-4289-8942-91e398256db3"
        },
        "item": {
          "id": "d3c0adca-0c49-4b62-a70a-7fc549cfae4b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "526cb419-70f2-48f5-8aa1-a9574ce8802e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7263ec-eb33-4f46-9597-6323efc58cf5",
        "cursor": {
          "ref": "8573290b-6efb-4cb1-8ddb-c1091ccdfb2a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bba775f4-5bdc-4a95-ad12-3342602aa494"
        },
        "item": {
          "id": "6d7263ec-eb33-4f46-9597-6323efc58cf5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4caff2f7-d4c3-444e-a829-ffd44ebbe40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a0d81c-d6d1-42e0-93aa-b5436aa2307a",
        "cursor": {
          "ref": "0b6dd6c0-bed2-43e5-bbe4-57fe6ef6ea1d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c8a128d5-1880-4783-b7a3-2e7bb9cc05b8"
        },
        "item": {
          "id": "24a0d81c-d6d1-42e0-93aa-b5436aa2307a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1a9e5be9-4bc5-4ce5-8a7b-92bbe7bb6f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf26ff9-1a08-4495-b815-b26ecc8cd6a4",
        "cursor": {
          "ref": "917c7e40-aeeb-4fa5-8b52-6756ec2d2b09",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f6d97b00-a211-4b91-bd92-385362f8e37f"
        },
        "item": {
          "id": "0bf26ff9-1a08-4495-b815-b26ecc8cd6a4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a9186292-6f79-4cfd-879d-b3af3b7d66f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4fcea0-0933-4a7b-80c9-2a76b212daa5",
        "cursor": {
          "ref": "1c55aad3-fb1f-451d-9105-447038c9e2df",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d3cd8f1f-1bbb-442f-bc02-1dd5019a0220"
        },
        "item": {
          "id": "ca4fcea0-0933-4a7b-80c9-2a76b212daa5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5102c949-9408-46e1-893e-91c3cdbcbd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6268a74d-23e1-4e11-b81a-f7b757b86497",
        "cursor": {
          "ref": "37b5599b-b783-411e-840c-0a752bf92f06",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6f10309d-819e-4b9f-b1fb-768a1e72d0a1"
        },
        "item": {
          "id": "6268a74d-23e1-4e11-b81a-f7b757b86497",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6713eb44-fdc1-4413-9267-862fbb025800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c152911-e428-408c-94f3-8eaba113be31",
        "cursor": {
          "ref": "5a4fa34c-6c9f-4356-9d93-e809a275bc2e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f1e1a176-fd08-4733-abdb-bde6c54fb30c"
        },
        "item": {
          "id": "2c152911-e428-408c-94f3-8eaba113be31",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "19380857-b3db-461e-90c4-64daa2ce0a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35550702-a9a7-46d6-8080-158647256a87",
        "cursor": {
          "ref": "6ae4096c-f99a-4ba2-9b30-69fc3853ddf3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d794111-ffe8-4a1e-afed-0ddf61f1676a"
        },
        "item": {
          "id": "35550702-a9a7-46d6-8080-158647256a87",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "435c8e95-b411-4e54-8304-b347a884ab92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfff57a4-2c05-4919-99f6-58842a497643",
        "cursor": {
          "ref": "47c0609f-ab88-45e0-9b46-cd99fd44fd20",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "04eb1ce7-df19-47b7-ad53-f925e41bc356"
        },
        "item": {
          "id": "bfff57a4-2c05-4919-99f6-58842a497643",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "892d9133-1875-4255-a5dc-45a77f8a1463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e0da99-9c04-40e5-aa54-61df2a6cbea6",
        "cursor": {
          "ref": "2a13b64c-5ac3-40b8-b380-0730d44c3d59",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7410f3cc-3af5-42c3-97de-9974709de721"
        },
        "item": {
          "id": "c6e0da99-9c04-40e5-aa54-61df2a6cbea6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f6f57099-3a9b-407c-952d-3e68b62c3784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd41a81-06f5-4f72-978c-c96cf4583d63",
        "cursor": {
          "ref": "7086e061-dae2-4cd5-bff5-6f806f811599",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "da84b27c-edda-4277-afb7-145735b9c7bb"
        },
        "item": {
          "id": "5bd41a81-06f5-4f72-978c-c96cf4583d63",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "47202375-d474-4c11-904f-9b1e01a6f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccb516d-c718-4094-abe9-c0e66cd32b18",
        "cursor": {
          "ref": "260e6e4a-9da4-4ba9-afde-599b2212b041",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "21bd086e-ff87-4757-b467-649df00ade43"
        },
        "item": {
          "id": "7ccb516d-c718-4094-abe9-c0e66cd32b18",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0cfb3914-cd1b-4895-ad7f-71f95e991536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dfcf21-0204-4dfc-a912-14f7cf3a11e7",
        "cursor": {
          "ref": "337d0ace-4f56-4116-b0e1-11934ca82f85",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc8007c2-9292-4e8f-b80f-ccbec68cd079"
        },
        "item": {
          "id": "89dfcf21-0204-4dfc-a912-14f7cf3a11e7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "44d736ad-7c6b-4f83-8e89-8696d520e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ee4ad-bbdf-4392-8fd4-61294471f44f",
        "cursor": {
          "ref": "27160c1e-1e3e-4c7a-859b-e95b6539d775",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d6267800-801a-4d46-9d2c-9f8a7dde8f48"
        },
        "item": {
          "id": "e48ee4ad-bbdf-4392-8fd4-61294471f44f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "790ef367-7163-48e3-b982-cdb6a9c8356d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d098e-b2ce-4699-a2b8-866be72be82a",
        "cursor": {
          "ref": "d5c7fd38-360a-4ff6-aa91-6372855256f6",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8f73616c-e88c-429b-a7af-8a2456bca21c"
        },
        "item": {
          "id": "390d098e-b2ce-4699-a2b8-866be72be82a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "48ef75ff-1ec6-4a22-a7ec-0332992a148c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a7733c-b07d-4b94-b579-c3ce611741ee",
        "cursor": {
          "ref": "c3ad8d73-7def-4c32-82f6-ebf7a4752512",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "f3a18d35-26be-4b51-b167-5eb84f1eab41"
        },
        "item": {
          "id": "56a7733c-b07d-4b94-b579-c3ce611741ee",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b470e224-a89f-46dc-9f2d-8654d3af3fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1460a883-759c-47fa-8349-e33de36fe33b",
        "cursor": {
          "ref": "02e4a203-f605-4fa8-85ef-858829bd37e8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "85add724-3f7b-45ff-abbd-ca4c8b23b410"
        },
        "item": {
          "id": "1460a883-759c-47fa-8349-e33de36fe33b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "17f1f15f-0580-40ba-b2fe-081e80f4815c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff4d54f-ef2b-4135-9088-7d0db22c9f64",
        "cursor": {
          "ref": "d43a7700-e598-4024-9ed0-da32ab4bec60",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ded722c8-c39e-4d8e-8731-74aaf802c26f"
        },
        "item": {
          "id": "3ff4d54f-ef2b-4135-9088-7d0db22c9f64",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6a7ead37-500f-488b-b126-5b5fb81181e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c3a1d-ec1b-411e-aaa4-a23fed802f03",
        "cursor": {
          "ref": "5658b6bb-36d9-41af-a210-216a3ca2424e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "129b8a0f-7c44-401c-9979-564e9040fb0e"
        },
        "item": {
          "id": "f61c3a1d-ec1b-411e-aaa4-a23fed802f03",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b032edc-f5b8-4b82-bf89-42de2e740a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e1578b-caed-4c5e-94a1-eca4c84a21fc",
        "cursor": {
          "ref": "ec443c8e-2bc4-4f52-80a1-684a194e7f0d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eafff1ba-c2cb-4fc9-937d-5f60111c404b"
        },
        "item": {
          "id": "81e1578b-caed-4c5e-94a1-eca4c84a21fc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8469fab8-890b-43f8-aed8-3b7ec2ef03e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb5daf2-7285-4616-a567-8cdc61e02ad0",
        "cursor": {
          "ref": "f583298b-54e4-4317-936a-7bcb4361f1c1",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2fe3128c-de3b-4ef4-8b78-35b1a493eeb6"
        },
        "item": {
          "id": "5eb5daf2-7285-4616-a567-8cdc61e02ad0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a3f782e1-79bc-4751-88cd-91e655ce3be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8430f76a-fa92-45bc-9daf-983c5c4323fe",
        "cursor": {
          "ref": "80ff7a91-11a2-49d6-a9ef-073228d744f5",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a49819d0-2de6-4c5f-aa3d-7092b724c693"
        },
        "item": {
          "id": "8430f76a-fa92-45bc-9daf-983c5c4323fe",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cffccd00-1477-4c5a-a19c-32a3c0f57b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2395085-cace-42ee-8bd6-55e7ffa06c85",
        "cursor": {
          "ref": "3342922d-d0f2-48af-8d31-54439f287476",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "20d1bf53-a133-4ef5-ba69-083ab31fee8d"
        },
        "item": {
          "id": "a2395085-cace-42ee-8bd6-55e7ffa06c85",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cb2e45bb-de3b-42e8-a3b0-99c3b97767c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff11c962-c2b5-4224-99d8-05e76ba39e6c",
        "cursor": {
          "ref": "2a4b0b14-dfa7-4170-bc2e-523b06602830",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "abfc01a3-624f-4ef6-ab47-6cf2b614cb68"
        },
        "item": {
          "id": "ff11c962-c2b5-4224-99d8-05e76ba39e6c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5488c1ff-890a-4665-923b-67a028936a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fb9371-a31b-42f5-a1ea-1c9e33487000",
        "cursor": {
          "ref": "eeea327c-4a91-4b65-9582-ccb3e1277df3",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c2e22900-57c0-4eb4-a91a-bbcbd7588c38"
        },
        "item": {
          "id": "27fb9371-a31b-42f5-a1ea-1c9e33487000",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d58e6a9b-c03f-4938-810c-53137160c7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be1b8bc-6ffe-487a-ac2e-f03d92a5144d",
        "cursor": {
          "ref": "dc3d31e3-9f84-49b5-9e3f-f94fe764cbbd",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6cbae406-566e-4f76-a70e-643050063f30"
        },
        "item": {
          "id": "3be1b8bc-6ffe-487a-ac2e-f03d92a5144d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "06ebfe5c-f8a1-470d-8ac8-1169877c0b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570059b8-0e5f-4d22-9579-d7f59622411f",
        "cursor": {
          "ref": "1e20ddf3-28da-4ff6-bb31-a40bd6fe966d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a706488e-1337-44b4-af5f-d5e258b9fad9"
        },
        "item": {
          "id": "570059b8-0e5f-4d22-9579-d7f59622411f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "57fae19b-88f6-49ef-971f-06b0e8727ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60734aac-9bd9-4460-8804-f220602c9b62",
        "cursor": {
          "ref": "0cb21421-5325-4feb-8bdd-af26c80e5d73",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "36c9022b-4a5a-47f8-b64d-bd5dfde7185c"
        },
        "item": {
          "id": "60734aac-9bd9-4460-8804-f220602c9b62",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b4bd744-0d9f-47e5-8229-f72dcc1b41cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a2ab01-b2d8-4878-af14-e60399e1031c",
        "cursor": {
          "ref": "60995a2e-a131-46a3-a97c-29c5a6b46b6e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a475d315-67fb-4d17-b73c-06f514f1a214"
        },
        "item": {
          "id": "a1a2ab01-b2d8-4878-af14-e60399e1031c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "736d03cd-a3ba-4e6d-b8af-4d6ae58a388f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6685a9a1-9e0c-4888-ba79-f5c9e1a3e2a8",
        "cursor": {
          "ref": "74e6a7b2-1855-4f17-81f0-b315b2ebcc83",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c26f02ad-a48e-45b4-812c-ba02d32fac5c"
        },
        "item": {
          "id": "6685a9a1-9e0c-4888-ba79-f5c9e1a3e2a8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6ccf76c8-008d-47e7-9527-35754b184419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea794b2-7dca-4981-9314-a5e49489ddc7",
        "cursor": {
          "ref": "33113e24-e46f-4698-af37-728a352c442c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ce71237-8a32-4221-9e59-af5dc9d5f18e"
        },
        "item": {
          "id": "0ea794b2-7dca-4981-9314-a5e49489ddc7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "72d93e52-c5df-4aa6-b301-212e8002281d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1a5df8-b106-4e0c-ae71-4faa3357d089",
        "cursor": {
          "ref": "54523dc1-5719-4c9d-92d6-258a84c08bd6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "eb14c436-31a8-4eff-a7d6-1d67b677baba"
        },
        "item": {
          "id": "ba1a5df8-b106-4e0c-ae71-4faa3357d089",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "9e8f0cc9-b01d-43ba-9bfb-1e3c359a9aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a85c11-fde7-436a-bb45-80ab05fdc86a",
        "cursor": {
          "ref": "e12d6ba1-7729-4fc8-b1ae-ad7f050bf7b3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e339230e-808c-4f79-8b94-a663af584761"
        },
        "item": {
          "id": "44a85c11-fde7-436a-bb45-80ab05fdc86a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f14edc7b-35a9-4975-a870-db19afcdd5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758d2b30-d947-4adb-b669-d460392ec877",
        "cursor": {
          "ref": "ba09babd-d8d6-4a88-baab-c32566ad59e7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d300ea4a-b653-409a-bce5-b3c78411766f"
        },
        "item": {
          "id": "758d2b30-d947-4adb-b669-d460392ec877",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ff2f3378-6dd4-4545-9c1c-59d32d39fa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac8434-3382-4937-acae-5fd5db41fb45",
        "cursor": {
          "ref": "f0bb1021-df9e-44cc-8c02-1d16964b967f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "653266b1-1cdb-419a-ba21-08b52c161fa2"
        },
        "item": {
          "id": "a9ac8434-3382-4937-acae-5fd5db41fb45",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0ba404c8-a1ee-4c78-89ac-d3ba45707496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239cfde1-ab44-4084-b06f-da12418d89fa",
        "cursor": {
          "ref": "091a9296-7135-4100-879f-c5f9e6db19eb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a7924135-7734-40ae-8a3e-8e9da20304de"
        },
        "item": {
          "id": "239cfde1-ab44-4084-b06f-da12418d89fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ec8e90cf-55bc-446b-a186-bb7af4377419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80de059a-68a0-44cf-9f66-13bd8834b916",
        "cursor": {
          "ref": "42f6230d-6bba-42a3-9821-b7748e426ac1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "87312c9d-0aaf-4f29-be29-8f29605c5d78"
        },
        "item": {
          "id": "80de059a-68a0-44cf-9f66-13bd8834b916",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f7101a85-00ea-4f9a-8d27-ee571f173a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2d5334-b019-4531-8b60-dd9a06bc1b42",
        "cursor": {
          "ref": "53df88b0-7c17-45cb-ac42-7b75cbcd5ac2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a53b1595-eff9-4109-8f1f-7e08ff8b8268"
        },
        "item": {
          "id": "8c2d5334-b019-4531-8b60-dd9a06bc1b42",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0ca0f481-5b54-4258-982f-aca846a262c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368cfe6f-a71d-4ff9-8562-f586a58a5b7c",
        "cursor": {
          "ref": "70b231b7-3f3f-47d4-8ad1-d92cb4109817",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "04ce10a5-e766-4697-ae06-8a0f5781fb9f"
        },
        "item": {
          "id": "368cfe6f-a71d-4ff9-8562-f586a58a5b7c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "783af2f8-7c02-47e9-bf1e-5d22e053b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c99e0c-6302-41ac-a54c-70cb31399e25",
        "cursor": {
          "ref": "812e63ad-d0c8-4e3a-8c1e-e918298bf274",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eeca1992-c475-4bd7-86ac-9d746de40656"
        },
        "item": {
          "id": "e9c99e0c-6302-41ac-a54c-70cb31399e25",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "416747b6-66d1-45fd-9baf-580935626fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11517d9c-984e-4db7-889b-b2e01040cf52",
        "cursor": {
          "ref": "1f99befa-7f36-4f6d-9bad-3515bdd57643",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "669b7046-5a69-494a-898a-d39efc30e20d"
        },
        "item": {
          "id": "11517d9c-984e-4db7-889b-b2e01040cf52",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "13a5a2af-d2b9-4a80-a18b-1f0b7063f853",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04141cff-7fa2-4dfb-abc4-a3e22567bc86",
        "cursor": {
          "ref": "cfeb57f4-c8ec-4f70-86bc-6f9d94957058",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d27353ac-f087-408f-8dc8-cf7b0ceefb98"
        },
        "item": {
          "id": "04141cff-7fa2-4dfb-abc4-a3e22567bc86",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2d355a9b-b004-4e42-9dc7-811109a15a75",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11219379-6cf8-44b5-ae80-24e80cd560de",
        "cursor": {
          "ref": "5933e588-e4c0-4aef-9725-4c65c51f6400",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b0467047-ac2d-4dcf-b20f-f9b916a90e21"
        },
        "item": {
          "id": "11219379-6cf8-44b5-ae80-24e80cd560de",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6d2c0d1-5ca9-4db8-9f15-1f7517284306",
          "status": "OK",
          "code": 200,
          "responseTime": 2574,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1015c50-ef8c-4c2b-a9b8-735cfd100919",
        "cursor": {
          "ref": "333d5330-8a47-4cc7-8cca-71e5e4eda0fc",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "87fc0954-cc23-45d9-8a37-10d8a7e1cb75"
        },
        "item": {
          "id": "b1015c50-ef8c-4c2b-a9b8-735cfd100919",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b481f5b5-f613-4eac-b9b1-9281af7f2d55",
          "status": "OK",
          "code": 200,
          "responseTime": 4236,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5422016-68c4-47b5-9aa6-f895c287f249",
        "cursor": {
          "ref": "e697554d-a685-4737-b087-c9012cd25562",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db99fc7f-d9b8-4409-83a9-2abdf11fe393"
        },
        "item": {
          "id": "c5422016-68c4-47b5-9aa6-f895c287f249",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "547dd1c8-675e-4955-b9e5-a106697b814d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5422016-68c4-47b5-9aa6-f895c287f249",
        "cursor": {
          "ref": "e697554d-a685-4737-b087-c9012cd25562",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "db99fc7f-d9b8-4409-83a9-2abdf11fe393"
        },
        "item": {
          "id": "c5422016-68c4-47b5-9aa6-f895c287f249",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "547dd1c8-675e-4955-b9e5-a106697b814d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352925f8-be8a-4315-af10-923c5ab8ceb3",
        "cursor": {
          "ref": "53bdd3a6-be6a-490b-a43f-950e169a0299",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b4c15f02-af04-48a4-8a61-5ba3f20af8fb"
        },
        "item": {
          "id": "352925f8-be8a-4315-af10-923c5ab8ceb3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "52e23537-2e99-4f0f-ac27-6775403e6d5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77d7635-b837-4e07-8882-39f2725c0fa0",
        "cursor": {
          "ref": "dfd95394-1de7-4d95-8129-dc7471fcf5c6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d38ce507-cc11-4dfd-91f8-6087fab6ed29"
        },
        "item": {
          "id": "a77d7635-b837-4e07-8882-39f2725c0fa0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "21e116c6-cc34-4ce8-af21-ecf40910b47e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}