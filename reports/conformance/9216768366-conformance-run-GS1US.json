{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "44c02c96-b0e9-493c-bbc4-e91ba4ccda16",
        "name": "Clear Cache",
        "item": [
          {
            "id": "672aab76-d903-40b4-8a27-1d07de01195c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9284d43-f15b-4dc6-b85f-328545ddf4b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d89c275-46c0-49d3-9e52-1685b2873757"
                }
              }
            ]
          },
          {
            "id": "715a4630-5501-42b5-a2a0-7dee44c25731",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "55925fd3-196c-4b5a-a580-178026d5e485",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a34979f2-96b0-4e03-8610-fa0a9952bf6d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "94b77966-b453-4919-afc7-39b17880fb79",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "78ba6406-d25f-4c15-85dc-34e4fa9eaa8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6ffc71f-de7a-47f4-a866-aac978662fdf",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5dc65a4-6451-43b5-b4a0-0ae579aa2584",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d0c95c5-0db7-4afe-bfc6-2735ae52e52a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52f3eb43-3895-44d4-af73-da51d77212ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e048c86b-e2df-46d9-a261-180aa13ac8c1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a68c50c-464c-4f80-85a8-9d67f71a7648",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "485aad5a-5f67-41ab-ace0-884ed75f1729"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c03a6e1-037b-4290-acb4-e0f4eb38bd2b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bd9d1514-0ab5-45f3-ae6d-d98a4c44c71b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b475a495-1135-47fc-849f-c171cbd4c76c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d7c5b19-82b6-41ae-8dd9-c22aafa03864"
            }
          }
        ]
      },
      {
        "id": "41d28534-efc4-4cc5-9d2e-931ec7f8cbe3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1c039039-1aa0-4521-a8f2-d86d4e96355b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b66d2233-1725-4fd8-b9ba-a9b2ad074e08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ba62964-6144-4914-8bf0-8cc7baa65f60",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17576921-f5cf-4cf3-8d76-96de414bad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90b10535-337d-404b-aed3-eeac0f6917fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a55094c-7c45-41f3-a89b-306b26fe8813",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c878713-fac4-4e4b-a4c8-fd4fa68224f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5562c269-d4e5-4298-84fd-08655b926b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c382a8-9f2c-4c68-bea7-3baec08766a8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e6be9c-534b-4676-8b94-09c4d33a4ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee63198a-4825-48ab-a200-3d2d5fe1879f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90da2c2a-eb0e-46ff-9bf8-20f204a62923",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acc18691-c709-4209-95a7-59c8c171f9d8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f381399-c013-42a1-9fb0-8e3bcc46e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c38a2037-7b93-4fb7-90ef-96a90d842d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e99d3f8-0c8e-4a29-be23-108e1808245b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a82645-2a14-421c-8a7b-63177d3a493d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c07284ef-4aed-4195-b5ff-fa184be0c2fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "14efdcb7-3555-4413-a06b-18b254c55b0f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9d034f3-8467-41d0-9472-c5c75eed851c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5c263afc-1331-4b11-be92-14c04613b9d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76e8d806-0545-491c-b796-4be53ae7ddaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b1008cde-4019-4eaf-8021-eb0e3d7f69cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "969d62cb-e702-48e5-9c02-b1746f04174b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "168e126f-8181-4e78-8a30-c4ad02543724"
            }
          }
        ]
      },
      {
        "id": "4ea8388d-b428-4631-8584-e17567f6cdc1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de1e92ce-bd58-42b7-a5bb-6435b1a3ddad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c735654-f8cc-4563-9b71-83a616e0b052",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a34e8043-76a3-49a4-9ddf-37d1d1b50ffb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716d833b-ae28-41a3-863b-3a8de3d5e20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd540d-0cd4-403c-85c9-7ec92cf9cf82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426ea156-71bc-4579-a9f0-a3ba633f2198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9f85e65-bdf1-4c89-8875-f90502ae59e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba7cf6d-b912-4651-8ab7-75562272e9bd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4e54fc-a6f1-4741-94f2-ea0eacadc989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4097c837-9ae0-4a73-8184-4625be7fb976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e75d76-aae7-4f28-b9a7-415a0695f3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06f9051a-7f74-42c9-9d04-aa59ff3f0dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9510c7-b011-4ddc-bf3e-68c1b6205478",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5ff7d7-7d57-487c-bce4-58ace3a1d7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5512f2c1-e702-4af9-80d4-743986528c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabfd364-bf4c-4e27-bfaf-fe39985c166c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "077a80f8-6689-44b3-8e5a-8c3670ab0ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ad64ca-480d-45cb-8f6a-4b1d5efa7728",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce97eab5-e9d3-4dc8-84cf-43897086b367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f65778-6ce1-410e-b7fc-8651e5d65cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f0aabb-5627-4a1e-bb65-704cbbde12c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "716aceb9-2b7b-4d86-8be7-53b74a995e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ca5e6-7a0b-4255-bcc6-5181f6ea3dda",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52735e-ef0f-4035-91b9-5a468bb3af74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f50280-4827-4a97-9a21-01ac9d29de8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbc5010-c2b1-45df-9c62-d403a5a96f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2be338d8-599b-4a1e-9874-8529d19b49ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5300e650-2033-46f5-b28a-bb3122c790be",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f53f55-4efd-429e-aded-b3220b9c9089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81f617c-c6e2-4c69-999c-d45e359f9182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737ceafb-a0ce-47b7-a723-ef077f857e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffa91c09-f9ff-42ab-8223-80a26b44cc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9704e2d-953e-411f-ab7d-afd1cc9b4d9a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad1bc98-acd6-4090-8faa-2c2783715a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3023ddcc-3256-4773-9d9d-6ac20c5f9e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aa9231-17c8-46b4-ae66-cbfdd8b1fe6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ab075e8-69f1-4860-8b4c-508cd65ca792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c1489d-439d-4cf9-bc59-aab010c30bc9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a321fb-bfb3-4d80-bf61-15dd4cdfa4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bf5b3c-e49a-4e28-babd-17d45445e42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41ebb3a-3429-4f18-ac76-c4b37194f902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db46bf38-b5bc-456e-9a32-589199f10cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e28c60-999c-461f-9a75-defd6fe045f6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858a132e-fad1-4ecb-9070-9944a57adaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c2ad0e-2d05-4178-93f1-0705a760523f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a6fae4-2f65-43f7-88bb-c02a52e1b692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4cc8fe4-7e6b-484f-9d38-cf5524cd5973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97588a7b-c720-4c2b-bb03-c6ea4e6b2647",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d3de3a-ae5e-47d4-8698-4d9321e6a73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6c9afd-2fda-4c98-bc1e-58d647c2cf48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61dcea3-eca0-4c73-b39f-a7413270ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b2dcd30-6562-4196-b9f7-66c8b9459a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f186d46-b47e-495c-8b59-1c436cdcd9f7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c91643-b9f2-4e28-826b-925c0f585933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "290181a8-2169-425f-988c-13c46a307e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf3dcb-9695-4847-a0aa-2185a76721d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34edbbc0-c9e0-46f1-8e3c-6019aa3f54e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62970036-9959-40ad-b846-375e395563d7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f1a0ea-d4ee-4ca1-b5e8-7f58427da81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ca23ad-0e9c-40d6-9910-272a7bfecee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f07a996-8d0c-4f8e-89af-d0944a4afbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7762abbe-0670-46fb-8617-e1a57239fcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e014564e-c50b-41b8-ba97-ca88f4762310",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d724ced-1d71-47df-8add-8b779e3c2cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06713805-9427-4ddd-9d06-8006fe65bece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71df8e3-d28e-4384-92aa-f46724929e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43719e4c-1416-443f-9958-3db2b25e0a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e64746-9be0-400b-9799-bf5d2d7f5b6b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625996ea-dfd9-4c50-b460-21806d6d5333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72feffd6-bdc4-4c56-9d49-e07e21fd0271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95569ca-d64e-492e-9302-57181acb48f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "190ba813-8945-4ca0-9422-67c4cbde5e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9b8b94-1a95-44ef-8ee2-4bc2d4747cac",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c03c80-cc8a-4e2b-8e75-af115888aa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b688b841-5143-4902-a192-6aa30efedb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6f540c-2825-456f-b845-e0f8fad193b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46e747c1-abbe-4735-9c32-3997dfb83d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1beb84a-2e8e-4b20-a3f0-3f5668dd0a2c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee2cd5c-9b1c-4d33-8430-61970bcad428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c32c8e1-d0f0-454e-b161-a25b220bbdac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab189a4-98bc-4b41-83a6-16434e4019b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52d6420a-9667-4a80-8de1-6005d865172f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c506d5-7439-4299-b788-33d48061cc98",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4304f2-e553-45b0-a77c-19636625b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d31f7b0-f719-4494-975e-c70507727090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba6943f-03ad-4471-b1b9-15e4d2fcb1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b1ab356-dd47-4a17-a4b5-3865c5b693bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d52e46-cf36-4a4c-b7dd-611d249d3d12",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ef417-7449-4ec8-93a6-fd87978762bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d088fdc-fc28-459b-bc26-e154acd4424d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3135623d-64ea-4691-a321-3c5fa7754c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad69bc14-d03d-4b30-9e49-3343b3044767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161349da-44a0-45b3-a0b7-425820752230",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55f7e0e-db60-4301-abc1-9264bd5aee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b63015-b831-4de7-99e7-cc80e9bf29e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4869173c-5b02-4dfc-9561-ef2abbda79f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08a19ee-7a84-49eb-bd2b-686fed1b24cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e892d57b-f99f-41d4-b42f-56952e1a0272",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02884467-fd2d-4d59-93bf-b369ed6485fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5ff72d-01c8-4ed7-908d-290c9a540d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faf7982-f5d4-44aa-b530-f7c21d26bf29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3338c4d1-c560-4460-b435-4f9af93d2959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0064a5-d87b-41c5-a403-d1498ce20e1b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9474fb-800d-40cd-b29f-881504ed674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb97bf4-9790-4bad-a1fe-840bc755a5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9ecedd-cb69-4721-8fc3-0a60e34016a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "876090e1-1df2-4baf-b44c-09d0b7a76303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513f86a2-3333-433c-93dc-f538c852af29",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea2b913-952a-412b-86f8-aa92bd4fff0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1006a78-f590-483c-b13e-f78e62f4cfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267105d8-84dd-43d2-9aad-3ce5727e2e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fde76ad2-302a-40cb-814c-c1029735c640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df7af64-b274-47e8-b327-d062b38f462e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832c4bf3-fee1-4be7-96ff-3409a047f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd8c658-c9ea-4e64-ab02-bbb73018e717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe8dcbb-28a1-4f0a-94ba-8e1fdfaf43c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5355b6f0-8e86-4634-89c7-4b4ff1bcf623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e429b49-4506-40ed-a35d-1ebfd29bbbe1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f57924-263b-4cc8-93e5-b29bc0f3977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7cc44d-9de9-4cf7-bc27-e3a0326ffc8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1965dc8d-d8a5-4c01-9432-61c163cc469c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af22c56-3371-4f39-b0de-e3ea7e099477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2bea72-d5e1-4035-ab7c-b88ebf8d6290",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cad5547-afc4-43d7-b8db-572dee9025d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e81212-3af4-44eb-934b-7c41c0b742bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad995af-ec98-4bc2-b181-5144030ae877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "209f055a-3e40-43c9-80df-ccdf4241e293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1cf297-b51e-4356-83eb-71c40edaf61d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683ef3a1-54fd-4250-ba53-3fe3420665b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7c1d26-7084-4550-98f6-b6fb076cd966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941ed166-799c-4508-92e0-d0e18b86b2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b741f10f-08be-4747-84a7-7a1fd0526d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d362567d-24b0-489d-94db-afbcfce88f28",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b77772-3e2d-4580-b7a6-5513e875e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca13c09-cc20-4de3-b5c2-b97ae8c8d30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56300b03-8cf0-4dac-bf58-44d130d733f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f94a82ca-a6da-4943-8bc9-ebb11df795e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d71429-79ba-48c9-8bd3-d2730d2c1ca1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6862660d-415f-494c-b4e1-d3f7a76fa0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca16f311-7c4c-4de4-8cc9-1cccccd5fb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87dcaba9-063d-4844-a7f7-6504219feb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5422d0-5a35-4121-931d-bac2388b0ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b072a38-ae96-42f4-b37a-98959e89308a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb8851a-c6a5-470b-9c85-a236ec92c964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12de583c-74ec-4869-a01a-f82d5bf89f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4843212b-272e-46a5-9048-7eded6add77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8467494f-be6c-48e4-b5f7-1efdf89a8e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d20f6f-b1e4-4406-af99-951a0e9fa8e7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec29c47-0bee-404a-ad2d-f625c08d4def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcec148-2635-44aa-80e7-105c0b10363c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b5b169-26f5-49b4-a8ef-0c4cfe61fbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47c21d9-afe8-496f-9464-f85cb24994a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2806ea-df20-47da-a6ab-d5fc32579396",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "349946a0-ae63-421e-903f-b2a886b115a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e748902f-16b2-464f-8385-dd9b83eb302a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f91fe11-19d6-4e08-b05e-f0cbaf2232bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcf1224-5b61-4030-9bcd-ef1139d99774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2745d282-ff10-47fc-beeb-e5ff952546bd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2517e6-f5fc-4bc4-bf89-5d0818cd06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca65029-7c3e-43c2-8a93-e6c3377938b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c334c-7f00-4a84-b281-a63195ed549c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2159e0-ff7f-4eb9-afc2-bfe03d7d60cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915ef82-6581-4aac-9b2a-a99532609aca",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55f03f0-6ba9-48a4-ab17-a3266191836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccd365f-be3c-4965-ab8a-757932e2ac61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bdce6f-a5f7-439c-ad09-832cf910d8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "def67b6f-014f-4f27-a7f6-ce6808ebfb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8412e51-d2fb-414b-afec-8210b04c72c1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fe9fbe-a188-4524-bfdd-ad7c67c2b70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feedde94-e74c-4ba1-8832-4835357502ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbb1ec6-bdfb-4eb9-94ff-cf341ce737ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60e3c73-24ac-4bfa-8665-bb878a1c2b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2698d5-efe4-4b03-9937-0873e327e084",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91da421-368a-4c9d-8666-bc488165c670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8173886-06fe-4af0-9550-817c2744ba85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edaf19f-b6ce-4dc8-8739-a82aacb6e585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbdcad5-481e-4aeb-9fda-b664e57b0dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a73a05-b344-4251-8e8c-fd9054d48bb0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470c9887-fd5a-49b2-b760-fa84e9bf33c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01422bcd-d5a4-4712-9070-f2c8d89344fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cac6841-3f08-4a47-9694-8defba2d3390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a311ac21-f7e6-4f14-8ec3-6147c5156d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd4bc0-c1f0-4ffe-9278-49404769a133",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb9ad69-5fbb-41cc-8406-33151e7e3701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5e74bd-57f1-44e1-8bf7-c7083da687c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637ee593-9eaf-4802-bd43-ffb684543e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e55ed93a-280d-4bc4-9b3c-f6bdd89f7af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07011519-5871-461b-a099-e24d47fa906a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe2244f-a032-4c91-99d9-911c410327de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001edc8b-3003-4342-8357-3f5084819fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceef27d-c84a-4a10-ab2a-c2dfc379023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfac263-489c-41c3-aa46-08e89c027d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62c6fb4-1347-4569-87be-3ac1df512d11",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d206b6-f320-46e6-af10-2b1473d3e224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f304d00-c87e-4b1c-a24b-3f8ac40c7f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b580efc-a7e2-4625-b3b7-c6b811a6e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaaa75cd-3d45-4fed-9dff-08163593dd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1029e94-9926-409a-88a7-768730b34ce6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9255217-7b02-45a8-8502-3939fff2c8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78978ed6-8cf0-4cb2-8d0b-87be662a4680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967025b-caf2-4e2e-af57-20951b9be779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7cd653-9efd-40e9-b303-d2f45e9c00c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6426c428-5559-48ef-8646-92dd1142e335",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c81f1c3-3a5a-4d7a-93a7-b305d0a046ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6895ab3-6473-461f-9faa-cc2bcb71ea02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aa2877-8167-4ab0-ae51-45777a483629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "11cc56dd-88b9-489c-8501-75e87218205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce340b7a-89e4-4218-82d7-83b1cbba07b4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d838be8-427d-427b-bac3-b0caaab634f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ada57c-9eb4-4926-b4c4-ab87300d9f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb38398b-9aa0-483a-a1d3-d0cf0f3afa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5c89ef54-d7b0-43ba-881a-9a13d2d30b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500b37e9-2bb6-434d-a454-2a60c32b8d86",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21726ca-7d6e-4faa-97e5-de6e923d1440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97787570-fc53-4fb2-a9f2-4ce4a7c75c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee466d9b-732f-44e6-b207-eae9d35b9870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23bde0fb-5ace-435a-828f-e15b76f69aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee9f697-c2f1-492d-acd0-3180fde8bc43",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2db43bf-b850-440a-9302-cfaf9ad19c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ca7b23-b9ab-4da8-b5a0-df0b32b7fd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f3a86d-0f80-4832-a280-5f17bef47655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "736bc6b3-ff88-4486-8f65-04674ed9a34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ad9379-49b2-4f66-aaa1-94525230b49b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee3aaee-4fb1-49d5-93a7-b86f3480ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215eafa8-0ea5-4aad-989a-dab99eb1fa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea02b79-e5aa-4f8d-be8c-dfd87388ece7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36baf97a-f7a8-4b80-9f71-6628b0b06208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbd9051-2208-4a8d-9733-d10fe551074a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b3c1ac-a6b7-4810-97d5-389ed572afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686d4c18-5245-4732-8cc8-7c95c35b6481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c125196a-dc35-4517-b6aa-1fb256248dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ec1f96-cc0d-4d3c-aa17-04aabb1eafda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc1ddb4-def9-4eca-9199-f22f9470462f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8784492e-93e5-4383-9805-cf2da5e0923a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457b638-fffa-4223-b9f8-175553048985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb676ff-cd7e-4ea4-94e9-170bd9a5f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2eb0a1-c60d-42bc-9f6f-206c0f58c67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5365c538-cb12-4eb7-bc19-a321ab2eaab7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee31237-afa5-4566-94ec-0a41bfcdb468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a7f741-0b45-45ea-8bb1-d2c8a5b61160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb52a2d-d728-4f31-83b9-86f009fa732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "876e3c6c-46b5-4a8b-8d46-2af11df1d35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893ca357-6e53-4cbc-98ae-312f5a5daba4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a984a0-5daa-49cd-ba5d-7012d5b4654b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d910510-1f23-4970-aef1-f859ebaef7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8308d62-01c3-4987-8359-9d76225fe7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e905b75f-69c4-4855-9d11-cfff6914ae35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b423c8b1-2c31-42dd-8df7-ffdb590a4c99",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860a29cd-8dd8-4cf3-bc4f-f318a81a151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d64fb8-14b1-4b1d-8eb1-ba31cec76c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1594b7-ccda-4cff-9131-c8dc86a7a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "259f8366-480c-481d-9da9-514358acca7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02115828-8fdd-4ce6-924f-54ce3b87869c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952483d5-57af-49ed-b2a4-82303d305983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b1e0ad-1b4e-4ac4-9abd-1a8ac7ffb9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce086af-03e1-4f19-8ca8-5564043f1ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfdf5611-0084-4142-9ef4-6556162ef6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829ef911-54bb-4f42-b298-3ee4116b35ba",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5b4b0b-7bd0-42f7-b2d5-3e4612d98f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96aa3707-151d-4e59-8696-8d0bb5fc1e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb2f949-1338-4bb0-8964-c8aed7d1165e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af90d549-9d21-4a90-b801-296de8699a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cdd791-7c57-427d-bdd1-ed9cba1cff9f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e52ebdb-5c4c-4fb6-a68c-8dcb4469c7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e343a0b4-4068-4fc8-b457-83e7660943b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce963b0e-dcd5-492e-9403-7e26d7b3331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5802d735-f29c-4138-bbf2-d139dabb72d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270d67f1-d16a-4df5-b0a0-5ca3ab0b1592",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cf02ea-bb95-41af-a460-62df9f257430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5237a34-536d-4994-9fad-a94ec2a29f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dee612e-0d50-4d9d-8b1c-29c064b5df3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6402238-4048-4ee3-adb4-d8ed4c301c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf54a1-0d92-4b21-ad6e-0b6c9af1691a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efbfd04-55a3-4fd8-8625-ce7122b7af42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdad821-7d72-4d85-9c32-90c66dc70c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa737b4d-48f8-49c3-adb6-0bec0bf433e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaf9267-a8cc-4c1a-9e62-1a4a0f57c5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c080d3b1-0fc2-43ce-8b0e-6aaaec10c94a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c012c5-816d-4ab0-8274-3f9f9bb97701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b0e351-8e0b-4b1c-a716-d6a4672b4053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b961d8-f9be-406f-80c0-4ce028f1d6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dd364fea-e6f8-44df-a8a5-75a062d061d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309de498-5105-4508-93ec-03549e3aa7e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8ceaef-c073-4dca-8fd2-f6eebcc2851d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f890ee9-3ce5-477b-a13c-e62fa7e6d806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ca7400-a264-492a-9a9f-95738d01cbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5888089c-983b-40de-9612-fa13f870be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e6c9ba-c740-41ff-8e4e-aa55b36d665f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d06db-4c17-469e-a904-381572717061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25f069f-e1e9-4bdf-963e-ede5c66e4711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969be590-7d10-454b-bb99-2a1588dd2dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac663f06-5920-48aa-be8b-09c3ae6b8ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7590f918-e315-4d1d-a0c0-cfbff9640b6d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bf3bf8-a899-46a9-b28e-129cda21f277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c63d5e-9a1a-43de-b6d6-1f5aca3c31cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549df3b7-5569-49f5-bc6f-c01111e248ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f290641-82e1-4030-9df0-49bcc855f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43c8724-c68b-4c8a-93e8-00f8461f88f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a0109d-a494-4d2f-a478-23812fb0df6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e629196e-d0c2-448e-9a93-ebdbb8a2c643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02642dff-6346-403c-9b01-0f5cd7dbe93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6ea48a-538e-4f54-ac88-b05cd2d8a2b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4197bd2-b768-4769-a7a6-1d8739e38498",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53580a0f-78c2-4299-994b-d5183162156d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0974a929-dae5-4c19-a331-70f63b06b406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8127f231-5ccb-4707-848b-0941b5e75059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "47eb1a7b-3431-400d-8b62-80bd2a503743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32891e99-f610-41cc-bb23-492285498495",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ba25b5-37b6-48c7-8b49-43a9807793f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2063e5f5-a064-4c4f-bcf4-456fbca22903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4232e1dc-b76c-460e-899a-9c8bbb9c1b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e595f8f1-9dd8-4f20-854e-00c5fa0c0dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8998ebf2-341f-43ee-873a-e6ca69400bfb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce532270-f242-4f97-ba73-74f2e018313c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "185abdc5-dd3a-46f5-bbf9-618aca688953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7967764-6367-4043-a15a-22f70986f08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee2a8ae-585f-410a-9abe-22478926c2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0910919-1ce8-456f-a2c6-ec7bb1b6cf45",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031d3893-c3f2-4900-9297-13ff7e29f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0e5f11-8e56-4f2d-9e62-a208c8f9dde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5713a04a-7bfd-4b32-95a7-151a660c2d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc89bd8a-6a87-41d7-919c-2ecc714cb3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a1d53-d46c-4879-9837-209074aed6ce",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39906474-9e70-434c-8e2d-cad8b92beaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aca1e1d-a4c8-420a-9ab8-ba269ebc8a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca70f58-1f4a-4d48-9954-c9927bc4941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfad8df-5b81-42ee-a466-e94a283225b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d466a3f-83bd-45c3-8045-754d0a26c636",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5964405-c878-4c02-9018-d63afc3497f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e9e09e-1bd6-4f14-8512-3c8542d39815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7454d01a-4bd4-49bd-9422-7215b33eff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00140c0b-5506-4683-ac7d-d0545b9a6023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55193049-9157-4cd4-902f-59b58ca9d5ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16faa14c-2191-4a42-a05b-81533857fb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0d8636-f56c-41fc-9a8a-beebcbc81d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449df525-3a04-4d84-8d5d-8bcb80e63e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46a92118-3c1f-4cc7-a075-8774c22ec966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de71dcd-3c51-460f-9b0e-c2fa5d91caa8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5affa87c-045e-4754-bae0-76dd81157a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4134d1-d022-4fe5-8280-f2e8dccd4b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a38c187-ae77-4139-80dc-2cb833fd1e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "36ab1bd5-d7b6-4e2e-9cff-a29755600663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272fac21-ab0d-4a4e-9ce7-ca36015471df",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4815a0c-9160-409d-8fc8-63c3a11e2e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b34c2f-bcab-439e-b5b5-f2111d4317a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ac2c17-fd4f-4607-8d7c-48b7ceca321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12b3a59-ae5e-4d28-87e0-82ad5d1211cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58b942c-98c1-4be8-b044-bd1272699048",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20d2c69-10f1-4c50-8aa1-bd1f1c4b1b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86253d0d-5979-4709-8ca7-1b8407a2c92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a2de1e-c102-4429-af01-21dd92e6bd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "263481a4-b892-4d37-b3d9-e0faf477a720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fde36c-b599-4b54-9aaa-e43e3ea28360",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d26fd-8a21-4ee8-8180-0f172c8bb9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48280e71-8caa-41c8-be52-f99d032d62eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acb44cb-31b3-4338-97c5-23cad724b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d21b685-1ccd-45df-a3cc-21b8a38171de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c849157-fbdc-4003-92e2-d949eb543a43",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8906b1ed-b162-4b8c-b5e4-3471e3f029f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8485e419-922c-4025-b504-faa5ad4392b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddba4d5-bbb3-4948-ae82-a691a37931dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a01474-7225-4de6-8890-b8235eb6b215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81664b-44fd-47e6-903e-30fb4e1f3f5b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bd8f22-79bd-406f-8c42-40a592cbc479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5879ee23-85ce-403e-a4b8-b39fceafe731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b650a7f1-ea6d-462d-8dad-fab7561bf726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe499bfc-14ab-4bd1-870c-6befbcb54024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aca771-4ed0-43a3-a9c6-32262c23a4ed",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e1f9c4-7fc4-4af5-80d1-217f99a3b675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b012bb97-4676-4e31-9649-d758485439bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcdc11c-fb81-479b-9b1a-a7f217bbfe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3778b35-bcb0-4ff7-9f99-d8813d80ef1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1744e0cb-5484-41bf-87df-cd810edbfa38",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce8f032-bda3-4975-95f2-24edadbf0d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bab4ece-7bb5-45cf-867c-eafd32ed3972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e2342b-16b1-4d8c-957a-b4462a6c4462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06be397-91f5-45f1-867c-ce6016235a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c65f4-2b83-45f0-b375-bd9a1779083f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35461a5-d5ff-4a75-8636-a7dd50d6b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada7f35b-985a-4af5-9044-b13eb01c09dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68858640-89e8-4f84-8812-213712408245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13ecdb5-1d61-4074-9b31-9808b92b6ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25a61fd-2ede-4a7f-bbb4-475cc0b03315",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b82ddbb-9e0f-4f1b-891a-500512790a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dc4c8f-d9ed-434d-a9d1-b8596d6a26e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2d1f9f-332e-4281-a8e9-e2250dc5eef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61470a28-70b7-4bb3-a6f0-611c32245294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8063d3-f3ac-4989-9bda-f965b7d256b5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647b7e30-4e9f-4468-b971-ad67c72c8394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d20942-ed4f-4008-934d-908b6fb8fe66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5026d29-136a-4dbc-ba18-e0caabc60440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e319676e-e1b9-4442-b3ce-9388c2df39c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb67a3df-da6c-4c37-873a-21833ba78705",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c4ffaa-b00f-40e1-91eb-abfa62d9e03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5d32bb-a344-4af9-b540-52981482215e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e96e702-347e-422e-8485-7abeb19cd3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "280ac04d-13a5-4261-a87f-888e5b2e7807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975a016e-c062-40d6-be9c-6f9e6fa22f2d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bc973a-e381-4bef-95a9-6d136dc74b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190422ac-e74a-40a8-bdb5-7766bea65146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b066d84-930a-47ed-afaa-6854554c1c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "439270a9-3962-4d42-9d5e-959d076367ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ffce5-8c96-4a6f-9cff-c2a7d9516ceb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b13c51-0e9a-409b-8ec7-365463dca051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcbb286-a872-4f6b-b37f-6f3497355781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf11c1b-ddc3-4e93-ae35-cc0518f43435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "03c6149d-aa64-4006-9e2b-1551e6a2cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d220e5-a1b1-46bc-b868-be6e6bbbb5c6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d69e992-c973-4479-8fc0-1ddc42c2a3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fc9aa7f-f441-4342-9937-00cd94c8acd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5777a03-1fae-4687-b849-029227705c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82bd93ed-1c33-46a8-b9dc-b41be17431f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4398df1c-4434-46e3-9d98-3a30779ca49a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2368b0b2-ec60-41d1-8d70-a6b8d68df929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7341e10c-2b22-43ff-8bf9-f422fcf93ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9592f2a8-e41e-4afe-a85c-9fac785eece4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4741162-daaa-4985-aaa0-a8e8f4a151ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ac67fa-e4fe-4fcf-8789-c605fa12b91e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46035120-fcad-4738-89a2-b8dab1e60e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f270bc-f0c1-4fda-b0a4-b8465589f519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4397c25d-b52b-4c5e-ac63-fd407e28d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d576937e-46d3-46a0-a366-5273565ca611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c04498-1975-4505-beb6-f24c4666b68e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b8d5f9-6788-4ead-97bf-0de9b9c5fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d970a06b-31e0-4ee5-870c-adca6e7067b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645aca51-eedd-4161-9aac-fd01c35de471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb3921f-015d-40ea-bbed-ed8002e25564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd9404b-52ce-4b64-abd1-efe7aa7bbfb8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b212f7c-98e5-48e8-be76-fff9951c582a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e11504-7275-4ddb-b59c-390f4662ef20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70df85f2-dde5-4bb0-a69e-203aae9084ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "513a1495-99d8-438d-94d0-127651fb4a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51443412-efdc-4315-977c-064fd8446a2f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eecee11-606f-4b05-a682-aafd3172c314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954d49ec-043b-49a2-9728-acc6e5033b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd9da3d-8d7d-4d8b-88bc-1befa7d65498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba8336c0-3196-40df-930c-ecc986ef49a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cae31c9-d01a-4e0a-b17f-7a5d86ccfe23",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f3b33c-8c67-4643-b398-b5841ed5e1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2ba412-ae72-4517-af8c-80690d598e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac14893-d109-49c0-aaf6-bc2b94d7a65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62f98783-7e90-4fbf-8fe9-9d574f8f26e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f45e792-d8a0-493e-a756-b846f4acfd76",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b014d7-14bb-4957-a274-a842355fdba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebab9cbd-948c-4554-b619-6da7a0805894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d908e7c0-b15d-4570-9636-af7b1ad54bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "04f4075f-5f74-4a2e-a0f3-f80c01442f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e50e586-0065-44b5-9864-5e30cc1d6afa",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b2bf5-e1f0-4f6b-99cb-09559c860a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd0d3a0-e995-45f3-b6e1-c4777b2c8480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec8be8-0282-442c-8e4f-dd46f20fd4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb1dc0-5406-45f9-8190-f1b9e15983c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1db8c62-d124-4d96-b492-4c9b3894e6a5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a143bd1-c478-4416-9d80-a6b126c77856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6637d88b-f6b5-4d01-a47b-c9419b6afb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016bebf9-56ca-4c7c-b957-ff79c764ca06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c7aa2a-4802-4d6a-8112-360419e336ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0f5187-4ec2-4b98-9248-033a991c23b3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69b6121-689a-4876-8006-6d2d9502d30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ee5e7bf2-4ebc-4b99-9b36-a316abec1bb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe335a6-813e-4109-bac6-e57a3bfb4990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb8c845-e88e-4432-85e5-e855f223213a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed4d0ea1-5f78-45ef-b180-a8f5cc1b2c27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ebaa927-5498-4837-856c-1913a89df70d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc42de5-db07-4c5d-9a6a-a23babc70bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c64da9d-726f-4c53-b0ab-b6eb98bb570f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232aa33d-6280-49f9-a5df-e4a609988704",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6096fdd4-87a0-442a-9894-1acee17b4c90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29f7a264-b92a-47ed-9467-1f40044b59bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c82e9f3-1510-4db7-a81a-31065cd0e144"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56d97d3c-7220-4668-8d75-2c3d0c81d16a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50e7f601-f2ef-4958-bbcf-4aabc968b3ce"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8405a8f0-2133-41d8-bb4f-6d12325377c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64d2c7fd-9748-4e89-ae97-d0f14bb9f535"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f5aa33ea-9865-4e25-b8f7-c59ff1b0a740",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fd89fec-7dd8-44bc-8ef2-fe66786b3834"
                }
              }
            ]
          },
          {
            "id": "be9e3105-60d6-4eb3-8086-dfa19a2ab4eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17b33963-5e62-4bef-934e-8a6277ab4f24",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "18b03556-a3e7-46bb-8ed7-d6f2d027cdcf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea4bd93-2f93-45a0-a24d-df92e2ac5269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d86eaeb-3719-4f8e-b70e-ae6eb70602b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff2c0c3-e521-42f1-b052-55f03e963c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359f17cd-47b7-4777-8cd8-3a7356ee576a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "295fe65e-93da-4728-9345-6efce688bda7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e33003d-ae0c-44d4-ba72-e3330033a797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49df56f1-1e0a-41db-94fd-5e617629f1c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4553251f-3d26-467f-b812-3d0215716da7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e19f0a19-ce12-4bb6-80a8-8ccac212ea09"
                    }
                  }
                ]
              },
              {
                "id": "51f70d9b-b3b5-4d02-8cc5-aa6958af0691",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a811c01b-cf09-4802-b230-47ecf89cc694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "048dd361-4922-4006-b0cf-b6b3e6ca1f0d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ace43325-30d6-4626-a134-93ac118e3719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f13b5c5b-f5aa-42ae-87a6-574fdd6a686e"
                    }
                  }
                ]
              },
              {
                "id": "7583ac2d-1515-4d96-8d61-42ff58d55a9f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e67717bf-2c0d-4fc2-b77a-96ac5105f907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb7e00f6-0684-455e-b74b-189e6282c47a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70294f50-621b-49cf-8df3-86b36c84bc84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6575a51c-f3e1-446e-abe2-e535ba21ef03"
                    }
                  }
                ]
              },
              {
                "id": "e4e6eeee-b9c8-4fbe-81e1-8e25c03dd7c2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e07be49f-fd39-4296-a88a-d9f046fd50a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48ba2e3b-ca74-4bed-ba80-aae33975ca1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18d876bb-0a8f-4e6f-a78c-ab283bead30e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "478ba9ce-85bb-492c-8572-393c33e8fd65"
                    }
                  }
                ]
              },
              {
                "id": "81b38d55-6ba5-438f-8c3b-7af4f648f56a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7390d09c-e7f3-4b70-acbc-8535262346ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d67fbc1-9b40-4e82-bed2-b1d7b6dda06d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6b91f3c-8a2f-421f-b66f-cced7d7a8111",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "373a71c4-05eb-454c-9a1d-8db6482f0fd2"
                    }
                  }
                ]
              },
              {
                "id": "2940b68c-ec07-4b44-b619-3ca7ad5e90ef",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd6de73e-4f0f-4149-8846-dffefa86776c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "27c78e6b-74d8-4e4d-aca1-edd7db6600cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edaae155-ea03-41d9-b9ec-ecb676498b4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "180a8e38-8114-4c2b-a299-be7d93193b89"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7eff07cf-8383-4fb6-8e6a-bb62db96f229",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59d50fe6-2039-4dea-8068-10dd25e6def1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c2e541c1-963c-43b9-b74c-3469fb37fd52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f7524c-8bc0-4a06-8292-7fa03f6cc398"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fd9e251-c78b-4396-8561-b1580bbd08b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "da5d2e1e-20a3-4258-b695-e1e0c7448470"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dff530d9-f1df-4886-b2ef-98ca88de3420",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1cbfe31-872f-48ee-af60-0a00153641ac"
            }
          }
        ]
      },
      {
        "id": "1493b2df-766c-4af7-94d9-41444244c820",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c15ab18e-2be0-4835-b492-0c9c1e93c0c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e536388-6daa-44b9-91d9-5f41103da2bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2ffc3d6c-396b-4c54-ba6c-b29c6b4baa87",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475ef612-639a-4ab6-9d5c-d048dc244543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e5aa30-7f76-499e-b38d-1775dbc16c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa37bfb-94f6-4076-b4d1-b93fcf45a3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4a005a-f6ed-47f9-82de-11440213d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af29f62f-041f-4096-b508-5a8b72d65d7e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254de761-67ea-4d8f-ae7d-6db8ad35a596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b762a6ac-6603-41d5-b1b3-b7f4dbbe2ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a8d99-d136-463c-adc3-657a164d7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6da6bd-703d-49e2-b1e7-b8c0fd1931b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea92bacf-6d95-4f45-b00d-deab841b55a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c128fe4b-f2f2-44ea-b5a2-f44dfb44db03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe56ee9-38f4-4423-bd67-db01b5daab2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c21cfbe-14f0-4e7e-981f-5aed8a51db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cfea6d8-cb2e-409b-a8c4-ba36bb9d6105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa175a4-4e62-48f1-b30e-a71aa0bfc258",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a77c0d-f266-4d01-9759-43c595908173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75c92c7-8c95-4f86-8c4f-8d4fa56df7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8d221d-8ef8-4bbe-b7b8-048a97b5923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c0c8a63-62a2-4aff-9c4f-917f09938ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66703827-03e2-4513-93bd-1b75b77820c3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52de8dca-c72e-4ab4-89bd-81b500e58049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93bd3c60-ba57-4f98-b5bd-a5d6127433d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319fc9da-868c-4083-a630-69dc2970a922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dcf88e-29a8-41c3-a76e-04d017cd79c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2200909e-a732-451c-8c08-6b7b0e2ad327",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631b53aa-9975-4625-b1cd-03223c820e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1923dbb3-7ebd-4217-ba9b-5c053a00c2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3e0463-e94b-4168-868d-5b166b050a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db2ac7a1-1633-4691-a197-198d4958cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39768e91-9377-4c24-b775-c988651e95fd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae97097-dab3-4a86-8289-692247c155ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e844e1-9371-47b4-a66d-fab0338192e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cb6dd0-f5bc-4cc5-9606-364e06e49863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c1d79e4-2bf2-4f64-91a4-b60e2447e8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd11e63-7bdf-4952-ba22-9f82f283d3ce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c878dabd-fe86-40bf-990a-3a22e6d48373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d108ca8-aff1-46d9-8b63-45f60fdf281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3016c8e3-180e-4169-933e-119527cf616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5f7fb7-e8f5-4d0a-901a-e942d17c1c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2239ab5-4f23-4d83-8439-2ca9127b1570",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e66846-402a-46d6-9360-33667448765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8b12e6-f1ed-4fbf-9869-89416986743c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b32564e-41a8-4438-9a44-999e4564a89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "542e2f9a-14e1-4831-bd19-855c980ea091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51baf496-37c0-4363-b91c-c8a11915c4e2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c786d1e2-9841-4ae2-8fca-5d94968224d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b824dafc-4f95-4623-9de1-11557a35df9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7039f89-6459-4001-812c-65c6b32c7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4404356-1b26-42d3-a821-01af060168d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2065d3b2-6666-4fcd-b2fe-c7244a1629e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcc2c2d-c864-4f93-98a0-8008279c36c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41adb41f-f2a7-4311-bdb1-13e3fc80d778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9e22ef-c563-46d1-b5d4-650cdcdf86fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fd859db4-df3a-4135-8297-24e78e6f97ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526542de-ff0e-4e0c-85ee-a310f8cae7d6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0116dc-0c96-4ab2-b38d-6aaff5460563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3366c0ad-dd77-4ab6-ba2c-eaf8d9ed1832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f30a0e5-c41d-4d08-8f43-0ea1034e47a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2fce44-c5ac-4c0c-8498-fc86e502a0e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f74640-7736-4729-814e-db9791865339",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7bb292d-e55f-46c3-b55d-621a3c1df8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833a0446-0310-4c93-9805-09dd30798c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a671be3e-ec44-4bce-ab3a-ef6fa8ef1399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "583f2236-a130-4d54-ae8b-7bc6a3d47ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165650c3-f027-4910-aa0b-5e5eb8a5d747",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850f84a-0bac-4aac-8e71-1fcc065aa81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f453b2df-f9d7-46aa-92a9-24de88b45bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b94d767-82a2-4b79-bc0f-f46523f6e96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc14985-9265-49b5-a4a6-944af308fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc1aa01-aefb-438a-8220-01bdfbdb4aa7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2972854a-2a1e-47a9-9998-218d814dad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656245c0-3c0c-4f1a-9d13-182fbf3e5428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba09910-78b1-4051-9fc9-57584d08f4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee4e5a2-7f4e-4bd1-960a-10bc25889127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e13426-b693-406a-b6ca-156959b86331",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778374de-e202-49c4-acaa-fce90b1d5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c611897-7213-4ffc-b5f0-0e9648661a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5cc0e95-10c0-44bb-9594-e72281564c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbc3280-d6d9-4d49-87f0-6306bad15db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f1fd73-0bdc-4ec5-b362-700e5cd2cc93",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52def7ee-8a97-4292-a6cb-2e4342ece032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878d5350-263f-46e7-b377-d4b8ca07e927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de5d32b-f513-4a1d-bba5-014b09e74934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2b464-a247-49a1-8495-c2817ac55eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd10a202-5799-403a-a87d-5adc62c3bebb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c766c051-eb93-4c01-9158-45d13d3665a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514a3f65-7d74-47e2-9ff0-7a2f5ec18e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ff6b78-364d-4532-8f08-7f295c98f95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd37da6-9330-4b10-8897-71afa4503876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd48852-ebc0-437c-8ee3-599e95f17cae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69b3aa3-1e31-48c0-91d2-36b421c1ba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a83943-d0bd-42ff-afb3-ef7c22959d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf69f7e-9c22-4e47-bfa7-566e999129dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffb9f0e-8973-4ba4-88e8-39035fb36201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6cbead-48fe-4ace-8ced-ca52e0c16310",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38729fa7-143f-4c2c-a480-9c2e4b34396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7714b7a-31c7-439a-be0e-f8316bbe6222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d16f00-69a1-4bcf-b616-6518cba81f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef42864-e6b1-49e8-bcb2-3a8fee0afeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1191fe5e-a2a6-42d4-a207-3699ddf290bf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db661fe-a442-44e6-9b92-7b620117fb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbf6403-f170-4d8a-95b1-7eefedeb824d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be90e218-dade-4ec6-9e5d-6e4efd1e9e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01e8289-5260-4597-bcfc-469cd997b93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2dc29a-09e4-4678-b597-166fd450a516",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6afa6a9-bdeb-4bc2-ab16-957db5fec8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "285af6a5-486b-4688-9d5e-4bd3f3a0b25a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfff6e2-3adc-4047-adce-6104ef5d6852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ab1ab0-728b-4d13-aa60-a2010ff563ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf3cd2d-395b-4f48-871a-1e9f8eda525c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c854f-28e8-41f0-9115-6c606843ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "222baa8b-fe6f-4aca-a239-4b931a3136db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e5eaad-0302-456e-b237-f482a6de8bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb2d812-f063-4ac1-9dee-88b4b2c11c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719aa1f3-a055-448e-9750-4d69b16308db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19595731-8d9e-4d7b-9334-cff38b5b4695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d08e27e-aa68-421f-b2ff-b8037af33a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045089ca-df41-4fac-9fc5-0b6b5218e0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c813014-83f0-4881-aaec-c2f30d461092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1474f88b-1988-416b-b935-47f6e8ad1c41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f006e4-3b72-4f3d-89f6-728fde669d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918322fe-865e-4e07-a72b-6d5692eba31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc44c38-0238-41fc-bccb-9541deb9f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a860cbe1-302f-4348-8f10-362769059ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40abf79-0846-463c-bd20-f7be18f24259",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20c6829-62a7-4e1b-9cf6-c786f1b7a9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4581774-cb17-4524-8566-636220cf5087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273b5d1e-fd49-424f-ba3c-8d76a093476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf8a6d9-b09b-426d-ba0f-f6150b2b6dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9e8ce1-63c1-4fde-8d00-718870eee55c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9799742-8586-44a1-be2f-2efa450bad1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78aa5986-56f7-4be5-984d-8d309ac11725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32af57df-753e-406c-a53c-403ac4b09bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc537f6-96af-41cd-9dd8-3cebbc72972a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08c1ca9-1678-4155-a08e-becbc1ace3e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16855fd-b212-48a5-b7db-87d44301c193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a512531e-2412-455d-a13c-7d45d178ee35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda6b915-641a-49dc-9d84-c951c361fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22f15b0a-cb54-451a-85f7-9d75d6bb000b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b0201c-d4b2-4d0b-9473-64df329aedff",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2ed78c-45f3-49d9-9318-c1b24e392b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac48edf5-c2cb-4c90-9c28-3245b2525c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1341aa12-6f7a-4f61-ad75-57c8b3b69866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d812e7-06f9-4642-b53b-30e853207ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7396c2a2-818b-4b1e-96c4-104a22da56b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c06781c-88a0-4bcc-afa8-966c0b25ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a0ceca-8ac4-486a-855d-a7cafbb6f1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcb5a94-6ce0-468f-9778-aa015658cb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0bf8a4-15c3-4788-855c-afa603b2b019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a38ecd6-7707-4c04-b262-2f14d8fe953e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85951590-cba2-494c-ae7c-803b3b095227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43885d0e-602b-45ad-b705-2c7f948e069d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a880c5-3586-4f33-9c73-f36e9399f6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d5b94b-038c-482e-93ab-bb6098bf1c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc3418-2328-420a-af98-21fb6cd28859",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa068e76-646b-4913-9632-84f65153de97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bd05c9-ea8d-4171-971f-e9ca0ff1ccbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd036e9-a070-4e99-93ee-572a6ead10f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec518e0c-d6b2-44b9-ad8f-fde7c162b270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9984424-b8db-443d-a0ec-13f51d0fb8f8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01510d-e969-47ce-8a9e-d16a018b517d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838426b7-1102-4096-93cf-a3a77e091a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cf59ca-29c4-49bc-8873-2952003aef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e90547-c6cc-41e0-a424-37fdd8215016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bc4b42-c4b0-4bda-b622-f1ede81375c1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f85879-b6d9-44f8-afdf-177832662268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37b6dc1-2e9a-4f0e-93f1-5d7bf6e6e556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67cde52-e690-4a04-bbe8-89fb95020e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1afca58b-0937-4932-98b7-d02841b54c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e908e1d6-9e17-4339-a9fa-e0bc8d5b9439",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a33f4-e43b-48f4-8bb9-01a7f1382a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71723c8e-3d02-4c2f-8b0e-8b65ceb0c989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0608e5-d9f4-414b-a571-416ed6e29e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d0d201-b68b-48fd-883e-7eb2d567830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66abaa8e-29c5-46d0-ae4f-2d11fe653307",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ea5d60-0d9b-404f-9bbe-7242c20b1f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87bd97c-3b1a-4e35-bcf6-646965e10ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df11387-3f5d-42c3-8893-4ac16d133130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e263aee-86f2-47b8-bba1-c8ea534d8c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d386dbf-95f1-4366-889a-17072a1bdec4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7954475f-e1c6-4133-b02f-17642088a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10176b3a-904c-4404-8d97-ac0283c0490e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fddd5af-f6da-4f69-ba18-abe068bc814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c45f24a3-6795-4354-9c86-50f3aac70c33"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d7b8918-d0ac-4080-b460-13c24018a353",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27ff5576-50ed-4e80-977f-b80aa940e735",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf274976-2020-4a94-ad69-2c6f7cac2cb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1cbe85-2a73-4536-9a05-b9f311d83a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc39caf7-4672-4038-92a4-c75a83d77052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1e01236-afc1-49f2-beaa-cf8effacdbb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ea3160-bb44-43c4-8f86-9d6127073550",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d300d23-2632-4a99-be04-acc2262aa979"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "180f6e53-1db9-41d6-88aa-17295332497a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55575244-54c1-4072-939b-e56e80139841"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bf95096-c677-4966-91b5-347294ab05f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8e4fe2b-0f56-4cbe-9002-26ebbe37a7d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a4c884a-11f0-4dd9-bffc-66788084fe63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ed77a23-b547-4c8d-81cb-4eb6afe03112"
            }
          }
        ]
      },
      {
        "id": "0fed975f-fd26-418a-950d-a8ace8980280",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "db9b0560-41fb-4157-b7d0-133536f8a970",
            "name": "Negative Testing",
            "item": [
              {
                "id": "085fe43b-7334-432d-9e71-d31983be4a36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ded977d-d589-4806-a574-72b18dcc89b6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe45664-1325-4c39-9f84-3b8e0b906eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b06e8a-2987-4ffd-b4d3-290c04d1b083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6aed2a-3555-460b-bb85-b6d5119f6560",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e965e423-e168-436d-b2b3-59114a3885e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bc3f2c-d126-4dfc-a56e-9c5768bee2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a34370-8f94-4533-90e2-fd54565cd0f1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc3b874-db8d-4611-9765-1bb8b38e1785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3e121d-7c6c-410b-abb5-d99a4a4fbff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ebd338-09a4-4ab8-a624-49c7196db901",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e26f54-fa3c-45c9-a6b8-8e3c1843b441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e5984e-2621-4c3d-b31f-9a2d50f6eff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d47fb9a-cbfa-4920-b5fe-5a320ba1aa9b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed3014b-4b93-4610-a50b-acb573d40df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cc9317-2517-4216-aefa-642e6a254ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d5199a-3c05-48b9-b305-1282354d33b8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfbec5e-af65-4fed-87b9-eb1736a6a5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd29566-1bb5-4096-be19-af60f7a8390f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76696ced-6c3f-4d60-a9fb-6e61db4c7e2b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed2f8af-5bf7-49ff-bbb7-fa47aab20d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6108ec16-abc5-4b20-b398-7643af8315e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d514a6-a0fb-4a68-b9cd-1ad93acd81f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89fe3a9-f1a5-4f98-95cb-f77ab8b23d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d2f652-ecff-4c31-8565-1ac7e4de4fae",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319ffaa8-41f4-481b-a8c8-a5d62839feb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae8dd26-72b2-4c81-a0f0-34879eb18c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830081e1-0b28-42e2-a68a-06d3cc6432be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30573b47-bb14-4371-9363-7f14eeabc63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1421c2-d577-4027-8427-1ce8a8fe053a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b974cb-f6d3-482d-b935-d20978a399f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b41d08b-29d9-42fc-96d6-b895f402ebc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2888bd60-e0ef-4632-a8aa-bfd2231a0dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2383c70e-0366-46a7-8485-ee356b4d6142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68df0bc5-ab5c-48f8-b5df-f7b320adebba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f379aa3-2fb2-4973-9b07-a4ce66058929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2911726e-b402-403e-b159-0ceadf38f2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd085f3-1db0-4141-b7d1-9541cf5043ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df62591a-1c58-403c-958e-63a44f269c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f86380a-117a-4d90-9211-613fac643d9a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d21f9a-bb2c-4c9e-b749-a139f963cbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41f45bb-d0e0-4a44-a9b9-c2fc48891c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54f29b7-2775-4f3e-a91f-6e0eb9f040d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6010ab-424a-433b-8c86-5dbe2c4844b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751d5b5b-c5e4-41c5-8ecc-5269354e0d5e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0591430-3107-4dcf-833f-b6ffe63c0e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19fd91f-45f3-4deb-aae1-eb980e81012b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c120681-8845-414e-a559-420884f9b7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20dddec-93ad-46d3-a312-f03ab964131c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba561649-50dd-4388-b07b-b1b326058e1a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4140c7cf-636e-4141-9bc1-0df43caed254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65121ecd-b969-42dc-8c6f-e64ddff28388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7007e3-0a8d-4966-b612-94474aeead05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d93e61d-7cb1-40e1-a760-83c565bda69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4155711d-0c3c-4dea-878c-207b4b506a56",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6fadd6-7554-45a2-b3ab-259f2d11548e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d89d19a-7fe5-4618-a9ac-d82e7625fb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8cc90-228d-4ef2-be86-f27dbe57e109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e083771-2dda-4eeb-85c6-441fced10ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981c6bad-069d-4f80-ba22-170e81e26007",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0297667-13d0-4e8d-8e23-b9c37a0d98e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea57eef9-57bd-4552-80a7-0808f6dad4e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da783713-30f5-4b76-bb8c-d63b04deefb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501f8da8-65fe-458e-8301-1a451ae8d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d252b6c-38ee-40a9-93dd-c06f68f427e7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba3e3c4-dee8-41a9-b1a2-3eb99c9f2d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0523a60e-3ad0-49ba-822a-0771db4f5934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97950a1-27dc-4bea-8a45-7bc97a6b7405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a920c1a7-4b81-4b36-a493-fa498b6be6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab099b6-6ff1-45e4-bc06-485980427ea5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a058c84-3cde-4b02-ad9f-59d0b77e7ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f7ea12-4e6a-4877-a1d8-b71c8a31f9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95775981-26ed-4f59-a5c7-c4648e4c13ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c30da7-ff12-47ed-ab08-10dbd4291717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71990b2-1f97-4cc4-b4f2-9004761b28e1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a09db70-acea-4b7f-aa02-4a651e63ec7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6655ed2c-92d1-4fac-9a63-0aa6f484cd9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b840a82-686e-4d67-bed0-65b6ab2600db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9615b035-2e73-419c-9092-e08d6a8adceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68ccc52-8904-4705-ba59-e30ab2741270",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf13b2d1-5a83-40ec-9cf2-d393bbe71529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dc833a-a368-4e16-8e64-3e506806ac5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d6fca0-2cc3-45c0-8927-16abb8561c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54497ee-d2ce-48e3-bc1d-93f02e366288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1bfb5a-9ef3-4005-865f-e297705c0f3e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367406c7-631c-4e06-ad94-f836727c56b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433f632a-d8bd-4670-af96-4ea09d0221c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d6530-da7e-4267-b630-ed79a38b9aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe065b34-3cf8-4cba-a1ff-e8e34bef59c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3162f411-376e-4d1a-b26a-10391982e0c0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc3c1f5-dd08-4b93-9f10-5c90bffaf89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a551cb9-dc49-44d8-b71d-a587a3455e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0ec51a-7e20-473c-9153-6f1c0f891998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfec8523-0f7b-4be9-a0e6-149a0f410d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4806eb94-6335-4b26-ae6e-263bf1b52722",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a387722d-03f3-4596-ac4a-93d9cbee4b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98772e8c-f84c-4bdb-bd84-7d67ef65d615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4f3054-b91e-4a3f-9f35-0d8ee3b85e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bece13d-19be-4fa6-9504-9cc068fbda73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b77d66-c5ea-4b80-8913-5fcd8f2e68fa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e444a0e-5f30-49b5-9e3a-2bc2b3e08fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca06d24-4d08-46e9-871a-2817c3d2fcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b964aa-5b32-45dd-908d-80a4ef2a6a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b197dfdd-f2fb-49c9-997c-f6effd66f948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f53932-d9b6-417d-b1f2-19192e43bf15",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cff7d45-0178-482c-9517-1ff6fc315c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab968e2-c2b7-405f-8499-5790e5567d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1529350b-c9ec-43b7-86a0-f99a02ea4813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d713a03f-3042-4565-8394-9f4f41e1ba7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26da599d-7ef2-461a-8282-2fe66e6f8fa7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f678b537-6ea9-4d24-a1b1-8d56a5770e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb65397-2ef2-40bd-aaaa-fd124f87445e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54b6268-25d9-4bc9-b524-d50091647eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6340c2b2-df52-473c-bcb7-433c281fb324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd531818-9102-4aae-b5f0-f05d76d4cde6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d2a70-5746-4bb7-a125-3fd2258cec67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c21ea9-3d86-4671-b641-017f8f267249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebf8ba2-3ae6-42fb-94f3-a00aa91ab08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a6d4df-49b9-4e60-80a0-9e9657783b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa183b2-0198-49e6-8325-d40c6bd4e583",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fc0a53-1212-46b6-a8ba-de8552db2c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a4f3f6-381a-4b29-968b-191c7798a5d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38672be1-da28-4ceb-805a-e8d3a536c4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030c2a97-39b1-4d82-bc0f-7c9ad37358e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbe2719-a805-45e5-bdde-8fa1e10c622a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eccc8861-b1ae-4767-b624-e3fae362a920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb59b283-b81b-42a8-9998-992c94f3a9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d272bf9b-72ae-4f8e-8f5d-c9f99b792702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136bfef2-0bef-4231-9064-f0eda42e5266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05548e7b-fdf3-41d5-9f1e-6856054260a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de8a4c-c072-49ad-929f-977f026b7277",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75405278-43e9-4460-b563-1e5d22b59c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcbb0cc-82ba-409a-ad99-9080f87eac42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79f8e73-8f2b-46e1-8f90-f836a44d3282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5330d6dd-5902-4bb2-9f77-2d247d47c30b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1857b1d4-9b25-4ef1-853d-c8cd8879f52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74691fef-3629-4483-8df7-fc432d89193e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d18e165-8b2b-47a0-a686-c73296033452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a139234-70be-408e-a9cf-6f3879d00d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dd48bf-8127-494f-837d-8aa96d140b01",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f4481-9c95-47e8-93ec-d2e5e2c2a791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d298fb6-3a7a-49f6-a4cd-54bf734766f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0026b03-8ce5-45c5-a6f2-63c0f995d1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f51f7ef-6004-4bdd-b317-2f39925e8daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb36dc4-df85-429d-8746-d7e450bd5efe",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2276879-64d4-4816-8a9b-8ea4a21b138b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b3b87b-f6b0-415e-a3e7-d3cc6d74ec0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533f376c-37d1-4d63-9fe5-2c30d9d8a932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a86e630-30b2-4608-bbe3-03684b4da2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d94827-d783-47cb-a609-6ddf2818c106",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e88f4a-40a0-4659-be0a-fb7437ca8231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533d4962-1e33-4f75-a1fd-6709743ed83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89471b48-6630-4152-95d9-b0428188c313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a089b84b-51a9-4591-8b9f-8a83bc3f18b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9fc12-8768-4564-9e36-2457fe0816b2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778a7a54-4205-49eb-8e35-74ff2bbce082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d2b7f0-a8e3-4188-9ebb-404ed07f4c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a18564d-6af4-465f-b8e6-01a7c1579890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a551edc5-4e0d-45fd-a37f-3e3efde1979d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c2c4a85-2725-40bd-8765-4e4ef8276614",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4a00b9-6458-450f-9d7f-dab489136dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5621026b-a018-4c26-9b7a-9c97342f66df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69876ba-ed89-413f-b291-333b6a049a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8d991f-8df7-4182-8674-86d5a7add268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ade809-898c-4ca3-ae17-592fa6959045",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f799391-c387-4966-916a-340afe5706ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ca8aa0-0952-4f9b-9a38-8ed15638a932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97222b9-f97c-4945-a497-ed08d39fb72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a15eab-ff06-4b4b-94ea-adb477627252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa56b06-6980-4c33-8a31-fca7990f4212",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1086bdca-3aff-41c2-9d33-678d12528c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b769995-dee1-4819-9bb9-f8e62c613eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3a06fa-6ea1-422c-8216-5927b0daea57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed881f53-0f6e-41e1-8ce8-f582f74b8b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f0551-62ca-4902-be2b-a65f1e9c5aeb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076b99bc-4f58-4b04-95ba-16f02b523fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a873cdd-4516-4265-a497-fbb4465ea7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62aa688e-a413-4d4c-883c-79f7b300a98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85f8a3d-c487-4e4d-9038-e5d609a034f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe035be-c252-4f80-b48e-154ce4384af9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402aba65-62d2-4a50-abeb-4d646b863a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c8533a-98c7-4033-9970-284eefe59a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed27cce-bfbc-46f2-a646-505050fd6460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9fc354-8c4f-49fa-bcdd-8c7065f4bed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc810fd-5b7b-4e1b-a3a8-ec4aa61633c5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d934f-bb0d-4f80-a50d-37e6debff86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54b2a63-d937-46de-ba41-b1d5195c4664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572e9189-09a5-430e-a417-23a830c4ccb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8e4ff6-b835-4be4-839f-8577c44f3841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4cd640-f18a-4fff-9918-be9d1133ab01",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ad2f5f-775b-4ec5-8b53-3626a2b7c055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc20bcbd-87f2-4d3f-ab4d-ab7bcac20406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13136cc6-0468-40b3-a4eb-d66b781a11f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c8df0e8-a231-4b86-85b5-be2b297e59b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc738544-f7f9-4493-98ab-473657f9061f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47472da-7102-463d-8db0-96aa98bde664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6583f862-2330-470c-8f6b-757b57d50ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b097b3d-85cb-4139-a88a-47682b135fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "832d3501-a31f-4ebe-87cd-52364b639105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464acf7d-7e5b-4ee0-be15-2df8aabde9ed",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38e9e53-8540-48fa-8efd-2a2a5eaece3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97afa2aa-0b57-45fd-8987-4ec5e7d4ab2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cab4cef-5251-4227-b525-88c606e461c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b026870-64ec-4c66-ba09-383e447a0141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf13dc76-0a33-4427-b6c8-18f6122fd720",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc52e59b-8083-4a61-958e-a3b91eccf03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05616d8d-f7b0-4faf-a565-669874b6277e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74745b0e-8888-4bde-876f-eb2b8ad65d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e38be-b586-4b1b-b57a-52d3126ec049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbab8a5d-5567-4565-9bba-5acc010967c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85bc55-10e7-435a-9257-3d0eef97e7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d86d3c6-1587-4d69-a033-e43bd9a793ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3eda472-a189-4180-bc99-b28477a256ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de9de50-b89b-41c4-bf5a-f054710646af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2053817b-70a7-4b2a-803d-1596d45ed666",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dda400-c0a2-46f9-ac15-cef938555e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0453041b-dba4-4a8e-8228-9b57806b5bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d8462c-7ecb-402c-b9b2-229fd20db061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4981e39a-ece0-4d53-8c20-3684836bf641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b280c95-56cb-4b5b-a2c0-017f993503f6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b59b7f-600e-43fe-b219-664f4fabdb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec6db04-147c-45e6-b0ee-d08f7ecf87e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff349b7a-771e-49d9-a73b-991c6c68d0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdee4cc-db4e-4a29-907b-e4f788059bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6edaa95-0852-4c09-9831-42ccc679a510",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c072081-598d-453e-9e4b-61c95194e480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc439e1-84c5-4ff5-b7a0-23affe733362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1331b9f-2b3b-4030-9dae-522aa71b28db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb51e60e-e0a7-40d9-b620-d21188ffbdd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4860c46f-2727-4e02-bfac-fafb8ab229a4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4221f7-ce7b-44d8-90a7-4fed49fa049e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03a1499-3180-4df6-ada9-2b478b93b511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d277342-4119-4374-b981-26ab2b2baa64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e9c7c5-8aec-44eb-81de-7a2152d50cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775578ce-d727-4aa7-acb0-fb4bed95492f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102b4cab-e5ec-4fb9-bd72-a0d0a5d67770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fcfbec-ce0f-4914-a05f-6b64f9664d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed637a4-bfac-4d24-b490-6830c1354c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e3f934-b539-4d92-8653-1c4dcc8f0305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb0125b-289a-4390-a9c2-f4a932f8c1fd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adbdef5-2178-4f91-b199-847da24d0369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3542676-84de-47ea-81ac-62de5ea6abf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f3674f-83a6-418b-a899-b65181023974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd91e75-3c30-4e92-8692-475c86a4315f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f2381-c469-4b16-b20f-ecb1d05149c5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a5facb-4da1-4c4c-a2e4-89734b799e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a86b14b-c21f-4b52-b59e-3bd156cec4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71b7fde-31ba-4a17-bbdb-afb26e343f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebf8657-5989-41dc-b7f0-285297ac1b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9cee33-b0b4-4eb6-88f3-2398bda3bf15",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2223a3f-faac-4ddb-bd1e-ab0bcbc65a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4461e4c8-da40-48d0-93f5-76619509742c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3069e4c-baa8-451b-ac21-4e2cf7181197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764ab8ce-bf3a-4ed4-a2bc-e777cdc64aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a57657-9b36-4486-89ac-d12c7d589ad6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd34d63-2e7f-4659-be87-56a4a154fb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7066ed-9ef1-4943-bd76-9e3daac93efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf906de-34a3-418f-b472-000dc254e29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ef8146-8058-432b-9594-370435cee67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528619a1-5338-4b3e-8f2a-8fd4d8b29dc1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a38c98d-a4cd-4161-af46-b8228ad4a219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0566b0d-6d1c-43da-bdbf-cc4624a26f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62477f4-61b3-4b94-9051-c05826bd7fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487a0de8-c5fe-4be0-9019-22f1bd5eed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b3183c-fcf5-4aa7-a743-89b6c8c20b09",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a8d3ee-7d48-4c5a-a4ca-bf2bd086da3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73a936c-b376-4c93-95f1-f3ff60474a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7eeaf0-be07-42e8-bdab-894e408ee2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd3504-c18f-4497-8568-bf0866575000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf3bf2d-9d51-461f-b66b-ec206655e4d8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ce520e-6c33-4320-8c3b-652df1abf0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29593d2e-c914-459e-b25e-d6133f3f5127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fecfe4d-defc-4250-93b5-ec335797f25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690b36a9-f707-4d09-9186-70924e54a72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5a1717-e90e-4087-990b-60e3c6b7399b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e700ef-f49e-4eae-b1d7-c45c2633875d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fe703d-2beb-4cf1-8b9e-b889e3641941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33db22cc-5c58-429c-be56-cef9701bee20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1102b8-838b-415c-ac21-6b253492a999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653ba338-b93c-4f31-8362-ffdffec93144",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ec96a2-a9dd-4088-900f-3ad716aa0d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ab9441-67a7-476b-8ac5-a61b8f9b8cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a44a259-be16-487e-886e-2894f48c58d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c637298-80cc-4fcb-bbba-f1eb8bb90d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e162a9fe-12dd-4a51-b8d9-6707ec113f5d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023afd48-eec3-49a9-b9ad-81ca78fca4b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20955ba0-ee9c-48d7-a17e-d52bdbaff2e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3237f1-bb39-41d9-a6b7-c826f0ae5d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56405b3f-193b-4064-8f05-09085ed2cbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a0ea64-1f16-4381-b5af-570c90b9267a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e481210-e64f-4321-9fbe-726f67b2f833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5647fcc-bf01-4b0a-a13e-74c8465965d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5aed13c-6aac-4382-874f-464a5cdd8626",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d312c6a2-bd11-4e19-8756-13b090d82a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cf2710-85b5-402d-b81c-cfefd118ec38",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe7379b-ce9b-44f4-8bfc-88180a2e759b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910e6e1e-52d7-41fa-afec-52175c284d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d765132-0772-4502-9f4c-604d33089f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000431ee-9bb1-4eb5-a77c-2e2943453b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a0c7f9-7e33-4c9a-9308-9d73ebf83f53",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f64413-8a47-4612-8524-27b33659d476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "760eb092-29b3-44ec-b85d-0ab1f8398e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b8a551-fd6f-4325-bc39-12a519380fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf754d7-82b7-43d1-afc0-3dca5301f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0833295b-f01b-46cf-b74a-3ffd5f3d3eab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67ec8b4-3803-4fbe-9e49-0dea419c8279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf0c449-a26a-4f1c-aa35-d3dbcd480b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b584137-350d-4dbb-ba14-8a8f1e9e6560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99a0639-6b71-4798-956b-28bf9a3d87ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dd3036-6dca-4374-a591-d4060bf38389",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ca311e-1c38-4c39-a00b-edf61fb23fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c743ab35-3c5a-4f86-b0d3-424b15724592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16fc87da-5a6b-41c5-b20d-f8305412f226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88359693-fd02-47cb-9619-3142871b0cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2e6769-aaf5-4309-8426-351e56cee532",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64037c6-ffeb-4955-991d-28be4ea233e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542f6a3d-9837-4ec7-9940-ea991efde044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b2d32f-0ee6-47b5-bfef-80aa5fc3e4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca6b6c5-4bb4-4b47-975a-b8bf9155a081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cd57f4-3b11-46d0-8985-4d965405ddfb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eae2e75-2406-4e58-ba65-707a0aee9ffa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835374ac-6e47-46d8-9524-9d5a66fff139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b0914-d082-4a34-bd11-7178e86b9f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263243d1-dcd7-453b-9f4b-841cb37e1b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6d3aa5-8d11-41d6-b040-29dd6d65951a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b7d7ff-dfcd-44df-ae76-9eb4f1ebcd9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34432555-f301-40e7-9b37-ae51fe598693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b09f9cd-3b75-4d18-b307-96d186ccc8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea7582-9852-41fa-90f6-99d8acfd304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c1adbf-fa69-4f6e-9c8a-2491442e6070",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7a6ba2-048f-499b-b31f-d34eeb89e47c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a639436b-34d6-4d79-8bab-b861b5cd538c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b53bc91-044d-4358-8248-4a2711820cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffaa56e-ae29-4ff0-bb0b-6515845d6492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d99a347-0cfe-4a42-aa1a-8f10fba717f8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b35b6e-25fe-4206-bd94-0bbd496908ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418f9e47-e22a-447a-b022-4a1cdd00f674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ad983-a2e4-48b9-8fe9-92a66ed90f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c88a37c-53fc-4cf9-850c-b37d191b7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868d33da-b6a4-4d49-bc9a-6082acf47093",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed8a0bb-742e-4955-bedf-d92efcec28c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a148af-8fb0-4780-bc75-2fd0b71ee7c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8766fe82-a97d-472c-ba1b-7b257849bbb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92bb92a-1bf7-4c2c-96d4-ecabcccd9c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e743d15-62e0-4f10-8d66-125c1e72f449",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3707801a-9aeb-4158-a758-83d5a479dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279ccb17-d8b7-4194-97db-2c171bf588a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29e1a93-18b6-4f38-a7bd-67304cba62a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9455db4f-24da-480d-be09-1891cc1d9979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5288adfd-6254-4653-aa73-33fbd28f9026",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3ba10b-adce-49ce-b5e2-18727503344a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506218b4-8ef9-4405-941d-c9f38879f511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d4e38d-4078-4017-ba01-c2c8fcbcb4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18462b0-b6be-4ebc-9ea4-8fa75afced43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa1890f-ca98-46f5-9133-1d9d1c9b1d5f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfa4689-eae3-4540-bd68-95f806ee24c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9134d501-80d3-48d6-9c1e-a609d77c62e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fca774-17f6-4650-93dd-a67d0d08f5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee54fe3-cab1-41bb-9e99-2f5b98a0d0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a68d867-da79-4939-8114-da5f2ae936e6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71776776-1fa8-4aa1-a327-a09553fbef10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a0d519-0c5f-4330-8f5f-498f2cae407e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc09638-bb18-4555-a5ed-00c3d641ccdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23304dba-4e6d-4f2b-8379-d09899ae2182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dc0a43-e595-41cd-920d-94904cadbfc4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b56a1a0-d4cc-43ff-a778-8e4128b6c505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b2ab46-ad8c-4dd7-83b9-2204e3f421fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcabc62-859b-4c4c-bb3f-5678a43d42d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202f7ef3-be23-43e3-b24b-023d154fc2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b11cb9f-dc82-4175-b976-ae727cf8d3c6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd587f25-721f-41ab-a87a-12cdc858a1e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "308e4744-ad7f-4195-a57c-5f13bfc1ce87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7bddf-6371-4fad-a24b-d7bd0cc85e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f091b7aa-1361-4b66-8e93-61af468bf096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27648db-cacc-4be0-96cb-68b2662ba2d0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf5cba7-f2cd-4938-a59f-20ba4ac41ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39186737-398a-4840-8529-f4b344178aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d474d226-768f-4d2e-9ff6-4b193ecfb672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6734b669-2f44-4ff5-ae8e-c86040fc9201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32252265-98e1-4ba6-9ad9-66d8f0efefe9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf69026-2557-4597-a234-1ff4adf096ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e55b0e7-cf8b-4c33-9b6b-174ba88c4fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b744f265-0085-4614-85c7-e3cf7040bc74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdca3d9-d1d9-425e-b39e-a189de02a85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc1e764-d95d-48ca-8819-7cbc4e949bcc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860b7a06-425a-4a4c-85b7-9025b6935092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a257d0d-4de5-43a3-bccd-7a05da7c0ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb784294-b2db-4815-9873-f5e9fba38b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db99714-a687-4564-9e9d-4e907d25a6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b264f0-a6ed-445a-9954-de1610ff42f4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645761c1-de34-42f2-ac37-5526c40d4be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1d3080-2ece-475f-9f05-d53b23e98a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231e3536-0c3c-46dd-ad10-8fd33b20a83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039ba0f6-ab99-40d6-8338-eb8dce05bbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c75c6-dc4c-4fe3-ba39-279a40f8d09a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5401c338-b294-48a8-b934-81e38abc84bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ddebd67-4dca-4878-8ef3-7f8b9a3bc9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f728b4-9d34-409e-8d2e-32715ccb8553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21811e1-b532-41f6-84bf-e14ce89b5ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ab4ce-985e-4466-b2cf-e99cf74d55f8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040d083b-1d7d-4164-b782-759a028fac5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83cad7c3-01ff-4935-965a-8bd31f202f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f3ada-92b6-4b24-aef4-cdedc3baf9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf484b9-4598-48c1-b56b-4477f2bce882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2573d0d7-f487-4024-8f36-8df68c1a7516",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aaff5e9-ba8f-4ce4-ae39-94ea1722d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93d8cb4-8a06-4fff-819e-73748c860aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29dd1adc-2b08-4cae-9ec5-985b6e490a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219c0e87-6edb-4894-92a6-4fe008273cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0371db5-18f9-476f-b85a-c063230c2f88",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641a8465-1c5c-4586-96c6-6fba327510cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b3b555-4a4f-4f0c-beea-3d2fb65eb9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677f34ff-9bd9-48cc-8fa3-4cbcee5341ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adae496b-72ae-4dfa-98a8-684ac366d418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a1d676-d8c2-49b5-962d-936d719e6e5b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f422896-6a88-4bb1-95df-db5b0638f729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdbba3fd-6a78-4fc9-90be-d10019252e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cb21af-0baf-41cb-a4a8-03b8537c8abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d80063b-62cc-4a8e-809e-1f50c8e1ea55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8632a30a-d1e9-4018-bfc1-84b50045ebc7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649ca31a-5ad6-42c3-a8ac-505b28c9d534",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4128e29-1985-44ab-adf4-4956623f7331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fccdb83-d061-44ff-99fd-063d21556ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42221f3c-c151-4d91-a41d-085aa61b53a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f389fd6a-ef71-48a6-89b2-03ddba824a11",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99f115e-f53f-482e-a061-aa7e7c159c38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fac2587-1d24-4fd0-92de-a991f7ec8786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f346fa-a112-45b8-874c-1a6e01302dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6368e6db-e031-4af9-9bff-ffe7cb6e6f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1d2115-1850-4766-8b2f-13e698270907",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12195ec6-2c6f-4a2f-89ad-18f15ceedc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f56ba46-c426-4fb9-8c70-c10521825bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a2424d-c21c-45ee-9d4c-df1e72f32dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d5a607-d895-4c65-a70e-9fc49aa8c4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c918aa0-5e78-4963-9285-176fe1fd8c1a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c970be5-d88d-48d9-8049-844a924bdf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d0edf6f-49e4-4349-9b0e-e9b94dc39a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2feef7b-7204-445a-9c01-39e5bbb9fe99",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63766b4f-4baa-4eb9-8da4-52e8ed8ede49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2da735-5307-46aa-87da-7b38e31dac5c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9349952f-f36d-4345-8c31-2d772cb0d8b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f856b9-e1d5-4866-b87e-73541d862f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2090fb47-3603-4830-8028-905ecbdb810e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96d4fe9-57d8-4db6-86a3-ff6c30ed8df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8891cd-a18b-4b8d-b9d9-f9dac20425eb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8148b52c-40da-41c2-8fd6-ccfb07008891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb4c333-75ee-498e-9c17-93db40b35310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1499e884-8a80-493d-9d5a-76eb89720296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada074ac-ff43-479a-b53b-830bcd24f1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3ce319-145f-4199-9bb4-022fd723e204",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d458e893-ea67-4939-b696-eef67c3d8d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c77748e-5925-4d8a-be33-860b76967a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6c9fc8-1ef6-4a58-9c10-9fe0691a8173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238e08bb-a5c1-48a7-b82f-9e9c35a625f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613487c0-2d7c-46cf-b8cf-50f79448979f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b59a24-517d-4f01-869e-b3d099b154b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647553af-de45-42c3-baf7-d775acb6c8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94904eab-e29b-4cef-b062-db60604d4e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5be8f0f-06ec-46fe-8a6d-d59974aa97d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a933c3d-85f5-42dd-98a0-2aff963c0a08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7707eb-4651-4834-abe9-fa54d0fd4a53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f9ef92d-497a-4ca1-b98d-efe266d7281c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4770cf-482e-4397-97a4-0320be234afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1cc6bb-78cd-46c6-9fb5-c4b69f82981d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe9fcfd-f018-41e7-bad5-757d90b2ac1e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c227543-13ea-4e43-846b-ca14b34be4a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a219a591-0396-4048-bed1-afd51d46fa3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b261d1-b055-4b7b-8c7e-ffb29a9a5014",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd40819-b07c-4ba6-a175-1335064762ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c03987-b55a-4c50-a993-7d03ecc18c53",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbde9d32-58dc-4119-9cc4-3af022d9d16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc986b70-3621-4ab6-bed7-718ca6072a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ea3031-56dd-4d44-a04d-51edf37f0783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8286d0e9-2a1a-4d41-9731-af4906297b9e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db9d20d1-9d45-4404-a2ea-2e6c834996b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e77f28fe-2794-476c-aafb-8faefd0d450a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6855284a-df59-4c21-b366-a0828553de63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8419a1bb-037f-4c23-98a4-b5d8eda49284"
                    }
                  }
                ]
              },
              {
                "id": "459f5f31-bba9-45d3-aee3-0576ebca5977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "08fa7bb8-0648-4695-9a60-62a2abbd7376",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28a890c-844a-4412-954c-22ccaf03fc29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "44a1d386-f569-4fd5-a1f3-70e38c8bb336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95739370-acac-42e7-9c82-f754bf995099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7100a56-5cfb-40ba-acff-d7f938016cf7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e86a972-35d3-4d29-aeda-94b32edb2981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3198fcb6-6f05-4bba-91f3-fb3d4f00f116"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d795ad-cd58-4eb5-86f5-007cf53d1e86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94bb5481-c1af-41dc-ac49-10d9b97d8a91"
                    }
                  }
                ]
              },
              {
                "id": "b59aac10-f6f6-4be3-b4a1-cf1ed4281cf4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ab8827ad-faf4-45e8-9c5a-d3be67dac2b0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9076a2-da0c-4380-b92a-e228c971b9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "82d1b1fa-e76d-4ef5-8e93-f96edbb90854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af604d23-2a52-42a8-aee1-01ff3daf265a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8429be9-777a-4fa3-b79e-b58b2df8d02d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dc642cb-81d2-4e57-8905-b2af2932f5d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4924df85-a364-4ae7-bee8-076715435463",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "83846fb8-9389-48b3-957b-9a2b0d3736c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10bd70cf-7391-4e5f-a201-170d4a852625"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2761bc91-467d-407d-8978-0a90e84777a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "301e1bfc-4021-401b-a42d-5c7b14e3af53"
                    }
                  }
                ]
              },
              {
                "id": "7cc01fd1-7258-4af8-8344-7c442f5f8e82",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b05260e-d536-4f21-aa58-4249460d1a73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b56f7c3d-e72c-4f27-a3aa-1b02ed46155c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14bf597f-a13f-4c9a-8642-b7f74d6cdb8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c5c3eee-8c8b-41a5-bec7-b6b244382906"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a32fc33b-fc6d-41ce-9e57-22f3f4670ba0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d118636b-5d1d-4ebf-b90b-e1ce4b4665bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf9e3f93-53ab-48c6-a290-439971db6495",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68e0186c-dc39-4f79-abf2-985b5b83be6a"
            }
          }
        ]
      },
      {
        "id": "047d344f-40bc-42a2-bb60-6bacdeb37763",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "be9b6208-7c4e-4a16-8d79-db6f2e09e46b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73d3bfcd-a569-4a8f-ad0c-58fef0251121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ee0e2e3-ab44-4da3-8f01-0c45c7910bb5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56910be7-3916-41ac-bb23-0328d25eb60c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2b413d52-147a-464d-ac72-9e0add1b0844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3959dc-ec3e-4513-a5c1-b3f19cee7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7abfb2cd-4ee3-4114-9129-86a9b91ed636"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b3ddf00-482c-4bcb-b540-b0f503071cce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0c5f91b-7afd-42ee-8954-5ce199bae82b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "997882d5-ce3e-4027-a93d-02f998455cf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6168357f-7305-485a-91fe-321c86ee0498"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7228704c-f25f-4906-8379-c9cf26b9e269",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "47a1e1f3-4f26-486b-8a38-fe35faf168fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0cd55bc-ef87-4d0d-bafc-40a90b2c3ca5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "325f83dc-1fda-46b2-8331-f197e084d8ba"
            }
          }
        ]
      },
      {
        "id": "4e0540d9-2691-422d-b3c6-f21dd3502db1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "04d767c4-d8c1-4371-aafc-7b3e7ce24300",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43d2363e-c530-45b5-bd8a-b84dfc412aa3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70f8eedb-fe3b-4aed-9522-910b33d10647",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fff4e0a-0a02-404a-9619-bad52c63e04f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae9f974f-cebd-4dc6-8695-a2cd72bdf8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b255de-7714-4d92-8299-d269e0636e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49b7d209-09b0-48dc-a95e-29b0e972aa3d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c974722-add7-44f7-b4a8-3d52a5141635",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c75228f3-ecb1-4e84-bcb7-49675a60dca6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "998b0e85-62ef-4e3b-8d9b-3784aab0efb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84a5a96a-e915-435a-8995-5f33df3395eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af122f67-4ce3-4c8c-896c-785375a0db0f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13079cc2-72c3-45d8-8138-a0d40ff4d621"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd596b66-b450-442d-8141-3b54313c4881",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "817c3c28-a4d6-4520-b187-3b354a3789bc"
            }
          }
        ]
      },
      {
        "id": "c79d9fb8-7a4f-470f-aa9b-13aa82c9c2cf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0769719c-d3df-40fe-920d-07ab50a58edd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713c80bd-e59f-4993-abfa-e8a92eb3dcc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c70b155-c126-4d28-b854-6e6fb3d5fe0f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff253cb2-4585-4aee-988b-c3bb366d28dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02472c8f-09f4-46dd-82c0-86706f2f1fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c375cf-8af5-420d-b70a-8caeeacea5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78b2073-8cc7-4bd2-b454-d1c278103330"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0598532-8499-424b-8d59-9bfdb5752c82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a09fe89-868c-4885-af00-738282b8c50d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5164928-506e-4514-847b-ef7f8c7c2f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a22e42cb-06b2-436f-85a1-f9a6fb74c2c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa945152-20a6-4199-8175-22fe241990c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b653bef-a276-4139-8b4e-363f79efc487"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dcdb891-cb17-486b-8c3f-1f0e21082da2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a2233c1-478e-4917-a85b-29dbdd495c52"
            }
          }
        ]
      },
      {
        "id": "4413e5b3-b1d1-435b-b639-7b71d924a887",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bbd2ac6-9feb-46e9-bb82-2e7130e2b8ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce3ecd86-ac90-4f92-86ab-dc5d5977663e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "efcbddfc-b11c-4f59-a904-dcecadc58967",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e23905d5-03e1-4133-b7bd-9142e79dc6c8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92ed8897-eddc-4242-86d4-ed904cad539e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.97222222222224,
      "responseMin": 16,
      "responseMax": 11392,
      "responseSd": 760.556262608805,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716511032638,
      "completed": 1716511071434
    },
    "executions": [
      {
        "id": "672aab76-d903-40b4-8a27-1d07de01195c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "332e64ad-a848-46b8-816b-43afb58e6fde",
          "httpRequestId": "cd0a66a7-d95c-4bd7-a70c-a26c24529d75"
        },
        "item": {
          "id": "672aab76-d903-40b4-8a27-1d07de01195c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "91162149-c158-4380-b71d-b55aa1f455b9",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "715a4630-5501-42b5-a2a0-7dee44c25731",
        "cursor": {
          "ref": "fea61c0f-8386-4f15-8a79-bd1da04ad3b2",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d8cdf95f-35f7-4104-ac4c-a877666c6eb8"
        },
        "item": {
          "id": "715a4630-5501-42b5-a2a0-7dee44c25731",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a799294f-f59e-4a90-9aa6-8bda17ac2bb9",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "b6ffc71f-de7a-47f4-a866-aac978662fdf",
        "cursor": {
          "ref": "dd48254d-0fed-48d8-aaac-779533280c70",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d8def247-8de0-4929-b61f-9809334e8909"
        },
        "item": {
          "id": "b6ffc71f-de7a-47f4-a866-aac978662fdf",
          "name": "did_json"
        },
        "response": {
          "id": "1703f39e-070e-4d37-967b-a74f21533c34",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba62964-6144-4914-8bf0-8cc7baa65f60",
        "cursor": {
          "ref": "02c76210-8dcd-4067-9645-c0f86d725a1c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7472324a-91a5-4aeb-b752-3a950e2ff28b"
        },
        "item": {
          "id": "7ba62964-6144-4914-8bf0-8cc7baa65f60",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7d16249-0190-403b-8d59-e11bd9a9a96a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 659,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba62964-6144-4914-8bf0-8cc7baa65f60",
        "cursor": {
          "ref": "02c76210-8dcd-4067-9645-c0f86d725a1c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7472324a-91a5-4aeb-b752-3a950e2ff28b"
        },
        "item": {
          "id": "7ba62964-6144-4914-8bf0-8cc7baa65f60",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7d16249-0190-403b-8d59-e11bd9a9a96a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 659,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55094c-7c45-41f3-a89b-306b26fe8813",
        "cursor": {
          "ref": "52427dc8-3397-450e-b50b-20ad12e9c545",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "49c34388-bcd0-4ff5-9ed2-0ae3b7160793"
        },
        "item": {
          "id": "3a55094c-7c45-41f3-a89b-306b26fe8813",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36e36e74-33c6-44a5-b57a-3558849b029c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c382a8-9f2c-4c68-bea7-3baec08766a8",
        "cursor": {
          "ref": "2121dfd2-2ba5-4cd8-8ea6-84cfad5a7983",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c353f4d7-a633-46e9-8eb1-bef7b73843cf"
        },
        "item": {
          "id": "41c382a8-9f2c-4c68-bea7-3baec08766a8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6d97dda9-63d6-40a9-b482-f050745c5d17",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc18691-c709-4209-95a7-59c8c171f9d8",
        "cursor": {
          "ref": "0c677948-c507-4aed-bd0c-7e2be3d88e30",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cf8d006c-c19b-4974-a312-f44758ffce77"
        },
        "item": {
          "id": "acc18691-c709-4209-95a7-59c8c171f9d8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bc52f44d-da29-4510-9b7c-811d649bd99f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14efdcb7-3555-4413-a06b-18b254c55b0f",
        "cursor": {
          "ref": "1fc71aec-4dac-4944-b2e2-12843b86aa23",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7f08206c-abf2-4c13-b216-b4023e88659f"
        },
        "item": {
          "id": "14efdcb7-3555-4413-a06b-18b254c55b0f",
          "name": "identifiers"
        },
        "response": {
          "id": "6b1e4ad2-cdea-4d52-ae59-4b138d6872d5",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34e8043-76a3-49a4-9ddf-37d1d1b50ffb",
        "cursor": {
          "ref": "0d485f9a-ce11-454a-9c69-e52d1fc5e85b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "efa3c0dd-8e02-4287-a4be-4366011c9834"
        },
        "item": {
          "id": "a34e8043-76a3-49a4-9ddf-37d1d1b50ffb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5b100e60-71c3-481b-888b-1d2283f3540d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba7cf6d-b912-4651-8ab7-75562272e9bd",
        "cursor": {
          "ref": "3e6f09a5-f5db-43f9-81c0-cf2515c78fbf",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30f43761-fbf1-4d6a-b78e-0d2c3467db21"
        },
        "item": {
          "id": "fba7cf6d-b912-4651-8ab7-75562272e9bd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8e332c16-3de2-443e-ac8f-be4abf4ca97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9510c7-b011-4ddc-bf3e-68c1b6205478",
        "cursor": {
          "ref": "d02068d2-6d40-448a-b4e9-61cdd759157d",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3a5c032b-3bd0-4f8f-bcf3-baf3e498ee61"
        },
        "item": {
          "id": "8f9510c7-b011-4ddc-bf3e-68c1b6205478",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a0ce0b58-ab2c-4237-8fde-ade301eeec14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ad64ca-480d-45cb-8f6a-4b1d5efa7728",
        "cursor": {
          "ref": "ed8fb032-91b3-4563-a4f6-c9b210084aae",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f9af2529-5e25-4449-9e05-e50470d3f86d"
        },
        "item": {
          "id": "82ad64ca-480d-45cb-8f6a-4b1d5efa7728",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fcb3d784-529b-4d6f-a725-9e398ea1d8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ca5e6-7a0b-4255-bcc6-5181f6ea3dda",
        "cursor": {
          "ref": "d5858371-9c38-45ec-ad92-540a4979b032",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c56db6a-6ce8-40ca-84f5-dca506ed07d3"
        },
        "item": {
          "id": "f87ca5e6-7a0b-4255-bcc6-5181f6ea3dda",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ac9dface-84c8-42da-8ef5-0357fc21c868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5300e650-2033-46f5-b28a-bb3122c790be",
        "cursor": {
          "ref": "f770964e-9e83-49c9-9c57-966ee91d9c14",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "85d76bae-94f4-42e1-b0dd-1f69f3576968"
        },
        "item": {
          "id": "5300e650-2033-46f5-b28a-bb3122c790be",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "06644d35-9f0c-4252-92e4-327c14021972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9704e2d-953e-411f-ab7d-afd1cc9b4d9a",
        "cursor": {
          "ref": "1b041e88-11af-4077-bc4c-c1e8fa3e6daa",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1f962795-d011-460b-add4-ccc4aa0aade7"
        },
        "item": {
          "id": "e9704e2d-953e-411f-ab7d-afd1cc9b4d9a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "265274b4-e2f5-422b-97f7-67a7ce1c606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c1489d-439d-4cf9-bc59-aab010c30bc9",
        "cursor": {
          "ref": "3fc9091f-6c64-4578-adab-43ac053387b2",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f56a917e-32cf-49ed-b0ba-66de760578eb"
        },
        "item": {
          "id": "87c1489d-439d-4cf9-bc59-aab010c30bc9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "14759482-c52d-43d8-9de3-92eaa9778f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e28c60-999c-461f-9a75-defd6fe045f6",
        "cursor": {
          "ref": "311352e5-6be2-4e2e-aad3-a2feee20db57",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d8a6c4dc-f618-4e2f-883a-caf72832ff79"
        },
        "item": {
          "id": "a3e28c60-999c-461f-9a75-defd6fe045f6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "00b7463b-596f-4567-9f1d-ffb4d8c41f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97588a7b-c720-4c2b-bb03-c6ea4e6b2647",
        "cursor": {
          "ref": "812588fb-5648-4d92-a660-daf70b896338",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "16a6fdbc-b17f-4199-a56b-66f4e3b1ecca"
        },
        "item": {
          "id": "97588a7b-c720-4c2b-bb03-c6ea4e6b2647",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3ee2ffc6-7e90-4671-aa82-3d87b3f75837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f186d46-b47e-495c-8b59-1c436cdcd9f7",
        "cursor": {
          "ref": "8631d295-1c88-4d72-8458-257ae675dce9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fe17b3c5-d62a-4e6c-80b3-9cb685a71eb7"
        },
        "item": {
          "id": "0f186d46-b47e-495c-8b59-1c436cdcd9f7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "645ca94a-5eae-497e-953b-41a86d1c98b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62970036-9959-40ad-b846-375e395563d7",
        "cursor": {
          "ref": "3adfda26-cd98-4902-959a-8643d61328cc",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c790e175-d547-4724-9004-f81172576fe2"
        },
        "item": {
          "id": "62970036-9959-40ad-b846-375e395563d7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2579763a-ace2-4ad5-8344-df622093dd79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e014564e-c50b-41b8-ba97-ca88f4762310",
        "cursor": {
          "ref": "6abbde85-2784-4988-bd85-bde26846ea2c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6794dabd-edb7-4ffb-8e71-44d7622a8442"
        },
        "item": {
          "id": "e014564e-c50b-41b8-ba97-ca88f4762310",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "55d9fc10-19ea-4a9c-b037-89944ada0c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e64746-9be0-400b-9799-bf5d2d7f5b6b",
        "cursor": {
          "ref": "6d70e8b4-1578-41a4-b925-8cdb8ef0e65c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "20538cc1-60b5-4d36-b9b0-fe88d45a599a"
        },
        "item": {
          "id": "24e64746-9be0-400b-9799-bf5d2d7f5b6b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "469626b4-a6c3-4ac6-9104-380afc7b6b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9b8b94-1a95-44ef-8ee2-4bc2d4747cac",
        "cursor": {
          "ref": "8643432b-0828-44ff-b908-1a68a7c8c7a4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "722a6eb5-c63c-4ca1-b6ad-2b2117833f37"
        },
        "item": {
          "id": "5a9b8b94-1a95-44ef-8ee2-4bc2d4747cac",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "48851efb-e50f-4ba4-be17-6b36818fedbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1beb84a-2e8e-4b20-a3f0-3f5668dd0a2c",
        "cursor": {
          "ref": "f0b55d29-974c-4a6d-bb33-8ae5a579caaa",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19b62502-5e8f-4e2a-a2d7-945209445a56"
        },
        "item": {
          "id": "e1beb84a-2e8e-4b20-a3f0-3f5668dd0a2c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "52950406-9ca6-4a25-8f61-5fead4f375fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c506d5-7439-4299-b788-33d48061cc98",
        "cursor": {
          "ref": "a6ef4efd-9e74-46b8-9028-fa26bfb59ad7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "27d9710a-2bf7-41ca-bf0d-04be14e8725a"
        },
        "item": {
          "id": "64c506d5-7439-4299-b788-33d48061cc98",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "407331dd-acbd-4773-a6d4-51cb5e4d4871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d52e46-cf36-4a4c-b7dd-611d249d3d12",
        "cursor": {
          "ref": "634dfea4-29eb-4e58-9026-f607fa7ef9f9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0f1c13e2-2204-467b-827e-e5205ff94521"
        },
        "item": {
          "id": "b9d52e46-cf36-4a4c-b7dd-611d249d3d12",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cd7e66f1-4646-4aa2-8a34-ecef8965871e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161349da-44a0-45b3-a0b7-425820752230",
        "cursor": {
          "ref": "e01e81b4-0258-4c0a-915c-a23288131d72",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7e42b97-8594-4026-82a2-a03fc9ed6278"
        },
        "item": {
          "id": "161349da-44a0-45b3-a0b7-425820752230",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5e3953c4-57cd-4ef4-b454-90d2c50758f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e892d57b-f99f-41d4-b42f-56952e1a0272",
        "cursor": {
          "ref": "43966468-3110-44ac-b267-ff3a5000806a",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c343dd9e-0140-47c2-b3e8-ad87bbeb44b8"
        },
        "item": {
          "id": "e892d57b-f99f-41d4-b42f-56952e1a0272",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9df7e2b6-f7db-46c7-85db-a3acb8872b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0064a5-d87b-41c5-a403-d1498ce20e1b",
        "cursor": {
          "ref": "7d8254ac-86c7-4ad2-9091-6b2b8cb2e4c6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a3233100-784d-4885-bfd3-9df3948395b1"
        },
        "item": {
          "id": "df0064a5-d87b-41c5-a403-d1498ce20e1b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "66861cf9-fbc2-4187-8d53-ce22688bd3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513f86a2-3333-433c-93dc-f538c852af29",
        "cursor": {
          "ref": "90319726-4852-4ff4-a187-0fef887bd7a9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4049aa78-fbd1-40fa-ab77-11d7470c3bfb"
        },
        "item": {
          "id": "513f86a2-3333-433c-93dc-f538c852af29",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e47d7db5-b73a-4f91-ae1e-5903996a2101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df7af64-b274-47e8-b327-d062b38f462e",
        "cursor": {
          "ref": "b43a02e3-7556-4858-b8c7-d42867cdd5f4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "856f035f-4ac1-48a6-ab3a-f5b028f05edc"
        },
        "item": {
          "id": "3df7af64-b274-47e8-b327-d062b38f462e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "98439d93-1598-4778-bafc-da8a77aeb32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e429b49-4506-40ed-a35d-1ebfd29bbbe1",
        "cursor": {
          "ref": "056d6727-a626-4dd8-b4b0-d3a14d314577",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2d20c13f-a1db-4314-900a-5e13b2760e1e"
        },
        "item": {
          "id": "6e429b49-4506-40ed-a35d-1ebfd29bbbe1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e3761ad9-2621-46df-8cd8-864e6e36f282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2bea72-d5e1-4035-ab7c-b88ebf8d6290",
        "cursor": {
          "ref": "9e007dc2-5f84-464f-9a66-4a4b21b220fc",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "49fab65f-3236-4eb3-8b87-ab6c853215a2"
        },
        "item": {
          "id": "3d2bea72-d5e1-4035-ab7c-b88ebf8d6290",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1bc85e84-50d4-406a-8c84-2860169767c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1cf297-b51e-4356-83eb-71c40edaf61d",
        "cursor": {
          "ref": "78a1c449-d80d-4b84-95af-59f141f09710",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4455ad84-4b49-4cdf-877b-85db587d1c37"
        },
        "item": {
          "id": "fb1cf297-b51e-4356-83eb-71c40edaf61d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9b5bea8e-2240-4873-845b-ff8958f7000d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d362567d-24b0-489d-94db-afbcfce88f28",
        "cursor": {
          "ref": "bd8ff4f8-2b55-4cf3-b221-7647dbe93068",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f8812c6b-8779-44ca-aac4-d853c75a39dd"
        },
        "item": {
          "id": "d362567d-24b0-489d-94db-afbcfce88f28",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "11b35195-acfc-40df-8441-be61adb9462d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d71429-79ba-48c9-8bd3-d2730d2c1ca1",
        "cursor": {
          "ref": "3c42c031-dd97-41d6-8977-bac53e0c9c4d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c6619040-5524-4859-a756-4e2fede01e22"
        },
        "item": {
          "id": "a7d71429-79ba-48c9-8bd3-d2730d2c1ca1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7d43a8cd-31a6-44bd-bc88-cb387f29b0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b072a38-ae96-42f4-b37a-98959e89308a",
        "cursor": {
          "ref": "1b50de17-f87f-49f2-ac26-8dfb041dc3ec",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "557efc7b-ab42-4a8c-81b2-f09fb8c6522c"
        },
        "item": {
          "id": "9b072a38-ae96-42f4-b37a-98959e89308a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5022dcb3-0c96-4486-9d3e-1259cead5753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d20f6f-b1e4-4406-af99-951a0e9fa8e7",
        "cursor": {
          "ref": "28e967d9-2492-4ba2-89d6-8f45d21b6e70",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5c902b29-a7e0-462e-b4f2-6693d2ea3d94"
        },
        "item": {
          "id": "82d20f6f-b1e4-4406-af99-951a0e9fa8e7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7209e802-42c1-40da-9d18-a37d7c66eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2806ea-df20-47da-a6ab-d5fc32579396",
        "cursor": {
          "ref": "05700dca-8fd9-43d1-bc19-b1e8773d7316",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8b606ef-831d-4ae6-b8d4-30120ea67857"
        },
        "item": {
          "id": "7e2806ea-df20-47da-a6ab-d5fc32579396",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "87e8a0b4-73e7-4f06-9b56-cea8d4c7617f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2745d282-ff10-47fc-beeb-e5ff952546bd",
        "cursor": {
          "ref": "4015db80-cda1-4a8a-9148-5f2ca1ebdc30",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c1f94b78-368e-4570-af0e-c74727c739bd"
        },
        "item": {
          "id": "2745d282-ff10-47fc-beeb-e5ff952546bd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ad92e8e4-8fa2-4211-b5a4-525764e4291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915ef82-6581-4aac-9b2a-a99532609aca",
        "cursor": {
          "ref": "03fa7dd3-947c-456c-b6b7-864ede06fb70",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "06bfb241-5772-400e-9ae9-50bcb079f471"
        },
        "item": {
          "id": "3915ef82-6581-4aac-9b2a-a99532609aca",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36b86342-4705-4427-b4ce-7e9358d6f2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8412e51-d2fb-414b-afec-8210b04c72c1",
        "cursor": {
          "ref": "9b827143-030c-485d-a163-2556554a12b7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0901ade7-3b44-41ad-a32e-d306a82c16a4"
        },
        "item": {
          "id": "c8412e51-d2fb-414b-afec-8210b04c72c1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "75377b40-bbd1-4a12-b39f-ea7ac68ed97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2698d5-efe4-4b03-9937-0873e327e084",
        "cursor": {
          "ref": "2ea6c9bf-ab6e-4e60-b43a-a9d6c5782576",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5c824adc-b93c-4964-9b08-ce0517535356"
        },
        "item": {
          "id": "fc2698d5-efe4-4b03-9937-0873e327e084",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "af3fe1e7-5601-4781-afc4-9efee56ccd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a73a05-b344-4251-8e8c-fd9054d48bb0",
        "cursor": {
          "ref": "de428894-eacb-4668-ac33-0f3b50bfe031",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "bff224ea-096c-4be4-bcaa-2efdf32f6929"
        },
        "item": {
          "id": "e4a73a05-b344-4251-8e8c-fd9054d48bb0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3c17c6a6-476d-4e13-b25b-c410c6029226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd4bc0-c1f0-4ffe-9278-49404769a133",
        "cursor": {
          "ref": "8f11688c-56d4-497e-bed2-c9b5b9e70205",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "439b4381-62c1-4466-b408-c84f8a47fb40"
        },
        "item": {
          "id": "79fd4bc0-c1f0-4ffe-9278-49404769a133",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ad793ea0-5bea-4a5b-a153-e2bc4f37bc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07011519-5871-461b-a099-e24d47fa906a",
        "cursor": {
          "ref": "19f07e12-28df-4184-89c1-3c530b108b1d",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9c9e8fd2-b0fd-45d3-be23-c130a22d593c"
        },
        "item": {
          "id": "07011519-5871-461b-a099-e24d47fa906a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c118a811-f48a-4a44-b585-754c8296869d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62c6fb4-1347-4569-87be-3ac1df512d11",
        "cursor": {
          "ref": "1865321b-cff3-4d32-a745-218b4904cc86",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "637144a1-d0f8-4a66-82b6-00d5dc4d1a2d"
        },
        "item": {
          "id": "e62c6fb4-1347-4569-87be-3ac1df512d11",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "567880da-526c-4fe3-92f8-d9718447e002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1029e94-9926-409a-88a7-768730b34ce6",
        "cursor": {
          "ref": "8ffc01ce-277d-4101-b231-cacdb2c54126",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "32634f06-5f26-45d4-b116-aba2f501cc51"
        },
        "item": {
          "id": "b1029e94-9926-409a-88a7-768730b34ce6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee64e172-a556-4dd8-8fe4-080e9a1ad261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6426c428-5559-48ef-8646-92dd1142e335",
        "cursor": {
          "ref": "65eb35ee-2311-4349-8513-5697b904b62e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d0a0e769-c314-42ec-a2ea-5acbb150762d"
        },
        "item": {
          "id": "6426c428-5559-48ef-8646-92dd1142e335",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "798dc915-f011-4b8d-93c5-707c1da564ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce340b7a-89e4-4218-82d7-83b1cbba07b4",
        "cursor": {
          "ref": "5dfcfeb2-043a-47af-8089-0df61347bfa4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4d79557d-b884-4cb2-9eba-d261e4b2bb9b"
        },
        "item": {
          "id": "ce340b7a-89e4-4218-82d7-83b1cbba07b4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "10b5a01e-52c3-4e29-b872-12461fbaefd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500b37e9-2bb6-434d-a454-2a60c32b8d86",
        "cursor": {
          "ref": "6e6535f8-3ec2-413b-89ce-48e231ba8e4f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08ee8289-90fc-4c42-8e39-9dcd015ff7bd"
        },
        "item": {
          "id": "500b37e9-2bb6-434d-a454-2a60c32b8d86",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "62956ea7-05f0-4b17-b4a0-bbf6f96f4642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee9f697-c2f1-492d-acd0-3180fde8bc43",
        "cursor": {
          "ref": "5ff994b4-37d2-4c5b-9720-7b8147d201d3",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "acf8afe5-3031-4849-87bf-b3bdc6d1c4d8"
        },
        "item": {
          "id": "2ee9f697-c2f1-492d-acd0-3180fde8bc43",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c3ce002e-076e-4d1b-8bdd-f4db6a4a3673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ad9379-49b2-4f66-aaa1-94525230b49b",
        "cursor": {
          "ref": "8ee289a1-2b6d-41f0-ab6b-81a35eceb2fa",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "68bfc20a-9094-4819-b44e-6e0c4cf2f33e"
        },
        "item": {
          "id": "a2ad9379-49b2-4f66-aaa1-94525230b49b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2b33db5d-7a1b-4e5e-b985-92485dbfcba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbd9051-2208-4a8d-9733-d10fe551074a",
        "cursor": {
          "ref": "a5449678-bb28-46e7-96d4-483af8e48813",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "234ed778-a512-4a59-96fc-891aee81739a"
        },
        "item": {
          "id": "8bbd9051-2208-4a8d-9733-d10fe551074a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f9380e05-6f9a-475c-80fe-9e4816775b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc1ddb4-def9-4eca-9199-f22f9470462f",
        "cursor": {
          "ref": "07993ba3-99ad-41e4-9b8e-bdce05e0fbde",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2858211d-de13-4bc6-a86d-e37f4b2ecd77"
        },
        "item": {
          "id": "3cc1ddb4-def9-4eca-9199-f22f9470462f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b7b43d13-fe4b-43f9-a41e-9c20e485ebf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5365c538-cb12-4eb7-bc19-a321ab2eaab7",
        "cursor": {
          "ref": "94ebff96-ade7-49bb-84c8-ecc4e56d1109",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "de5b35d4-9a05-4d04-bb70-69bb0427c75f"
        },
        "item": {
          "id": "5365c538-cb12-4eb7-bc19-a321ab2eaab7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "99523808-91ed-4e59-afee-cf7ac227d6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893ca357-6e53-4cbc-98ae-312f5a5daba4",
        "cursor": {
          "ref": "dbedfb0a-0743-4b52-a7ef-26a1ca5f6d1e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7e5b432a-5751-4783-8636-24de9c799b68"
        },
        "item": {
          "id": "893ca357-6e53-4cbc-98ae-312f5a5daba4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d9868e98-8086-40b7-a66d-6172006db602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b423c8b1-2c31-42dd-8df7-ffdb590a4c99",
        "cursor": {
          "ref": "b6c434d8-fed5-4292-9cca-6141e658b0a1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "12872605-9050-41b8-bcd8-2a7a212fd394"
        },
        "item": {
          "id": "b423c8b1-2c31-42dd-8df7-ffdb590a4c99",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "116e93e4-62ed-4e6a-8ab8-1d5ba5d88910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02115828-8fdd-4ce6-924f-54ce3b87869c",
        "cursor": {
          "ref": "1f98782b-e1cd-4197-baf9-cfc672960d31",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1244f1ac-f686-40ef-8612-9846780d337e"
        },
        "item": {
          "id": "02115828-8fdd-4ce6-924f-54ce3b87869c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6cc15882-ddb4-4e87-ae7c-51bc38cf6258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829ef911-54bb-4f42-b298-3ee4116b35ba",
        "cursor": {
          "ref": "86d268cc-8a89-4c88-b094-11d74aac587e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d40fe97-a405-4029-a315-424290e77fb2"
        },
        "item": {
          "id": "829ef911-54bb-4f42-b298-3ee4116b35ba",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "510e445e-a3f4-4f5c-99a8-7adf6be4d596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cdd791-7c57-427d-bdd1-ed9cba1cff9f",
        "cursor": {
          "ref": "0e4ce291-58ef-40d2-8a79-37c640a49c0c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3823db07-b5a7-4d41-9f31-ed3182e4cabf"
        },
        "item": {
          "id": "81cdd791-7c57-427d-bdd1-ed9cba1cff9f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "40568dad-431f-4177-840a-e62a56459796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270d67f1-d16a-4df5-b0a0-5ca3ab0b1592",
        "cursor": {
          "ref": "115f6800-272e-48ac-bd94-a21ee035f9de",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6904596a-cb2d-41a1-b4e1-db06489b93b2"
        },
        "item": {
          "id": "270d67f1-d16a-4df5-b0a0-5ca3ab0b1592",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7d61b37f-200f-4e2b-a710-d05b63eea7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf54a1-0d92-4b21-ad6e-0b6c9af1691a",
        "cursor": {
          "ref": "7ca0aec5-63c5-4f06-ab2d-77910893f468",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d12045e-b287-462f-942a-1137a4d66ee8"
        },
        "item": {
          "id": "5fcf54a1-0d92-4b21-ad6e-0b6c9af1691a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "680fdead-6463-4d71-b87f-1e58934c0f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c080d3b1-0fc2-43ce-8b0e-6aaaec10c94a",
        "cursor": {
          "ref": "1fd8e4eb-1dcc-43db-832a-7f9b13d18631",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ebce2907-288a-4e0c-8772-4b8e614d8900"
        },
        "item": {
          "id": "c080d3b1-0fc2-43ce-8b0e-6aaaec10c94a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6237fb64-d583-4f14-8508-ebe4735ff6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309de498-5105-4508-93ec-03549e3aa7e1",
        "cursor": {
          "ref": "d405f03d-1e8c-4b62-afac-6fbc1fc68aaa",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "42bdb2ff-5bc4-4653-845c-286cfe0bc88d"
        },
        "item": {
          "id": "309de498-5105-4508-93ec-03549e3aa7e1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "962eb509-dcf7-4778-86a1-42fcc052cfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e6c9ba-c740-41ff-8e4e-aa55b36d665f",
        "cursor": {
          "ref": "75d24b36-454a-4eeb-bb16-5acfbe76aa85",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "64314710-00e2-4280-97f0-ca647f15d251"
        },
        "item": {
          "id": "13e6c9ba-c740-41ff-8e4e-aa55b36d665f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8ac1d0cd-32fd-46c6-aa0b-bd50a177ba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7590f918-e315-4d1d-a0c0-cfbff9640b6d",
        "cursor": {
          "ref": "79c0df1c-3775-43a5-ab9a-9313c9429dd0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "192fa013-23de-48d9-bdbe-5f790ba967ac"
        },
        "item": {
          "id": "7590f918-e315-4d1d-a0c0-cfbff9640b6d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0197ce2b-a0c1-4439-a728-51177eae4aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43c8724-c68b-4c8a-93e8-00f8461f88f3",
        "cursor": {
          "ref": "ede25de8-b1ac-4ac7-a1b1-308ebbd341ad",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6466c7ad-05a6-48a7-a38f-81d76272ff07"
        },
        "item": {
          "id": "a43c8724-c68b-4c8a-93e8-00f8461f88f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f574e406-3d7e-4bc7-b3d3-1afecef9745d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4197bd2-b768-4769-a7a6-1d8739e38498",
        "cursor": {
          "ref": "dd4f0c27-d568-4fab-88b5-c130292ef00c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "91ee9888-c1fd-4ae7-a5c9-5d69cc006f9d"
        },
        "item": {
          "id": "f4197bd2-b768-4769-a7a6-1d8739e38498",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ee764425-1dd8-41d9-88ca-2028160bec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32891e99-f610-41cc-bb23-492285498495",
        "cursor": {
          "ref": "894618cb-9543-4e73-ba06-39eab6a605d0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ac893f9f-b59e-423c-87eb-fb11bec36267"
        },
        "item": {
          "id": "32891e99-f610-41cc-bb23-492285498495",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d8a53239-5e7e-4ded-b8a2-594f04989e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8998ebf2-341f-43ee-873a-e6ca69400bfb",
        "cursor": {
          "ref": "a8650f09-9b62-4ce3-b167-ce250e7ef917",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "825e6e8b-ad20-4417-8dfb-8d98b5a40d8e"
        },
        "item": {
          "id": "8998ebf2-341f-43ee-873a-e6ca69400bfb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "feda9a53-7309-4c94-b88e-20f45ec7cb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0910919-1ce8-456f-a2c6-ec7bb1b6cf45",
        "cursor": {
          "ref": "05c61890-ff28-4f3b-afa3-84ce332bcc56",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "503ebd94-cfb1-4a28-9975-37a5255e5653"
        },
        "item": {
          "id": "b0910919-1ce8-456f-a2c6-ec7bb1b6cf45",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b16953e0-1fdd-4fa0-813f-650ea84c9d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a1d53-d46c-4879-9837-209074aed6ce",
        "cursor": {
          "ref": "2c1e4cf3-6a4a-41a0-a83e-214af3eb9d0a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "feb969af-9a9d-42a7-a02f-7517905d5c8c"
        },
        "item": {
          "id": "844a1d53-d46c-4879-9837-209074aed6ce",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f09cf136-7192-4985-b5a9-cffc65ab917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d466a3f-83bd-45c3-8045-754d0a26c636",
        "cursor": {
          "ref": "a6f6a695-5b47-406d-baf7-0209cbbd28a2",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74b803db-eb69-489f-9bcd-5ec248c6d593"
        },
        "item": {
          "id": "6d466a3f-83bd-45c3-8045-754d0a26c636",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2a4cc0c3-acf9-4e62-9db1-4a6c1c01b5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55193049-9157-4cd4-902f-59b58ca9d5ab",
        "cursor": {
          "ref": "146d9aa7-fe91-4fc9-aa45-869675bc1321",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e08a1d7f-7da9-4b4a-a550-d3c91c68cfd7"
        },
        "item": {
          "id": "55193049-9157-4cd4-902f-59b58ca9d5ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80ecc27c-878b-49f2-ac98-2daa63357c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de71dcd-3c51-460f-9b0e-c2fa5d91caa8",
        "cursor": {
          "ref": "c1c48953-6b9b-4187-a8f8-c15dd9857ad4",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe5e582b-993b-43d6-b9d5-3cd91d917562"
        },
        "item": {
          "id": "1de71dcd-3c51-460f-9b0e-c2fa5d91caa8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fc45227b-c18b-465b-b646-3013326d961f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272fac21-ab0d-4a4e-9ce7-ca36015471df",
        "cursor": {
          "ref": "985aa2b5-539c-4ee6-bffa-f7ff4b801fbe",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e4c72492-1181-4c69-ab62-3ef1d97c897b"
        },
        "item": {
          "id": "272fac21-ab0d-4a4e-9ce7-ca36015471df",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c93a17f9-c82c-4831-bddf-509dcbaa8356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58b942c-98c1-4be8-b044-bd1272699048",
        "cursor": {
          "ref": "93ed56e0-c900-45f6-b85d-8a93370e0747",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fc2ccbbc-94b2-4381-b676-9395224c17b1"
        },
        "item": {
          "id": "c58b942c-98c1-4be8-b044-bd1272699048",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3d1879cd-eb2f-4430-99ab-49750cb7a921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fde36c-b599-4b54-9aaa-e43e3ea28360",
        "cursor": {
          "ref": "803534ba-205b-4975-9fae-c8fc76f4a41e",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e8c2047c-f16e-4119-9fe3-32500b9e1813"
        },
        "item": {
          "id": "e0fde36c-b599-4b54-9aaa-e43e3ea28360",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8d5e766e-9221-46b7-9f9d-b40f97215f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c849157-fbdc-4003-92e2-d949eb543a43",
        "cursor": {
          "ref": "6a9dd0d5-157d-4270-b544-fcb3d23c5841",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bcc005f6-8dcc-4cca-a17c-7dc3906f23e9"
        },
        "item": {
          "id": "1c849157-fbdc-4003-92e2-d949eb543a43",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8dc1e0c2-d424-4d6f-a548-d454c5b521a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81664b-44fd-47e6-903e-30fb4e1f3f5b",
        "cursor": {
          "ref": "4daaed9e-7216-482a-a753-fa79e59884c7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d661583-175c-4dd9-a0ad-032c6350c073"
        },
        "item": {
          "id": "0c81664b-44fd-47e6-903e-30fb4e1f3f5b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9acf94ac-85e0-419d-8c52-4fe4a2b71be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aca771-4ed0-43a3-a9c6-32262c23a4ed",
        "cursor": {
          "ref": "df6f5324-6cd6-4420-959e-d5cdcf510bda",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d01746b1-a127-4424-920f-51b2effa7e53"
        },
        "item": {
          "id": "72aca771-4ed0-43a3-a9c6-32262c23a4ed",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "19899486-ce2c-494e-82d9-5e6539799f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1744e0cb-5484-41bf-87df-cd810edbfa38",
        "cursor": {
          "ref": "16ed3247-927f-46dd-806e-5cdc2d66ae5e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2bfadc15-84fe-47c2-a0cc-b816ed9494f2"
        },
        "item": {
          "id": "1744e0cb-5484-41bf-87df-cd810edbfa38",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6896625b-2afd-4a4a-8a47-850882d48e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c65f4-2b83-45f0-b375-bd9a1779083f",
        "cursor": {
          "ref": "201839f7-9328-4527-992f-cab3f67bcc9c",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c3ef4dd6-3acd-4483-a6f6-70b45d853515"
        },
        "item": {
          "id": "603c65f4-2b83-45f0-b375-bd9a1779083f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ef9dee68-c8d0-4d98-8c07-f8ab95a698ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25a61fd-2ede-4a7f-bbb4-475cc0b03315",
        "cursor": {
          "ref": "418508cd-15b7-4c96-8fee-e2febe1c3f75",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "839c0a9e-accc-4a45-a3c5-48529f47cc53"
        },
        "item": {
          "id": "d25a61fd-2ede-4a7f-bbb4-475cc0b03315",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6aaf9a89-2dbf-4cc2-972f-68f9131d127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8063d3-f3ac-4989-9bda-f965b7d256b5",
        "cursor": {
          "ref": "e01dcca0-1a0f-48d8-860b-fedcbe3e9f48",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d116f13e-cba3-4514-bc22-d69ef0b3bce5"
        },
        "item": {
          "id": "bf8063d3-f3ac-4989-9bda-f965b7d256b5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8df17cb0-62ed-41ba-9d3b-282514acc7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb67a3df-da6c-4c37-873a-21833ba78705",
        "cursor": {
          "ref": "96a7c044-751f-4a12-8f0d-dd7da50f2991",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "9c312e0f-effe-4ba5-b89d-d6820debbd94"
        },
        "item": {
          "id": "eb67a3df-da6c-4c37-873a-21833ba78705",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d84420c3-8aaf-47e6-b3b8-48bbc3f548fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975a016e-c062-40d6-be9c-6f9e6fa22f2d",
        "cursor": {
          "ref": "61484d46-4906-40e4-b78a-966ce022af79",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3a4ce70d-9338-4cb2-a7a7-ab929fd65531"
        },
        "item": {
          "id": "975a016e-c062-40d6-be9c-6f9e6fa22f2d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32119496-dd7e-48ee-93f3-11d0290ccccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ffce5-8c96-4a6f-9cff-c2a7d9516ceb",
        "cursor": {
          "ref": "9d9090bb-077e-4ee2-8b1a-f0cc2175ac3d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e0cf139-217c-4e1d-a8d0-4cde61fa8936"
        },
        "item": {
          "id": "ac6ffce5-8c96-4a6f-9cff-c2a7d9516ceb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a6f22bc5-f27f-4e38-999b-f5b86e9ea1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d220e5-a1b1-46bc-b868-be6e6bbbb5c6",
        "cursor": {
          "ref": "85861179-ad58-460e-b356-7ea18c2b616a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "54af1270-870d-4f0c-af2a-84fb2877fbf1"
        },
        "item": {
          "id": "92d220e5-a1b1-46bc-b868-be6e6bbbb5c6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e9f73e62-a7a3-428e-9142-6275e37200a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4398df1c-4434-46e3-9d98-3a30779ca49a",
        "cursor": {
          "ref": "9ea12c91-1372-40b2-aa77-48bb7b8d1439",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "79bcfc69-e388-4488-ac8d-8086192f530b"
        },
        "item": {
          "id": "4398df1c-4434-46e3-9d98-3a30779ca49a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8222bd6a-a090-409c-94bd-0b6cb4043daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ac67fa-e4fe-4fcf-8789-c605fa12b91e",
        "cursor": {
          "ref": "0b604a25-2596-4a89-a940-b3e33470431a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bb5aefec-414a-4675-9118-83a29ac1e6ab"
        },
        "item": {
          "id": "c8ac67fa-e4fe-4fcf-8789-c605fa12b91e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "29c890ec-09d5-400e-b5b7-c96714d22bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c04498-1975-4505-beb6-f24c4666b68e",
        "cursor": {
          "ref": "e0640f08-d160-4501-bff6-7172facf707b",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6c967bfd-39d4-448d-bc42-9e1b406514d3"
        },
        "item": {
          "id": "49c04498-1975-4505-beb6-f24c4666b68e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "89110347-360d-40de-bfb9-067a6bb7d659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd9404b-52ce-4b64-abd1-efe7aa7bbfb8",
        "cursor": {
          "ref": "130845f8-da2f-4510-b902-3d62e5f2d29d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "988d3dca-410d-4ac1-8d09-0acac8dfce9d"
        },
        "item": {
          "id": "6dd9404b-52ce-4b64-abd1-efe7aa7bbfb8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e14ed636-9694-4ef5-9a79-cf8bdff27304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51443412-efdc-4315-977c-064fd8446a2f",
        "cursor": {
          "ref": "745f09e1-d4a7-4212-bf05-5b64d3d6238f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f053fc14-d66d-4073-a24f-39e27061e890"
        },
        "item": {
          "id": "51443412-efdc-4315-977c-064fd8446a2f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "931259b5-0d5d-4b1c-a480-90824402e486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cae31c9-d01a-4e0a-b17f-7a5d86ccfe23",
        "cursor": {
          "ref": "53c7d08b-e183-43f5-8f69-62eb326e8a79",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f17f86e6-b64d-4fcf-8309-8ea767ba836d"
        },
        "item": {
          "id": "1cae31c9-d01a-4e0a-b17f-7a5d86ccfe23",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1e3af8fb-a61b-4aeb-ad09-55d812a35fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f45e792-d8a0-493e-a756-b846f4acfd76",
        "cursor": {
          "ref": "5859c04c-508c-4462-927e-7ef403f3c068",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7cd6920f-af3e-4db8-914d-6ed219f41e1b"
        },
        "item": {
          "id": "1f45e792-d8a0-493e-a756-b846f4acfd76",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5515b90b-a954-4e83-9633-4ff35989b0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e50e586-0065-44b5-9864-5e30cc1d6afa",
        "cursor": {
          "ref": "5999837b-475e-4940-a06b-a16a95690184",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9d6063ce-3e14-4636-a540-5575ba4de701"
        },
        "item": {
          "id": "1e50e586-0065-44b5-9864-5e30cc1d6afa",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "52aa667c-6ad4-44ff-8e81-c0cf6a194ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1db8c62-d124-4d96-b492-4c9b3894e6a5",
        "cursor": {
          "ref": "53144bc8-4532-42c6-91e8-a0237c753f03",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "283ab89f-0369-4cd3-b914-abfbb6e8c67a"
        },
        "item": {
          "id": "d1db8c62-d124-4d96-b492-4c9b3894e6a5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9106a17f-bc3e-4743-8708-9a47a1aa1398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0f5187-4ec2-4b98-9248-033a991c23b3",
        "cursor": {
          "ref": "3707bf82-e4ec-4148-8f21-d8f7dc481790",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f263e7f5-5625-477d-b072-e218890441ef"
        },
        "item": {
          "id": "da0f5187-4ec2-4b98-9248-033a991c23b3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "17d52afe-cb7d-4be6-b864-ce3d0d7fbe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebaa927-5498-4837-856c-1913a89df70d",
        "cursor": {
          "ref": "ccf34f3e-a0c7-4188-9cba-a18dd3c4af3a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "aefa8c20-d0a8-40c3-8026-c13defeb5636"
        },
        "item": {
          "id": "6ebaa927-5498-4837-856c-1913a89df70d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4ddc5e40-5cc3-4edf-a76a-ea6c28487175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b03556-a3e7-46bb-8ed7-d6f2d027cdcf",
        "cursor": {
          "ref": "87f2c6f2-839f-4cba-8ea5-97aa986b4613",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "198b0dcc-cdac-4d04-aaa9-c57cd9d199d6"
        },
        "item": {
          "id": "18b03556-a3e7-46bb-8ed7-d6f2d027cdcf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "88044397-37c9-46d8-b994-b28ca2b381d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "295fe65e-93da-4728-9345-6efce688bda7",
        "cursor": {
          "ref": "feb034d2-584d-4555-8d94-f4b2446c5c8a",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "165e9c07-4eb6-4b2e-9617-6471da010108"
        },
        "item": {
          "id": "295fe65e-93da-4728-9345-6efce688bda7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "81530441-d239-484e-aaa0-8c06241c7124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "51f70d9b-b3b5-4d02-8cc5-aa6958af0691",
        "cursor": {
          "ref": "fe420832-daf0-475e-9d41-42d4ce486d51",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06ce1352-ac15-4638-af46-d6369e230e29"
        },
        "item": {
          "id": "51f70d9b-b3b5-4d02-8cc5-aa6958af0691",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5833f509-422e-4156-815b-2a7f19f4595f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7583ac2d-1515-4d96-8d61-42ff58d55a9f",
        "cursor": {
          "ref": "cd48461d-b0ad-4c4b-88b2-e97d4afb4c7c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "09ac7c6e-af63-411d-8950-a89e96b6766d"
        },
        "item": {
          "id": "7583ac2d-1515-4d96-8d61-42ff58d55a9f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "20e200c6-b3ca-4475-80a3-7288e2c0547a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e4e6eeee-b9c8-4fbe-81e1-8e25c03dd7c2",
        "cursor": {
          "ref": "eaa23abc-521c-4efa-b062-067858a546af",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f2de12c8-8b97-405d-a4e1-4be000d4017e"
        },
        "item": {
          "id": "e4e6eeee-b9c8-4fbe-81e1-8e25c03dd7c2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2cad2e35-314d-4e09-90ea-795cbe5d5d81",
          "status": "Created",
          "code": 201,
          "responseTime": 11392,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b38d55-6ba5-438f-8c3b-7af4f648f56a",
        "cursor": {
          "ref": "dc403d61-b620-40f4-8a5a-211ab2cf3659",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "41443126-6fc3-4f06-9b05-cc5a56753eb3"
        },
        "item": {
          "id": "81b38d55-6ba5-438f-8c3b-7af4f648f56a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f1fa2d3e-a708-4ff8-a3c3-bc1ca3089534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2940b68c-ec07-4b44-b619-3ca7ad5e90ef",
        "cursor": {
          "ref": "16a6d853-8db9-4f1c-90bc-7992d2f38acb",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "18a44f08-efcf-4e52-8093-904565a0ebb0"
        },
        "item": {
          "id": "2940b68c-ec07-4b44-b619-3ca7ad5e90ef",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "50d562bd-43b2-4d9b-92c3-2465e89066cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2ffc3d6c-396b-4c54-ba6c-b29c6b4baa87",
        "cursor": {
          "ref": "ec069681-1ac3-404e-b2b6-10edeba68a16",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c390362f-f210-415e-b5dd-5f2577ea0599"
        },
        "item": {
          "id": "2ffc3d6c-396b-4c54-ba6c-b29c6b4baa87",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "43242cfd-611c-4422-a8c7-cbcbc27d6bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af29f62f-041f-4096-b508-5a8b72d65d7e",
        "cursor": {
          "ref": "3be1fb89-0d72-4f07-854b-fbf77f8abf29",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a70e1552-8e64-4b90-a612-4736cabba47a"
        },
        "item": {
          "id": "af29f62f-041f-4096-b508-5a8b72d65d7e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b3edabfe-6363-4206-ac32-771e8f4253f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea92bacf-6d95-4f45-b00d-deab841b55a8",
        "cursor": {
          "ref": "3417a27f-fd7a-4247-b97e-ac20b9bf576b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9d7b4838-5da8-4527-82f7-7cfd6e8572f0"
        },
        "item": {
          "id": "ea92bacf-6d95-4f45-b00d-deab841b55a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c3d11448-51c3-4d3f-827e-28ca11e483ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa175a4-4e62-48f1-b30e-a71aa0bfc258",
        "cursor": {
          "ref": "708bde56-c02c-4e2b-a0f0-c5819fa54f81",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d6d30e26-b0c9-4bdd-a26a-22436d63db6e"
        },
        "item": {
          "id": "dfa175a4-4e62-48f1-b30e-a71aa0bfc258",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a720d706-df07-4b2c-b39c-5ac83a5e93f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66703827-03e2-4513-93bd-1b75b77820c3",
        "cursor": {
          "ref": "8dc80534-3e19-4c6a-8040-107c86201f84",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "827a9f49-01c9-41df-9a3e-1c7a0a853d8c"
        },
        "item": {
          "id": "66703827-03e2-4513-93bd-1b75b77820c3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ff032c44-cf40-4ca9-9579-db980a1e076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2200909e-a732-451c-8c08-6b7b0e2ad327",
        "cursor": {
          "ref": "35dd0b4d-75b2-4198-af12-a9f3a8986720",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "35d0006a-9182-4319-a7f9-ff2ecd879c50"
        },
        "item": {
          "id": "2200909e-a732-451c-8c08-6b7b0e2ad327",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bab5cb7e-d77f-4d44-a16c-7940a311e4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39768e91-9377-4c24-b775-c988651e95fd",
        "cursor": {
          "ref": "9316d324-badb-4db8-b7de-b0205a3d38c3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "52b1e053-cc6d-4f44-9aa8-8cb401c17215"
        },
        "item": {
          "id": "39768e91-9377-4c24-b775-c988651e95fd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "367a112e-82e3-4d8c-bab0-0f0d4daa685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd11e63-7bdf-4952-ba22-9f82f283d3ce",
        "cursor": {
          "ref": "041e23e8-71af-4483-92ed-3b96c5138cd6",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8a08831f-59a9-43f2-a6b8-e21f1aad71de"
        },
        "item": {
          "id": "2bd11e63-7bdf-4952-ba22-9f82f283d3ce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "76dcc33c-7b1f-41cb-8f7b-ae77b55bb269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2239ab5-4f23-4d83-8439-2ca9127b1570",
        "cursor": {
          "ref": "35ae7835-9f5d-4218-b04d-fca64bf3b869",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39e69ab0-f1f1-47fb-9494-1116f199f5fa"
        },
        "item": {
          "id": "b2239ab5-4f23-4d83-8439-2ca9127b1570",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "38d434fc-52cd-4b79-bf94-0a24262ace68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51baf496-37c0-4363-b91c-c8a11915c4e2",
        "cursor": {
          "ref": "ff759257-29a8-40e2-aaec-58a932c70b1a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "22cbbc2a-5230-44db-bca1-fc5b2704e88c"
        },
        "item": {
          "id": "51baf496-37c0-4363-b91c-c8a11915c4e2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ee5cf17d-5832-430f-98a0-32d4996bf5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2065d3b2-6666-4fcd-b2fe-c7244a1629e6",
        "cursor": {
          "ref": "f35bfd3e-6c01-4220-82e0-074dc50beb37",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b6afd4e-f795-4217-860f-f96835baad8b"
        },
        "item": {
          "id": "2065d3b2-6666-4fcd-b2fe-c7244a1629e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f96ee66e-e40c-43f3-845a-e156fe12f4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526542de-ff0e-4e0c-85ee-a310f8cae7d6",
        "cursor": {
          "ref": "a537f77f-2c26-4d2f-a3d8-c5a2d75be095",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "45029d31-a2fe-4076-8216-bfa06176d4e6"
        },
        "item": {
          "id": "526542de-ff0e-4e0c-85ee-a310f8cae7d6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aa0a2a9c-5e1c-4538-99be-8d601ca275ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f74640-7736-4729-814e-db9791865339",
        "cursor": {
          "ref": "6dcc932f-317b-4985-ac24-b0df336259a1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6b63769b-caf6-451a-bad1-637768be7359"
        },
        "item": {
          "id": "b6f74640-7736-4729-814e-db9791865339",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "05dcac63-ddfd-4442-8016-cf0d0700b305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165650c3-f027-4910-aa0b-5e5eb8a5d747",
        "cursor": {
          "ref": "b2d3bb82-8a7d-4d16-9ced-8b3428601009",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2642e953-a93f-49f7-93a5-620ff8c78f56"
        },
        "item": {
          "id": "165650c3-f027-4910-aa0b-5e5eb8a5d747",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fd890cca-7ae0-4b1b-b12b-c4070df53c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc1aa01-aefb-438a-8220-01bdfbdb4aa7",
        "cursor": {
          "ref": "639f8d2e-99cb-4939-abab-50408b0925af",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5558b61f-d7fe-4526-adfc-30e8b582c880"
        },
        "item": {
          "id": "0cc1aa01-aefb-438a-8220-01bdfbdb4aa7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "792ec5e1-3905-4fa9-80bf-455049d0352b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e13426-b693-406a-b6ca-156959b86331",
        "cursor": {
          "ref": "4150b831-2d9b-4f3b-ab06-04c7abe48acd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "32370cda-b305-4384-9728-87c0adc8a888"
        },
        "item": {
          "id": "f7e13426-b693-406a-b6ca-156959b86331",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e42f29a0-f519-4b6a-bd81-2cf4d4f888d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f1fd73-0bdc-4ec5-b362-700e5cd2cc93",
        "cursor": {
          "ref": "646d3c48-464d-44ff-8a09-43a324715968",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b3d08d9a-cb60-447a-89d8-fef1bcb29ff0"
        },
        "item": {
          "id": "22f1fd73-0bdc-4ec5-b362-700e5cd2cc93",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eec9c5de-319d-4c4b-9c5e-da41c8e156b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fd10a202-5799-403a-a87d-5adc62c3bebb",
        "cursor": {
          "ref": "9aee58d8-fe83-4d71-8d0f-be062e0b1d1e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "00d9ce52-5cd9-4117-811c-d01991f36bb5"
        },
        "item": {
          "id": "fd10a202-5799-403a-a87d-5adc62c3bebb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "830b0a3d-2475-48bb-834d-8e20fc958ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd48852-ebc0-437c-8ee3-599e95f17cae",
        "cursor": {
          "ref": "7bdb4d51-3352-427d-a872-1954c1b93fff",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "022bcad4-6b5a-4d97-91b3-cfa266bad26c"
        },
        "item": {
          "id": "dcd48852-ebc0-437c-8ee3-599e95f17cae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0f8212b2-a6aa-4cca-840c-d9aaf59f650b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6cbead-48fe-4ace-8ced-ca52e0c16310",
        "cursor": {
          "ref": "1a53b756-3fbd-4aca-946b-263e8ad60b54",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a21648c4-8da9-4480-8773-1bbd38491266"
        },
        "item": {
          "id": "0a6cbead-48fe-4ace-8ced-ca52e0c16310",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d99a1b83-a7dc-4cc6-818d-48774c29f8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1191fe5e-a2a6-42d4-a207-3699ddf290bf",
        "cursor": {
          "ref": "fe232e98-7369-40a5-ac42-f8b85dfe3d47",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "688815c7-58d6-4986-8601-a866f2373f81"
        },
        "item": {
          "id": "1191fe5e-a2a6-42d4-a207-3699ddf290bf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fdfee619-6b6e-4abe-9a04-a9b067a00eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2dc29a-09e4-4678-b597-166fd450a516",
        "cursor": {
          "ref": "dfe1ec2d-0fd4-4e8f-b1e2-61487fa49b22",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "715f2d8b-f0ac-4c1c-bbc4-14cb822e88ef"
        },
        "item": {
          "id": "6e2dc29a-09e4-4678-b597-166fd450a516",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a61daea4-cb6a-4216-9848-d211c6201cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf3cd2d-395b-4f48-871a-1e9f8eda525c",
        "cursor": {
          "ref": "f77019b2-17b4-462a-9460-9f725b01f038",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a4e4cfec-c002-49ad-a1e2-def100c54c73"
        },
        "item": {
          "id": "ddf3cd2d-395b-4f48-871a-1e9f8eda525c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6781a9a3-08c8-4cd8-926f-37b472438846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719aa1f3-a055-448e-9750-4d69b16308db",
        "cursor": {
          "ref": "e004cf8c-1822-467e-89db-2a95cba485b5",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "02cbb492-1186-4b21-a2d1-c54c9b96e853"
        },
        "item": {
          "id": "719aa1f3-a055-448e-9750-4d69b16308db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8c3b92d8-5241-4990-aec5-945e68ac89ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1474f88b-1988-416b-b935-47f6e8ad1c41",
        "cursor": {
          "ref": "bd69e453-d31f-4df1-8ad7-a6fc5e9a22e6",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9ec000b9-3538-4b4d-9cb4-6d6c9815937b"
        },
        "item": {
          "id": "1474f88b-1988-416b-b935-47f6e8ad1c41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9affa04f-b41b-4558-af1e-e466124aff77",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a40abf79-0846-463c-bd20-f7be18f24259",
        "cursor": {
          "ref": "a1afc9ba-f2ce-4eb1-9bce-ae80fd9cd0bd",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "57dad831-55b3-4cd9-ba69-6e0c1b977d80"
        },
        "item": {
          "id": "a40abf79-0846-463c-bd20-f7be18f24259",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de7df212-53f4-4086-b2e0-bec9fda15276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9e8ce1-63c1-4fde-8d00-718870eee55c",
        "cursor": {
          "ref": "e6048cef-b616-4eb0-9dff-21cc4c3c468c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "440f1c0d-c4ad-4739-9ad4-ff1ba5e4c4a5"
        },
        "item": {
          "id": "ec9e8ce1-63c1-4fde-8d00-718870eee55c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "59676018-20e7-445f-8b37-613a12cb6374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08c1ca9-1678-4155-a08e-becbc1ace3e4",
        "cursor": {
          "ref": "f3cd69da-a4af-4f72-a2f8-1761906ef266",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2d48bf60-1da3-4f9a-b06c-038fc0a3a902"
        },
        "item": {
          "id": "c08c1ca9-1678-4155-a08e-becbc1ace3e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8358a467-80d1-4012-9447-7929cbcbf121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b0201c-d4b2-4d0b-9473-64df329aedff",
        "cursor": {
          "ref": "88d1b2b6-f346-4c64-9769-9eebc6b7ffab",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a0f84870-a2d7-4f47-af20-d1b6a4a884d9"
        },
        "item": {
          "id": "90b0201c-d4b2-4d0b-9473-64df329aedff",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2e2879d-207a-4085-bc88-ab0d321ea201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7396c2a2-818b-4b1e-96c4-104a22da56b7",
        "cursor": {
          "ref": "b8796a87-dc47-4621-a686-21ce32a7568c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3fc802c9-c6b6-4e13-95d0-1b3f92030861"
        },
        "item": {
          "id": "7396c2a2-818b-4b1e-96c4-104a22da56b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e6e80c8-b930-444d-b0c2-1fe68c13b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a38ecd6-7707-4c04-b262-2f14d8fe953e",
        "cursor": {
          "ref": "40ac7c18-2d37-4d10-a022-74ece7e9577e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8ce262ba-f5b7-41a8-9fdf-e03e12fce825"
        },
        "item": {
          "id": "1a38ecd6-7707-4c04-b262-2f14d8fe953e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0635fe9d-a41f-4022-949c-c4846f0b4ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc3418-2328-420a-af98-21fb6cd28859",
        "cursor": {
          "ref": "5855d9f1-b74e-4c89-926e-97f389a81a77",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "984ffec3-848b-4540-8e7d-837a393adfab"
        },
        "item": {
          "id": "26bc3418-2328-420a-af98-21fb6cd28859",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f1709452-edf6-443c-8838-c716fca473c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f9984424-b8db-443d-a0ec-13f51d0fb8f8",
        "cursor": {
          "ref": "966e0d33-9bb1-45f7-b5f5-55195501d248",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "94fdec8b-5f36-41ef-b93f-b0f4e5bb64f8"
        },
        "item": {
          "id": "f9984424-b8db-443d-a0ec-13f51d0fb8f8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f798eec3-f75f-4128-85bf-defa0bf34ec5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "e9bc4b42-c4b0-4bda-b622-f1ede81375c1",
        "cursor": {
          "ref": "5ababfc7-7b7b-414a-9f78-97fbd99d0cbe",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "14939d8b-dd86-4896-b6bb-a78c1f38d58a"
        },
        "item": {
          "id": "e9bc4b42-c4b0-4bda-b622-f1ede81375c1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7a805c97-6fd3-4367-b925-60933acfac34",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "e908e1d6-9e17-4339-a9fa-e0bc8d5b9439",
        "cursor": {
          "ref": "1cc6c7c6-5063-428e-937e-02c827a87371",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d6f8b6d8-9d82-4b82-8cf7-7523a18e0fb6"
        },
        "item": {
          "id": "e908e1d6-9e17-4339-a9fa-e0bc8d5b9439",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3ffd64bf-ac89-4305-b964-fc49d97bc7ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "66abaa8e-29c5-46d0-ae4f-2d11fe653307",
        "cursor": {
          "ref": "3dba589e-cca7-4cb5-9941-d1bcb1270a9e",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "baee78ff-d0f0-4b35-9772-66ca6bd98ebb"
        },
        "item": {
          "id": "66abaa8e-29c5-46d0-ae4f-2d11fe653307",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d57c48be-c9c9-47cb-9ea4-0a605e8fab91",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "8d386dbf-95f1-4366-889a-17072a1bdec4",
        "cursor": {
          "ref": "d3ca77f2-c2f2-4735-8500-1937bf19e0f5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a9ed4bcd-bb0b-4db4-be5f-9091c844f041"
        },
        "item": {
          "id": "8d386dbf-95f1-4366-889a-17072a1bdec4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd9525a3-bbd1-4002-a2be-f09669778772",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "27ff5576-50ed-4e80-977f-b80aa940e735",
        "cursor": {
          "ref": "a7d33ff1-f689-494d-ac8e-ffe1139575cd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d7d81081-0726-4c5e-872f-3d60e3be039e"
        },
        "item": {
          "id": "27ff5576-50ed-4e80-977f-b80aa940e735",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b88e64d-3131-435d-83be-c69fb691c70b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ded977d-d589-4806-a574-72b18dcc89b6",
        "cursor": {
          "ref": "a8fcee69-6296-4c03-a56f-71176d99b6b0",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d0cf1cf3-a7c6-4ffb-853c-1d6c1ede088f"
        },
        "item": {
          "id": "7ded977d-d589-4806-a574-72b18dcc89b6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4e366d5f-590d-4a71-9f83-bfa2414e1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6aed2a-3555-460b-bb85-b6d5119f6560",
        "cursor": {
          "ref": "fa1a5bf7-0619-4f4a-837f-f8844bad685b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "868f0a13-870b-466f-b226-2582774fdf1a"
        },
        "item": {
          "id": "8a6aed2a-3555-460b-bb85-b6d5119f6560",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8b13599b-121d-4888-9c38-a3eb68831350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a34370-8f94-4533-90e2-fd54565cd0f1",
        "cursor": {
          "ref": "cb5320f0-3ccb-44fe-b719-fba3e4a3d028",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "764e21b8-7666-4b00-a67e-c76f5757eca3"
        },
        "item": {
          "id": "d7a34370-8f94-4533-90e2-fd54565cd0f1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "195438e0-031d-4e6e-9770-95e73c46aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ebd338-09a4-4ab8-a624-49c7196db901",
        "cursor": {
          "ref": "ecd0f7f5-e14c-4aad-8953-a23305085b0a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "baef134f-a0f3-4ac5-92d9-fb8febd3b685"
        },
        "item": {
          "id": "d8ebd338-09a4-4ab8-a624-49c7196db901",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e403a12f-2458-42e8-9acb-2336cbad40a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d47fb9a-cbfa-4920-b5fe-5a320ba1aa9b",
        "cursor": {
          "ref": "cb753cf3-d8a8-42f0-b669-7b43b92e25e8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "be0fa56c-aceb-4877-92aa-92056812d361"
        },
        "item": {
          "id": "1d47fb9a-cbfa-4920-b5fe-5a320ba1aa9b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e31604d-2306-43bc-83fb-d164de47e90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d5199a-3c05-48b9-b305-1282354d33b8",
        "cursor": {
          "ref": "57cb3896-6336-4fb8-9786-d874dc4b1e96",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f80a13e2-ce7f-40bb-88d9-d2f6bc54df03"
        },
        "item": {
          "id": "62d5199a-3c05-48b9-b305-1282354d33b8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b479baaf-5b7f-4712-9bd5-4409783052d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76696ced-6c3f-4d60-a9fb-6e61db4c7e2b",
        "cursor": {
          "ref": "9a3b2f20-fe8c-4474-bc92-e7bd8dd87fe0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6bb01b01-c03c-41b7-9e33-cd61e364a31b"
        },
        "item": {
          "id": "76696ced-6c3f-4d60-a9fb-6e61db4c7e2b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4cc779f2-c938-4a04-8018-a93e1db4aba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d2f652-ecff-4c31-8565-1ac7e4de4fae",
        "cursor": {
          "ref": "1c4ec19b-2663-49d9-8cc2-062c45e5ac62",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75cb2886-43ad-46da-9fbf-9e01c9ac8254"
        },
        "item": {
          "id": "a5d2f652-ecff-4c31-8565-1ac7e4de4fae",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4102e2e6-98bf-4f7d-848b-cd1694572707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1421c2-d577-4027-8427-1ce8a8fe053a",
        "cursor": {
          "ref": "ad38283b-a0d7-4423-91f6-5c25e2dde1be",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "457f0c3c-feb9-466a-8316-a9fd7497f57f"
        },
        "item": {
          "id": "7c1421c2-d577-4027-8427-1ce8a8fe053a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1b06c3e0-e934-487c-95a6-bbcea531ef75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68df0bc5-ab5c-48f8-b5df-f7b320adebba",
        "cursor": {
          "ref": "a62e8df5-e5dd-477b-b3e3-14b7421d1513",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e5ab2947-6f84-45f6-b652-0ea507784eae"
        },
        "item": {
          "id": "68df0bc5-ab5c-48f8-b5df-f7b320adebba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cc8744e0-a470-4552-bf49-6f69cf7ba611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f86380a-117a-4d90-9211-613fac643d9a",
        "cursor": {
          "ref": "f4066727-5fc2-43c3-8901-f864cb0ddc6e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1938dbe6-2fb7-458c-8277-87213e81af0e"
        },
        "item": {
          "id": "7f86380a-117a-4d90-9211-613fac643d9a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f1f33a23-f338-4a9b-811e-92b6f9fc154c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751d5b5b-c5e4-41c5-8ecc-5269354e0d5e",
        "cursor": {
          "ref": "5300155c-a64b-4ed8-b06f-08f6ecc30403",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "60e92cb8-e659-4a56-b990-13520ede2847"
        },
        "item": {
          "id": "751d5b5b-c5e4-41c5-8ecc-5269354e0d5e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "79002ae9-1dc1-4951-bc78-4ae974d717fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba561649-50dd-4388-b07b-b1b326058e1a",
        "cursor": {
          "ref": "abc4fb8b-d67c-43ef-af04-a65c1fe8f632",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fd21e584-384c-406a-826d-559140f22428"
        },
        "item": {
          "id": "ba561649-50dd-4388-b07b-b1b326058e1a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e4b915fb-2606-44cb-80d9-b25bb6c37a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4155711d-0c3c-4dea-878c-207b4b506a56",
        "cursor": {
          "ref": "096ec7c8-eaf4-4f8e-9a3b-b9ce669327d3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "aabbcb2e-5d5c-4460-84b4-424f2af5c2c9"
        },
        "item": {
          "id": "4155711d-0c3c-4dea-878c-207b4b506a56",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "39aeb2c7-2c53-4c83-b38a-e83c18d9a6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981c6bad-069d-4f80-ba22-170e81e26007",
        "cursor": {
          "ref": "33c73f9b-4e84-4d4e-b07f-7015a9d6a126",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a9354640-b08c-40eb-9f31-65b530de822b"
        },
        "item": {
          "id": "981c6bad-069d-4f80-ba22-170e81e26007",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f7adf9ec-0fef-4937-8512-e77509b060a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d252b6c-38ee-40a9-93dd-c06f68f427e7",
        "cursor": {
          "ref": "2efbeb7a-6f3c-4332-8d40-03c581ad799b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "920cb29a-3fce-4b14-ac5c-0ecef4bb90ca"
        },
        "item": {
          "id": "3d252b6c-38ee-40a9-93dd-c06f68f427e7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a104e39b-bc68-4f6d-8bfc-2115bed35b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab099b6-6ff1-45e4-bc06-485980427ea5",
        "cursor": {
          "ref": "52343f23-1a9c-4433-8beb-2e8be575de5a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8b5caa60-2219-4569-a5e0-84e74070f63d"
        },
        "item": {
          "id": "2ab099b6-6ff1-45e4-bc06-485980427ea5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8b7a668f-64e7-4255-886f-f61f5e80e516",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "e71990b2-1f97-4cc4-b4f2-9004761b28e1",
        "cursor": {
          "ref": "571b1c55-a7e5-4fd3-8ddf-153f065ee2bb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5d421ba4-cdbd-4c31-b8b5-7123ab022531"
        },
        "item": {
          "id": "e71990b2-1f97-4cc4-b4f2-9004761b28e1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "866b526e-e702-4f55-b0dc-9fe9167b7339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68ccc52-8904-4705-ba59-e30ab2741270",
        "cursor": {
          "ref": "0590aaee-0532-401d-8619-835d07aa2157",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9102a2e3-6e85-4a5b-ae48-2e58d46d2335"
        },
        "item": {
          "id": "f68ccc52-8904-4705-ba59-e30ab2741270",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "23d0cf47-116e-444e-b6b8-c7d032feb659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1bfb5a-9ef3-4005-865f-e297705c0f3e",
        "cursor": {
          "ref": "df35295f-b9e8-4cc1-b0f0-0469eefa2697",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "31210717-dce7-48c8-accc-4e0e0057ee38"
        },
        "item": {
          "id": "4c1bfb5a-9ef3-4005-865f-e297705c0f3e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "816553f0-9b96-4967-809b-c61882e237b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3162f411-376e-4d1a-b26a-10391982e0c0",
        "cursor": {
          "ref": "b61175ab-cc15-4bd5-92fb-dba185443fe4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ac4e9631-1f43-4556-a8e6-1dda5fc58ca8"
        },
        "item": {
          "id": "3162f411-376e-4d1a-b26a-10391982e0c0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e8b8eb71-0a68-4f23-9d39-55bbc1493978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4806eb94-6335-4b26-ae6e-263bf1b52722",
        "cursor": {
          "ref": "88caa2cd-0754-4d29-b3db-700e5c55b0e2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7ffe024a-8429-4a67-8245-39f9c9f830bb"
        },
        "item": {
          "id": "4806eb94-6335-4b26-ae6e-263bf1b52722",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dae9da54-8711-4889-949a-9fc81b62b05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b77d66-c5ea-4b80-8913-5fcd8f2e68fa",
        "cursor": {
          "ref": "2642bbdd-9813-4bbe-a7f3-0203d917aa1b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4285a44c-dc66-4847-928e-c1d4e0854425"
        },
        "item": {
          "id": "60b77d66-c5ea-4b80-8913-5fcd8f2e68fa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c31ee327-25e5-48f9-b7c5-ecdffe395950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f53932-d9b6-417d-b1f2-19192e43bf15",
        "cursor": {
          "ref": "429142bf-3f79-40a7-807c-335f6e49a9f0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fd4fa6c0-d69d-4804-a665-227d66837340"
        },
        "item": {
          "id": "82f53932-d9b6-417d-b1f2-19192e43bf15",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6ebf9739-3c3a-4797-b284-59cdceea1101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26da599d-7ef2-461a-8282-2fe66e6f8fa7",
        "cursor": {
          "ref": "ba15b1b9-69f8-4867-8120-470a2b000fbb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8f59ca24-b320-46e5-ab10-0b238b0db928"
        },
        "item": {
          "id": "26da599d-7ef2-461a-8282-2fe66e6f8fa7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "725feef0-cc11-4f07-a96b-1402d9b00a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd531818-9102-4aae-b5f0-f05d76d4cde6",
        "cursor": {
          "ref": "b68a3afe-e562-4570-9d0b-36abe50d0313",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2c69761f-d614-4e9a-9c53-b1d0ecb43fa7"
        },
        "item": {
          "id": "dd531818-9102-4aae-b5f0-f05d76d4cde6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "108d821e-ef02-4a33-8541-314d170e798f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa183b2-0198-49e6-8325-d40c6bd4e583",
        "cursor": {
          "ref": "8116dad7-22eb-44c2-9d5a-0458d9e88423",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2ead90a1-392b-409e-aeea-9f5080e5d7b5"
        },
        "item": {
          "id": "9fa183b2-0198-49e6-8325-d40c6bd4e583",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "01b18f99-8889-45f8-86e6-e67c3618cde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbe2719-a805-45e5-bdde-8fa1e10c622a",
        "cursor": {
          "ref": "c26c5346-cb74-40f2-b5a4-d762bcc6e000",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9aef0e93-3647-4d2c-8bdc-4d80d67d51b3"
        },
        "item": {
          "id": "acbe2719-a805-45e5-bdde-8fa1e10c622a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "da54916d-7500-4241-a989-40823fd7097b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05548e7b-fdf3-41d5-9f1e-6856054260a7",
        "cursor": {
          "ref": "0a94904e-a9b3-4fd9-9a95-efe6fff6d2e7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6ec00859-311f-4576-83d6-3c68c241fca6"
        },
        "item": {
          "id": "05548e7b-fdf3-41d5-9f1e-6856054260a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "07c64a7d-b73f-49ea-b1b1-6b3906ab2c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5330d6dd-5902-4bb2-9f77-2d247d47c30b",
        "cursor": {
          "ref": "8753ea47-b225-4262-9e0b-3d3be2fb56e9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8bcf682a-2efd-4782-91af-4bb34a75b42b"
        },
        "item": {
          "id": "5330d6dd-5902-4bb2-9f77-2d247d47c30b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dba9ef6e-f172-4b8c-afcb-9daac6dc1b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dd48bf-8127-494f-837d-8aa96d140b01",
        "cursor": {
          "ref": "286afd92-d107-4dfc-bc68-863a5496fdde",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "60450053-728d-400b-8dc0-b0b5a514402b"
        },
        "item": {
          "id": "48dd48bf-8127-494f-837d-8aa96d140b01",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ed2bc2c7-eef5-426f-9785-f54717e9db9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb36dc4-df85-429d-8746-d7e450bd5efe",
        "cursor": {
          "ref": "d49fe18b-00ab-4189-ba13-12f9355121d3",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8f8389f3-c88a-4aff-a37e-56f387092805"
        },
        "item": {
          "id": "dcb36dc4-df85-429d-8746-d7e450bd5efe",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c1ddf771-0042-4b38-b02c-d23d9d40b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d94827-d783-47cb-a609-6ddf2818c106",
        "cursor": {
          "ref": "748ef541-d201-4e4f-9522-be5e99600604",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4685804c-f0f4-400a-be11-029ff001a567"
        },
        "item": {
          "id": "34d94827-d783-47cb-a609-6ddf2818c106",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b9e1e6a2-28df-4e9e-916a-e7b0e70a309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9fc12-8768-4564-9e36-2457fe0816b2",
        "cursor": {
          "ref": "d957d7e2-6462-414f-9ca5-becc2afe6a27",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b22fb610-3e48-4312-8119-23fc94f7dde6"
        },
        "item": {
          "id": "4cd9fc12-8768-4564-9e36-2457fe0816b2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "666748e9-6fb8-461d-b670-8ca9199ca8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2c4a85-2725-40bd-8765-4e4ef8276614",
        "cursor": {
          "ref": "668da5cb-e729-42ef-ba94-749ceeb74af2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dcf8fed6-9507-4560-b549-f59f5b695820"
        },
        "item": {
          "id": "8c2c4a85-2725-40bd-8765-4e4ef8276614",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ad616808-fb30-4b5d-a8d8-798834f89009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ade809-898c-4ca3-ae17-592fa6959045",
        "cursor": {
          "ref": "2ba204ab-6aa5-455a-ae0a-2fb02cc7cd8e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4e05786f-3289-4776-accf-d6f3dc980bfb"
        },
        "item": {
          "id": "19ade809-898c-4ca3-ae17-592fa6959045",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2c83d0ba-909f-4dbe-9c70-29417817e182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa56b06-6980-4c33-8a31-fca7990f4212",
        "cursor": {
          "ref": "93815313-7ad3-4db9-b729-71ecbfeeba4b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ad7baf5d-e1f4-4ff0-9efc-21388e609b19"
        },
        "item": {
          "id": "afa56b06-6980-4c33-8a31-fca7990f4212",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0e56a4bd-631f-472c-a9e4-5e96e5d34527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355f0551-62ca-4902-be2b-a65f1e9c5aeb",
        "cursor": {
          "ref": "8acf21b1-f6ce-4ea9-bfc4-65db62801b6d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e4633a1e-eb82-43bd-aa04-b9cd969d9f3e"
        },
        "item": {
          "id": "355f0551-62ca-4902-be2b-a65f1e9c5aeb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b88efcad-3d78-4f87-87d1-5c2b6e23b638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe035be-c252-4f80-b48e-154ce4384af9",
        "cursor": {
          "ref": "734aac94-c155-4e91-8399-5df569017697",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b7fb52e9-f0e9-4f8b-aa6e-a9317053e66b"
        },
        "item": {
          "id": "0fe035be-c252-4f80-b48e-154ce4384af9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4839c00a-209a-43ec-9a51-a91db7a69fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc810fd-5b7b-4e1b-a3a8-ec4aa61633c5",
        "cursor": {
          "ref": "fe51b67f-5230-4e98-8210-f8850ea64aed",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d5c580a0-c237-4cda-abde-9bf0809ef4a4"
        },
        "item": {
          "id": "ccc810fd-5b7b-4e1b-a3a8-ec4aa61633c5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ae8594cc-3691-4b3f-b047-a0b192f8049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4cd640-f18a-4fff-9918-be9d1133ab01",
        "cursor": {
          "ref": "49970fe1-5bd2-4df5-b251-9d69e334f9d0",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a480360b-a9f7-42f4-91ba-fa02e08f014b"
        },
        "item": {
          "id": "3b4cd640-f18a-4fff-9918-be9d1133ab01",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a4aa5a97-e71a-4d15-a6cd-a2cb61f6dc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc738544-f7f9-4493-98ab-473657f9061f",
        "cursor": {
          "ref": "f34df140-c551-4c18-b675-6dfa12efc544",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "37909871-5d72-4ed3-8018-fb6e2b4b605b"
        },
        "item": {
          "id": "dc738544-f7f9-4493-98ab-473657f9061f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea8f30d9-9f78-4472-a229-f58310f344cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464acf7d-7e5b-4ee0-be15-2df8aabde9ed",
        "cursor": {
          "ref": "a35752ce-1cee-4fef-8e84-fb74ff3e640e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b2fa697f-397f-45e3-b48a-e11c4990d89c"
        },
        "item": {
          "id": "464acf7d-7e5b-4ee0-be15-2df8aabde9ed",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "16ce60f8-adf5-4c58-9ac1-a3fa4bb56815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf13dc76-0a33-4427-b6c8-18f6122fd720",
        "cursor": {
          "ref": "5277c27b-25c5-4540-98cd-8f483d0af38b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1d981f2b-03eb-4d61-ac56-e8d41babd1ba"
        },
        "item": {
          "id": "bf13dc76-0a33-4427-b6c8-18f6122fd720",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "82f3d040-ae8f-4973-84c0-4e87bdbc8371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbab8a5d-5567-4565-9bba-5acc010967c1",
        "cursor": {
          "ref": "1feb6eb5-164f-4397-82d5-4a158c4d0b64",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4b0156f9-3e77-45a9-9cc7-70fef862b70e"
        },
        "item": {
          "id": "fbab8a5d-5567-4565-9bba-5acc010967c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d1ee7ac5-c326-455c-94c2-40563377ae46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2053817b-70a7-4b2a-803d-1596d45ed666",
        "cursor": {
          "ref": "297f6e26-6cfb-40e9-9d0f-2f29275476e4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e4d4c263-c71b-48be-90ca-e9ea96b5c890"
        },
        "item": {
          "id": "2053817b-70a7-4b2a-803d-1596d45ed666",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "13703e95-4fdd-4e20-895b-c40adbc1a043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b280c95-56cb-4b5b-a2c0-017f993503f6",
        "cursor": {
          "ref": "ec05d567-5af4-4030-a145-df1b1d69a598",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b202bb34-88a0-4c9c-9fa7-88edf8b40750"
        },
        "item": {
          "id": "8b280c95-56cb-4b5b-a2c0-017f993503f6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c1ad70d2-2c70-4427-b86d-dd117550b663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6edaa95-0852-4c09-9831-42ccc679a510",
        "cursor": {
          "ref": "f16fd2f9-de64-41da-959e-20fc720c86fd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ffa6e431-cc7e-4c49-85ef-27632a5cdbfd"
        },
        "item": {
          "id": "f6edaa95-0852-4c09-9831-42ccc679a510",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "69b79a35-dc4e-4f65-8e06-c174d922023c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4860c46f-2727-4e02-bfac-fafb8ab229a4",
        "cursor": {
          "ref": "f9a42cc1-a77b-4878-a3df-2df3e05e0470",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5aed5a35-b1dc-481e-a2dc-e6aaed426699"
        },
        "item": {
          "id": "4860c46f-2727-4e02-bfac-fafb8ab229a4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4016361a-eb7a-44af-93e1-25e82ef2f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775578ce-d727-4aa7-acb0-fb4bed95492f",
        "cursor": {
          "ref": "5280de99-4542-42a5-9b09-002ff76b06a0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ea579ac-c12a-45a7-a4f5-cc6788e66aa1"
        },
        "item": {
          "id": "775578ce-d727-4aa7-acb0-fb4bed95492f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d9f1315a-464b-4ffe-af57-1f03610370e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb0125b-289a-4390-a9c2-f4a932f8c1fd",
        "cursor": {
          "ref": "6034b3a8-030d-4ace-a5da-8664656a703d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6cdfa85e-f598-4d0d-b8a0-182231595889"
        },
        "item": {
          "id": "3bb0125b-289a-4390-a9c2-f4a932f8c1fd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d2d552c7-7d75-42e1-8bde-2e289e8078a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f2381-c469-4b16-b20f-ecb1d05149c5",
        "cursor": {
          "ref": "acb4c811-a3e1-4c36-8e57-dc7e55a9d42e",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ccd3ede4-2840-4bb4-8f33-1ac02d2d033f"
        },
        "item": {
          "id": "190f2381-c469-4b16-b20f-ecb1d05149c5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "26fc1868-cef6-4007-b2cb-fa6f88254acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9cee33-b0b4-4eb6-88f3-2398bda3bf15",
        "cursor": {
          "ref": "c98eea51-92af-4eb3-94bc-e01ffac73078",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7599747d-a787-47be-88e4-c0d61f05686d"
        },
        "item": {
          "id": "5b9cee33-b0b4-4eb6-88f3-2398bda3bf15",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "20f88153-c6e3-498c-840e-f63fad3ae581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a57657-9b36-4486-89ac-d12c7d589ad6",
        "cursor": {
          "ref": "8428f39b-5b9d-43b8-9870-c471e8c2c6e7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "188afa09-6ec7-4010-840f-6d4d918c2de6"
        },
        "item": {
          "id": "63a57657-9b36-4486-89ac-d12c7d589ad6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d7bda345-7d3c-4e49-913f-82aef0dd4507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528619a1-5338-4b3e-8f2a-8fd4d8b29dc1",
        "cursor": {
          "ref": "7fea57bf-0fc4-4ed8-ab95-2e986f71d726",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "656092c0-b3fb-4524-959d-18e145796eda"
        },
        "item": {
          "id": "528619a1-5338-4b3e-8f2a-8fd4d8b29dc1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9964a584-ede7-49f3-9757-89180b0bb2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b3183c-fcf5-4aa7-a743-89b6c8c20b09",
        "cursor": {
          "ref": "799dc8ce-2aa5-4089-9521-0711873d4282",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "873f55ec-8ae3-496c-8336-a0910f83e36c"
        },
        "item": {
          "id": "18b3183c-fcf5-4aa7-a743-89b6c8c20b09",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "57b0cb2a-369a-40c4-85c8-d8df93a79c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf3bf2d-9d51-461f-b66b-ec206655e4d8",
        "cursor": {
          "ref": "bc39e41a-beca-42c4-ad56-d3d3466f7d69",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1ee8d56d-ce54-4176-b9b4-06a6d3ebbae8"
        },
        "item": {
          "id": "dbf3bf2d-9d51-461f-b66b-ec206655e4d8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "574d857e-b9f1-489d-b516-88beb69a971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5a1717-e90e-4087-990b-60e3c6b7399b",
        "cursor": {
          "ref": "83142f32-712d-46bc-8796-4a199ccca72a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4c2bb56b-02f1-42ea-88ae-2ec840ab7fd7"
        },
        "item": {
          "id": "8f5a1717-e90e-4087-990b-60e3c6b7399b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "25bbe6c6-9136-494e-885b-cfb1c5ab6c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653ba338-b93c-4f31-8362-ffdffec93144",
        "cursor": {
          "ref": "eed9dab8-846c-4b0f-99ef-5fa249b4c53b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "000fede6-e0c6-45aa-bf03-e5d3c965a7df"
        },
        "item": {
          "id": "653ba338-b93c-4f31-8362-ffdffec93144",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "33bf6bb2-f285-4e09-af5f-10b0fb701063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e162a9fe-12dd-4a51-b8d9-6707ec113f5d",
        "cursor": {
          "ref": "2b05ed2d-1900-414e-aa75-9072bde0348c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8d6d1775-0aed-4a3b-b1e3-48b196a54e71"
        },
        "item": {
          "id": "e162a9fe-12dd-4a51-b8d9-6707ec113f5d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e73162e9-ca74-4f22-aa7b-f621f09df2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a0ea64-1f16-4381-b5af-570c90b9267a",
        "cursor": {
          "ref": "350d3637-87ca-41c4-aef1-58b355dee67d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1b188490-2505-46d7-8a47-040ba18beda8"
        },
        "item": {
          "id": "59a0ea64-1f16-4381-b5af-570c90b9267a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bf3f4e9e-37f5-4dd8-9ea5-56d99820802f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cf2710-85b5-402d-b81c-cfefd118ec38",
        "cursor": {
          "ref": "db0219c2-136c-4972-9ba0-427d4bbb8e45",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bfc6ce36-75f8-46ca-b750-01f8935506fd"
        },
        "item": {
          "id": "32cf2710-85b5-402d-b81c-cfefd118ec38",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4619bb8d-720d-4cf8-ac67-e394111e90c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a0c7f9-7e33-4c9a-9308-9d73ebf83f53",
        "cursor": {
          "ref": "52d91285-30d6-4478-affd-c2a5d33f24e3",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e75ced72-b1f0-4d3b-82dd-82d94270cdbe"
        },
        "item": {
          "id": "d2a0c7f9-7e33-4c9a-9308-9d73ebf83f53",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "20d60582-be6c-470f-a0a3-b145bb24770d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0833295b-f01b-46cf-b74a-3ffd5f3d3eab",
        "cursor": {
          "ref": "a38487cb-c9d9-4179-bcca-09c5fc81f7ad",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6cbfc01f-59e7-42c0-a7d3-d53fe8f6be56"
        },
        "item": {
          "id": "0833295b-f01b-46cf-b74a-3ffd5f3d3eab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2fbe8e8c-1092-4146-ad0c-07c18659c575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dd3036-6dca-4374-a591-d4060bf38389",
        "cursor": {
          "ref": "5870e460-4166-4514-bbae-0491d32df309",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7e6d7ccd-f791-4f4e-8d6b-884e27406523"
        },
        "item": {
          "id": "a4dd3036-6dca-4374-a591-d4060bf38389",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2510e494-dbbb-47c4-bce3-404ca3e6d9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2e6769-aaf5-4309-8426-351e56cee532",
        "cursor": {
          "ref": "afdaee78-cc27-4440-8587-f475da94060e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a29871aa-f373-4c60-b4eb-8ee6a5079674"
        },
        "item": {
          "id": "8a2e6769-aaf5-4309-8426-351e56cee532",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "83d2e075-1776-442c-bd7e-87da57958f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cd57f4-3b11-46d0-8985-4d965405ddfb",
        "cursor": {
          "ref": "7fcb2a3a-6d09-4474-807e-fc09faa8a26e",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "808ea004-712e-40b0-9625-04761681618b"
        },
        "item": {
          "id": "60cd57f4-3b11-46d0-8985-4d965405ddfb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "030526bc-b2b2-4f9f-b7c1-ada779595a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6d3aa5-8d11-41d6-b040-29dd6d65951a",
        "cursor": {
          "ref": "ebb1b0ad-7379-4ee9-9ca7-520f1992c70a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d4325fd0-53fd-4b1d-ab99-12da63bd83d2"
        },
        "item": {
          "id": "6c6d3aa5-8d11-41d6-b040-29dd6d65951a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "35b4620f-8bb7-45bc-b90d-0e01ebaacf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c1adbf-fa69-4f6e-9c8a-2491442e6070",
        "cursor": {
          "ref": "9ecca3e9-7887-43ea-aa74-3da26c8c35bf",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "65187c48-bd59-410a-b23d-c9d3eb7ca6c2"
        },
        "item": {
          "id": "19c1adbf-fa69-4f6e-9c8a-2491442e6070",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb493c9f-ecbc-4a3b-bfe1-99a14d11452e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d99a347-0cfe-4a42-aa1a-8f10fba717f8",
        "cursor": {
          "ref": "7bc2e72f-f04c-457d-8d4d-86d9d02e2169",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1b7c5644-c707-4e79-bcba-902646d283ac"
        },
        "item": {
          "id": "8d99a347-0cfe-4a42-aa1a-8f10fba717f8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "75ee9111-d1c2-48d2-b938-f2f6a5d30b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868d33da-b6a4-4d49-bc9a-6082acf47093",
        "cursor": {
          "ref": "1f6a1bce-d6f5-426c-81de-ae68b24aa2c8",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5c932227-9d36-45ba-8a4a-8f39c49abe2c"
        },
        "item": {
          "id": "868d33da-b6a4-4d49-bc9a-6082acf47093",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e7352041-360d-47a5-a4f5-0b50b0f17476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e743d15-62e0-4f10-8d66-125c1e72f449",
        "cursor": {
          "ref": "13ff2dd6-4fe1-4084-844a-bde228a39bd0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1541bae2-cf10-443e-a2b5-66b3710c27df"
        },
        "item": {
          "id": "0e743d15-62e0-4f10-8d66-125c1e72f449",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3764987a-cea7-413f-a652-59a0ac6ed621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5288adfd-6254-4653-aa73-33fbd28f9026",
        "cursor": {
          "ref": "69595654-d4a0-48f2-807f-063e8119c6a9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "68689d09-140a-4d1a-8bee-af3d5aba07cd"
        },
        "item": {
          "id": "5288adfd-6254-4653-aa73-33fbd28f9026",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b0486aa5-5fd2-488f-8dab-9c7036b87642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa1890f-ca98-46f5-9133-1d9d1c9b1d5f",
        "cursor": {
          "ref": "11d70c37-986c-498f-a299-f2b0329a5618",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "56bdb0af-6470-492e-b789-18c24e22e828"
        },
        "item": {
          "id": "2fa1890f-ca98-46f5-9133-1d9d1c9b1d5f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "debe6210-54fc-4895-b4e9-5bac3e3fac40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a68d867-da79-4939-8114-da5f2ae936e6",
        "cursor": {
          "ref": "5e400c39-8542-4670-9a0c-b425dc9da90d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dc635ba3-1164-4e15-b05e-33c9314845e6"
        },
        "item": {
          "id": "5a68d867-da79-4939-8114-da5f2ae936e6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "42bcbe5a-1e4f-410c-a7b8-1bec6bf45db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dc0a43-e595-41cd-920d-94904cadbfc4",
        "cursor": {
          "ref": "e43ef281-8dfe-4605-83a1-9103199262f1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6fa8332f-28e3-4cff-9a77-35b707b472e2"
        },
        "item": {
          "id": "10dc0a43-e595-41cd-920d-94904cadbfc4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "953dc3f3-f9f2-4d50-a225-8e9e655b1a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b11cb9f-dc82-4175-b976-ae727cf8d3c6",
        "cursor": {
          "ref": "79328591-5fe1-4926-9c51-88509abc1f5b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5e8802c5-0df4-4ab9-b750-889859feaff0"
        },
        "item": {
          "id": "4b11cb9f-dc82-4175-b976-ae727cf8d3c6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9bb6dcbe-1930-47a8-8267-030564122cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27648db-cacc-4be0-96cb-68b2662ba2d0",
        "cursor": {
          "ref": "1953f61a-8ba2-4f9a-8456-e8430c77bc22",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8a0d5157-f5d9-482c-a4d8-fb804257e3bf"
        },
        "item": {
          "id": "f27648db-cacc-4be0-96cb-68b2662ba2d0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4b72f05c-e751-46b9-b268-aba46666972c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32252265-98e1-4ba6-9ad9-66d8f0efefe9",
        "cursor": {
          "ref": "6e1e9a57-8a76-448e-b34d-607359d94065",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9408661f-9a01-4612-8715-e2814c1735e4"
        },
        "item": {
          "id": "32252265-98e1-4ba6-9ad9-66d8f0efefe9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d3572488-0022-41ec-9a9d-f69d8a0e126e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc1e764-d95d-48ca-8819-7cbc4e949bcc",
        "cursor": {
          "ref": "3d718554-10e5-4d2a-a790-8d74799322d7",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d915802e-4c2e-421e-a9e6-a7e1b30a0dbd"
        },
        "item": {
          "id": "5dc1e764-d95d-48ca-8819-7cbc4e949bcc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1616c651-6a91-47e2-8b78-3e06d28cce48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b264f0-a6ed-445a-9954-de1610ff42f4",
        "cursor": {
          "ref": "d650aff8-aa4d-460a-a56d-34ffe593be50",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "17fb487e-7e6f-40aa-b9e3-15c8eb022ccd"
        },
        "item": {
          "id": "b9b264f0-a6ed-445a-9954-de1610ff42f4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f1266afb-cb13-48c6-9089-bec414effb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c75c6-dc4c-4fe3-ba39-279a40f8d09a",
        "cursor": {
          "ref": "9b264fac-fff5-41fd-bb3a-0efa1e779e95",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5eca04fd-9f88-4836-bb7f-353af08d773d"
        },
        "item": {
          "id": "fe9c75c6-dc4c-4fe3-ba39-279a40f8d09a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db3d2d54-5c4b-4969-bd8f-6d884473ebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ab4ce-985e-4466-b2cf-e99cf74d55f8",
        "cursor": {
          "ref": "51f7ed0d-a6c1-4d87-abaa-56df1d2adde5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "356b0fa8-aaa0-47ff-a644-774be5a668f2"
        },
        "item": {
          "id": "735ab4ce-985e-4466-b2cf-e99cf74d55f8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "269a7fbb-6db3-4ea9-a767-2e4d5330d16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2573d0d7-f487-4024-8f36-8df68c1a7516",
        "cursor": {
          "ref": "1b4f38a3-e94d-45fd-b247-06542a3e2bdd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "08b00f39-6d2b-4915-af93-e16e9bdfe5dc"
        },
        "item": {
          "id": "2573d0d7-f487-4024-8f36-8df68c1a7516",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "097dbf33-d03b-4c39-a341-b74b7d3b0020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0371db5-18f9-476f-b85a-c063230c2f88",
        "cursor": {
          "ref": "16ba823c-867d-4d9d-9a4e-47a681192126",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c3edf1ec-1d59-410f-aea0-3c030d6b00d1"
        },
        "item": {
          "id": "d0371db5-18f9-476f-b85a-c063230c2f88",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8c6a8ad2-e422-4dcb-a101-936d4b2ec996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a1d676-d8c2-49b5-962d-936d719e6e5b",
        "cursor": {
          "ref": "da9750ca-5fa8-4a74-b66e-52eb695ff9bd",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b4cf4f8e-0e46-4957-b9ce-dfde85259fff"
        },
        "item": {
          "id": "58a1d676-d8c2-49b5-962d-936d719e6e5b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c36dbcec-fc5a-4eab-b781-01961dde2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8632a30a-d1e9-4018-bfc1-84b50045ebc7",
        "cursor": {
          "ref": "0223a4fa-c4f8-45b0-873e-18fa33dcb8ee",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e8cd11d0-96d9-4285-9d00-47d21eebab1d"
        },
        "item": {
          "id": "8632a30a-d1e9-4018-bfc1-84b50045ebc7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7652af4a-a9d4-46f3-a251-1fdc860c8fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f389fd6a-ef71-48a6-89b2-03ddba824a11",
        "cursor": {
          "ref": "76ad6101-b8b0-47fa-bfd0-ac8dfa6fc7b6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2b5b3d7c-4450-4671-86e9-b344ae695481"
        },
        "item": {
          "id": "f389fd6a-ef71-48a6-89b2-03ddba824a11",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b6655ff-556c-41a6-872c-1c46f75d5cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1d2115-1850-4766-8b2f-13e698270907",
        "cursor": {
          "ref": "0de0e5e0-f10a-4147-9c02-3035e3276703",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5d2b5682-c987-4bc5-855c-c41a6e5d94db"
        },
        "item": {
          "id": "4c1d2115-1850-4766-8b2f-13e698270907",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "61ec82ac-3277-4e79-ade0-84552e9ba6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c918aa0-5e78-4963-9285-176fe1fd8c1a",
        "cursor": {
          "ref": "51059c33-496e-4ca5-ada1-89284e703766",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "395cdea5-8a56-402e-b18c-211c3180f84b"
        },
        "item": {
          "id": "9c918aa0-5e78-4963-9285-176fe1fd8c1a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d49ee872-8846-4228-beab-c5439fa0223b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2da735-5307-46aa-87da-7b38e31dac5c",
        "cursor": {
          "ref": "cdf208ef-72b3-4f06-8853-42747f39ec02",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "280a2cde-940d-4f5f-87cd-3c66e27245c0"
        },
        "item": {
          "id": "cc2da735-5307-46aa-87da-7b38e31dac5c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24f7d1aa-511f-44f2-b64e-b5dd9bc33ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8891cd-a18b-4b8d-b9d9-f9dac20425eb",
        "cursor": {
          "ref": "9b829f7a-3526-4c28-8393-97130eab9060",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "284835fa-0ffe-4887-be3e-8438f474dc68"
        },
        "item": {
          "id": "bc8891cd-a18b-4b8d-b9d9-f9dac20425eb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "88dc80e5-a18c-49b2-bd5c-da4073e2c0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3ce319-145f-4199-9bb4-022fd723e204",
        "cursor": {
          "ref": "7428733c-1002-4e93-9d38-d7489c920980",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6f87b203-76df-485e-9f65-fc86ddb931dd"
        },
        "item": {
          "id": "1d3ce319-145f-4199-9bb4-022fd723e204",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "78e611b2-7a89-4f39-91b1-45380bf188aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613487c0-2d7c-46cf-b8cf-50f79448979f",
        "cursor": {
          "ref": "6d03bfab-e5ca-4fa6-b89e-729f075d67c9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b23bae01-d78b-4f71-b9e5-ca9a77730e0f"
        },
        "item": {
          "id": "613487c0-2d7c-46cf-b8cf-50f79448979f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a077a70f-dcec-46fe-8edf-66274e365dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a933c3d-85f5-42dd-98a0-2aff963c0a08",
        "cursor": {
          "ref": "afbd2c6b-3c76-411b-8957-5d7f64c5788a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ba63f56d-a416-4b2c-9ea2-bccae8c7a0b9"
        },
        "item": {
          "id": "5a933c3d-85f5-42dd-98a0-2aff963c0a08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "84f7851c-5a46-4fe7-9885-5d4ea482ce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe9fcfd-f018-41e7-bad5-757d90b2ac1e",
        "cursor": {
          "ref": "bd73b50d-ea29-463f-a81c-09746e5e711a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "de386dc0-9185-4c28-a953-05e72260371a"
        },
        "item": {
          "id": "7fe9fcfd-f018-41e7-bad5-757d90b2ac1e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6910f930-bc81-4f13-b64c-8aaddb513f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c03987-b55a-4c50-a993-7d03ecc18c53",
        "cursor": {
          "ref": "e9c11f81-9654-4328-b035-410fa4584744",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f39f4955-1b60-477c-9b60-07b4ed0c88b2"
        },
        "item": {
          "id": "90c03987-b55a-4c50-a993-7d03ecc18c53",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af13481b-14b4-4486-9d3d-8998e09299f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fa7bb8-0648-4695-9a60-62a2abbd7376",
        "cursor": {
          "ref": "05bd6749-7455-4bb3-9282-f61c81b46e3f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "51806512-3add-4904-95a1-2b30e3125b02"
        },
        "item": {
          "id": "08fa7bb8-0648-4695-9a60-62a2abbd7376",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0fb15205-97d0-4a1c-a086-86b7fd3846db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8827ad-faf4-45e8-9c5a-d3be67dac2b0",
        "cursor": {
          "ref": "0b44673f-bb85-46d4-a6f9-8c519610c342",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b40cd07e-3f40-44c2-927b-d5260374a2db"
        },
        "item": {
          "id": "ab8827ad-faf4-45e8-9c5a-d3be67dac2b0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a6c34ae-53e3-4133-ac07-fe5664857b8b",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4924df85-a364-4ae7-bee8-076715435463",
        "cursor": {
          "ref": "d631acbc-2062-4f4e-82e3-98e2d8e5819d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ee049b6b-c95e-463c-a161-c35461e3a77c"
        },
        "item": {
          "id": "4924df85-a364-4ae7-bee8-076715435463",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5760a8e7-069d-49e4-ac2c-2d6415e2d52b",
          "status": "OK",
          "code": 200,
          "responseTime": 2866,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc01fd1-7258-4af8-8344-7c442f5f8e82",
        "cursor": {
          "ref": "3dee3a96-1f67-4f75-b6af-02b72da63e19",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "66d8f656-a694-4943-bd10-419431699b1c"
        },
        "item": {
          "id": "7cc01fd1-7258-4af8-8344-7c442f5f8e82",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b2ccae97-b89c-4b9d-ac9e-a8597345d2ce",
          "status": "OK",
          "code": 200,
          "responseTime": 2348,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee0e2e3-ab44-4da3-8f01-0c45c7910bb5",
        "cursor": {
          "ref": "c5fdf327-9ef2-4499-8863-5532c339282d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d840459b-1a05-4e96-8f83-1873bca9c84c"
        },
        "item": {
          "id": "5ee0e2e3-ab44-4da3-8f01-0c45c7910bb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ccc337a8-3e30-4b08-adbc-99848d23922d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee0e2e3-ab44-4da3-8f01-0c45c7910bb5",
        "cursor": {
          "ref": "c5fdf327-9ef2-4499-8863-5532c339282d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d840459b-1a05-4e96-8f83-1873bca9c84c"
        },
        "item": {
          "id": "5ee0e2e3-ab44-4da3-8f01-0c45c7910bb5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ccc337a8-3e30-4b08-adbc-99848d23922d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f8eedb-fe3b-4aed-9522-910b33d10647",
        "cursor": {
          "ref": "d4950c0f-665c-44fe-888d-1f40bf38e227",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "45e20ad8-932d-43ac-8ab2-5149380570b8"
        },
        "item": {
          "id": "70f8eedb-fe3b-4aed-9522-910b33d10647",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e74349e5-91fa-4e43-b673-e4088397fe81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c70b155-c126-4d28-b854-6e6fb3d5fe0f",
        "cursor": {
          "ref": "dfd44982-ba06-4689-a27b-e7b2a5dba4fb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4f47a223-673c-4f57-90f6-6a002021f697"
        },
        "item": {
          "id": "4c70b155-c126-4d28-b854-6e6fb3d5fe0f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5eecb8e8-a662-4e2b-aed4-57ef30329787",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}