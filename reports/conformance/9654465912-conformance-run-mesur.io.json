{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a8819093-eed6-429e-a4bc-75ec82364645",
        "name": "Clear Cache",
        "item": [
          {
            "id": "721a9c97-e47c-4674-856e-58d5c8c4e465",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "519260ab-bb21-436c-905d-314e2e086db6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f2092b9-c77e-40b1-b1a3-6886c73cf0b7"
                }
              }
            ]
          },
          {
            "id": "0643dac4-1768-4f37-801a-06a15c146085",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2fb3379-b8ea-42ac-a347-0459d1f5f315",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c83c778d-7604-4950-b721-b3255f71f162"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c1f9bf1b-b5e0-4226-a1f8-3644bce58794",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "89c0f479-ea3f-4c41-940c-be6f7dcc008d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "954af679-0097-49b3-96e8-2c00e7d85b6f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df62c2bd-065a-4e78-a071-d9bb475b277e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1eb4f211-e3d0-4f13-94e7-e374d111c928"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b79d6131-2e38-44d1-b9b6-83dfcb91cc09",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16a062d5-f340-4df3-9bf7-902242a8a3a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f7e64ee-840c-4bbb-a966-6f5aad78dae3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9360d93-954f-49f9-a5ec-df8849590189"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced1f5cd-0728-40e4-949d-403717a720a2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e960c6a5-27d1-43fb-9b44-6498f9239355"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e05a117e-a2ca-4a25-883f-a602a6415fbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aad65a52-38ce-455e-b83b-7ae89762b894"
            }
          }
        ]
      },
      {
        "id": "8a8c25e7-dbaa-4e0f-b361-dcb4706bc199",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7a91cc45-1a42-4906-a338-74718aa5d4c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1364bb5e-08ab-4625-9b0d-74aa5aa48d8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52c20af4-055e-4023-ba8c-feabd1336160",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cee0e3-d46d-4c14-ace1-bd740085ba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fee5bb83-193f-47b1-978c-052dba579cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de6cca7-0e36-4757-996a-d7864ab1a77e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73babe5-39ed-4450-a1d6-60d3a3a1491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efd562a8-423a-40c4-82e2-50248b851d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd78abb-2fd5-47e1-829c-1b049a416f8e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3712136-4b40-4e04-8d5b-e58ce44f3a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72d04bb3-1fad-4a5a-904e-c23f74d508aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "474267cc-6613-436c-9bd4-300ab5848eae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3080e9bd-2fb9-406f-be01-1a67a6ecb895",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9980d195-4fa4-4004-a712-dd75ee25806f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2f659af-cc9b-44dd-972d-6ff18d748c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee73d9e-4373-485f-bde5-5485ae7d666a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49f1a40-f618-4807-8b23-6a71542f79ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af78ec95-6ae1-44d7-87fb-c73fae10cc98",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6dc43d24-cd6d-4ffb-8001-084a92402a6d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e3792b5-f49c-41cd-867a-341942adf46a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "995e2560-bd59-40a2-aad6-dca11f16ca66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af4bc64f-a9b2-4089-b116-dd9cc0e9fb16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f9ebd341-6ae1-4967-b815-65169ae892c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbff1d3e-302d-4cde-9dc4-321049f23b51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "729d30d1-8a9c-4442-be66-5ab24ec9d245"
            }
          }
        ]
      },
      {
        "id": "c1aa8740-a0f2-4748-a9aa-e7421691d152",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e0f607af-1dc6-414e-b400-6d155d034a06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "91e3eeda-e6a2-44b0-86b4-509e148f1fb5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ae8a785e-6032-4ec3-a37e-716dec97c278",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc31ef01-5907-4853-aeee-d87ad01c5795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76d4043-4f95-4738-9fa3-4bd9b21824e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0549f984-1f07-4e85-9432-32ce3caf937a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2161ca1c-317f-4dea-b4d8-39234beeb4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3892c489-d653-4ac7-b0d7-a1a306fbad4a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700209c0-f7ac-4ead-bd4c-c9fa9cd8b635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834e301b-8b39-43fe-89b9-e4ef0f41e085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f4b0b2-a3c9-4878-8996-c607fa2df446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22668039-0e69-4722-a848-db0cba12ac0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7445ed8c-9f3e-4974-a01b-7876f9cdfbf9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867c9155-dda8-4536-bd23-a6e689a07679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5204416-aa73-4f51-89fa-a193e9b3f991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c749e66d-b02a-4e0d-aa6b-401a33287789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8893185-d0cd-474f-aa4a-66a7bd24975b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ffba35-e99e-4645-8d74-bc1f9972fc22",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760d9623-d05c-4a5e-add6-def61f350236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c20c31-7099-49a2-9eb5-7ce0710ae9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba82ae2c-56cb-4c35-976b-dcd97527eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9052d38d-e809-43af-8ec4-771be475fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3418a5-944e-4394-b669-1c83d62e6688",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc215d8-10b6-4045-96f9-f9f4a06560bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0815dc-93e1-4a7e-af3a-53bc6de58a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03269025-796d-450c-a167-189fb74f9784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "187f378c-08dd-4210-901e-343c058329f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d376c31-4b78-4d46-8636-d0eee97bded8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20be9ea8-b058-403c-86d4-93f32b61ce8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b6495a-495e-44a3-9207-4a333abcc61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c95c915-a6a9-4ff2-a807-b1f5398cbabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3535670b-878d-4e58-bf70-027e80a99f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e63455e-ffd7-4654-baa7-c640c0bb9010",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93d8351-4e9e-442e-8f79-51a20f6809dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46de8992-66a6-45b3-bd2b-041bf40fb88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6672ee-9abf-44cf-abe3-c2d1366c54c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe0dbed-1b0a-4e47-8640-6bb9e0b8ee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31519f5-69e5-41ff-8927-75ef24fa78ac",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0ee414-defa-4919-9447-ef0b986ac38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84503c2f-94ec-4a95-974d-8a396d459176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f81a5c-a4e5-47d6-9aa2-e3a620d07614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fb12b4f-fef7-432e-8716-8773b7a13525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b737af-5d19-4150-91c3-389ce34ccc43",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76776320-1092-43b4-9468-72ea85aadebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0e6f26-0024-44c7-8378-97eddbe1f07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9875e3b-efc6-4142-a42f-ad479c3b95c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27b27576-82fd-4982-9404-4c41c2ba8fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ae516-e540-466b-ab32-dacb8418768b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23827ecc-0419-4c22-bfb5-b8ed364929b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d858f47-808d-4445-a746-588d05f25a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d49c1a-f1dd-4c6d-b972-254c9cbf793b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f964b82-d316-4851-a6ad-6453b253492c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efeb6108-2b2d-4c84-813b-c7b476513bbf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1242b1-79e7-4234-8585-6665b2394e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6a9318-9069-48ff-af7e-36eaed4ef4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8e402-84ad-4dca-b1d7-287630a2c31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcdac589-edab-462a-bc04-0d3c159fae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f4b0c0-c718-4d8f-9843-aa4976e421de",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf4a38c-98cc-48d5-bbc9-e733e4b5af8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc135626-d3f0-4653-807b-3a29d3da3881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ede6e1-4374-4b18-ab74-3a676095f24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "920d054e-89e8-4436-8a56-557df292786b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e037719-b8d5-4a5c-b0d5-3d484f7545e0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4597814-b4ac-4eeb-b947-0d1f2adba2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b4d68f-fe44-49cd-8604-d3be284874aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60cf57d-6037-446b-9d7f-47623ba5a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3682d8ba-779a-4d16-a2ae-cde4b6cf5baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282e0c9a-891c-4230-ac2c-2dba330adbf6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cb3066-baf8-4fc5-a3e1-6f436d9ea6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623eb8c1-5908-4091-9d8c-12f19ba533b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869fa26a-c4b0-4b0d-8500-71af9b041ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "646cde71-330e-45d9-90f6-3b69c51ab3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305485ed-7581-48e0-be41-02199de0597a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c23365-0764-4292-bfa9-15f04ef221b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b973e6-5c88-4267-86cc-98fb4f0d0337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0e6bd8-08f5-4826-ac84-df79485c4d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52c5a20d-8080-477c-8347-0b70ab5731c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6d675-2356-4023-b491-1b715de0b474",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4ab1da-3c1e-4535-a876-f59f2c6fbf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520f7b8d-ec0e-46bb-b93f-a77b7392b164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71853353-6d81-48be-b70c-293b472b9d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16dce2af-6502-4b03-a534-070f145f808f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00380b1-34b0-485b-8234-c13d6c161b9c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3af691-269d-4432-a892-19958103729b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a366cd-cbd7-4cf2-aaa3-50eac4d2cbab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8650eb09-a538-42cb-86ee-037ff17d8f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "512f6a99-cfa9-42bf-81e3-b32aaab791d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942cdda6-b72e-4c81-b0e4-87ce4ac4bd39",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a5e3a4-dda6-402c-acff-795ccc2b26ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6159f83e-fe8c-462a-ad39-06196de15841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32642662-f2b5-4873-ae57-24a39b31b0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1f5a5e-8b33-4ec1-8fe6-2d6306eeb657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98989b4b-05dc-4ae9-870a-bda30d133876",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b567206-5550-4691-b1f6-4ed4023e62b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d02f6ac-c801-4631-8df8-c5de1550afd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647494bf-12ec-48a4-bd86-7d33ee85f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9c391c-100a-464b-9744-e611dd231c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f3629c-2be3-4d2c-8741-30a78497b4c1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5049ce-941f-4e62-bc51-86232a6a3407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993295b5-47e4-4dd5-b517-030575343b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6a0851-dd56-4b3e-bd80-1899bbb380f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceea4822-c162-4f23-bc93-ec5b7d2b955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a32ce4c-4e2d-4568-8de9-c4fe26f02ab8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864cd717-bf1f-4c64-b4c9-5974e3abe5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38420286-172a-4f13-8bfb-eb145c82a139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b238083c-7c8a-49e0-bc4b-6b67c3ed787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68fc0ea-2f85-46e9-b93b-c01b3fa98fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cac2913-4c79-42aa-ab65-b61d115e26ec",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffed1a1d-1099-45db-ad1a-b232224fefa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e78a43-f1f3-43a8-bf3f-10bea148a15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33bd67c1-a94e-45a8-a9a0-a96791b2fe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "091750cc-7a8f-45fa-b4f6-0bbf57f3d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97608eab-77d2-4979-9f6f-269ab076ce1b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0092ae4-6cab-4ed4-aa5d-70bb5e91f3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a53a814-4e57-489e-b56a-f3e7fefbcec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b323dfe-e7d8-403c-beeb-dd108df7281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a91150-83bf-4eb7-90dd-dec6aee1ebe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ca6262-ef5f-47b4-a167-e44374169439",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1cb8db-54fc-4d40-b7b1-c767babb158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "357164f8-766a-4b4e-bab5-d07346f49a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460006dc-74f7-422a-9661-00d40a2a472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "56b91097-093c-4789-b9ea-2aed4a4b5a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56ee278-fee1-4f07-9536-b81533627970",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4641f23-7d4a-45fe-9f3d-7b96a5f91938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8f4491-8298-49e9-b78e-497302e42ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b74f8b-9bae-48bd-9522-8f73f0b4cc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ce7694-ae00-47ef-b399-7757fd4ceb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0face5f4-93cc-48fe-96dd-fd4306c82c39",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4f758e-1724-4f4e-a846-b55c7525fc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43a088f-2277-4caf-819b-34617f309c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7f349d-0226-42f8-b7ab-7e43409d3251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6af5d1-d545-4908-8789-c68ea411ed52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02558c42-59e6-4c32-b4f6-5a15970830b1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2e97a9-dec2-4e0b-b491-708693fb8f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c196cde8-2d0e-416d-ad6c-8be51a04c6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f0719c-64d8-413f-8cc4-d72e37e81b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85de1a5b-4c22-4be3-b3dd-ff9440375db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca646c8-de81-447a-8fab-154cb70de41c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa97448-925b-4f9c-a586-dc7387bb7fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1318916-173b-4703-a323-0559a04cf9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f3aefc-689a-41cd-82af-e697ceb364ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0420fb1b-b3a3-4196-a1bc-3bea489739bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07786dda-b493-4054-ba28-4d48d9f2d0b1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b165ad0-5f0d-4640-a9c2-de045908dda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e08cbf-daba-43e7-9e58-6ebf4afb89d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5af7c30-3f0d-42d1-97c9-0f67ea138434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca12b31a-0af1-4dea-b5e2-dfa51f686a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2d795b-9614-4252-aa8b-ff602e3b0c3a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb63b83-ecbd-4801-a401-0423927c5d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad29dbd-78d5-4fbf-a652-a7f44e7f72de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27efa5a5-3674-4b80-a6d7-7f33d4f716f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b43ce9eb-609e-4fbd-a014-961e5fdd5a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ad98e7-13bf-4ebf-9b3d-7187e0465724",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306921ac-51eb-4bc6-ae67-10806e9fa53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870ae97c-a393-421b-9e7f-1b0ef6d34750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562af4a8-dbd6-42d4-a812-031ccfa3f9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59282950-5d3c-45af-8a77-2846519e1104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7d6548-4cab-4e33-8cf0-c7cc2c56a8f6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c91a06-b3dc-4901-9365-af1b5a275487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0296bbc-8925-45f7-8e17-8be03e38dd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e79e918-c4e1-482c-bb2e-d1be74438efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dca00fee-b604-43a0-8d8e-63122eeb690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdff4af-91da-4889-b7cb-a6edcf3d0b47",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fffc63-07fd-4560-8b18-f45e7d4da4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fbd7f0-04d6-49a5-b6b2-7867b128dec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243dafad-0f0e-4faf-b863-d33384c46196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f7b5548-adc5-4932-8f43-6b0fdbc44387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa168e-60fc-4fb3-810d-353cb06c2993",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3650b4-201c-4648-a18d-195dcfc15a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87a78e8-8518-4761-8314-a4f52e8fcc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279be85d-647f-4112-bcea-a40989df64dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e216994-1a91-4590-a8ee-a001f536ad11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0a1776-2b69-49b3-80e2-5c2ec7584812",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa447de1-8bfa-4b6e-870a-3f3d317b47c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec5d736-2737-4129-8b53-13b58bea7976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02888fa3-8077-41b1-842b-e79f05c3f068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e195f04a-2e9f-4401-8f57-727a411fbaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37c5d17-773f-4321-9e89-00a57e53b290",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfd160f-ca0b-4bc6-bcb3-45544dbe8b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62fb5cd0-c75c-416d-b122-c9cae486ea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3235be-fbf2-44ae-965a-08d00f9dc622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eecdc033-0f9d-4ac4-8653-94986dd552c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662a159d-ab44-40a2-a6e7-a9fccb743470",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a51f87-8429-4e25-b041-4dee2df7c1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d4b928-6ab5-4d36-9f71-6c1ca7dd9712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913f2993-c746-4440-8370-d1cb5daa3c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96798b2c-430a-4ac2-8c3a-39d465fbf009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba83359-efde-4b46-9815-4020c99c2d0d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a2173c-9ef7-4a05-b320-1fe523a50066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1377b9c5-c334-48a9-ae2b-22fb9b5df88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c98b9d-8713-4426-a85b-4eb147ccbaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e646a0fd-3956-4a3b-8840-41f7c493812c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791b8aa8-720c-4fe9-91df-6d300f16ba00",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d926155-ea31-4026-a445-fa52a3791a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3eb409-7c91-45af-a6ac-ffe2bb965c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca703716-96d2-4e35-ad89-10daf8c2d2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9382959b-2477-4602-9400-dee422b70e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175e0a1e-5fe8-412d-9009-23cbc51e9040",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b475eae-d1ad-4ec0-b03c-c13ac7066caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef527bc-abb8-40c9-9ab4-6d6c05c535ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a841d7e-a633-44bd-a516-4e8bd1c0f4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbe27f6-412a-4d93-9003-a45e17e2b765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3acf945-be08-4ef1-b400-7b67f2be17a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2740dd25-40dc-4408-a1a6-34f6c3cefaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67038866-e86d-460a-8ef5-11b20c2de690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5cad2-f701-4c04-9ee1-c226380702e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0d056f-e298-4b86-98ec-0f3cc0e2eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8266ffe-3807-4bf9-9129-f894479dde58",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1231d8-7b4e-4f5e-886d-9add0607710d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f7f7e6-0192-4277-84b6-d39d330cee41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697e0a4a-9007-4dd4-a400-d9a038ce7ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9611ee3f-173e-4447-874f-7b473f3ba3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897cb53e-3f25-4013-a97c-722903ce428e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93dc355-c44f-45be-bb76-08ddd58e1a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51e0ca9-3ab6-4f30-b30a-c41813fd8c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe1d428-9799-417e-bff9-2c508e0f286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a36e33e-720d-4930-a664-c6ea521fedf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04661c80-7925-48d6-8961-13e252b9d5c1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413e3f34-8f78-4898-8918-ae7348c0f569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d254414c-c866-42d9-b986-487a4174206e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bf70e8-76d7-4a79-8bef-c4a6c894039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab50396e-4184-4ea2-8a4f-fdbe7a91575d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ceb2899-158b-48b1-9a80-2d74fd8844cb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32320232-8fc5-40cd-8323-94458823e57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab56da93-ec54-4d6f-9760-2d406cd5887a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a87094-8bea-4aeb-aadd-2fdcb3de3b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06660e4-434a-4c3f-8baa-d7d80f0fe857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeb2944-72a1-4570-9512-ef52fa7002fb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a184e63-3307-4b35-82b6-602cf4d60b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2bba9d-64d3-482d-bc2c-bdf6ae7341d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73a7500-0595-4ccd-9360-86053c93535f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa73b5e-93a4-4049-a1ee-2817b0ae8aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa03aaa-179b-4628-b85b-8f1f79c1023e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42fa4a6-af11-4113-bb59-f4647908bab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33642e7e-d98f-4033-813a-f4b854aa46b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75726553-47cb-4da5-8d04-1290555b83c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd881549-ad75-4f84-8464-429bdfc86741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed53977-5398-495c-b945-879f2d20fdfc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f84523-ea8f-4e42-bb47-8288f4eb2fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bd06a0-dad2-4696-bc74-feed91471aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb8f971-39b8-4cfe-a84b-9789dff5fa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a64613-c90f-4183-87e9-f8ad9cf68bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77554bd6-49fb-4a14-b368-1753c6cd1a21",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8539eb0-1dfe-4381-98d4-14769713d6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc1cab2-1906-4370-be87-01cca7a0f87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed7f33f-a2fe-43b1-93d4-c6824b5e0ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85ed9561-6c24-4038-9c9d-4f70e485da09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2079fed-4d09-40cf-8fbe-1ec4a49347dc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bc2a95-d436-4bf3-aada-8c33c7a78cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89806bc0-29f7-4339-977f-f9551a3d3f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71fd469-a4aa-46bd-80b5-36d428fa583b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4d460c-1fa4-44b0-97d9-d8043bdeb004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4e9e49-dee0-480d-8c73-8ccb258bb9a6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088edba9-e81c-44e2-8277-50d4d2734c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892f3d18-32cb-438b-ae25-30d8d8283527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7012bce-7f17-4a95-b23c-1e66f5f66a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae82051d-cc57-4ce8-9149-728d0cece967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9159c7e1-c745-4dc2-a47f-ed8189c44c4e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09271793-65f1-47e2-8750-f7c336cef650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788eed83-c9cf-4031-9109-dba4b20fb887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f170634-a684-433e-af53-f87ecaac003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d53b106-732f-4be0-96c7-797d18ff97bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff84a64a-bc96-4e7b-8497-e111963d3ac5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb60708-4e70-420f-8934-be06431c8010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0481f5e-c8c3-4c6d-a763-8176d90bebdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e668fd4b-43f2-408c-8e8d-cb64222d70c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c50efaf9-2cca-40de-96e2-873d65b2c2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c19c967-75c5-413f-b1a2-063300b2d319",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d33ece-e957-442a-82e1-202418774047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95da6009-1724-4bad-85df-88b85888ddef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b7d84f-5d0d-4a9d-bed6-8d071a01dc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "702499e8-de93-41c8-ab84-887bbd6766cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3383825-3dc7-47c3-933e-898ef3e176a0",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6339353-c512-4aa7-8511-8ef8c294095d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f615dd4-d2e2-476c-80dd-6cccdd91510e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d196de-a86e-4fbe-8163-0423ab1847f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0032d1-8b87-43e7-bcd5-223bb98f33d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b25b7e-ba04-4460-809d-a35d1bc9cb9e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625db7bd-57f3-4588-be31-67856d7afa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430e1bc1-87ba-4180-83be-1c29108f0f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46954bf-25dc-4eba-a738-c2d58cc672f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b73eed4f-3d86-4aca-9aad-f9b230c40afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba24707a-84d2-438c-99e2-42c2114f5706",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f731f88-04bb-4e44-bd5a-8494e1d6714d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cc1695-0045-4552-a6be-f3c86de0fe24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3588ad-03fc-4385-bde6-c4885120ccba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a5884c-90c2-4383-ba98-e3a3f1fce350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a72b6df-9bba-4296-970b-89885524eaf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f09197-64c7-48de-a596-4b2b52b7bd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971efe0c-02da-4b5e-a557-0c8fd0a52c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021bef3a-b27b-4988-93d8-f84a119a48c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4363d05-74d1-4fc5-be08-ca1044b56bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6898d73-4927-4f68-9f57-5cae3cc73cb0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a251b8-7deb-4dbd-a497-a88258d90ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab5f614-2e57-4a30-97fd-2b55585ce89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfc8152-89fd-478e-ba7d-1a2cc463eb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "edbfce2e-ca52-408d-93b9-4b9668e35940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb96762-ad8e-4444-988f-4b4d2d1b2418",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97549904-a3c8-4b80-8639-aee02cf4cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec61c3a-3c6c-4b19-b7b5-df33ac92d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048f8e5-5817-42a5-aa94-37aa3ee06b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5212fda8-d671-4012-923d-51493630d263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db698e03-398b-4aa4-aa02-70f1d4669488",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7e6ec7-3c31-437b-a6b2-dd8198d5e3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7745745a-86aa-43d5-b7ac-dd7a94372524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c89576-88ae-4835-838b-7aa3125bf2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "55eacde6-dee0-4d1c-b889-a5fd1d457d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878543e7-f97a-456b-9bde-dd2297490e38",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad799772-424e-4bfe-962c-53489b864d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898a8b0b-a619-420e-b952-ba797f691fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b221f4e8-7fa3-4c20-ba15-84e4ac8eeff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "028d7c64-7e03-49f1-aabc-a5578690f62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93e2890-2db0-4f9d-8e84-4926711110dc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc84fd40-b233-4958-8c12-4cba3f9f396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630b6f89-b8df-42b4-8650-6961f6cf9e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3250f7-7c37-4356-b4a5-ca977b959cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0ee04c-ac9a-4988-9283-62ffd8822fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a824127-c541-46fb-8d07-405b9e98f315",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0232dc-ddee-4e21-be52-d8f2b2b37d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659020a3-ba2a-46b7-858f-5d65edb85f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a9c9e2-673f-4c42-a3d2-64794a909b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2060494a-95c4-4a1a-b81e-d94189a85f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d322e262-19a4-43d1-b2f8-35bfe3c9b940",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9b8697-2466-4044-8a8b-2f1446644830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd5abe-4d2e-4072-b10f-4c87c508b8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf1c1e5-8328-47c0-aeff-ad3b83f1cfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7363d244-af55-4fed-ab77-c478b56d14c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0969529d-250e-430e-8504-93d0475e09d0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40466582-e96a-4454-ba60-960aa12fc8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf410c50-3cd0-4bb5-a664-ebb675e2b2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e107e8b-c61c-4dcc-84c6-92fd41e0f486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d324340-9426-4c7c-b80c-0d9ddda518db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aaa0803-22bb-441a-aa57-e06d02377e1e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1640b674-866a-40c5-b540-a80283146750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d67c46a-60ef-464c-82f7-2bbcd45a9bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22529ad1-6d49-47de-babe-bfa0ac99d273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f55cd7-949b-4502-aa3a-b965f8df28f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf6dd70-fd53-4a27-ad9e-e07ae390e2b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa1f935-e841-480d-896a-e174a211c88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cca684d-7f33-4769-b342-e442b9af695d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eb582f-0c2c-4d03-b71f-ae36837884b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec9bf5c-f5ca-45d6-aff4-512237b0265e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce5ff31-fa1e-4978-b58d-c57105e961b5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896fc453-70bf-49c5-88f3-aa62df90f9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6f91c6-ea8a-4379-9c39-b73469c8a325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6812cbca-440c-4ab0-ac22-53af81c06ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ffc5a87-b8cd-4e14-b43f-da0d9f01ab44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf5d9b1-b0b2-4a43-8fd7-3ebb8bac9b77",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977b7791-e380-4667-b052-05e51836ee41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8afa2a1-0ecd-48df-86f8-393616595b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355962d0-e25f-4da8-ac52-b373aba78235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55b59f36-4d1d-497d-9ffb-294f05516af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e658090-e7dc-40f9-81bb-442cf36b9bc2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b96c6f4-f43e-4b74-b7ca-dba713dc236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403d63b3-1c3d-4067-b76e-213529e8ee61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9678eab3-f786-4fcc-911a-ca0b011393c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26742219-5161-4805-a8ea-baeddc063dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc6cbe6-69ee-48fc-88a5-fff14513bae9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9384c17-1edb-4db1-a334-bafc3b7ec4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f13a222-0322-4393-9401-ef96ba6ae546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13e78fd-89ee-4308-b6c5-173175ddcda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1447fa4-4b98-4f98-a895-f163a3837df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406b4f71-8b8b-424e-8052-48313bb9445d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c6380a-3441-467a-af49-b9ddb3e6b661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bcb1ff-ed1d-446a-8104-77eac3015c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ca6079-974d-4bf3-a75b-8066836a0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "059e7947-f058-4751-8c1c-f16b20c51bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a540ca40-b303-4c70-91a3-b35d981c57a2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e8471c-91f2-4251-9ad0-d1a15cc31072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a920d60e-daad-4aa9-8945-bb409e6533ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e1a45-a25b-491b-b3f9-6daa2c826dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a2e56b-67be-45f2-860b-bae162d7107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c99f35a-7ced-4609-b28e-5a5cece9d97f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f7d18f-f6de-4242-8cb4-3c48ef7d6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4ac31a-bd5c-4b69-959d-6132378f9b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f9ea70-b503-47e9-84a1-b7439d4b0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad976b2-6bf8-4be5-9a87-bbbb332274ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb90058-30e1-406d-8ef9-ba2116eaee8a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdaf919-397f-4095-b9d4-3163ee981841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0021cd-e97d-4b37-acba-9f94b6d822c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70277da8-b37b-45bc-a818-140778a94f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40afa1f6-e8c0-4b8a-89db-54d66dbdecc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863c3f4e-0acd-40aa-9a84-a29bb7c8671d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acdcce8-51c8-40fb-8a6a-f05dc2c0829b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "609db77a-a60a-448d-b86f-df6c78147504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c385c7-3a38-47d6-b1f6-942ca72641b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9482f268-d6d5-4947-9680-b1355b23ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4394d1-6954-459b-9df6-5ae7762570d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35371c4a-36b1-48af-ac19-03d4517d13be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6334c653-10d3-4ff4-a4ee-aaaaa608ca9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9365b2-f47c-49a1-8c09-591ddf75ac9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1341249-b77d-4cc3-ba95-6fdeff069aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb7fca8-b584-442e-9f0a-5731bc27bfe3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b7a308-4de2-4cb3-b8df-c63618009642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3732e8e-542d-47ed-8765-5735ebc1f728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9605af-a900-485d-ae45-be4181e4f45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53794527-f616-40fb-9a25-d5b4b32ec90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba939dfb-43c5-4e61-a4f9-759862815fa2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1881108-33c4-45b7-8640-3a304178e57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89c6f9d-c987-4f59-ae7e-01b630f78a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef96038e-6c33-4e8c-91e9-13586b2360b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b46234ea-bc4d-4931-99df-4cfe6bc213b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fbe2af-d686-4257-b328-760531fcf1a1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a5ecec-d2ab-4188-aec9-892bc3c247ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066da40b-304d-4619-95c6-cc335a3c48fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc937c-92db-4564-bc6b-8efd290730cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d31e8c-e64c-4743-83eb-6a226563601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d945718d-8c05-4cc2-a4d9-65341368de28",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a80da52-6cf5-460f-a5fb-bc7a8804597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835edbd3-f221-4e76-a901-903644d09daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df7c0b0-054c-4fc9-b97a-b171268457f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b802f0-db71-4b49-88ff-58d7ffbf8317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca0cc2-1715-49fa-aac9-a76a28e266a3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c318865-f132-41ce-97f0-a3fcfd002da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d73b61-c1a7-4591-9a9c-130f472cfe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc8cb03-3d11-4236-8a77-1f04893ab75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c124e5-ed50-4b56-bfcb-136ef882449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010f5f6d-cdd2-4bba-a20f-525e4f116e9e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff1e1f-14c4-4525-b6da-2954f1a75ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877f2b43-9a4c-4bcd-91b8-f2c7aeafe00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a68e14-3409-4991-a9d5-51bc69e1eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bcf18a-1852-4545-95e5-ca9f8ecb5366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc428612-d594-4c99-8c19-8a291baa67a6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc79d20-851b-4dc1-a22e-ec2f181b22b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056fad30-5890-4966-9c9d-07118288a157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b8bc1-40db-4788-9c0d-5c06417cdb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a82ee9e-3322-4602-85fb-5b776b9c8a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abba98bd-caf8-4a62-97c1-f98c9f96b35a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a05b60-595d-4ce9-9c08-5684d2c39bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d410cb-f1dd-41b2-8caf-a1ada964b1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a159fa74-1f5b-42af-b698-4e5b0c96526e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd542bf-ec58-4be2-be1a-22699a702c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325dccea-1bed-4371-8b1e-70f6b22394a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9d430f-d4b9-411d-a79d-e4eb45b264bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145e9cae-3d48-468e-8e62-a7557ce84a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93fdd62-539f-48e9-8843-182c6aa18fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5aa8de6-06e2-4931-b680-bd464ff66df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dce00b3-d55f-4149-8bd6-d6ed7107d7ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23350e3-3c46-4ff0-88cf-955fff076b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8023d95e-19e8-42f1-98c3-cd9740db4db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8ae81a-0d2f-4853-8c79-51d27fefc40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "286bdb23-539e-402a-aa5b-c00911f4d9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19ea31b-ab10-4883-8b1f-2e74c27e8c9c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9cfea3-f039-4fa3-9467-63492183172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8693c8c-89be-40e8-a6ab-39fc0ea9331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110cf466-66a9-4f5a-9ef7-6d2f6871b3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "730a3dfd-b10c-4b83-9d67-0cb2011c524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355eb060-4d77-4a1d-807b-66b721e62d76",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61cdd50-041e-4c0a-84b0-070a322f1c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8ccebf-5121-4b88-863a-98a2815d2a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0579b57-bf37-4819-af72-315398a39059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec380471-ffcf-4154-8cbe-897f09f633ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ffc1aa-2af1-4a11-9530-863ab2bbe300",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d508edf-9179-4d38-b261-206936327490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e957e026-7807-4716-acb3-398166868a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c0dcb1-586e-4b12-ae36-013448940ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fe3848-1b06-4afe-931f-242544146738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfac894-d2ff-4874-8a85-b831932af5ec",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad44d54-c5f7-4652-a17f-c479eeea00f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f5b5f69d-f1e2-4454-ad47-1e9bb6fa4110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a5927-4777-4d6c-8adf-82884949079a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "066e1afc-967b-4bea-af2f-308521c52ac3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df33f2e1-7654-43c3-86af-561491d40c4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12875670-203d-4626-9d52-e26ef83eb514",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a94fc6-00f7-4683-bf4c-f4df47aa3ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5df1ecbf-e37c-48c2-86c2-685effc637eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72210a67-582e-4281-b13d-7e8bab1543ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99906bd0-2f22-4935-8789-fa5af3f6a092"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d33f2067-aa11-4ac6-a182-11b5b179189d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab2f816a-0086-4871-bfb0-3619fba79774"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "431251f3-fff5-4202-b68d-54e27423c46c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3618ac6b-9737-48b7-b756-fdda93f8a65c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ba26152-0a17-427e-a43b-b0503d3f8b20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac783807-2900-43ec-891a-bacd5c0bbb45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f667cdea-2141-4fe1-a277-e4694a8fadec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "069972e6-5385-40b0-a51e-a980371fabc1"
                }
              }
            ]
          },
          {
            "id": "6c493672-d5b6-4912-bb2b-2f4db9f0178e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15d27dea-82b0-4448-8c6b-8a3514a46776",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e0682851-1a48-4bf0-954c-db136111b282",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e113142-db9a-4f75-85ab-f417b86415c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1f4f9c91-0db7-4378-879b-3f924473950a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561b27e6-8987-4439-8f8d-89bb06486045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2c5a07-ed45-49e8-81d6-2c32287a9e67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6686a05d-089b-4878-8769-ae95157b8120",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b92a29b-755e-4783-9992-ca3324684807",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eafda7cc-259c-4b3d-a86d-03d89c520adc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3bc1dec-5990-4a19-bd2b-229f2f837b26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90224e29-7e83-4a78-a900-25151f996f9d"
                    }
                  }
                ]
              },
              {
                "id": "57c73823-2ec4-419e-8033-ffc5d07410e0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a14991c6-9015-4617-8702-b404f452f430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f7a9300-4201-49f6-9d38-7c777ff7f255"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdec8fde-cb6d-4d25-a5d2-9796d512dc97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f8d20fd-b71a-4bf6-b2b5-34abb0fe12a3"
                    }
                  }
                ]
              },
              {
                "id": "f236cb41-439a-4ac0-82ce-a96db5e00032",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50a468c0-e2ad-4df0-b0a4-904da1815ea7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdfdf376-03bb-499c-8e7c-111cdb5b8bef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "031ad550-17db-438e-9940-84fc947da972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "589cfeea-3c3f-4a6e-b763-ae44247ebfb1"
                    }
                  }
                ]
              },
              {
                "id": "3d67f89a-a9d3-402f-aa4b-284fc42a233d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99beba96-08a1-4786-9caa-1fff423eec12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63c28e83-054c-4275-81c1-887e2784d58c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "138fe077-e46d-4d90-865b-f7cf9647648b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a0322d83-e143-42fc-9983-016d84617cd4"
                    }
                  }
                ]
              },
              {
                "id": "b8f9a86d-e4aa-48e0-b421-77797ab7bb16",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d0c94ec-e7f7-43b7-88cf-b63969d2645c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e2f711d-aece-4d84-ac80-980fc149db01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8876994-d33c-46dd-b263-f7ffab1664c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "168f559a-1f92-4fb1-bf57-bde7812eb457"
                    }
                  }
                ]
              },
              {
                "id": "210d7b97-cfb9-4b36-b78a-644a9781d9d9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "965122a3-b251-4a42-9ebb-2b1c8111bec0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaa7cb7d-b973-421e-8874-2a212b408fbf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "909ae18e-3441-403f-898b-3a2673313a1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d651e584-e716-4ab3-a47c-843a94dd29ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "428fb597-ee50-4f8c-9fc2-055161af778c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f819197-a39f-497f-9803-ec5b2723b4ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2ef590a8-ef0d-4b54-8779-a7d9f7ffc27b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f0efd85-26e6-451e-a0d2-42436c0b3603"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02b7f023-a5cb-4c47-8500-418e9848be55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bc1e1d33-e701-4ef8-a791-2f5d21bb22df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0358c2c-ff60-4040-b146-9b0675dcc62c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "260be83f-d133-4338-a0aa-a3b89201e5ff"
            }
          }
        ]
      },
      {
        "id": "eb15be5b-ee71-4ae0-8b9a-942465aef038",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "65dbeaac-d19d-47eb-812e-dde9920af0c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14411fb4-9592-4af4-9837-3ccb091767f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "75de58b9-7013-40c4-8e7d-d534c55332ee",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309aaca-1997-47b9-908e-123bcaa1da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a9210c-aaa4-4126-939f-7f7f42f6e3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c111a3-caf3-4558-89fa-9d0e9b9a57e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd9c953-e3b4-4132-90f4-7795e19e57b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9e80e4-94ce-46c0-a2ee-6d6150232242",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643c9b4f-961e-44ce-9bc5-4ed5f6378aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22a2ed8-b74a-4df5-86c6-a289f6e73fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca57a8b2-acde-46d8-91b4-77255d57ef87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddff25c9-93f6-44d4-9c8b-50a957637d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dcfd5b-7cda-4f67-bb0f-cd652ebdd2f1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762f60de-40ba-44c2-bed5-3f6d23dae116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f712c3-7ad3-4cbf-8abf-7ce800364a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504fe825-0d1f-4065-9bc5-d5a6dc7c17cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeea479-391b-420d-93fa-0667f38ff09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b4c68d-9e73-4b89-bb06-f18e7281aa9e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748001a3-2580-4ffe-aceb-eeaea47e25c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbbab8b-b10f-49a8-83a3-2a3c2e2e59a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0ecd89-9dac-4ea8-9b44-ae862455e5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb303fc1-d869-493a-8c5f-a1e167286bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043200e6-fff2-4f76-8b8e-677f304d8c53",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8183b1ff-1a34-46ce-bcba-4be6e030be28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcaa88d-39bc-47df-8fbe-2fc74b7eb2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747a2d4-c44b-40dd-bdaa-6cac83eb2d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd54624-f2c5-4a99-8243-12384eef315e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fff94bc-8858-4a33-9fe4-b55f57bab0c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5f25a5-2c01-4be2-90d8-839a970d396d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2379689f-e9a9-49bd-9460-52b44c1d85a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25735794-efc4-4b79-bfb0-f38cde2f3502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32320897-1029-43c0-bbc5-c610f93a0098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1900eeb-ba50-4e4a-8de1-bc64da24afb6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf6a10d-aea0-43ab-b23d-2351d839bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2601cdfe-69c1-4dd3-8003-672a5600e74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0286a143-2c30-46cf-b421-eb9134ec72a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "091561fd-a47d-4ae9-b2a8-a64adcb41212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d809f039-21df-4f78-bdbb-c55a800dbd5d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f6b074-6451-4949-9c13-9add8300f8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8517274b-e66c-4bfb-bac8-cd7511f6398c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41d1dd3-bb35-4617-8a47-9108b1539ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7498284d-ed4a-4b35-9478-e959b413fe2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc095674-8aad-4549-b663-537e9f59cf73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc36613-6e80-4b12-ae9a-fd6f56d9e8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e72ea3-5383-435e-a1f6-ef71486e45e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdfb0d8-27d4-4897-992c-6ddccb015bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68cf1e48-3272-435d-a135-45f1c98d0eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e74d18b-90f5-4404-b670-4b0195dd2e00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4de372-dd7a-48ea-a908-2b1bc77a651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5c56a7-7867-4ff8-98d9-9e8a1c72df4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4872cea-5ded-48bc-9bc7-7db61c01f92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f564e62-0b8c-4350-a314-d027952e0050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c98d36-0332-4938-8e6b-a9dda3f5c0e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dfbf30d-4d3a-46d4-927f-ecbafbe2feb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c29903-6144-4aa3-916c-089a0de18810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2592c76-7408-4ac8-99e0-e268531a18cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02f23798-eb13-4396-8ae0-5e80f643f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb074ee-b0dd-4bf1-92d1-8c754eca60ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999ed537-e310-4422-b186-e491ad74ce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a8bbbd-1d61-4c2f-bf1e-6b986702a920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e2885b-467e-4997-9af2-710aedaf1b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0348343e-6699-4de1-966d-7b39995ba359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa86ddad-09f4-4dea-b003-99735c0b3cda",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92a6548-4c5b-41d9-89a7-0da57c8f0a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da82d6be-87d5-48b7-b71f-a0866f1a22da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a744157c-2a8e-470b-9779-f33301bbebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0c39cb-9150-4e6a-8ad3-1678b1981c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeb8dfd-291e-4704-8c8f-4e425891aebf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecad21e-9fa2-447f-996c-eb86e0cfc71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979079c7-e0cb-4a87-b64d-da4313c6f946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f46dd7c-ca96-443b-861e-6e86d3017322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb8f73b-9cdd-4145-954a-e50dad7ca66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ea097c-033b-4e76-a716-4e53d7f13daf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec04660-bac3-4a0e-8c73-9e567eaa0bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66830cd2-6c16-4567-8aa9-8c868e0fc501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6e375d-c59a-4e57-8e0b-4015c6e775e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "616a8f7e-f4c7-4cb0-8243-49f8ae842e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d57cb82-b8f9-4e3d-bcb9-4d764c05d317",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79454eda-e45f-4c1c-9ef9-fdb274110f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382d62ea-55e8-4980-b412-1aac94d12bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2890f76d-1c75-47e5-a95c-998fec7bed8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2746c2a4-6135-4a0f-bd4e-5e76778e880c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c165d6-c832-4933-a87e-e6411baff68f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938389e4-a31f-4366-a0a0-90969a24ca44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d90dea-0a91-446e-a0dd-6af6619e6a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae46a53-0a2f-4e9f-a8d4-a2a84a37bd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "579837a9-6a94-4af5-9345-9809870e382f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f21620-cf0e-4881-94b0-b20461c7ea20",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d3cb7e-3742-4207-b988-62cc83d61043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9630e0ec-189f-44ed-a339-6e2bbb61808a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f89bda-a456-48bd-bf33-8e7a6b348ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90f0f41e-7b0e-425b-80d0-9a0deee2cca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400ed4da-22d9-4f41-8c36-1801c9323615",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66fb2ce-ae5b-4c90-a9fe-2090b031d814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fade802-7c93-4ffd-abbb-64ce7de75e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc705da-54e6-477a-8af0-4d751ff4a029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2376dfc8-281c-4fde-b92d-1266faba2669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f742847-b8b1-424e-81b5-55f7f3def635",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c73037-fb15-4074-9d9a-173a28e6c2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffeb6d2-115d-4452-8dda-1dbfb4c33a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aa8283-852d-4c82-84b1-b72529ddceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e669f4e-a5a5-4063-92cc-32cace9cbac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b6633a-ffd4-4315-a8c8-b1244069c491",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a74472c-0f7c-4a76-83bf-add6b6557370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadd0533-50fc-4889-9c8a-1a3e96576965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb301628-39a2-4039-9ca9-256c621abbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "addb0b41-b381-4b41-b803-dbde101660c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e670701-d276-4ea4-8d7f-d04066cb7171",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b5afb6-89d5-41e3-a9d5-666ddc8df5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1db0c02-c319-4c99-92e6-af82dc58cb7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf15b7f5-3043-40f0-98d2-4af47aebfd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ac7ada-2d7e-463c-9191-f53c24a9dffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749630a1-f86d-4023-a777-0a2a5d9349a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcb0a25-64dd-40f9-a8e2-646bd6bc3892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f4b89c-3ae4-46f1-a9f8-0709f3c6dfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6732df-4ffa-4d95-b62a-ac93d1d04b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d62f35d6-6ab4-4849-aa42-6a75984de779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b318736a-dab2-45f5-a217-8e9c51b1f930",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825eb8a8-168c-4846-8c8e-d0b2173668f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091c4221-88fe-4a20-888c-64f0cfde8caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b135a00-7128-4807-8694-0bc051446e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "864b95e3-4845-4302-ae4e-031f04d70150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d577691-6808-4b64-a885-13374752560f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f26b5b-ed10-4c21-b248-cdacd8add939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2b428d-1bf0-4578-869c-b44bb6bd6e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf68ed4a-2379-4fde-9575-ec805e885e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f651e0-32cc-4704-9444-e7d52a379069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11712c6c-c03e-4432-85d2-3d1064c4e486",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d875bfc5-6d60-4118-8c51-7a6b66368ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268827b3-a1c8-400e-a2c4-5daf0bed1a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b171bd2-8733-4923-a82c-1a1f33d03c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "523dfc24-4082-4ee3-acf6-1a290b3cab21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3beab49-1ffc-4f97-a317-c99b6761fb2c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53eb2d78-7cd7-448a-be37-ec1618d7b89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e59848-c053-4a30-8783-a1782f052a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8183ad-6e63-42ba-ba2b-315aee26e743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707be717-9ad5-42dc-8c2d-0b260a850b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e8f7d1-3052-431c-bd5d-9148aac9d854",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cf1e81-a29b-4eea-9bc2-ca1e3cb8afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1454f22f-b5ea-47c4-8abd-3ef5fc43d225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427b2ca4-63a1-44f9-b2b5-29349f37d83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8703a79c-3c28-47d3-877f-59bd38de23ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aceb67-9b0e-44c5-9d23-8048f05bf9b1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d40140-2905-4c4a-bcc1-93e5cfff3c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdd9bf2-c177-48a1-9b4b-fb183a803a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdad2c73-de26-4e59-ae74-282b3408ca20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b692430-30c9-4351-a13b-e4b476e8cfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b10911-8516-4c24-bfea-21f3b00375e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae468e4e-162a-422d-b61d-e9a521fff2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b65c909-bc83-4a35-a788-85faa5d823fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189e6d42-0121-47e4-b6c8-354877b2472f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7936795-d51c-4198-8c46-62cc32098471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bcc68f-4032-41e0-85ef-bff332e090ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef7adb-f3f6-4b4f-ad76-69f146311c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07c7520-a9d4-414b-84ab-f7e91e567114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc99db1-33d6-482b-90ae-41bf278ba67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0dec50-c341-4b18-a9c7-233b89a57dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f148a4-0fa6-4c70-89dc-de5b15a4387b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011954bf-ba66-42b1-a1dc-7389d1f8760c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc13008-ba1e-41a9-88fd-de836b785fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7f43ba-79cc-4400-93cb-8afc76d6905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c71eb9d-0737-4bcd-a9b0-c5c780b9af18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c59a77-023a-44b2-8b8f-6b548559bf7c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b457cfc-467e-4b95-8bdc-5dc4bcb325c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b0cd39-d5e6-4350-9eef-82abf37e49a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c5e1b1-4eaa-49d3-a55e-52732e58f9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5259598d-3074-47fe-b5ab-ac6877e74e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022cada0-957f-4270-b64d-c89823d7786c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca3d4a-902a-40ef-b9ad-68e4bb5d8d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c7a852-b251-4946-a337-90e716ab115e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea55ef0-e222-4dd5-8cf3-18f7c851da69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d97020-e989-45af-a7df-655b1793f907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa788ca0-2240-4009-840b-7e02d1dfd604",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53efe269-3d35-44da-80ef-9ef2f5b16840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbc5f89-93ad-44dd-a6af-34290736efef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9214cd-22a2-4358-acc0-9e0772124979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d81ad4-d7bc-4e73-9b51-537b31ba6af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e95b69b-ce22-4cf0-8019-5f1474db3925",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222717e9-1dda-4852-a89a-318d890bdbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db0b22a-6d7e-4deb-b2f4-7e646d4b9e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38afa4dc-5e51-4637-ac90-5e69256c6e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32cf40e6-1d95-4475-9b90-160e1f2c0a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9875d6f8-6d71-4629-8ed0-979bac1fd294",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b875ed61-efe9-4a39-9182-8b75cfe5f8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d539bf6e-c2ff-4e67-94f2-857dff359a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff19bc89-9ed4-41ae-bd5e-7bbc0c6d701b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "686f2a13-e34e-4196-8c1d-a494c184a605"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "26e3ed01-539c-4d0d-be1b-a4dc537cdd14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65266fcb-ea7c-4da2-a58e-d43986ec87a5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce987ea-1049-4b84-a68e-e49bd66ccffe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4328db9d-4cac-445e-9f65-9e45af31170a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9051f7b-5583-4c5b-9c61-afe10bcbf1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91195d05-d882-4806-811c-aef5f9649df3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc9befca-e5e3-48b3-9e0b-4de9d169c7cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9de2bdde-02e6-4ea9-8b56-673c16f7101e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db9f9211-07f9-4f2d-b0bb-a4a8c7a8119b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72bcaf6a-4013-4ad9-a10d-dd5dd846e486"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d02c3f95-47a7-43aa-940d-6a02a2f1cfed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2710039c-8368-422b-93b0-a6020a7af43f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aa7bdcc-da27-4c96-b92c-9c59a47ad477",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4860e131-5949-420a-8e27-e61e7e91e9c9"
            }
          }
        ]
      },
      {
        "id": "298d982b-27ea-4006-ae17-231684291122",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8c86b875-4fde-4de5-8531-fb9fdfcf1fd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9861e9fb-f09f-40a3-aa13-afb77820046c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c731b93-79e4-4480-b889-9a8d57b48fde",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386dba9f-1cdd-47b0-8f35-2f368d110b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c44806d-a167-427b-9d5b-8381e9b3e1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc871f3-37e0-40d3-aef1-b0f8225ad5da",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793bf31f-ee7c-42f4-9ee7-2183885b1bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6000d783-cbb9-42fd-9558-d8fb57643940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6699eb80-15cb-41d0-86cc-bfc7e09ce632",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb651a17-8ea4-424c-b039-6059495d5d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24fce363-577c-4456-a20a-bad117b06c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c9566c-5914-441e-b311-8258c3d6b201",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db34d641-8e9e-4e91-9d39-5ae1dbf74fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00a7846-071d-4c07-890b-8fa9caf2eb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc13af-6e6d-4dab-a148-7a4aaa7d2d48",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb879bd-7a65-4497-b593-e8a2a2ac3880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4207f3-9d00-487e-a6c0-ef12b3726461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6414f3fb-cf5f-4f0d-92c6-03e8f018b6bf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435bebc8-9ecd-4a98-a725-d24a4fbb0ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d40a2e6-e90a-4ff9-a8c0-c74dfb9b2183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90c2b47-7831-4e43-b219-155de32bd386",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273bea7a-652d-4e85-8da0-5052e2188d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ed6310b-5d0b-4f2c-b201-f660b3dd1bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8057b7b4-59eb-4822-aaaa-c78d8a7a589f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64cc9fc-7930-4abc-ad50-aff25b8c1266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a802f42c-ab32-48ef-95b5-c59b874242bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daee7066-25b8-44ad-95e4-b33b66bb2a9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e3536f5-df13-42e8-80f8-f988ed5fec63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17c0c73-f782-4089-b187-d50bf9829aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7974459a-14d6-4dc1-877f-68e1de249760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe0e3b-b600-489c-8f97-e4ca7f3deeea",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357e6664-e6a6-4fa0-b85a-c2d284bc1428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed0015c-9abe-4fc3-a877-74dbcb7c354e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0485fd-d733-400c-aa66-d24898300503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3387a1a3-1e33-4aba-972e-b194c07f7f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd66d819-6594-4df7-a073-8d99900b9ec2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5322426c-7cf5-44f8-8d6e-1c9f698f6272",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda70f00-b09b-4a2d-ba4d-bb0f411dc02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b82572-2496-40a5-ac84-46b4d49d8451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152d57c9-ae13-414e-a108-11cbe2c2f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08091719-a2b5-4031-a61a-e20fb18b6e70",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f176d-335e-4a9c-83a9-1d43ed2e1ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2947e67a-5668-4879-885e-d7300e9ce60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd674bb-9464-4bf0-a9f1-abb6ac1f2474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f3b022-1c9c-400a-ad54-4f55a9366160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3950b21d-dcb5-4234-b0cd-136589b64e37",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f534d94-2d83-4e40-8d7c-0af91101bcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309cce59-26da-4425-aaa9-dd1b363f943e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2298bb7-e8b5-4be9-b190-d6078a9b9245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6897a6d2-cf7f-4522-ad57-dddb7df0d7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d66afb-0a87-48eb-89f0-dd9ed2022faa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f37418c-216f-4798-9e39-c8ea1e759fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5899f38e-d887-4a7b-9ffc-1cfbb195ddac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137eb63f-d75d-4925-843a-ef1f703a8adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac98ccd1-2096-46de-871e-b4de30394a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db09ab3-3727-48fc-9d8c-a171b96963cf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7af584-0706-4b6a-9847-2511b77125ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59c4bdec-3df4-496d-80dc-528928e272a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc44ab33-7f11-43c9-8bdc-5284c90d5253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377a72b6-1d03-447c-bae4-999cc28c3c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2689db16-fca4-4197-b8cd-6e53fd038b24",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec87950-8e4c-4672-a356-0e6507319796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1444df41-f056-4b69-94ea-fc20cf4717d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27876a3-b984-475c-bd9b-1bc0e723bd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae374adb-3281-4c8e-90b3-1ae84e194328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489a0295-700f-47a5-ac18-af52ccc3a290",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146315f-2ea2-47cd-9060-6052d4f470fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a72fe78-2e80-4d6b-bc48-2d92204ecee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0003c4-b1ae-4c8d-a947-9d8c12949b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81a10ec-2125-4fa8-8161-c8a846d0c0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0326f60-fe69-4763-8352-38ca5b57366a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2667a03a-2c9f-4e2d-a08f-f69cf48e0837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ced63d-b1ee-4140-83bf-ad956a0de9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e64e638-81b3-4105-a109-51d2604ac88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eddd739-387e-4859-a097-f19fdb51b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed18867-3c4f-4978-a717-cdd7e911a3e6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abac1a1-6a21-44f4-ae84-a16a49d057ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8050ac80-0aa9-4c58-96de-09214b06d578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8933ae-3eb5-445d-ad51-838810f1534b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a662a76e-839a-4ac1-a6e2-f70f7b0b7160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff15de7-f990-4be4-b5c3-02073ae17a26",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f787b41-a6a9-4231-96f6-a6638613193c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ad9529-a901-4a4e-a28a-b71748849a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c66f9-7d83-4a6c-a628-71a955ad508b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dd11e0-e704-4482-a84f-ef155f50a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86d5160-8666-4e18-bc5d-c3825de181f8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b82cc9-662d-463e-bc41-e57ccd2d40e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22def194-92eb-4581-a1ff-5cfe9ff96afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cd4518-fc79-43bf-b85a-43e8bd6cf9d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291ee724-b86d-4a2c-83a5-d9eb10cbd226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43180c8d-9249-4467-8674-a7ab1433d268",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4908045-666a-48b8-b33a-7a2bd5a3d048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d193b4-9f2f-4be2-b14e-bf2b176f48ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12bb7e0-1e0c-41dc-8d68-17c4e066d9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c295183-bc31-435d-9646-aab665fc0c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec194b-93f0-413e-81fb-95064c0646cd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff008aa-9ca6-46c1-b9f6-8244a7e72372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbbb1fb-04bb-43ea-8901-8d87219a4bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c34714f-e076-4597-98c9-b851a3b671a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0b8966f-a62d-48c6-abbe-7203afa27e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee22d31-bf8b-430e-aa4c-3cd4813e2eff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c6024c-adb4-4dca-9daf-4d9919cd85c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0210a2-a3b1-40b4-a097-2a05b5537e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf03b6f-b848-4545-aaf9-602d02d18e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fe66e1-9134-4312-8ea8-c7a8e56367fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63b65ff-e665-4065-a6cc-656ca549fdcd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f887d2-0fa9-4254-8252-c033f65a78bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9426573-ddd0-461a-bf41-1f91a76afe37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18bb29f-0ac4-41cd-9e97-a801a0e532bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800580c0-f3f0-4dce-914a-d068380f98aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8488888-b7a1-4166-97f0-e77808d97197",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc31e3f-45c9-44dd-b686-82e975c281e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7201f9e2-e151-4c86-95ec-88d3d168c3ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4479e6bf-c5d0-4960-ba54-8fbd35e28b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a25187-df96-4f72-bd92-237be0e5c653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb65b80-5350-4ed9-b5a2-baefea3d02e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca821ab-2837-4b72-a56a-6a26759b2cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a28323-f8c5-44dc-b673-ddf3591a59a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f54be3-c1c0-4dc8-ab03-13797b9a5300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdd35b2-fc67-4407-bf4c-0e0158d251f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aaf20e-ab9d-4dd6-a4ee-4905f2e820cb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050aa75e-ae70-4076-be0f-74686c72e122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27cd00e7-355a-43b0-a640-5a6abcc1f525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85373e8-05c4-49c2-939f-b6836405c00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f935d54-a17e-4683-8864-e31111139bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a497454-62fc-4612-8af7-f8fd85d01a12",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e4b2be-1740-4c18-abfe-42dd478eb48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8a8436-0ffc-4d72-9002-581f9d7baf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ba07bc-a393-4ac7-aee4-d3822dafaf06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209d5f0b-f214-43b2-b10f-71aaeda9dc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c77efe-3231-4c47-8fd7-76edc60f8770",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7bf07a-f36b-4219-9e83-ac6d93cb059a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014f8a2c-39a8-44a3-a9f1-404e290cc548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43f4ae0-eaea-40f4-b0f2-3dfded28f119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "543a0b7f-aa1b-4aa9-ab42-0f9f8384d5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee1fab-6241-4c1e-90ee-c67bf6c37e45",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d70ec-2d67-40ae-b45d-9b75eee54b5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e12883cb-28a2-49d7-b3d8-e420fe52a32e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785fcec4-5230-46a8-8a5f-11d8c17f44ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720a189f-cbae-4717-80db-56e2966535b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c2beff-de3b-4a6a-b976-4f7f602f55bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e0f5a-ba07-45ed-ab46-5a9a018507df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e38991e-44ee-4224-bc06-e91e07a23cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982445b4-b888-4492-8669-31c6b2c162c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0d582f-fdc8-4b60-be9f-5a64ef494a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221da3d6-2bb8-40fb-bb58-5ced42946cd2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfdc454-c4af-49c2-8bc5-bf80d923d0c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f75cd3-4421-4946-bc6b-f669c547af63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4994dc-beef-488d-a8b2-629d584c8ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38de776a-44f0-4dc2-aeb4-932df8eabfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816e960a-0dbd-400e-8a24-21e067ee8f08",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32427175-4ab2-4784-a316-22c78a5e730c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c226d3ad-cab4-49fd-a9d0-77979160ef58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f997acd-f391-4b65-b6b6-c83ad28eb1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792854f7-8150-4765-8ec0-cc312120a615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7cc3f2-1d9b-4a68-9f3c-975da5a28503",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5b8da4-ca0b-44ae-9e29-3d2554ce65ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e49671-465c-4ebc-966a-5c25df1d69f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0d37b1-c8b9-46bd-838c-af51f6ceea1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e4ea1b-7a2c-456a-a3e6-23d9f9f36357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c53eff-d531-45d5-82f8-fd86cdbe750c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7821dab-5bd3-43da-836c-8edf7cd4daeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efdd7f57-7c94-48fd-9df9-7b8cfc882433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb69d6aa-b4ad-4934-8aec-872f7ab4b83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b75cff0-068d-452c-b9cf-77fb6cf35f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01393540-c61a-4707-b9ea-0cecb67e338a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed54db99-aab0-452e-8cfe-658082ee64f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cba84f7-99cd-473b-acde-e86b09313817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1886472e-2d8b-46a8-b70e-7cfa94c8a53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232df424-ff0e-480e-87df-56001050fe97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0442143-bba0-4ecb-bbe5-e6a6ab143eeb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53808ff-2914-4798-a045-ee3f4cf6ba67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74541bc0-174c-44d5-9d5c-828bec79ee33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e7cf1f-23a6-4557-a226-7e52de6a4d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b8ec99-58e1-4572-9631-4cf314f99df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e1b54b-9c3f-4294-a852-b18970b620be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5097115-ba42-489c-8034-4387e2083c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afd8f93-910b-4dd1-9d9c-0da01f1fd5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7580cfc5-55bc-47b7-91bb-609e47acec9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7286064-50a9-4294-8575-4f9281a1336c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210ce9b7-4efb-4931-8c25-78295185eefb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc8b9f-8d31-4dc7-9796-536f3d25225d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48c4c63-5f2d-4a12-ac63-7885e50be971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da54785e-ece5-4cad-b24a-eaa79fc68372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0112ab8d-53e9-4ebf-8cde-edc4379d5aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224d1514-4adc-4ea1-b2b2-12c31b380d7c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719cbb2e-41d1-4eb4-8fa9-2e71e50502fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce6a179-cc16-45bf-8299-6d479cdb8c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafab1f1-2a9e-4001-a5f4-d1923c2f1445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c9cd2d-ab05-47f2-bee8-69fa00fd27a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610c8e34-5d2b-4a06-bc9f-c2bb44e12f05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96908c54-55f8-40ff-8612-550944b8dbf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c955f3d-3a41-47a1-8c8a-4af2b4ceb829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c36f7-9880-4655-91f8-9d3c2e9674fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf9e6cf-58ba-45b2-ae57-dc662d60bf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3496390c-f33c-418f-b35d-6f86ad1337fa",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22429e8e-7d0d-4366-a2e2-9af526381fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93611c7f-4348-44be-b64e-e25ede0973d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e44853-7c79-4e8a-a20e-f4fcb7353957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861b551e-829a-4759-b071-25068e7b0e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a0c5e2-3f94-40e5-a061-0d40334362c9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083dc3a9-03f0-4b4c-a6f9-4936a5d68685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf0cbb7-d0b0-4ffd-b5fb-758e9b381303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945df601-9428-46c8-bfc2-a2fd9c33c092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d97ad0-c8f2-44d7-b804-7e01cfe1cd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8534ddb-dd01-4847-b825-87e2710f0832",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea31dca-e29f-4ee5-bb04-d720e8e9ba3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf55ebbb-3d64-49d5-a4c2-75b66cb07e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad21cf-fda4-4c76-9511-e4cbac187724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75046c9f-d155-4c9a-b5a5-e6011abf2e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c60fe5-601f-476d-bd15-9d6c026a770a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb6a555-bc8c-4b2f-bbe1-486bc82d689d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2d3a30-e18e-4f38-bfcf-cafe43454e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa7502d-989c-435c-a836-40cb6a191bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67e58d4-ac53-42b0-85bc-6878204ff6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ec186-d7fe-48a1-b2c8-bcf633e5d6ef",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0643814-798e-4485-aa06-4533b643bb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a230bac-de9a-4905-b735-c6c9a676ae1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f00a83-2cfc-4fa8-a8e7-0d7a30bd7b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a9e6a8-18d8-4f74-955e-f7c72d6e1c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23506b30-19d1-4649-bdb1-c93adc96322c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75324503-66a0-41f5-bd6e-65e014048f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfd1db8-6de8-4e53-bcb1-d362a8ed1783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8abf0d-9110-4d9a-ab16-3773fd567691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53a2538-9b73-4b59-9eaa-57b7c1ea4845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b72b7fc-2eeb-41eb-8644-f66e93d600b4",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad48c1-e9a6-4c50-bb60-f033744008e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34218324-f33f-4e99-bf4d-cb0996036e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f5202-8f77-4381-a0d4-7c3b23a2fe44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ac496d-284f-4888-9866-ecdb5cc59ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8ec846-5dd9-48b6-b043-b13a4a6103a0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cf7e8b-c012-4afa-bd75-731640d88023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768e5d7e-1fab-45bf-9071-c014c9eaaba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a987c72c-43c0-4f9c-a98b-39fae90fd605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3443b0-4b1f-4a70-8ce3-191f85ddfea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4951d883-153b-471e-a6dc-1687a7071c98",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f676a644-a0f9-4379-a8b2-6f4ac2cd4cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fa1e90-fabe-43b1-bb6e-7979a936ffa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7606143d-7a40-476c-b765-9f329a5808ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf54ec9c-e5f5-41ee-8cad-ed73ba4399e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933c748-3e7d-423e-ab4b-af04d624fee5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755786d2-8d5c-4855-8969-12e406851a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8478408-d071-4456-8899-d2fef991f28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbce447-4d89-482d-a914-bca08b6ca1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fcae708-2d04-40d4-8616-d9cbf6e81376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2223b045-6338-43aa-b2d2-623f4da85993",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64506480-5cad-4fa9-84ef-382af47475ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58720e8f-282b-4ff3-9203-88c166708066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd6fca-3275-4af5-935f-b7d54f8775fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9208841-470e-4253-ae31-15bdef51764b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f50f934-09b8-4ebf-ae1f-424319e86edc",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ebd573-b52c-43a3-a3e4-be90fd3f1e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a735bab2-99b6-4453-b44c-f26303c73a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263948e0-b2de-434c-befc-d13b1fe8b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8567161d-7a99-4d6c-af11-32a5843990c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b9a39f-4ad4-445e-8f9a-69c7d96f0dc5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d070a83d-1f08-408d-a28d-fe3645c69d77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4efed8c-6ee5-4c03-8115-894bf1127735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6593c557-71a6-47e0-8986-a9e43cbf7f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b64e75f-74dc-498b-b4fe-761dcf8b3e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9980e8-f747-4d73-a043-4d201904cc34",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2221f56f-d0b0-4ba5-a2e1-f1e6359b4aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb72d84-725c-444b-8eb7-b3043b6cdc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0975629-d402-484d-9b94-46bf5e60e838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8041aeb0-92da-4dc0-afaf-f805e5ed6c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8eff4a-5781-41be-a729-9fb7429b281b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6259c29e-9615-4354-a65d-fc8e1b90e757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9545ecb9-c734-4dfe-a952-56b21eac9a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e780106e-f2a8-4674-864c-ce226aea2504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a4e500-d302-4871-ad69-7991be1deffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c51d4f-1fe6-410f-a534-a3cedb31613d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8d09e6-062e-430a-a9e0-cd77e585b97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5e84a0-e6ee-4554-bc37-6ba4d7cdc933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081de7a-46b1-472d-bfe6-2d125da6d708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b441646-0ee4-4dac-8a36-c4428e9d9db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dac5280-eaac-438b-a021-bf6a68d50089",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83c4d83-ef67-4d59-8b5a-21d0d9671492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51130dff-fd72-425f-869b-9976f01854c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429eecb5-2361-4f1e-8e9c-62cd9e2d4774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30488a7-4026-4852-a631-5beb0b9b5bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629a3e4c-1936-4db0-83d6-e76293fc12fa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94083ca3-60f7-4a57-b452-43994dfe6640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a935ee-fddd-47b5-847d-081e92270432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05df6615-98fe-4fe4-8c6b-413c69815741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5a3d5e-8306-465e-af16-0e6708879598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b3f0f9-9315-4be8-b771-a1c3e800348c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff74efc-4f4a-4ec4-858c-1604bee9e069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df68422-f473-47ae-8455-99ab207fc03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68742fa0-e129-42f7-a1c9-12a9c6f3d564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e05e99-910d-4b08-af52-5ff75b64544c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c473458-d4c4-4391-93d4-1041d9cec873",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae779a76-84b1-4f16-8f91-b6855cd19f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c611d28a-084f-4f51-a345-39a4ddb43d98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5caf75-f48d-4486-809a-9eb535db8394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797fdd1a-8ea8-45cd-b90c-a08c6ec48961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff84b7d-364a-4b75-9fa2-044d03ff7fc9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df96572-cf6d-4b44-b562-deedd1ea6848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27342beb-9f4e-4aaf-a059-5028b48e1fc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f220bec-c8e5-4dc8-b23f-279e881aca39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1e8312-1229-4ca4-9572-0272632a90a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f95d744-16fd-4bcc-925f-5ea23a9c9aac",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3120d9e-1976-42fa-b168-05cad3c8f6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3f0186-0950-42a7-b6f1-ac2889a6ead0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f23a02b-c689-430d-842c-afe2135a588a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2244b35e-2230-421b-893d-996bb1790a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d7ffea-cd49-4e30-8b3d-2b12ff964500",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929c02bd-64fb-49b6-bf8b-e3d615d34bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11fff604-8deb-478e-b6cc-7d1ceff219b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e48d3f-f99e-46a2-9b71-ff67c4e45a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19cb8e2-dc42-4426-b866-11de2440e7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8756e904-0f87-4d3b-9485-6641ec498828",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abdc354-1aca-44e1-be6a-7276c3f63835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6ff0ea1-c0e6-4398-bd50-f501ccabfc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc08898-f47f-44f7-b764-a681d9dc5fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc9b7a5-d047-48a4-a758-aae205714376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e32feb-bc69-473e-b408-5387473c3b77",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ced2e5-1e62-4f64-8065-59b709acd606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249792cd-82ab-42b7-80d8-5542f8ced3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80be93f-fc94-4eb0-93a3-f53aa96ed83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8154a3d-5386-4478-aa39-d4718d028724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d8a38f-e405-4eba-9a39-b0bd233ac030",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992e76d1-f286-4a81-80e6-bf09263f7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83c1cc83-0bc9-437b-adae-06bbd17969bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae69119-0909-40bc-ad6e-8edfe7939f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03796c0-6a00-4090-ba23-a4ed47235e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b11cd0b-ce80-4d50-895b-9d76e7e4ecac",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efcc82-1c37-4d98-96a4-961852cf68d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31a1b0fc-63df-46f0-bd6f-4ef59aa35c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d862cf-ec98-47c6-a7d8-dabc52292e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da876898-301d-4d5a-84e8-248051d1319b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9c1ed0-0d06-46e5-bd21-9c9ab68242cf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e0e13-700f-4c81-bc55-ace4a4eef10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518d65f7-0be1-4ba5-97f6-e03a6e6fb95b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f14fb10-1e99-4ec4-a876-9bd105f83152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6ed85b-626b-4bc9-a433-354768c897ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa091ef-6f56-4a32-8cc2-d7293777e856",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6742fbe4-1797-42bb-9087-09fb96a23262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7503c305-c559-4098-92d7-86f0b935244b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6793322a-7139-4682-8bf0-99dc09aba555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afafb56c-54bc-4f02-bbf4-5613de6514f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f766e61-031d-40fd-aece-4ce6f334ce84",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c408691-8396-436b-9e35-f8d0f18045ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0df76a6-c462-48e2-a189-927d324266d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "478d30a4-e4d3-4d0e-b7a9-8b26b6276a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a06515-b409-4950-95d5-1ee938b27892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6921cdeb-6d81-455b-a1ea-f59fecf06ed6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55c2da2-aaaa-4f03-b722-72a4dcc4c5bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c0bf618-5175-4faa-86a4-a8868319d80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547a998-478f-4ef8-b8fb-5546780ff22b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c674aee7-7825-4d1c-94b0-c51cc66df16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92a3ffc-7c84-4345-a11e-ec2a696a8403",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a85a694-8fbf-48b3-a471-2d2dc9234c69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee772817-2da0-4a4d-912f-d9b3a43a8365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f9e7b0-70e9-4f98-81f5-1e4b762d321c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ec417a-5267-47bd-b2e1-be90dc9283f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf75951b-0f7c-4c7e-8d8c-bb9e00f0338c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973be363-01ed-4403-9dd1-453155167ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88150fb0-2635-4f04-a6b4-5e43bb06ffa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876567ac-6e2b-4e10-b6d4-d993f9e3a992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f294892a-9603-4e8e-b26a-78481c3c5e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ca5d03-9ee8-4a4a-9cf9-3d2b59c32e5c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077fac8c-84c3-4e53-9b8b-e12e34f7a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f250163e-3fd9-4f07-8fea-ec02c63a6038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb070b5-ac28-437b-8555-3fed2b1f0bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dc5626-0c2c-41ad-834b-64defce53b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90a6eac-724b-476b-b86e-08fcc5f83ecb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063ec3f8-6684-4da0-b5a1-1ce6de35c30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "656c213d-e60a-4278-a754-6290d6b27132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fc95b8-9136-47d6-9732-995975ee9609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93a89db-a89d-4fc5-accf-9047af513f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d131221d-a54c-4459-b063-5acf0bafdd7b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16ed314-b5bd-4bee-8609-87de2b66cd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aceca67-a635-4db9-81c2-7533bff30f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d64d8-21a5-4e07-8a5b-9c0fe2c6b430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c175e057-b825-4d46-80fe-43603cd3d09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129e4370-72b4-44df-b76c-f40bfda51623",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dde2d32-233f-4a68-99c2-5be354cad943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d369e67-2047-4965-ae61-d55a970cf57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26dd256d-fa72-4ec2-bfaf-e5a5a75b4db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6c83bf-a2b7-476b-ad84-1cc6b23c68da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8687e-c197-4657-a71e-9c78205a826b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e002f-bba0-4ded-9ea4-7567f6c5770c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc51f8b9-6e8c-4c69-a55d-27d5ad0c4351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e479c56-dacf-4b70-b1e4-347ca23be650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeaa41d-7fe2-4ca4-a1e8-76569e8961e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25144b7d-e304-475f-b18d-f189f94e87f9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ca2b25-438a-4c27-b044-e1fa79215350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74dcc6c-e4d2-4adf-a761-4dfda6ed8f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44553195-b767-4ddd-a06d-d15d29136a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243ace1b-434b-4f63-890f-8ff883491e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a975efd-07a9-48a9-9da1-811b508704b7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5d1ca1-6fdb-4c8f-90bf-b16e7a608e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01c999f-8f81-4a8e-92fe-9b5d8ffcd6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81625bf-4750-49ac-aa4e-5e34fd94d2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53509ce7-cb80-4772-929c-e970a638b494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735f43da-2596-4221-8350-e4a7c39d4dd5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4054641f-10d5-4db5-83b3-d6e798946bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2378bd4a-875b-4025-b54f-1430c216d6e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13acd912-9edd-45ac-8373-bb3f60e2157e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1141a21-185f-4a5f-89a2-690e8c9fbc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29ffa8-32dd-4a57-a98c-a09fa7d8db30",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a379ae90-d7c5-4670-b5af-97fbbac1911a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101b4638-b135-4ba4-a3a0-3af68d48d0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d2d105-361d-404d-80cf-ce7b4ae8f43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7958a494-49b1-4321-8b63-730914ed5140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a57a5e7-fd50-4e17-9369-4ba8ead32b1c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bad577-95d0-4b9e-99c5-6a621fbdce33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bd3f078-d3f7-4607-9ef0-5a841f81ab24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f20302e-effb-4e6f-a4a0-88e0a913a4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1b556f-76ab-436d-9e43-f5da66044cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b434bc-dc22-403a-b116-49d7278f4f0c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dbcc4b-8c69-45dc-a6df-b5d17a3abf87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af965b19-1698-4fbb-a6b7-430ef0635fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c455110-2faa-46f4-87f6-23a8aa54f20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d69e98-50db-4cdb-8952-94a0c11b2c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c3c96b-986e-4d97-aa89-87535bb6dbd6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100913b-7659-41dd-94cb-d3ef5ae4f301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71ea7832-bc9d-4453-a4bd-cef5992bbfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a6b92-5c37-42dc-a2c2-e08905cf8180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975c8713-2c7f-4389-84a0-b720a5a45776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1bbd0f-3d9d-4fb6-b237-d43597181e88",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedab0dd-5ee8-4d1f-b858-d7800c29e076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53864172-864e-4a6c-a9d6-5e26ac376311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee73b3c-f952-4474-96bc-77e6e992a92e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e6c7ef-806b-4274-9c89-db010ac54100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dece095-75c2-4088-8627-92d93eeec65e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77702cc-8117-4f67-a957-606d5fe79eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecc8f51-2e95-424e-9f2a-4815d2e1c1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9f37e5-5dbe-439d-8f78-4299b2829fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0344b90e-8919-4cc9-9798-e4acb208a740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54fd009-9c8e-4dbd-ad46-df38e45cd34b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39f8de9-4dd7-44a3-91af-3bf07718023c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e057049-d8bd-4f4b-8567-7d1e94d8edb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d5b29c-f1d0-4293-918f-dab5fe494792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e4675bb-78d2-425d-926a-5577c6a9bbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03ebdd1-6649-4676-b4d5-ba112a78cb52",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e3bbfb-97cd-4979-b0a5-d9931ac26db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f8709ea-7f64-4609-bfb1-1a8c9d38aa25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0ca6b7-8b37-4bba-a1e9-ddc4baa474aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408751be-8c8a-47f9-a88d-6b45e5ca330d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc95b5e-2cf2-40c0-8aa4-acb3eadef28d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62291c52-35b3-4aa4-ac07-2f4b6fa93eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bb3f53-25b4-4de3-94f5-c649b52361ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62383fa9-d611-43b4-8f36-8eb784f4e7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bffba2b-d1de-4660-828b-7edb14b7dcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000c1890-fec9-4d57-bb68-bc411d6ac91c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb4c19-d774-4f63-b05e-6b2486980ead",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5ccd8fa-7170-46de-8d28-f1112b8fb244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b026f8-fc1b-44f1-b596-f44d59c1ae93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ef4c6b-5fad-4fa4-91c4-8ebc0a842310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb97702-b068-449c-a927-b681af97ec17",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6555b666-d064-41f0-a770-3db1b4dca05c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291cf2bb-a1a1-4424-8a41-c55fd25719cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b57190-57c7-4fd8-b102-ddf781973de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0386fc0-2259-48dd-a3cd-3f84bcd77197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4deb2f0c-9b0a-45b3-9a7d-e847a3b7bd25",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3609db-bf9b-4eb7-bcdd-a070f8a71f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7054f29-a33c-4285-ab09-4d71012d2a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8c9eea-1e72-415e-b566-b2eaf0509baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c46aa45-cdef-4777-9e67-3f0b7294182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95645c4e-b0fc-4abc-ad35-d7f8282decaa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f8dd9f-9f6a-4ed9-9bd0-cf5e9349e6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a66bb36-e10b-4243-8fdd-5efafde2528c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09931801-45fa-4ae3-b1fb-a6c8f8aaf302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a44082-ef9b-40ce-bb51-47ea888597cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15ab4d5-2cb0-4d64-bfd5-875a4a0cc630",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af580b80-c161-4f79-94d8-817a38d507c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fee698f-0469-49b4-973f-91709603b33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00a87bc-70d4-4b4c-bbab-ef0f7754620d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57baf501-ac57-47d9-8f85-1ada5b8f57d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dab0fcc-b167-4ff3-98b4-48b6fc6a4146",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a356dd65-19b6-4652-9839-c86454635007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb59e585-430c-4b7c-936f-329aa4a95064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238b9055-0978-480e-bdeb-63a871d3c3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caa3d45-180b-4880-8994-72d8c4dabe46"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd34255e-8e0b-439c-b032-9eb66c486418",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "953b1915-1447-4fca-9db9-0c34f4bbeb76"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d65cd9c-e4b6-4162-8f6d-329238ba69c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f074ad1c-52e4-4ac1-bd69-c55aa7a90865"
                    }
                  }
                ]
              },
              {
                "id": "6d279d64-9534-444d-8ced-6c67606e642a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6910819b-a56b-468f-8e6c-0e0bd0525706",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fb7c1c-1f3f-4b19-bd3b-aa29c4215117",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fb34eb6f-4831-4514-a7b7-e7eb7587dd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a6c7fc-105d-4f1a-84fa-5c6e5feae3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca45899-ec39-4dfd-995a-d26ae4d33498"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a1bbba7-a3fd-4a34-9cec-1e03aaf39c47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "113eadb7-0656-462a-882a-221b50bf3d30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cef94e42-bc6b-4c65-9855-24b2279c0fa5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bf89350-02a1-4a6c-a220-db0cb571239c"
                    }
                  }
                ]
              },
              {
                "id": "7c5ac27f-0d29-4c05-a2de-291ac3a4feae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "08ea4d55-e903-429f-83e0-1e2d6aef51ca",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b2fde-b38d-4377-b89f-e1668b375d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9553f67c-a70f-4327-99ce-e4bdded6f441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be751b5-7262-490b-b0be-4d698b182c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82dea33-e6f7-4783-a0b9-15a07a173ec0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5cfa2fb1-320d-4343-a71c-e46ab3f27056",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72074cbf-f99c-40e9-9e6e-9c96714ab138",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1ad3e3f-c9d0-46ca-8061-6b455bcb669a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "61436632-f9e9-4946-95a0-33e47f25888f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8cd7a0-8e29-4402-a230-140b6fcd474b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51790159-2ac5-4fdc-b940-6fd6e72cd1c0"
                    }
                  }
                ]
              },
              {
                "id": "a7fd0f91-04d4-447b-9296-0f6873fc28a7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a02cf5a-546f-4a44-8056-2a059a43cc43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d0545052-aa7b-4c87-afc1-c3fdb629d35a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ba266b3-25e5-4e68-9970-e44215a35230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c82586a9-4084-409b-ae19-52f4bca7f80e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ccbc6e8-ec21-4c41-a830-5abbab2f335f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ffb646e2-4408-448e-b6f1-0679ef9ee212"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82da776d-1a0a-4fe4-93b2-5e5616eed4ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64ab7345-0e8a-42e7-a3ad-b1ba771bea4e"
            }
          }
        ]
      },
      {
        "id": "581495a4-bb3b-468e-b64d-7596951d5551",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d8ec828-7200-450c-92d1-329e9dd19ece",
            "name": "Negative Testing",
            "item": [
              {
                "id": "549be507-1217-47ce-8ede-c9e97901d32c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2243d5f-21f5-4205-8211-0880d17d29d0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ba08a4-b9fe-492c-99ed-29ca341fa278",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "98d86170-c778-4637-b162-3606374f741d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3e881d-3eab-45fc-9e72-de4902d34923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fb5af2b-17a1-4e3c-bc08-40a13b50216a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfc29fd2-eac1-4b5c-a776-a58d5865cd11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afec3091-afa4-40ea-a734-fda70e92b385"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2b9d66e-3f63-4974-863d-4671954b7e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72e68eb8-020e-47bd-847c-c648ba010c48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49a37d3c-7b97-4e3f-a129-857a1c9fef54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "914854e2-efb3-4745-bcea-3a850d8025c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7f59ad5-772c-4caf-8ee2-6edfdd76b103",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c442f63-a8f7-43e4-aad0-c0c878d02f3c"
            }
          }
        ]
      },
      {
        "id": "1892a4c9-abc9-4a1a-8d01-73857b79c918",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "946d8569-435b-438b-8d82-a86f5dd7dfd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ce78026-5595-4a61-9cf4-41c924d77bc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a34c1d2-ded7-47d7-9c02-5017a7d105a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "637bb8f1-975a-4d70-8423-b386eee58265",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b63a04-534e-44f5-b331-93d3958ace0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e3bc24-6b37-46bb-9e88-7d2277abede6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52dbde44-785f-4242-810b-602a9589e621"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "266a704c-51f6-4e48-9bdf-9e713b3eb55a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a87bf02d-b363-4ac6-bb05-e50a5d94b70f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a59d305-2819-4731-a1fc-3e1e530753ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "840ae159-04dc-4c7f-a2fb-768921953443"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f322a3f8-2091-431e-898e-4f2f2908a2f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa2a06aa-0ceb-4cb5-a76c-f9cb909586f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1eed304-3fc7-4fcb-9724-53fea6c15038",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65fdaf1c-3f04-40a5-a6dc-06998f3984be"
            }
          }
        ]
      },
      {
        "id": "e7996ad8-ef89-4b02-b3a9-255f01be94a2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c2f1661d-0271-4f19-9be9-e1a8fa189353",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcc6ac3c-352b-43fb-8bdc-8fe1692809de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47ad8d9f-e240-4d0f-985c-b99a8cb19caa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e70ce7-2e03-44c2-b17d-fcbfc1054e4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d89bca4-a56d-40d3-b847-c49577d43729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81808b8-56c7-404b-affd-934c9a34d06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6840f9e-267e-4ae3-8fd1-e21e2aeaddd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9916802-1bec-49a2-9ef4-1ec37edf1a01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "188f03ad-517d-4d8a-9fdb-2d5108cb479e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ee5c69f-b47d-4df8-953c-74a125f8e25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00fa56d5-1554-40d8-a430-da4809192e2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbad155e-2e60-4dd3-a195-1c3382b1bcd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4180186a-9321-4932-a1e2-a8376e7d535d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62324abc-416d-4b36-b126-24b5158fa24d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab15bb24-a9b7-4df5-9441-db14732b3e94"
            }
          }
        ]
      },
      {
        "id": "08fa4bb1-5094-4e37-a38c-485544bd3409",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a65957cb-6320-43c0-8505-190d444bbe80",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f51f52b-fdc3-4519-8fb2-20e9b821a132",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d6d7bb12-7114-45e2-9df8-eb1a976ab0a6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec23224d-3402-4de9-9b7c-7500d7f98ae2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84e8252e-c82d-4386-8e27-0a77215de47d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.476190476190481,
      "responseMin": 3,
      "responseMax": 277,
      "responseSd": 25.766569421893198,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719275881214,
      "completed": 1719275891158
    },
    "executions": [
      {
        "id": "721a9c97-e47c-4674-856e-58d5c8c4e465",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a4b7a849-82e6-4fce-a8df-baa4ffa46438",
          "httpRequestId": "3e61efe8-3dfe-41ab-83e3-d4c803bc0f95"
        },
        "item": {
          "id": "721a9c97-e47c-4674-856e-58d5c8c4e465",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7ccd0cbf-3d29-4c13-8e43-4e181f000c7a",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "0643dac4-1768-4f37-801a-06a15c146085",
        "cursor": {
          "ref": "9d0b72e3-97a0-4ea9-8c26-c82e7cf9305c",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8a5369f0-86e4-4025-bfd5-dd22f781781c"
        },
        "item": {
          "id": "0643dac4-1768-4f37-801a-06a15c146085",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "47b32567-91f2-4b56-873d-a8ef474d857b",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "954af679-0097-49b3-96e8-2c00e7d85b6f",
        "cursor": {
          "ref": "f21afa21-a920-4837-9963-cb41df00cada",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2d1c4755-b67b-4e56-96d7-67b0734a4181"
        },
        "item": {
          "id": "954af679-0097-49b3-96e8-2c00e7d85b6f",
          "name": "did_json"
        },
        "response": {
          "id": "10c7c51c-11a1-49a4-9fc1-9ce3efeb9d7e",
          "status": "OK",
          "code": 200,
          "responseTime": 204,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c20af4-055e-4023-ba8c-feabd1336160",
        "cursor": {
          "ref": "93d3b88e-a189-4cc0-b574-982633e41407",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29c834df-f54b-429d-899c-bdc65a2cd528"
        },
        "item": {
          "id": "52c20af4-055e-4023-ba8c-feabd1336160",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e34e0d9-5942-4711-906d-9e4b1b411a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c20af4-055e-4023-ba8c-feabd1336160",
        "cursor": {
          "ref": "93d3b88e-a189-4cc0-b574-982633e41407",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29c834df-f54b-429d-899c-bdc65a2cd528"
        },
        "item": {
          "id": "52c20af4-055e-4023-ba8c-feabd1336160",
          "name": "did:invalid"
        },
        "response": {
          "id": "2e34e0d9-5942-4711-906d-9e4b1b411a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de6cca7-0e36-4757-996a-d7864ab1a77e",
        "cursor": {
          "ref": "48e4794e-f810-41e4-9c95-810c820a079f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c58d51c5-158f-4394-801c-9ffe4fe0e3db"
        },
        "item": {
          "id": "2de6cca7-0e36-4757-996a-d7864ab1a77e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "01ece84d-d574-4e64-a7a7-c77b589ea595",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd78abb-2fd5-47e1-829c-1b049a416f8e",
        "cursor": {
          "ref": "83641244-595a-4659-b051-be7a94279b29",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7e109154-3173-45a6-bf5b-9936cec4698a"
        },
        "item": {
          "id": "6bd78abb-2fd5-47e1-829c-1b049a416f8e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "02e97721-ebb5-4808-a080-56f0d57cd028",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3080e9bd-2fb9-406f-be01-1a67a6ecb895",
        "cursor": {
          "ref": "055a7cf5-3077-4cc4-8508-0b21191bf5df",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "95e3ddef-4db6-410e-92cd-97f291fb6ad1"
        },
        "item": {
          "id": "3080e9bd-2fb9-406f-be01-1a67a6ecb895",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9d0c8f90-10f3-4140-b211-98e3f6f2748f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc43d24-cd6d-4ffb-8001-084a92402a6d",
        "cursor": {
          "ref": "32133391-b618-4dd2-a14a-105794d5f523",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fe5ff59-eb77-4baa-82c9-b46c23b27c10"
        },
        "item": {
          "id": "6dc43d24-cd6d-4ffb-8001-084a92402a6d",
          "name": "identifiers"
        },
        "response": {
          "id": "75796f15-b32e-454a-a27f-389f9b9c739b",
          "status": "OK",
          "code": 200,
          "responseTime": 218,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8a785e-6032-4ec3-a37e-716dec97c278",
        "cursor": {
          "ref": "ac432d24-68d1-482d-b018-1faa2cb222a1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f811f758-8049-4f39-8e35-fb47f11271f0"
        },
        "item": {
          "id": "ae8a785e-6032-4ec3-a37e-716dec97c278",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4c3ed263-3cbf-4a56-8c92-7bac285180ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3892c489-d653-4ac7-b0d7-a1a306fbad4a",
        "cursor": {
          "ref": "6a7ae28d-4c69-4505-8e90-b638f721f915",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "763631c3-7080-4d83-920f-823bf097b310"
        },
        "item": {
          "id": "3892c489-d653-4ac7-b0d7-a1a306fbad4a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d0a901d0-6882-4ffc-9b83-a2db0494f89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7445ed8c-9f3e-4974-a01b-7876f9cdfbf9",
        "cursor": {
          "ref": "1cf5ad75-7d86-4080-8c8d-7bb21a6850fd",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "54dbdc87-0b63-48e6-8843-03c3cb467762"
        },
        "item": {
          "id": "7445ed8c-9f3e-4974-a01b-7876f9cdfbf9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2d546067-8ca1-4f85-b4e8-d53f27efb701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ffba35-e99e-4645-8d74-bc1f9972fc22",
        "cursor": {
          "ref": "9dc468ee-33a5-4060-ab11-b7dbee10a90f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6c8eb51c-a5c8-4c93-980c-83481be96aef"
        },
        "item": {
          "id": "72ffba35-e99e-4645-8d74-bc1f9972fc22",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ac70f448-123d-42ef-a7de-eccf78f5c1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3418a5-944e-4394-b669-1c83d62e6688",
        "cursor": {
          "ref": "3fb97de6-63c6-4f7c-8bcd-6f3126445e72",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "00194906-857a-41df-b2db-8bf4a082cf45"
        },
        "item": {
          "id": "fd3418a5-944e-4394-b669-1c83d62e6688",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f40e995-f342-441c-bc52-4f8b785e5ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d376c31-4b78-4d46-8636-d0eee97bded8",
        "cursor": {
          "ref": "26eb9d28-808e-4327-8cbc-0cded43051ec",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "78059a8a-f0b4-445a-ab32-76fde24c395a"
        },
        "item": {
          "id": "4d376c31-4b78-4d46-8636-d0eee97bded8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "857c0244-d8bd-40cb-a1d6-8fcac44639c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e63455e-ffd7-4654-baa7-c640c0bb9010",
        "cursor": {
          "ref": "f54d5431-e483-49ce-a31e-25d8180d51e7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "34faa2e7-ee24-4491-8035-0dda6ab4bbde"
        },
        "item": {
          "id": "8e63455e-ffd7-4654-baa7-c640c0bb9010",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e8710fc3-8091-4467-a39f-1cd3c5050d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31519f5-69e5-41ff-8927-75ef24fa78ac",
        "cursor": {
          "ref": "d4f8cf5a-7f8a-4abd-b1be-5e6425470220",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bc599a78-849f-4d8f-b112-890e6b0e0510"
        },
        "item": {
          "id": "a31519f5-69e5-41ff-8927-75ef24fa78ac",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c444d8ea-82c1-400b-af44-4662ae9b906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b737af-5d19-4150-91c3-389ce34ccc43",
        "cursor": {
          "ref": "0e4547d9-ae9b-4ad9-8201-7c83bb801eab",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dead9cde-102d-477d-899c-692c12467698"
        },
        "item": {
          "id": "e0b737af-5d19-4150-91c3-389ce34ccc43",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "25ae2e39-3b4d-4a8e-9865-239e9c1b55df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ae516-e540-466b-ab32-dacb8418768b",
        "cursor": {
          "ref": "eb8a554b-fa9a-4df9-914d-36db992bffcd",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e1744fb2-50ff-469e-bb07-d25ec67f7361"
        },
        "item": {
          "id": "1d7ae516-e540-466b-ab32-dacb8418768b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2a485199-0b14-4d53-9c02-e41294672864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efeb6108-2b2d-4c84-813b-c7b476513bbf",
        "cursor": {
          "ref": "5ad8f188-5982-4b03-998f-0161aff3497e",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6e0ac1ee-445c-46ab-bd20-e157f65aced5"
        },
        "item": {
          "id": "efeb6108-2b2d-4c84-813b-c7b476513bbf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f49fd3d5-95c8-4baf-9e84-9e1cd78a8a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f4b0c0-c718-4d8f-9843-aa4976e421de",
        "cursor": {
          "ref": "4efc801a-8ae9-49e8-a918-6d8436bafe10",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b970a3e-5120-4afb-a9e9-ad0994e18ed8"
        },
        "item": {
          "id": "99f4b0c0-c718-4d8f-9843-aa4976e421de",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8d4c9bb4-676b-4348-8a60-ade1f55a3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e037719-b8d5-4a5c-b0d5-3d484f7545e0",
        "cursor": {
          "ref": "d98a85dc-bbb2-4d78-af25-73cc2adb8569",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "14b487f7-357f-45bd-b98d-5e33f17e623c"
        },
        "item": {
          "id": "7e037719-b8d5-4a5c-b0d5-3d484f7545e0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8351e87e-ff09-445c-b76d-b7f5531b4162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282e0c9a-891c-4230-ac2c-2dba330adbf6",
        "cursor": {
          "ref": "27ac1a3e-621f-4d92-ac10-99178aa7278a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10db870b-93aa-4542-b48e-942565bcd6d1"
        },
        "item": {
          "id": "282e0c9a-891c-4230-ac2c-2dba330adbf6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5c1ce138-82d3-4230-b0ff-08fcbb3e04da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305485ed-7581-48e0-be41-02199de0597a",
        "cursor": {
          "ref": "25342890-a4c4-44f6-9b6f-82225f829889",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b954a194-d9b8-4dfa-99d2-82f3f106ab59"
        },
        "item": {
          "id": "305485ed-7581-48e0-be41-02199de0597a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "df3a9666-73d9-444e-a749-2e26ba2b17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6d675-2356-4023-b491-1b715de0b474",
        "cursor": {
          "ref": "9fb0ec32-cc32-4060-89fa-a5aed554877f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e0ec5272-873a-4730-b0e4-40169bdec767"
        },
        "item": {
          "id": "4cf6d675-2356-4023-b491-1b715de0b474",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1e89ba5e-9b91-44b4-b8c1-0756c023dc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00380b1-34b0-485b-8234-c13d6c161b9c",
        "cursor": {
          "ref": "78d9c9f4-42c8-4ab7-a520-c5547e3d60bb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "672a2b2d-95a2-449e-8e83-b57aaf2ae4d9"
        },
        "item": {
          "id": "c00380b1-34b0-485b-8234-c13d6c161b9c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4e18e693-ef90-4b44-8e0b-42f37aedb018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942cdda6-b72e-4c81-b0e4-87ce4ac4bd39",
        "cursor": {
          "ref": "a341bbc0-1cfe-4b1b-9a37-58f7ceffc777",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "10995f0d-8fb3-43b2-9789-95bbd395e6e2"
        },
        "item": {
          "id": "942cdda6-b72e-4c81-b0e4-87ce4ac4bd39",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fa8f61b1-e623-4408-93b6-ba70d6339055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98989b4b-05dc-4ae9-870a-bda30d133876",
        "cursor": {
          "ref": "09bfb763-5e9c-418c-8a46-8839e6cf6d36",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6ae25af5-08e4-4ee9-a723-004f9e33e4e9"
        },
        "item": {
          "id": "98989b4b-05dc-4ae9-870a-bda30d133876",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ff49afa3-5fbc-488b-a7ed-5b8dae2643f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f3629c-2be3-4d2c-8741-30a78497b4c1",
        "cursor": {
          "ref": "07d29672-e88d-4344-bfb9-9d37c9994bec",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "90935d09-58bf-4d81-a24b-2a4ccdd7ed00"
        },
        "item": {
          "id": "40f3629c-2be3-4d2c-8741-30a78497b4c1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "676e33ea-1c15-4f4c-8244-038b92918795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a32ce4c-4e2d-4568-8de9-c4fe26f02ab8",
        "cursor": {
          "ref": "a77451cf-77d8-4cf2-9441-321de5fafa82",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d88759cb-059f-40ed-acd7-baae8aff4eb8"
        },
        "item": {
          "id": "6a32ce4c-4e2d-4568-8de9-c4fe26f02ab8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1677efdc-0933-4900-865f-a7102e53ef4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cac2913-4c79-42aa-ab65-b61d115e26ec",
        "cursor": {
          "ref": "7f31f416-d29f-4187-8d02-3767d1273678",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "98f803d9-11ac-4e35-9482-b9d829f063f0"
        },
        "item": {
          "id": "4cac2913-4c79-42aa-ab65-b61d115e26ec",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "221eb6f4-5c6c-41bf-85a3-11c30eee4ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97608eab-77d2-4979-9f6f-269ab076ce1b",
        "cursor": {
          "ref": "b1e33ee3-454b-4fee-8c03-defc3934a8ee",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "18fa25a2-94d9-43dc-bedd-ffede4401693"
        },
        "item": {
          "id": "97608eab-77d2-4979-9f6f-269ab076ce1b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "75ba827c-bc45-4b51-aa86-cb638ef7f789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ca6262-ef5f-47b4-a167-e44374169439",
        "cursor": {
          "ref": "509b1e06-0f43-451c-99c9-3e0d5b120d91",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "86a0b807-0f43-4be0-b2c8-70c23579ed3a"
        },
        "item": {
          "id": "84ca6262-ef5f-47b4-a167-e44374169439",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "dbfa53d2-8d75-4ba1-838a-67c7cf945e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56ee278-fee1-4f07-9536-b81533627970",
        "cursor": {
          "ref": "2f10acb3-20d9-42fa-a8ca-ebebed98948d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f53765ef-3d05-4af2-9f65-6621f6ff4146"
        },
        "item": {
          "id": "f56ee278-fee1-4f07-9536-b81533627970",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5fec8676-db90-41e9-af5e-5e898c27e091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0face5f4-93cc-48fe-96dd-fd4306c82c39",
        "cursor": {
          "ref": "2df86798-5470-49e3-acd5-e1cbdc1b8a3a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "91fc61e4-56f3-4648-894a-9686e24b20ca"
        },
        "item": {
          "id": "0face5f4-93cc-48fe-96dd-fd4306c82c39",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d207897c-d10e-4a05-a7e1-e674f582923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02558c42-59e6-4c32-b4f6-5a15970830b1",
        "cursor": {
          "ref": "a4253501-1321-44d5-9b0b-82e5c9a87436",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "68c50b22-4061-4e3a-b5de-9191ada7ad5f"
        },
        "item": {
          "id": "02558c42-59e6-4c32-b4f6-5a15970830b1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0063fc9a-8652-4a4e-8964-ec0520749cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca646c8-de81-447a-8fab-154cb70de41c",
        "cursor": {
          "ref": "cf67a9b6-1ccf-4a02-ad04-5e625e2a9f67",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b39345ee-93a6-4ea3-a80a-c267b874d526"
        },
        "item": {
          "id": "fca646c8-de81-447a-8fab-154cb70de41c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "14150933-cb5f-45fd-a68e-9fb201ff2560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07786dda-b493-4054-ba28-4d48d9f2d0b1",
        "cursor": {
          "ref": "c64a2669-8429-494e-a310-0a4a8c64d830",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f19afde7-83c6-4475-aed3-c5f2a8835b4b"
        },
        "item": {
          "id": "07786dda-b493-4054-ba28-4d48d9f2d0b1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7e7d0fba-8ab8-42b6-87eb-8b867b91d862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2d795b-9614-4252-aa8b-ff602e3b0c3a",
        "cursor": {
          "ref": "2c278237-c736-4eb3-8278-61e87adb7dcb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bc5be9b0-1f0d-413a-be77-457d939a6152"
        },
        "item": {
          "id": "7c2d795b-9614-4252-aa8b-ff602e3b0c3a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7459c17c-d147-47b2-96ad-15f09c0ce609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ad98e7-13bf-4ebf-9b3d-7187e0465724",
        "cursor": {
          "ref": "6281fac3-822a-4137-9db9-366bd8b7471a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2d3533a4-9594-499d-95d4-5b59d83ef348"
        },
        "item": {
          "id": "d5ad98e7-13bf-4ebf-9b3d-7187e0465724",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e0d7b762-79db-47d3-9380-d5ccfc510d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7d6548-4cab-4e33-8cf0-c7cc2c56a8f6",
        "cursor": {
          "ref": "00cd828c-2bc9-4b81-86a3-1b52195eca1c",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "72344b0e-8f60-478b-8222-a11071e99240"
        },
        "item": {
          "id": "6e7d6548-4cab-4e33-8cf0-c7cc2c56a8f6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b793b84a-22dd-4322-8850-a97ccce8b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdff4af-91da-4889-b7cb-a6edcf3d0b47",
        "cursor": {
          "ref": "162aec11-7e93-49dc-aa15-260fbe9cacfe",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8e54f1c1-91df-478d-be63-06cbb3fe7963"
        },
        "item": {
          "id": "7cdff4af-91da-4889-b7cb-a6edcf3d0b47",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0fa0e3b7-dafb-49b4-aa07-83dee20ac7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa168e-60fc-4fb3-810d-353cb06c2993",
        "cursor": {
          "ref": "600158de-285f-4602-be7c-7e061e1da8e2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "643bb750-4241-405e-b1a7-88737aad4012"
        },
        "item": {
          "id": "feaa168e-60fc-4fb3-810d-353cb06c2993",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cb2193b1-7713-48bf-925d-03fe5cbb077b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0a1776-2b69-49b3-80e2-5c2ec7584812",
        "cursor": {
          "ref": "73735002-61bd-4bc8-842d-475dd5be4656",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fcc9fd08-e2e7-46a0-a419-3300561bbf8a"
        },
        "item": {
          "id": "4d0a1776-2b69-49b3-80e2-5c2ec7584812",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c51338fd-39d5-4c65-bef9-af163197df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37c5d17-773f-4321-9e89-00a57e53b290",
        "cursor": {
          "ref": "f40370ac-4ef8-4b62-a05b-a0a2b84cb769",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "961ffea1-aa10-4151-877a-681ff19d6683"
        },
        "item": {
          "id": "b37c5d17-773f-4321-9e89-00a57e53b290",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "bf4d7b5f-3cd3-4c37-b150-f5a753943fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662a159d-ab44-40a2-a6e7-a9fccb743470",
        "cursor": {
          "ref": "c47f19d9-ed7c-4e69-9ae6-d811b9003970",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2dd0f9ba-e52f-4547-8741-a29d388eacec"
        },
        "item": {
          "id": "662a159d-ab44-40a2-a6e7-a9fccb743470",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4aa879b6-d128-4852-b8d1-3ac1277ce726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba83359-efde-4b46-9815-4020c99c2d0d",
        "cursor": {
          "ref": "521a30f2-53c1-4703-bf55-ae620de887fe",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e18bda47-f462-43eb-96ff-293e42d71e30"
        },
        "item": {
          "id": "5ba83359-efde-4b46-9815-4020c99c2d0d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29bcb0a9-96a2-4fef-8dc7-8bf298d77fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791b8aa8-720c-4fe9-91df-6d300f16ba00",
        "cursor": {
          "ref": "d9bed15a-c322-4af3-94d5-afbbb10d39bc",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "78df602f-fd80-4e79-8428-eb77edb39401"
        },
        "item": {
          "id": "791b8aa8-720c-4fe9-91df-6d300f16ba00",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f2d7efda-bffd-4c08-a727-d581f8c0d919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175e0a1e-5fe8-412d-9009-23cbc51e9040",
        "cursor": {
          "ref": "9f5dd363-e9ea-4217-b447-5fb87557ede5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "11548ca6-569c-4f48-a988-87c7529f16b6"
        },
        "item": {
          "id": "175e0a1e-5fe8-412d-9009-23cbc51e9040",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "426cafa2-27af-49d5-8b62-bd260b016af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3acf945-be08-4ef1-b400-7b67f2be17a7",
        "cursor": {
          "ref": "e17c8e58-3c40-4007-ab0c-10d3c250249a",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "90d4b962-e677-4929-ac9a-5bc555639f18"
        },
        "item": {
          "id": "b3acf945-be08-4ef1-b400-7b67f2be17a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c7641314-74ff-4464-b722-5ba9c4e7a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8266ffe-3807-4bf9-9129-f894479dde58",
        "cursor": {
          "ref": "59eefb12-d185-4115-8d0d-d0b9fe8985e6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c41a59d6-28d6-41fe-b0f1-5cb18369f159"
        },
        "item": {
          "id": "e8266ffe-3807-4bf9-9129-f894479dde58",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50428f8a-abf5-4f0e-9e8f-4dbc9e65f66a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897cb53e-3f25-4013-a97c-722903ce428e",
        "cursor": {
          "ref": "fb7f852a-3c65-48ba-9fad-575972fc099f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0a429b32-c151-41ab-9def-5902d183764c"
        },
        "item": {
          "id": "897cb53e-3f25-4013-a97c-722903ce428e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9583301c-e0ef-4d4c-84d5-2cbf8b39f738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04661c80-7925-48d6-8961-13e252b9d5c1",
        "cursor": {
          "ref": "a4a984c8-2cf0-4118-b6c8-a4e8f9cd88cb",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e72fc572-3e14-4b31-b019-1f146e8b3854"
        },
        "item": {
          "id": "04661c80-7925-48d6-8961-13e252b9d5c1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "08d52c51-43c9-40c6-808f-3db571016fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ceb2899-158b-48b1-9a80-2d74fd8844cb",
        "cursor": {
          "ref": "ada1ec1e-2bbd-4b9c-98a8-58d80dbc542c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "041f47e8-a11a-4f33-86c0-1a1205191efd"
        },
        "item": {
          "id": "5ceb2899-158b-48b1-9a80-2d74fd8844cb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "131d49e5-0b0d-43f4-a928-33c9763e393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeb2944-72a1-4570-9512-ef52fa7002fb",
        "cursor": {
          "ref": "82fe76f4-2826-4543-9f5d-da55bf7eca20",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c62e0442-1792-4e7a-b1be-e55246c7e33a"
        },
        "item": {
          "id": "4aeb2944-72a1-4570-9512-ef52fa7002fb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "42018636-7a6c-4eae-a480-3d7c79b6fae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa03aaa-179b-4628-b85b-8f1f79c1023e",
        "cursor": {
          "ref": "5e4a754f-8470-426a-b5ba-fdc2fb3eb98d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8eb0e5f-c3a3-4bcf-b0b4-0564ab29a3ea"
        },
        "item": {
          "id": "8fa03aaa-179b-4628-b85b-8f1f79c1023e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b8534e7f-d9ff-415c-bb95-42f2be59cc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed53977-5398-495c-b945-879f2d20fdfc",
        "cursor": {
          "ref": "84ee3db8-78da-4f50-94d7-bb48bfdd123e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d92695ec-465b-4067-a877-fe710a759229"
        },
        "item": {
          "id": "fed53977-5398-495c-b945-879f2d20fdfc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "15c6223a-936a-4092-a376-850d7b187c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77554bd6-49fb-4a14-b368-1753c6cd1a21",
        "cursor": {
          "ref": "c045b47f-28bb-4037-ba3c-34587104dd4f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1912f97e-4db4-44dd-bcea-2d12b23b69da"
        },
        "item": {
          "id": "77554bd6-49fb-4a14-b368-1753c6cd1a21",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bb343645-7b4f-48a2-947b-4f65da0e7fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2079fed-4d09-40cf-8fbe-1ec4a49347dc",
        "cursor": {
          "ref": "cb34c193-e9f1-4959-8122-b72ba0e838a3",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a67f0985-43ae-48f5-b021-86abf305a306"
        },
        "item": {
          "id": "f2079fed-4d09-40cf-8fbe-1ec4a49347dc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b008e356-fd91-44f9-bf17-8c28fa550a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4e9e49-dee0-480d-8c73-8ccb258bb9a6",
        "cursor": {
          "ref": "008db2fd-a040-40f2-a3ab-4a99a200f785",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce4852ec-09d8-4952-8dc0-c51ec48ef1c7"
        },
        "item": {
          "id": "5a4e9e49-dee0-480d-8c73-8ccb258bb9a6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e38b9749-37af-4019-bb81-1e1979ae3904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9159c7e1-c745-4dc2-a47f-ed8189c44c4e",
        "cursor": {
          "ref": "5fa2fc28-af74-4176-ad94-72fcfd2404c3",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fe721c65-b382-4d90-8ae4-66c52d475509"
        },
        "item": {
          "id": "9159c7e1-c745-4dc2-a47f-ed8189c44c4e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1e07d4ee-6abc-4324-b6d2-3f21f71c7d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff84a64a-bc96-4e7b-8497-e111963d3ac5",
        "cursor": {
          "ref": "d97e419b-f138-447c-9094-a4ea339dae5e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2b871e0c-29ed-433f-92be-3cd8b2553f43"
        },
        "item": {
          "id": "ff84a64a-bc96-4e7b-8497-e111963d3ac5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8e1c2433-2781-4b48-9ae8-d9acb05d994e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c19c967-75c5-413f-b1a2-063300b2d319",
        "cursor": {
          "ref": "53af3d28-5f98-4c8c-bd75-7f214078b851",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bb17fafd-196c-4ad6-a0c8-e61ddbcb1ae9"
        },
        "item": {
          "id": "1c19c967-75c5-413f-b1a2-063300b2d319",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d93c3c3-afd3-4ddf-90f9-652f8dbf0426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3383825-3dc7-47c3-933e-898ef3e176a0",
        "cursor": {
          "ref": "936f5e05-7f28-4160-9f22-83b5ecf3560a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "547d8760-61d9-4833-9c49-490ba71adcd8"
        },
        "item": {
          "id": "c3383825-3dc7-47c3-933e-898ef3e176a0",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "68a6e3ec-e7d5-4c5d-a73b-399b5efc811f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b25b7e-ba04-4460-809d-a35d1bc9cb9e",
        "cursor": {
          "ref": "c75c9a9f-ee0e-433b-8c47-f3381766524b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "adca90cd-1c5a-4b52-a789-0216cb191f50"
        },
        "item": {
          "id": "75b25b7e-ba04-4460-809d-a35d1bc9cb9e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "591c6f4a-6166-4949-b136-22cbe27fcd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba24707a-84d2-438c-99e2-42c2114f5706",
        "cursor": {
          "ref": "f9adfe27-626f-4c48-871a-e2b8792b8272",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3df5e2e1-b553-422a-a0e6-f5b1339e3292"
        },
        "item": {
          "id": "ba24707a-84d2-438c-99e2-42c2114f5706",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "13a8f079-cacc-4992-a8b8-bbe00db46bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a72b6df-9bba-4296-970b-89885524eaf4",
        "cursor": {
          "ref": "df9d4407-1982-4521-a32e-856ce03ca06c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "39215c25-b3ec-4ae3-a87a-5932b0be756d"
        },
        "item": {
          "id": "4a72b6df-9bba-4296-970b-89885524eaf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3ccca510-f803-4437-aacc-4573fda63c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6898d73-4927-4f68-9f57-5cae3cc73cb0",
        "cursor": {
          "ref": "558e277e-1f7f-4536-924e-39262c40e445",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "96fb87ee-9f26-4884-b1d3-5ad68adb1e6d"
        },
        "item": {
          "id": "e6898d73-4927-4f68-9f57-5cae3cc73cb0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c2788855-55f4-49e5-bf24-9602d080f05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb96762-ad8e-4444-988f-4b4d2d1b2418",
        "cursor": {
          "ref": "64b9626d-95e7-426c-8f97-9a1c11e236d1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5bf228be-4688-47d3-ba19-5bdf85317ccc"
        },
        "item": {
          "id": "afb96762-ad8e-4444-988f-4b4d2d1b2418",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "39424d0f-c0e7-4478-bd51-47f874f94a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db698e03-398b-4aa4-aa02-70f1d4669488",
        "cursor": {
          "ref": "a4802e63-5139-424d-a6ff-900c5f6f0b68",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "787acc00-c171-4f34-a949-4a3758906c32"
        },
        "item": {
          "id": "db698e03-398b-4aa4-aa02-70f1d4669488",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5793c9e2-e2cb-4917-8722-dfb662837f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878543e7-f97a-456b-9bde-dd2297490e38",
        "cursor": {
          "ref": "9fc735a6-4f2c-4323-8f56-8b2ade750f2b",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2f27ba71-cf29-46c2-ad6a-cc2acaac3954"
        },
        "item": {
          "id": "878543e7-f97a-456b-9bde-dd2297490e38",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2790708d-c244-4b46-8bc4-5b672f42f40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93e2890-2db0-4f9d-8e84-4926711110dc",
        "cursor": {
          "ref": "e01fcae5-adf3-4bec-b977-5a8503978210",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "617abe34-cae8-4f88-814b-29ea79d4bb9a"
        },
        "item": {
          "id": "d93e2890-2db0-4f9d-8e84-4926711110dc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c2a7b866-1a86-4851-bc38-5be668a23ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a824127-c541-46fb-8d07-405b9e98f315",
        "cursor": {
          "ref": "7881a353-4745-4e03-a9a4-6882ccc7b861",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "78258fe1-a275-43b7-adc4-59553421f31e"
        },
        "item": {
          "id": "6a824127-c541-46fb-8d07-405b9e98f315",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5a187642-ab7c-49b4-b9fe-4169836ee4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d322e262-19a4-43d1-b2f8-35bfe3c9b940",
        "cursor": {
          "ref": "f6b114ab-1327-4f1d-b909-3bb531a2be0a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "707da591-00c4-483f-9ae8-1e893c24ebf8"
        },
        "item": {
          "id": "d322e262-19a4-43d1-b2f8-35bfe3c9b940",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "57c37dda-9e71-440e-9775-5153354948ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0969529d-250e-430e-8504-93d0475e09d0",
        "cursor": {
          "ref": "1e83dd38-1406-4f7b-b1bb-791929a40424",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1f36bb4d-03b1-4f68-944b-ef54f4333d19"
        },
        "item": {
          "id": "0969529d-250e-430e-8504-93d0475e09d0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5fc7c41c-715c-4e8d-a455-3e5195ec0752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aaa0803-22bb-441a-aa57-e06d02377e1e",
        "cursor": {
          "ref": "ebc6dc6c-a613-425d-b3a6-e20b542f1bdd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "eaa123f5-7e4e-4ae4-b47a-7a1dd6770745"
        },
        "item": {
          "id": "4aaa0803-22bb-441a-aa57-e06d02377e1e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a02dd3ba-5314-4d13-a5bd-3439ffdab954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf6dd70-fd53-4a27-ad9e-e07ae390e2b4",
        "cursor": {
          "ref": "1ed18cf9-1060-49de-9fdb-b5d38b771845",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "62d983a3-6a9e-4fac-8fba-0444617affe6"
        },
        "item": {
          "id": "2bf6dd70-fd53-4a27-ad9e-e07ae390e2b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2ceb7b7-ee0d-4980-9a79-0c63988cf631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce5ff31-fa1e-4978-b58d-c57105e961b5",
        "cursor": {
          "ref": "6a01d592-f84f-4076-b1b2-095f77a9c407",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5c98e313-472d-413b-a73b-9c773b7de498"
        },
        "item": {
          "id": "4ce5ff31-fa1e-4978-b58d-c57105e961b5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "13fd478f-38a3-4150-b185-441038f619cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf5d9b1-b0b2-4a43-8fd7-3ebb8bac9b77",
        "cursor": {
          "ref": "d1c05d73-6107-4823-abda-e34ea79c694d",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f93862dd-f045-4fed-8c70-c668c677dc4c"
        },
        "item": {
          "id": "6cf5d9b1-b0b2-4a43-8fd7-3ebb8bac9b77",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2dc2d9c6-c160-44b2-9ad4-6206c1bf58b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e658090-e7dc-40f9-81bb-442cf36b9bc2",
        "cursor": {
          "ref": "9eb21a78-d137-4fe1-8fe1-2a9f8863d52a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f4a505f9-ffdb-49a2-bab6-73a528712486"
        },
        "item": {
          "id": "4e658090-e7dc-40f9-81bb-442cf36b9bc2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7679285c-033b-403e-b792-c55815473d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc6cbe6-69ee-48fc-88a5-fff14513bae9",
        "cursor": {
          "ref": "9befc7bd-1d88-452f-bb11-f2bd55deddcc",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "19b244da-e2c2-479c-be0b-65b61b63a4d3"
        },
        "item": {
          "id": "abc6cbe6-69ee-48fc-88a5-fff14513bae9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8a11942d-6f6d-4522-96ea-bc069f5d9213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406b4f71-8b8b-424e-8052-48313bb9445d",
        "cursor": {
          "ref": "03aefbb7-2372-403d-9886-cd147e92bd2b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ba5b749-28cf-4f93-a5b6-9fb6ecb6221b"
        },
        "item": {
          "id": "406b4f71-8b8b-424e-8052-48313bb9445d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5d0edc45-a455-4971-9d95-24d8a419ca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a540ca40-b303-4c70-91a3-b35d981c57a2",
        "cursor": {
          "ref": "6a723101-5649-4927-9f35-d94c25633b1c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c642b5cb-0556-4855-84fb-3c9133e8111f"
        },
        "item": {
          "id": "a540ca40-b303-4c70-91a3-b35d981c57a2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ae1f6d58-1219-434c-8ed4-6a3cfbd8200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c99f35a-7ced-4609-b28e-5a5cece9d97f",
        "cursor": {
          "ref": "ee9de547-c285-454d-b43d-36706cedaddc",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "54e1171e-377b-4357-ab6a-8e140898b987"
        },
        "item": {
          "id": "3c99f35a-7ced-4609-b28e-5a5cece9d97f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e687de48-ff82-4556-a209-cbe43461cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb90058-30e1-406d-8ef9-ba2116eaee8a",
        "cursor": {
          "ref": "929cbe24-7c6d-4056-a728-9e34bec72dca",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f8c62aa4-e7d5-4228-b97d-cd5b2b813d31"
        },
        "item": {
          "id": "ccb90058-30e1-406d-8ef9-ba2116eaee8a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cc08f3d0-65ae-47c0-8ba7-43ed320f4f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863c3f4e-0acd-40aa-9a84-a29bb7c8671d",
        "cursor": {
          "ref": "d9f74b5a-d43b-4b6e-b37f-d7e91cee9e48",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5942a835-bfde-4e23-a029-39242fcbe313"
        },
        "item": {
          "id": "863c3f4e-0acd-40aa-9a84-a29bb7c8671d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a6eeb9ef-3bcb-479d-ada7-803393920167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4394d1-6954-459b-9df6-5ae7762570d9",
        "cursor": {
          "ref": "2542d830-4b8e-48ec-b225-98c253b783ca",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c8d13301-9b6a-4d9f-801e-9109b813a60a"
        },
        "item": {
          "id": "2b4394d1-6954-459b-9df6-5ae7762570d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cc0c57a0-895e-42bd-bc0d-ece3f722da6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7fca8-b584-442e-9f0a-5731bc27bfe3",
        "cursor": {
          "ref": "3beb8deb-dc40-4a3a-839f-47e980c92ad2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "39979a89-e283-45b7-bb8c-434b3ae13bb7"
        },
        "item": {
          "id": "feb7fca8-b584-442e-9f0a-5731bc27bfe3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a3d5cc02-4149-4c18-8ac2-1eb9359dfc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba939dfb-43c5-4e61-a4f9-759862815fa2",
        "cursor": {
          "ref": "56b11b33-a83a-4a90-9501-c7ac191c6646",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c7572c9e-22fb-4b01-b89e-394e01f4d912"
        },
        "item": {
          "id": "ba939dfb-43c5-4e61-a4f9-759862815fa2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "edea7015-942b-4888-bfc0-569027848c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fbe2af-d686-4257-b328-760531fcf1a1",
        "cursor": {
          "ref": "226f52cf-c329-4790-935a-469a9f267927",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ac221599-7834-4e4f-be7a-de6bc1a8f648"
        },
        "item": {
          "id": "d5fbe2af-d686-4257-b328-760531fcf1a1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fef171e0-72bd-4f4d-b2b6-9cee1e72accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d945718d-8c05-4cc2-a4d9-65341368de28",
        "cursor": {
          "ref": "052dfe75-df3a-4a69-a201-16dd51c18261",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e273b6d0-6332-4b3f-9273-5c8800774ef6"
        },
        "item": {
          "id": "d945718d-8c05-4cc2-a4d9-65341368de28",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "55e518b1-e59c-431f-a198-f6626597e8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca0cc2-1715-49fa-aac9-a76a28e266a3",
        "cursor": {
          "ref": "f9d21b2d-537e-4239-9eb4-ae2acae2e598",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8aac84b7-1f64-446a-8b37-3e2da5f6132b"
        },
        "item": {
          "id": "3fca0cc2-1715-49fa-aac9-a76a28e266a3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f88916b0-c90f-44fa-961b-4f6798b711d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010f5f6d-cdd2-4bba-a20f-525e4f116e9e",
        "cursor": {
          "ref": "9f507030-4840-4bad-b252-7fdecb124e63",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d8a42260-ac42-4fba-8635-614d22d23b43"
        },
        "item": {
          "id": "010f5f6d-cdd2-4bba-a20f-525e4f116e9e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "82f58b7b-d92e-4bd0-ac97-b37b30cb21e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc428612-d594-4c99-8c19-8a291baa67a6",
        "cursor": {
          "ref": "97546da5-5aed-43c1-b102-b7ee0b871518",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9aa2eccd-edfc-4fc4-ac8d-71bbd9a62311"
        },
        "item": {
          "id": "dc428612-d594-4c99-8c19-8a291baa67a6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dc5add46-e0a8-4491-bea1-09b11c742f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abba98bd-caf8-4a62-97c1-f98c9f96b35a",
        "cursor": {
          "ref": "932fa2cc-7ac8-4b54-962f-17582db4e5d8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "150f1a7c-7dd7-4bf9-9d1b-c67e4a8c151b"
        },
        "item": {
          "id": "abba98bd-caf8-4a62-97c1-f98c9f96b35a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4489a340-ab0f-4cc5-8183-9fd943aa01fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325dccea-1bed-4371-8b1e-70f6b22394a9",
        "cursor": {
          "ref": "e53e6399-5cb6-4637-b9fd-f75247e95032",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ac4d80f6-9d89-4698-961c-ae7f209dcf0b"
        },
        "item": {
          "id": "325dccea-1bed-4371-8b1e-70f6b22394a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "af6fa0d5-d169-498a-842d-83d8f5b2ee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dce00b3-d55f-4149-8bd6-d6ed7107d7ee",
        "cursor": {
          "ref": "7d1ee4b0-47ec-42fc-a5fe-3480e35e845c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ec82ac81-73e9-4356-8bb4-4ef93173b6a9"
        },
        "item": {
          "id": "3dce00b3-d55f-4149-8bd6-d6ed7107d7ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ad30009-0488-4bd7-8304-191148d81c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19ea31b-ab10-4883-8b1f-2e74c27e8c9c",
        "cursor": {
          "ref": "8ccabbeb-fbb1-49a8-a0e2-1c0a31625a79",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "09454e96-100e-48fe-a9ab-25f64534f284"
        },
        "item": {
          "id": "c19ea31b-ab10-4883-8b1f-2e74c27e8c9c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dff819e9-94ae-4fdd-a5f7-b21532c6204b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355eb060-4d77-4a1d-807b-66b721e62d76",
        "cursor": {
          "ref": "789971a3-6b0f-4a19-af9b-ed7530091ead",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "857f34c3-8234-415c-8c03-d33330747976"
        },
        "item": {
          "id": "355eb060-4d77-4a1d-807b-66b721e62d76",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a15c3c0f-afad-4d78-8d4e-a3181e990b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ffc1aa-2af1-4a11-9530-863ab2bbe300",
        "cursor": {
          "ref": "eab15f50-4fbd-4abb-8b75-813a34f15180",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6f5290d6-b0cf-4f49-bebc-e08e91c179c1"
        },
        "item": {
          "id": "23ffc1aa-2af1-4a11-9530-863ab2bbe300",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5ddbe1aa-cd14-46cb-b87e-ecf72ae26abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfac894-d2ff-4874-8a85-b831932af5ec",
        "cursor": {
          "ref": "23be276c-83d1-4db6-b045-736021f2679a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "31e46798-5fb8-4375-b4f3-00ffb2ef1606"
        },
        "item": {
          "id": "2bfac894-d2ff-4874-8a85-b831932af5ec",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b98d75f-8a48-451a-aab9-2793278b7a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12875670-203d-4626-9d52-e26ef83eb514",
        "cursor": {
          "ref": "6867ef54-de2d-48dd-b23c-6692fd4a051b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "abbae45a-c428-4919-a411-40db5660af6b"
        },
        "item": {
          "id": "12875670-203d-4626-9d52-e26ef83eb514",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f46df165-4345-42ca-983c-f2b2d5ed763c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0682851-1a48-4bf0-954c-db136111b282",
        "cursor": {
          "ref": "9b09e5d0-6604-4cd0-828a-c21799f86d58",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "da29fc85-1134-453b-b06e-a4109f937bbb"
        },
        "item": {
          "id": "e0682851-1a48-4bf0-954c-db136111b282",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "df385870-2564-4431-8c90-0d0a33da9ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6686a05d-089b-4878-8769-ae95157b8120",
        "cursor": {
          "ref": "0404ff27-416c-432a-9a3a-692f7ad9f85b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33bc1f68-2b76-4c42-866f-952d08bdcbed"
        },
        "item": {
          "id": "6686a05d-089b-4878-8769-ae95157b8120",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0e4b4cca-1e4c-476c-91da-97e214a59ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "57c73823-2ec4-419e-8033-ffc5d07410e0",
        "cursor": {
          "ref": "a1622846-67c6-42a6-a8a7-9da1dce79d92",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f49e5a5c-77de-48d4-86f0-df66f6abe8b2"
        },
        "item": {
          "id": "57c73823-2ec4-419e-8033-ffc5d07410e0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "62d61fac-9fa9-476e-af92-0a8f61fe9cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f236cb41-439a-4ac0-82ce-a96db5e00032",
        "cursor": {
          "ref": "0688a006-2e93-4424-a266-91731048c7a4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d0bdcc27-54c8-4989-8fe9-5837cd80c9e8"
        },
        "item": {
          "id": "f236cb41-439a-4ac0-82ce-a96db5e00032",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "77bad29e-c06c-4b66-9a5b-6f51bcbfd8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3d67f89a-a9d3-402f-aa4b-284fc42a233d",
        "cursor": {
          "ref": "77601d11-188d-4286-8711-2052410d8978",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "274af274-78e0-4b3d-813b-21facf6d927a"
        },
        "item": {
          "id": "3d67f89a-a9d3-402f-aa4b-284fc42a233d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5a0bd11b-81fd-4ed3-bee6-9acbf0d1a06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b8f9a86d-e4aa-48e0-b421-77797ab7bb16",
        "cursor": {
          "ref": "b455af81-3c59-45d8-bcef-d419c832a402",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dfdd5975-4eb8-4c07-81c9-3433f5a2c7e6"
        },
        "item": {
          "id": "b8f9a86d-e4aa-48e0-b421-77797ab7bb16",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "97ba6c7a-f278-4c19-901b-63424627208f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "210d7b97-cfb9-4b36-b78a-644a9781d9d9",
        "cursor": {
          "ref": "013037c7-5e6b-4a11-b73d-86ff856882ff",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dbe0dedb-6bd7-4ab2-99f0-c460c09dfc1c"
        },
        "item": {
          "id": "210d7b97-cfb9-4b36-b78a-644a9781d9d9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "508948d8-7dc2-4ae5-920c-829b1d463d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "75de58b9-7013-40c4-8e7d-d534c55332ee",
        "cursor": {
          "ref": "260d1cde-043a-4f69-a2bd-85882b8b58de",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "94a40e74-778e-428a-9080-0a2182b8cf9d"
        },
        "item": {
          "id": "75de58b9-7013-40c4-8e7d-d534c55332ee",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c16eb66d-8869-48c9-93c9-050b7a87fb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9e80e4-94ce-46c0-a2ee-6d6150232242",
        "cursor": {
          "ref": "ccde3bc6-d087-4bd3-b2bc-80f2fec0a9cc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d42cea0-fe58-4bad-8fb7-84e84d5fe339"
        },
        "item": {
          "id": "fd9e80e4-94ce-46c0-a2ee-6d6150232242",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2b485ee8-d8d7-438e-a6f4-a58b26e44180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dcfd5b-7cda-4f67-bb0f-cd652ebdd2f1",
        "cursor": {
          "ref": "ffcf60e9-ab2a-4790-838a-885f881596be",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8619be38-19ab-4c57-91bd-6a5a4f0062e0"
        },
        "item": {
          "id": "61dcfd5b-7cda-4f67-bb0f-cd652ebdd2f1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3da444a5-916b-4767-ad30-93bc804128e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b4c68d-9e73-4b89-bb06-f18e7281aa9e",
        "cursor": {
          "ref": "5ff78dd9-e192-4f32-b3b3-302a9f7451a2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ddb78201-4548-4f50-aac5-20fd46c73e8e"
        },
        "item": {
          "id": "14b4c68d-9e73-4b89-bb06-f18e7281aa9e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d233df34-c485-4e25-8a1d-290551b78a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043200e6-fff2-4f76-8b8e-677f304d8c53",
        "cursor": {
          "ref": "3cdc90ec-c54b-471c-af82-889f33f7b272",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a39e122f-3879-4dd2-80b8-2b255d5764a4"
        },
        "item": {
          "id": "043200e6-fff2-4f76-8b8e-677f304d8c53",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef098aba-0ab4-464e-b667-151b6123ce4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fff94bc-8858-4a33-9fe4-b55f57bab0c7",
        "cursor": {
          "ref": "b6fe63b8-c57e-4f05-b0da-f46404328f91",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b6b96dd9-357e-4cd9-89a7-9fa267816ad4"
        },
        "item": {
          "id": "7fff94bc-8858-4a33-9fe4-b55f57bab0c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bcd84216-d041-4106-bc98-00f1e7855e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1900eeb-ba50-4e4a-8de1-bc64da24afb6",
        "cursor": {
          "ref": "1e15b936-b3e6-461b-812d-74b1fe50cd50",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a5860b2f-c770-4f8f-8dbb-299b2514af01"
        },
        "item": {
          "id": "d1900eeb-ba50-4e4a-8de1-bc64da24afb6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "63b86246-e994-4a7e-8a53-37c4a77f0a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d809f039-21df-4f78-bdbb-c55a800dbd5d",
        "cursor": {
          "ref": "cbb803f3-a33f-46f1-ab48-3768cc7717d1",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8d4f6293-1d15-46a7-ba72-a816383f080d"
        },
        "item": {
          "id": "d809f039-21df-4f78-bdbb-c55a800dbd5d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c84e8264-c2ce-4a8b-83a8-d8774877281b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc095674-8aad-4549-b663-537e9f59cf73",
        "cursor": {
          "ref": "ca32b477-10fe-4ea8-9915-fbc22fc94233",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ba8e5b6c-1919-4ed4-a028-addb4a333d97"
        },
        "item": {
          "id": "bc095674-8aad-4549-b663-537e9f59cf73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b1d51b67-822d-489b-872f-8ed29c070224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e74d18b-90f5-4404-b670-4b0195dd2e00",
        "cursor": {
          "ref": "db64b45f-59ec-4313-930b-2a997ebca656",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "24981ef2-24b9-4f44-b27d-d9a8568ba6d1"
        },
        "item": {
          "id": "2e74d18b-90f5-4404-b670-4b0195dd2e00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "87536906-18d1-4545-a9cb-94693ce60c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c98d36-0332-4938-8e6b-a9dda3f5c0e8",
        "cursor": {
          "ref": "a4864eba-7cbc-4bf5-bcde-54e43af4e479",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0c80337d-f74e-4afe-aba8-cff463cda1a4"
        },
        "item": {
          "id": "b2c98d36-0332-4938-8e6b-a9dda3f5c0e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a39b3f88-efbe-4cf7-bb50-4aaad84a9ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb074ee-b0dd-4bf1-92d1-8c754eca60ae",
        "cursor": {
          "ref": "5798073e-901f-4751-9ace-33b9d660305d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc9b03a8-e4f0-4c12-9b43-94724c8a14ee"
        },
        "item": {
          "id": "0eb074ee-b0dd-4bf1-92d1-8c754eca60ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6ecfd62-2bee-42ba-a2bf-715a6425c28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa86ddad-09f4-4dea-b003-99735c0b3cda",
        "cursor": {
          "ref": "6da252a0-92ad-4a8d-a737-875172b5c0e0",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ccb8fdd4-bf05-4e84-9674-8eba91d12538"
        },
        "item": {
          "id": "fa86ddad-09f4-4dea-b003-99735c0b3cda",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "410403c6-0538-478f-a183-3979527ad19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeb8dfd-291e-4704-8c8f-4e425891aebf",
        "cursor": {
          "ref": "0321d979-d840-40aa-8679-8a3d7d8f9fee",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "38bc68f7-255d-4b94-837d-1ecde31e58ba"
        },
        "item": {
          "id": "9eeb8dfd-291e-4704-8c8f-4e425891aebf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e10dcb79-f681-4d56-9fb3-b792054e1780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea097c-033b-4e76-a716-4e53d7f13daf",
        "cursor": {
          "ref": "778a762c-818b-44ce-9dbc-6d540ad36687",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35efd19a-edb9-45cd-9efc-4e3e63895653"
        },
        "item": {
          "id": "23ea097c-033b-4e76-a716-4e53d7f13daf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42f58ddb-a596-414a-b456-5e048c29fd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d57cb82-b8f9-4e3d-bcb9-4d764c05d317",
        "cursor": {
          "ref": "c365ae5a-c86d-4e34-beca-7ddbc193cd03",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e5d0026a-9577-49df-a8d1-99c0b0ea4e30"
        },
        "item": {
          "id": "3d57cb82-b8f9-4e3d-bcb9-4d764c05d317",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "29391df8-b524-4035-b3e4-63ca46d4618c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c165d6-c832-4933-a87e-e6411baff68f",
        "cursor": {
          "ref": "8a0cb4e3-0b35-4127-ab6c-a9e5d2642ad6",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74befa52-8249-482d-9b9b-f4e439b01241"
        },
        "item": {
          "id": "73c165d6-c832-4933-a87e-e6411baff68f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "22ec0cd5-ea7e-4075-a33b-f9ac16e57e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f21620-cf0e-4881-94b0-b20461c7ea20",
        "cursor": {
          "ref": "01fc3d5d-2fa6-4aa3-95d1-b259bfbd2875",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "beb64c3d-f8c2-40dc-a616-eb56586f20ce"
        },
        "item": {
          "id": "d4f21620-cf0e-4881-94b0-b20461c7ea20",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12571460-5668-4aff-9caa-f38dcb35c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400ed4da-22d9-4f41-8c36-1801c9323615",
        "cursor": {
          "ref": "2ebc749b-6b6d-49df-ab1d-bee1b8b68e7e",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60722ee5-f78b-496c-9d4d-63c6717c755d"
        },
        "item": {
          "id": "400ed4da-22d9-4f41-8c36-1801c9323615",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8e791948-093d-4d1e-b002-99450b51897f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f742847-b8b1-424e-81b5-55f7f3def635",
        "cursor": {
          "ref": "5c0ea418-331c-478f-8297-7c1601a94807",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b61433be-14c0-4489-99a1-8618a5dc0655"
        },
        "item": {
          "id": "5f742847-b8b1-424e-81b5-55f7f3def635",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7d3c88b5-c171-40df-9ffb-5ef559ba52e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b6633a-ffd4-4315-a8c8-b1244069c491",
        "cursor": {
          "ref": "e9ad38a3-3981-4324-90cb-746639008707",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5e7229f1-a3d6-4792-9d60-d60f15affedf"
        },
        "item": {
          "id": "36b6633a-ffd4-4315-a8c8-b1244069c491",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad8aa66c-4091-43e0-9178-95ec5cef6720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e670701-d276-4ea4-8d7f-d04066cb7171",
        "cursor": {
          "ref": "6b9aa4fe-02c2-4bbf-97fe-f07bcfc10192",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a2f2ef41-ce28-40b6-9661-e6cfa0f48838"
        },
        "item": {
          "id": "7e670701-d276-4ea4-8d7f-d04066cb7171",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "899187f8-375f-41af-8288-3f65b9129c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749630a1-f86d-4023-a777-0a2a5d9349a9",
        "cursor": {
          "ref": "ab40dede-0756-48a9-9cc3-da1d07720848",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2eaaf745-6bea-48c1-aa1f-2693f1e5fe35"
        },
        "item": {
          "id": "749630a1-f86d-4023-a777-0a2a5d9349a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31be31f3-ece0-405e-bcdd-7e46283097be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b318736a-dab2-45f5-a217-8e9c51b1f930",
        "cursor": {
          "ref": "ca0afe10-21e6-43d5-9538-23d8d6d898c6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "595d955e-8ac2-42b3-a683-721323c83e22"
        },
        "item": {
          "id": "b318736a-dab2-45f5-a217-8e9c51b1f930",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c0f5448-7c28-4714-b2f1-f1fb1dcc1cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d577691-6808-4b64-a885-13374752560f",
        "cursor": {
          "ref": "c7abbb81-48f2-4854-bfe2-c3eb8f513b2b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "810ecb6b-dc0e-4dc9-a3be-734532c9d3e1"
        },
        "item": {
          "id": "3d577691-6808-4b64-a885-13374752560f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7f61366b-33e5-456e-99fc-d51daa1a0dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11712c6c-c03e-4432-85d2-3d1064c4e486",
        "cursor": {
          "ref": "ef5ac546-988b-46e3-8a52-46314a5c6fa0",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ca7750c6-d04b-4737-a3e1-d134ca97a0de"
        },
        "item": {
          "id": "11712c6c-c03e-4432-85d2-3d1064c4e486",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7a97a51-8937-423a-b02f-1e684e00f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3beab49-1ffc-4f97-a317-c99b6761fb2c",
        "cursor": {
          "ref": "cf453915-4a4a-49aa-8ee4-ecceeaa754ac",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b160a7e9-10a7-4fe4-bae3-103836e4ba30"
        },
        "item": {
          "id": "f3beab49-1ffc-4f97-a317-c99b6761fb2c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4ca7227a-9721-4b4f-8edb-11d290c18543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e8f7d1-3052-431c-bd5d-9148aac9d854",
        "cursor": {
          "ref": "ac650e52-a3b3-4303-a972-a44970267e20",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d8061940-a183-4f25-b7ae-bd0b3c88b9a4"
        },
        "item": {
          "id": "26e8f7d1-3052-431c-bd5d-9148aac9d854",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3f3277d9-e499-47e5-bc50-bec75e4667cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aceb67-9b0e-44c5-9d23-8048f05bf9b1",
        "cursor": {
          "ref": "c552c6b6-ce29-4a6e-9e7c-f2751e7e81dc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4002e004-d49b-44ee-85db-adca2092776e"
        },
        "item": {
          "id": "40aceb67-9b0e-44c5-9d23-8048f05bf9b1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5368670b-7351-455e-b3f0-1963ef9899ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b10911-8516-4c24-bfea-21f3b00375e0",
        "cursor": {
          "ref": "93f0d2a3-176b-48e9-b9e3-0ca21b9a9d82",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bb6999d4-e333-40a3-a191-9115917a5f90"
        },
        "item": {
          "id": "f1b10911-8516-4c24-bfea-21f3b00375e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "168ecd92-acf2-4771-81b3-994360429d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bcc68f-4032-41e0-85ef-bff332e090ca",
        "cursor": {
          "ref": "1b7fba91-5811-463e-892a-9e61495af385",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4421284c-9f98-4ab5-ac4a-30b0853cd8a5"
        },
        "item": {
          "id": "11bcc68f-4032-41e0-85ef-bff332e090ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "23ee3c9e-9005-4209-9878-b764ac5557b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f148a4-0fa6-4c70-89dc-de5b15a4387b",
        "cursor": {
          "ref": "379b6cc6-b080-4a9a-8772-083b1cbdbfb7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5059b950-14e1-49f9-b233-39102e2e4508"
        },
        "item": {
          "id": "60f148a4-0fa6-4c70-89dc-de5b15a4387b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "512892f7-a2b1-433c-9b7d-8e7bcfbbd741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c59a77-023a-44b2-8b8f-6b548559bf7c",
        "cursor": {
          "ref": "8b9ea9ae-72bb-4778-a14f-32fce060d27a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f6bb057d-d4e1-4bfc-9464-0590a755d19f"
        },
        "item": {
          "id": "10c59a77-023a-44b2-8b8f-6b548559bf7c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "23b869a2-b993-4999-836a-67d7b81d09fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022cada0-957f-4270-b64d-c89823d7786c",
        "cursor": {
          "ref": "ece866ab-19ff-48ae-bbf6-5f7946efac99",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fbfe4b25-c546-44f1-9092-b9bde3e628d3"
        },
        "item": {
          "id": "022cada0-957f-4270-b64d-c89823d7786c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5b8ef5a0-d904-4ad7-82b0-7c77f2559581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa788ca0-2240-4009-840b-7e02d1dfd604",
        "cursor": {
          "ref": "c1dfdaa0-a20a-48b1-ad2e-b0240f1b6d38",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d1b0e71a-c489-46a5-8804-4fd1dbdb38f6"
        },
        "item": {
          "id": "aa788ca0-2240-4009-840b-7e02d1dfd604",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "65c4b54a-140f-4f4c-9361-7f071125ad6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e95b69b-ce22-4cf0-8019-5f1474db3925",
        "cursor": {
          "ref": "afa4505b-8032-4971-a0ac-a314b857ce59",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4abe1c08-55cf-417b-863c-bdb890a4a0d0"
        },
        "item": {
          "id": "6e95b69b-ce22-4cf0-8019-5f1474db3925",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "af86d73e-37f4-44c7-9c29-b1d749f095f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9875d6f8-6d71-4629-8ed0-979bac1fd294",
        "cursor": {
          "ref": "9d41620e-87eb-4d8f-82e0-e17a15f1e100",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "79da6c28-691c-46b4-8ff3-275ef8561b52"
        },
        "item": {
          "id": "9875d6f8-6d71-4629-8ed0-979bac1fd294",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4515a726-84de-4cb2-ab96-5cdc048b29ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65266fcb-ea7c-4da2-a58e-d43986ec87a5",
        "cursor": {
          "ref": "ee44ebf6-e754-46c4-a5d5-dad1dd965723",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9857d3bd-3d77-4b03-8d87-f6d5c6982a49"
        },
        "item": {
          "id": "65266fcb-ea7c-4da2-a58e-d43986ec87a5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8fee377a-c402-406b-8005-6967d1d32d19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c731b93-79e4-4480-b889-9a8d57b48fde",
        "cursor": {
          "ref": "a520ef54-7f21-459e-ab55-7a260ec8f3a1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ea45e1d7-2e79-41aa-b9cc-90efd5120144"
        },
        "item": {
          "id": "4c731b93-79e4-4480-b889-9a8d57b48fde",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e946f4cd-9aaf-4c7d-a7e9-be06de313279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc871f3-37e0-40d3-aef1-b0f8225ad5da",
        "cursor": {
          "ref": "90dae4e7-26ac-41a6-9713-fe8e6be42d7f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ac70099-5f89-4e47-b621-bbd993ecd09a"
        },
        "item": {
          "id": "cfc871f3-37e0-40d3-aef1-b0f8225ad5da",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f0ff617a-b36b-445a-83ed-ee835a031bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6699eb80-15cb-41d0-86cc-bfc7e09ce632",
        "cursor": {
          "ref": "04efdf80-ec62-491e-aeac-9c53be524588",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d8d2dab6-954d-438d-a483-b93b2aaf62c3"
        },
        "item": {
          "id": "6699eb80-15cb-41d0-86cc-bfc7e09ce632",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f084b7a6-ac74-427a-a61f-ac814591e536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c9566c-5914-441e-b311-8258c3d6b201",
        "cursor": {
          "ref": "177908a8-dca9-447a-bbb5-87b8dc663a73",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eb6fdd20-ff1f-49e7-8689-d6d00368a17c"
        },
        "item": {
          "id": "60c9566c-5914-441e-b311-8258c3d6b201",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2453eb04-7ca4-4027-abe8-192359f6e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc13af-6e6d-4dab-a148-7a4aaa7d2d48",
        "cursor": {
          "ref": "1e88d497-2a04-4dc4-b65f-767ebf53dc27",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "23a88cf4-c0cb-4e4e-baa4-274914eb4f17"
        },
        "item": {
          "id": "6edc13af-6e6d-4dab-a148-7a4aaa7d2d48",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2d95ae7e-30ee-443d-ad07-1804100bb685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6414f3fb-cf5f-4f0d-92c6-03e8f018b6bf",
        "cursor": {
          "ref": "c7935ec8-6feb-4c85-a38a-c358723d381b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d1531801-b3dc-407b-8b2e-eddd602f4035"
        },
        "item": {
          "id": "6414f3fb-cf5f-4f0d-92c6-03e8f018b6bf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e48d0c34-9cfe-4ebd-8cb2-7c3aed099872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90c2b47-7831-4e43-b219-155de32bd386",
        "cursor": {
          "ref": "78a4466d-7347-41a2-8eed-ddef82b5de06",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c8810c79-a137-4e71-ab20-3bca0c266b81"
        },
        "item": {
          "id": "f90c2b47-7831-4e43-b219-155de32bd386",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "47109250-8e94-413f-bef5-8435edb6a0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a802f42c-ab32-48ef-95b5-c59b874242bf",
        "cursor": {
          "ref": "2e910d1e-8849-4f12-8f0d-bbbff777e42e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ff2e964d-b8cf-4dd5-bc17-8f9aa8b58a04"
        },
        "item": {
          "id": "a802f42c-ab32-48ef-95b5-c59b874242bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a7431938-2f7c-40a4-a2ad-d4c98d7f9989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe0e3b-b600-489c-8f97-e4ca7f3deeea",
        "cursor": {
          "ref": "7adddb1f-2dd0-40f4-8e62-73bfd201df7c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "67481ae0-9070-4fc6-8c0b-e7841f44c76f"
        },
        "item": {
          "id": "c0fe0e3b-b600-489c-8f97-e4ca7f3deeea",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a502ac16-ce4e-45ba-846b-5ad97209f265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd66d819-6594-4df7-a073-8d99900b9ec2",
        "cursor": {
          "ref": "59d9d474-66aa-4d20-ba59-f4b3624d51b2",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c869b77c-8b01-42c2-9a3e-ba21edd8d6ea"
        },
        "item": {
          "id": "dd66d819-6594-4df7-a073-8d99900b9ec2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "686ac6ca-5ca1-474b-991a-2696af1e1bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08091719-a2b5-4031-a61a-e20fb18b6e70",
        "cursor": {
          "ref": "cc6ddbcc-4a62-4d3b-be50-7689b58aece7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "95ff47ca-c16d-4649-b0d9-9a1e9f1e5d49"
        },
        "item": {
          "id": "08091719-a2b5-4031-a61a-e20fb18b6e70",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d411c9fa-a889-4a71-9145-2157f834371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3950b21d-dcb5-4234-b0cd-136589b64e37",
        "cursor": {
          "ref": "36e1aff4-7ac2-4ac7-952f-7004382584bd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "53493f24-ca9b-4124-8ff9-b596e4530be7"
        },
        "item": {
          "id": "3950b21d-dcb5-4234-b0cd-136589b64e37",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b4bbc12-6207-4b2d-9202-c769837d536b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d66afb-0a87-48eb-89f0-dd9ed2022faa",
        "cursor": {
          "ref": "8ecb5026-726b-459a-8835-92a0351731f3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ca6b9b4-4891-47d0-834d-139e746dbe66"
        },
        "item": {
          "id": "09d66afb-0a87-48eb-89f0-dd9ed2022faa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "79aa8d00-0921-4339-bfb2-9c40c350970d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db09ab3-3727-48fc-9d8c-a171b96963cf",
        "cursor": {
          "ref": "af828da1-8f83-4c98-a0c7-50a78c58bf56",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "be8b9b56-17ec-45f4-b864-9e86cf14bebe"
        },
        "item": {
          "id": "5db09ab3-3727-48fc-9d8c-a171b96963cf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "dfe37018-1d75-40d3-9280-f1e8959c8366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2689db16-fca4-4197-b8cd-6e53fd038b24",
        "cursor": {
          "ref": "4edee13e-a9db-44bf-b30b-2fcbb1548b77",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "76c5f0cd-6b5f-4d42-a318-13f10c740dab"
        },
        "item": {
          "id": "2689db16-fca4-4197-b8cd-6e53fd038b24",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "05f2f28c-0142-4aea-b235-22f43fa657ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489a0295-700f-47a5-ac18-af52ccc3a290",
        "cursor": {
          "ref": "aa6bf4bb-5d1a-44cf-b966-eb1bb5bc912c",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8dfc229e-3221-484f-bab6-01e43f344244"
        },
        "item": {
          "id": "489a0295-700f-47a5-ac18-af52ccc3a290",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a632af8a-2de4-41a8-a8f9-8cfd899e131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0326f60-fe69-4763-8352-38ca5b57366a",
        "cursor": {
          "ref": "06be9ff6-f37c-4754-9f94-105db6e1a7d5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3bfa7dc6-7bbf-4a61-883c-2aa0f1538f16"
        },
        "item": {
          "id": "d0326f60-fe69-4763-8352-38ca5b57366a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ee6494ec-eb09-44a1-a21f-5a5cb0007f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed18867-3c4f-4978-a717-cdd7e911a3e6",
        "cursor": {
          "ref": "b6bc56a5-9f59-47a8-96bb-c2bffa1256b1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c010869f-9d9f-4559-9233-4daacc694b42"
        },
        "item": {
          "id": "9ed18867-3c4f-4978-a717-cdd7e911a3e6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f9f6410c-ea3e-412e-bb6b-803a1b2e0417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff15de7-f990-4be4-b5c3-02073ae17a26",
        "cursor": {
          "ref": "7caaf45a-7831-4f5f-8cf2-84cf643e36f1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a9d25482-9af7-47eb-9eb7-401885b58f78"
        },
        "item": {
          "id": "0ff15de7-f990-4be4-b5c3-02073ae17a26",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b1fdd9dc-c731-4688-b5d5-e9fb1b50062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86d5160-8666-4e18-bc5d-c3825de181f8",
        "cursor": {
          "ref": "4802909a-8f9f-4650-8a4e-bf0383dbda09",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ead23792-bf84-472e-8147-9e400b3b9f5e"
        },
        "item": {
          "id": "d86d5160-8666-4e18-bc5d-c3825de181f8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3a22ddc2-0429-4f2f-b568-218d50ff8c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43180c8d-9249-4467-8674-a7ab1433d268",
        "cursor": {
          "ref": "a2b4dd55-6775-4289-9af2-77a2c7fa3f11",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79ff6012-f2f6-47db-8b31-9149f30c9441"
        },
        "item": {
          "id": "43180c8d-9249-4467-8674-a7ab1433d268",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "970bb977-3ff8-4373-bd95-8095570b005e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec194b-93f0-413e-81fb-95064c0646cd",
        "cursor": {
          "ref": "3a71f94a-c75c-4ff6-a059-2a9b0da4263b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3d44a179-84c2-465b-9396-4d95c9a1088b"
        },
        "item": {
          "id": "47ec194b-93f0-413e-81fb-95064c0646cd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a8a97d74-282c-4403-bc92-f4ef49dcc73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee22d31-bf8b-430e-aa4c-3cd4813e2eff",
        "cursor": {
          "ref": "20c92858-5def-4e1e-80ba-fdc39de74e1d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d2585740-b843-4019-99ae-33f4313925cc"
        },
        "item": {
          "id": "3ee22d31-bf8b-430e-aa4c-3cd4813e2eff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "03dc35b4-8248-4f78-a4bf-e4346b6a41be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63b65ff-e665-4065-a6cc-656ca549fdcd",
        "cursor": {
          "ref": "22ba489f-51aa-4900-ba48-1bd8c149e5ca",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e748b89-e2e8-473f-b09e-43f8a3267272"
        },
        "item": {
          "id": "b63b65ff-e665-4065-a6cc-656ca549fdcd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c8670dd2-586f-472e-9989-1b40ee686b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8488888-b7a1-4166-97f0-e77808d97197",
        "cursor": {
          "ref": "1176598f-d4e5-474c-a83a-36403f99ffeb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "278e3a55-9e3b-4b6f-afbf-1334a4d16f1e"
        },
        "item": {
          "id": "d8488888-b7a1-4166-97f0-e77808d97197",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2bd25940-409e-4b78-a55f-b3b78deab523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb65b80-5350-4ed9-b5a2-baefea3d02e6",
        "cursor": {
          "ref": "af29fc76-947f-4812-b17b-ca40d57d1dc7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d35eaa8d-9b47-4f24-912f-29391c47d3ad"
        },
        "item": {
          "id": "eeb65b80-5350-4ed9-b5a2-baefea3d02e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "39441afe-01f3-4a9d-bb87-18d5708d0133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aaf20e-ab9d-4dd6-a4ee-4905f2e820cb",
        "cursor": {
          "ref": "9cd3ec0b-1416-402a-846a-080991c17a86",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "38629c2b-6a18-40a3-9b6a-734f8188e5a1"
        },
        "item": {
          "id": "63aaf20e-ab9d-4dd6-a4ee-4905f2e820cb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a8fa870d-f8fb-4572-9078-2efc42e3b44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a497454-62fc-4612-8af7-f8fd85d01a12",
        "cursor": {
          "ref": "8c43e075-531a-4fad-a65e-0ce79486b424",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8397f1e1-5794-4de2-98ab-81eedd87e127"
        },
        "item": {
          "id": "5a497454-62fc-4612-8af7-f8fd85d01a12",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5505e621-cb76-4516-91a9-f3cd9a59b2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c77efe-3231-4c47-8fd7-76edc60f8770",
        "cursor": {
          "ref": "a532fb5e-5ba0-4cbb-8479-d781d5316b3d",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b86838f7-1861-4845-9013-66d56ae58a19"
        },
        "item": {
          "id": "66c77efe-3231-4c47-8fd7-76edc60f8770",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d853969b-467c-4b65-ac7f-731512895afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee1fab-6241-4c1e-90ee-c67bf6c37e45",
        "cursor": {
          "ref": "4e5e860d-0067-49ad-be35-4835ec2ff257",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "79cd3e52-a9b0-4f8a-9b14-bd970cc14883"
        },
        "item": {
          "id": "81ee1fab-6241-4c1e-90ee-c67bf6c37e45",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5053c067-196c-4d67-8ea9-b00549f68d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c2beff-de3b-4a6a-b976-4f7f602f55bc",
        "cursor": {
          "ref": "9330a83d-fac8-4af6-bd79-0c5aa6ed11cc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "16ca550a-2947-4d6b-88fc-34f98d7a0619"
        },
        "item": {
          "id": "b5c2beff-de3b-4a6a-b976-4f7f602f55bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "544a1131-9937-4e87-a27c-155b4aeecf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221da3d6-2bb8-40fb-bb58-5ced42946cd2",
        "cursor": {
          "ref": "48417da3-d1fc-4fa6-9289-78b739b60069",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c8826439-c410-462d-b938-c9ecb5d74491"
        },
        "item": {
          "id": "221da3d6-2bb8-40fb-bb58-5ced42946cd2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "083a796a-9c3b-496c-8788-534a3dc10317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816e960a-0dbd-400e-8a24-21e067ee8f08",
        "cursor": {
          "ref": "7353c1a2-fd98-46f1-bdd9-3ccc159c19b6",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d9b88cc5-7384-4f16-81f2-34a9b47b93ea"
        },
        "item": {
          "id": "816e960a-0dbd-400e-8a24-21e067ee8f08",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "70103a3f-1ad9-4071-a3cc-cde06b7b279f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7cc3f2-1d9b-4a68-9f3c-975da5a28503",
        "cursor": {
          "ref": "a64c7064-e0e5-40fe-adec-373f572033e7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "216abcf7-7af8-4006-8a78-ccee6bfedac1"
        },
        "item": {
          "id": "8a7cc3f2-1d9b-4a68-9f3c-975da5a28503",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e76c365e-4d60-4dcc-8132-31ecf01cec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c53eff-d531-45d5-82f8-fd86cdbe750c",
        "cursor": {
          "ref": "42b15d38-00d0-4029-8df0-e83b51be21e1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0875a7c2-12b0-4720-b716-263b9b4d859f"
        },
        "item": {
          "id": "56c53eff-d531-45d5-82f8-fd86cdbe750c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5dbd5fc3-e929-4327-befa-9d62c1be8f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01393540-c61a-4707-b9ea-0cecb67e338a",
        "cursor": {
          "ref": "0648ba75-85a0-4f1f-8eba-dca66589fa9a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6164ea52-7ab5-42ea-946b-589055bb0caa"
        },
        "item": {
          "id": "01393540-c61a-4707-b9ea-0cecb67e338a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "19c6e2a9-5afb-480c-a39f-30317036df8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0442143-bba0-4ecb-bbe5-e6a6ab143eeb",
        "cursor": {
          "ref": "6ef77ff4-82a0-4042-b6ed-e7a7c13774e0",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "34a2ae07-d1bf-4d6b-bc2f-3ef47e2d2554"
        },
        "item": {
          "id": "f0442143-bba0-4ecb-bbe5-e6a6ab143eeb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c2600448-2c36-477b-b14c-91414cc80097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e1b54b-9c3f-4294-a852-b18970b620be",
        "cursor": {
          "ref": "35f57298-744e-4e62-a3f4-9104b1cadd28",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "313aeed1-caa2-49aa-8e0a-f0ae9525fc5b"
        },
        "item": {
          "id": "b5e1b54b-9c3f-4294-a852-b18970b620be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "82ee9284-edcf-4fb7-86ed-6f0070d37c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210ce9b7-4efb-4931-8c25-78295185eefb",
        "cursor": {
          "ref": "b5a8f9db-1c34-413f-a9ca-e4d84bcc2040",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4af0b48d-352e-4cee-b375-5ff4521ba76a"
        },
        "item": {
          "id": "210ce9b7-4efb-4931-8c25-78295185eefb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5ab495ea-b94c-4ffd-96a9-8dc956284b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224d1514-4adc-4ea1-b2b2-12c31b380d7c",
        "cursor": {
          "ref": "9244bd72-f086-40f2-ba33-7bd3136ad39a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "42e9dda8-4a2a-4686-b24d-6fcb3c2b7bcc"
        },
        "item": {
          "id": "224d1514-4adc-4ea1-b2b2-12c31b380d7c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ba1b0d3f-863b-4801-865f-b21769ee0fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610c8e34-5d2b-4a06-bc9f-c2bb44e12f05",
        "cursor": {
          "ref": "3fd6bbb6-cee3-4453-b852-ee30e3a1434a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "51d88f5f-a3ef-474e-a81b-1997d62be586"
        },
        "item": {
          "id": "610c8e34-5d2b-4a06-bc9f-c2bb44e12f05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b802264a-6bc0-4558-9b8e-970c48bd6d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3496390c-f33c-418f-b35d-6f86ad1337fa",
        "cursor": {
          "ref": "e22f166a-e012-485a-87c2-55ce5bb098be",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "452d655c-fa8d-4c4c-bef1-d94c75eb1cf1"
        },
        "item": {
          "id": "3496390c-f33c-418f-b35d-6f86ad1337fa",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3e58fdef-0d2a-43ba-a3fb-adf16bc03513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a0c5e2-3f94-40e5-a061-0d40334362c9",
        "cursor": {
          "ref": "38c6c2cd-4a17-482e-9423-1e5b563614ff",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "029477aa-17ef-43f4-a5cf-26d480fd50db"
        },
        "item": {
          "id": "04a0c5e2-3f94-40e5-a061-0d40334362c9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a34a1a6d-179b-4b5e-b0d7-cc0345a78ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8534ddb-dd01-4847-b825-87e2710f0832",
        "cursor": {
          "ref": "47fa2255-b1ec-4c6f-a743-08a5606e178f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8c5f0cb4-1f50-4b21-84c6-2d25c19d66a4"
        },
        "item": {
          "id": "a8534ddb-dd01-4847-b825-87e2710f0832",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64d6045e-cd70-49ce-b472-648ef99ed3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c60fe5-601f-476d-bd15-9d6c026a770a",
        "cursor": {
          "ref": "ef8afca6-098f-42ef-a589-02563da229ab",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b95d313d-efc6-49b0-8af2-edaff36f933b"
        },
        "item": {
          "id": "55c60fe5-601f-476d-bd15-9d6c026a770a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8cde1bf-9639-4d4e-9ee8-942beb54e6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ec186-d7fe-48a1-b2c8-bcf633e5d6ef",
        "cursor": {
          "ref": "cf538e8d-46b2-4100-836f-f24669306b46",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a78dede3-0edd-402b-9e0b-8decb26e9bcf"
        },
        "item": {
          "id": "0a0ec186-d7fe-48a1-b2c8-bcf633e5d6ef",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c8d3330-98bc-4767-b8c7-9bda66e7ade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23506b30-19d1-4649-bdb1-c93adc96322c",
        "cursor": {
          "ref": "244a7eb8-ab46-4454-97e3-fe984465dcbf",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "451840d2-b80c-496d-b6fd-d888d4f987c8"
        },
        "item": {
          "id": "23506b30-19d1-4649-bdb1-c93adc96322c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7d0822da-b45a-4d41-bf20-560f677fe7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b72b7fc-2eeb-41eb-8644-f66e93d600b4",
        "cursor": {
          "ref": "3f11a34b-1e2c-4e8a-bfcb-5ff891a01ddd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e43b63e-1e79-440c-ba4d-906c31ace888"
        },
        "item": {
          "id": "4b72b7fc-2eeb-41eb-8644-f66e93d600b4",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "272327a1-f94e-408f-b32d-b033d26ea4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8ec846-5dd9-48b6-b043-b13a4a6103a0",
        "cursor": {
          "ref": "4fefb52e-609a-46b8-b367-561ad99cca71",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e8deb9f4-4f30-480f-b0b7-903052204dda"
        },
        "item": {
          "id": "cf8ec846-5dd9-48b6-b043-b13a4a6103a0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ab1fdb97-ae45-4eca-aee3-f7746a720d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4951d883-153b-471e-a6dc-1687a7071c98",
        "cursor": {
          "ref": "d6a70fa8-c37e-4b2c-aaca-7cfa2d9c1cdb",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "96f94245-4d81-42c3-923a-d51cfd2e04b0"
        },
        "item": {
          "id": "4951d883-153b-471e-a6dc-1687a7071c98",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bc2968d8-e1d7-450c-96f0-0d07aab90a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933c748-3e7d-423e-ab4b-af04d624fee5",
        "cursor": {
          "ref": "25f21beb-9a83-4c7e-b3e1-fe11bd63c043",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "802afdbf-9021-4059-a7c2-3c8b324f1c41"
        },
        "item": {
          "id": "f933c748-3e7d-423e-ab4b-af04d624fee5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "20281b07-55bd-4b14-a8ce-41a9d529b2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2223b045-6338-43aa-b2d2-623f4da85993",
        "cursor": {
          "ref": "5f0f3966-0002-451a-b07c-51566ac5897c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "193ef614-2778-41f2-8116-1440b9fd8ea7"
        },
        "item": {
          "id": "2223b045-6338-43aa-b2d2-623f4da85993",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2bc38471-6604-4eea-9b83-b32491f0cf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f50f934-09b8-4ebf-ae1f-424319e86edc",
        "cursor": {
          "ref": "b8d09960-1b48-491d-884c-e25eaa48081e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "06b3606d-6b2b-4a55-b066-d0a94ec8b117"
        },
        "item": {
          "id": "2f50f934-09b8-4ebf-ae1f-424319e86edc",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1ccc4595-1dce-432e-878f-9465ff61ebcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b9a39f-4ad4-445e-8f9a-69c7d96f0dc5",
        "cursor": {
          "ref": "fbb6b3ba-6dbc-47a9-8fad-8c4d7934fb00",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "97ba126c-324c-45e4-bc2f-7e22bc4db9d5"
        },
        "item": {
          "id": "d4b9a39f-4ad4-445e-8f9a-69c7d96f0dc5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e1751085-f98e-46ba-9262-6cab96fc150e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9980e8-f747-4d73-a043-4d201904cc34",
        "cursor": {
          "ref": "ac99e4db-485a-4f14-ba23-f08f1c524f58",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "47cffa82-3880-4ca6-bb04-614c83fd583c"
        },
        "item": {
          "id": "5c9980e8-f747-4d73-a043-4d201904cc34",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "94e7cf99-8aa0-43c1-b26f-ea23b318ad31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8eff4a-5781-41be-a729-9fb7429b281b",
        "cursor": {
          "ref": "899b321d-c30e-4b9f-8cb4-5bd7c9c4f999",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "541d9c76-4fb8-4f5c-8bb8-fab10537b494"
        },
        "item": {
          "id": "cb8eff4a-5781-41be-a729-9fb7429b281b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8a73b2c4-0395-4f0d-94ab-6a54f76cfaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c51d4f-1fe6-410f-a534-a3cedb31613d",
        "cursor": {
          "ref": "df3686f3-07f7-4bb7-ae7a-e67049e2531f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "514f7cb2-1bc7-4053-bebf-716e38dd08c0"
        },
        "item": {
          "id": "09c51d4f-1fe6-410f-a534-a3cedb31613d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "240bcc1f-27ff-4f74-9919-841b2e640f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dac5280-eaac-438b-a021-bf6a68d50089",
        "cursor": {
          "ref": "f9dc7f84-4c4e-4574-a474-f4565894b70b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d6905802-3314-4165-bb5a-809637471bc7"
        },
        "item": {
          "id": "4dac5280-eaac-438b-a021-bf6a68d50089",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "63abebcd-4ba8-4e06-b599-98f9b07475a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629a3e4c-1936-4db0-83d6-e76293fc12fa",
        "cursor": {
          "ref": "3a516976-841a-45a9-8049-361107303bca",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad6e85af-cba5-4871-8475-ffab4afbef48"
        },
        "item": {
          "id": "629a3e4c-1936-4db0-83d6-e76293fc12fa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "21df354b-4d10-404a-b425-5e45bfb66ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b3f0f9-9315-4be8-b771-a1c3e800348c",
        "cursor": {
          "ref": "5af6254e-90b1-4d55-aa1d-40b37c92b989",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e1442c95-d69a-4a22-a272-e442c58646bd"
        },
        "item": {
          "id": "f4b3f0f9-9315-4be8-b771-a1c3e800348c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f7d5b286-7684-4444-aebe-b8637756add3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c473458-d4c4-4391-93d4-1041d9cec873",
        "cursor": {
          "ref": "4cc94b04-12a7-4bc7-b207-b20f10a3877a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "fd63ac60-25a0-4383-adf7-8eb7a907bd0e"
        },
        "item": {
          "id": "4c473458-d4c4-4391-93d4-1041d9cec873",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4a72de10-6fbf-496f-b31c-60370c0badc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff84b7d-364a-4b75-9fa2-044d03ff7fc9",
        "cursor": {
          "ref": "62323a99-5f56-4961-b29c-75b4cc498641",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0e55f240-45d2-46d6-bf93-df217fb0eadf"
        },
        "item": {
          "id": "3ff84b7d-364a-4b75-9fa2-044d03ff7fc9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "cae608b7-9aaf-4cd5-8880-f6d03f3c7eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f95d744-16fd-4bcc-925f-5ea23a9c9aac",
        "cursor": {
          "ref": "cb3fadca-dfd8-43c0-b6da-b6d1335e4071",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dfcf9ee2-da03-468e-af8a-c7f8b1afea85"
        },
        "item": {
          "id": "8f95d744-16fd-4bcc-925f-5ea23a9c9aac",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d3864a54-fbe3-452c-92ce-1d84be3649e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d7ffea-cd49-4e30-8b3d-2b12ff964500",
        "cursor": {
          "ref": "8281a6fc-7e32-498a-b3f7-2393765177f0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "27147e8a-9e94-433a-ac96-416ab09ce9e5"
        },
        "item": {
          "id": "23d7ffea-cd49-4e30-8b3d-2b12ff964500",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "edc82ee9-a15d-42e7-93fd-c04570a94fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8756e904-0f87-4d3b-9485-6641ec498828",
        "cursor": {
          "ref": "b133f209-e07f-48c5-9a3f-c78023e125d5",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d870e60b-2b29-42e3-b70a-eb812d6bb620"
        },
        "item": {
          "id": "8756e904-0f87-4d3b-9485-6641ec498828",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bb090db9-d633-4300-90cd-b4c08e4e0d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e32feb-bc69-473e-b408-5387473c3b77",
        "cursor": {
          "ref": "6abf651f-c7b3-43e4-938a-6f02019beea7",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "02246646-2a50-46e6-a2e3-f723279ed007"
        },
        "item": {
          "id": "a1e32feb-bc69-473e-b408-5387473c3b77",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "622c2c48-6823-423b-8471-1a2b522ae025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d8a38f-e405-4eba-9a39-b0bd233ac030",
        "cursor": {
          "ref": "7ac0ebe5-fc3f-48a0-83c2-d47ae4b1755c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f315e732-a06f-4136-9876-0b3766029e10"
        },
        "item": {
          "id": "a4d8a38f-e405-4eba-9a39-b0bd233ac030",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d06c2fc4-bf2b-4789-8c04-5d90a50322b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b11cd0b-ce80-4d50-895b-9d76e7e4ecac",
        "cursor": {
          "ref": "775e3c68-f37a-409d-a798-92a01e7444ec",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "165d6f4a-e2b9-4184-95e7-4ac911753707"
        },
        "item": {
          "id": "1b11cd0b-ce80-4d50-895b-9d76e7e4ecac",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6310d151-6e1b-42f0-ad85-bfc6b2c422b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9c1ed0-0d06-46e5-bd21-9c9ab68242cf",
        "cursor": {
          "ref": "b90fa275-99d2-419d-bbad-03140bf84b35",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "17265c3a-5b92-44c4-a672-0bd01f2ec26d"
        },
        "item": {
          "id": "2c9c1ed0-0d06-46e5-bd21-9c9ab68242cf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ef0c03a3-874f-46db-948c-b9692d45f359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa091ef-6f56-4a32-8cc2-d7293777e856",
        "cursor": {
          "ref": "99c38f45-45f5-43ac-8501-7dca37cef139",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8cc30431-6705-410d-9162-506320dfc9c6"
        },
        "item": {
          "id": "faa091ef-6f56-4a32-8cc2-d7293777e856",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f65791e5-816b-4965-a3ec-f1d3e594c9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f766e61-031d-40fd-aece-4ce6f334ce84",
        "cursor": {
          "ref": "ef55cb2e-fb88-4739-be30-7d524c8549a9",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "23eead3d-59f6-45e7-a14c-1604cab9574a"
        },
        "item": {
          "id": "0f766e61-031d-40fd-aece-4ce6f334ce84",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b88200cf-973f-4ef5-9296-6012aae0cde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6921cdeb-6d81-455b-a1ea-f59fecf06ed6",
        "cursor": {
          "ref": "9edc3c5b-f2bd-47ea-946b-ed297f6b3b19",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "955fa5f6-cc3b-411a-9ea2-58706b42a5b3"
        },
        "item": {
          "id": "6921cdeb-6d81-455b-a1ea-f59fecf06ed6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "629e622a-8d88-4f3e-af9e-760318eb9d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92a3ffc-7c84-4345-a11e-ec2a696a8403",
        "cursor": {
          "ref": "d86dcc95-196d-4699-89db-c06170d08462",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "54adeb9a-7fa9-4152-8f91-6e21eadd6230"
        },
        "item": {
          "id": "f92a3ffc-7c84-4345-a11e-ec2a696a8403",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9e7b34df-b57c-4eec-bf85-856e9b13a27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf75951b-0f7c-4c7e-8d8c-bb9e00f0338c",
        "cursor": {
          "ref": "f9f1927d-854d-45d7-a663-aecccd299ff6",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2e6beb8c-f490-43e3-b625-6a311c9786fb"
        },
        "item": {
          "id": "bf75951b-0f7c-4c7e-8d8c-bb9e00f0338c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ef93f2d2-a3ad-4112-9d51-33d0bbb6221a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ca5d03-9ee8-4a4a-9cf9-3d2b59c32e5c",
        "cursor": {
          "ref": "355dd109-285d-4635-8342-698ed8b57b91",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "409e6682-1383-4d8c-bfd7-733c709b13b6"
        },
        "item": {
          "id": "07ca5d03-9ee8-4a4a-9cf9-3d2b59c32e5c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3ce7220e-b7bf-4f39-badf-d7dae8192e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90a6eac-724b-476b-b86e-08fcc5f83ecb",
        "cursor": {
          "ref": "30d033e0-9cae-45fe-b3c7-0d6401701bd6",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da629bf0-089a-4cb0-be35-aa090566b47f"
        },
        "item": {
          "id": "f90a6eac-724b-476b-b86e-08fcc5f83ecb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "56732b68-801d-4504-8928-5d44b4910412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d131221d-a54c-4459-b063-5acf0bafdd7b",
        "cursor": {
          "ref": "5bb8ea2f-0e72-4dbc-961e-da7e45719f0a",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e81c7ab4-ab3a-4dca-8726-f1177f8ca6ea"
        },
        "item": {
          "id": "d131221d-a54c-4459-b063-5acf0bafdd7b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6ac01702-a6ba-4f80-964d-2ce91a8449cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129e4370-72b4-44df-b76c-f40bfda51623",
        "cursor": {
          "ref": "37a03197-a578-45e5-96ff-72f70fb1fd14",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "525a5989-21ed-40f7-a3ca-b3bf09a4c453"
        },
        "item": {
          "id": "129e4370-72b4-44df-b76c-f40bfda51623",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e9068724-3d0a-4a9a-b777-e04d649a6ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8687e-c197-4657-a71e-9c78205a826b",
        "cursor": {
          "ref": "1120a0b2-c077-48de-9faa-21512964e9e7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fbb7aea0-2336-465d-b64c-16544eb1b683"
        },
        "item": {
          "id": "bad8687e-c197-4657-a71e-9c78205a826b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "71d8fb00-a2dd-4832-bfc5-a197f34f8130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25144b7d-e304-475f-b18d-f189f94e87f9",
        "cursor": {
          "ref": "e29857f5-6354-463c-b05b-433b076c973a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6c3a2ebd-44cf-4763-a10c-339bd86ab7d0"
        },
        "item": {
          "id": "25144b7d-e304-475f-b18d-f189f94e87f9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c3fe803f-5cba-420f-8958-ec03c9b53949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a975efd-07a9-48a9-9da1-811b508704b7",
        "cursor": {
          "ref": "e75627a2-245e-4e5b-9717-dd1db517559e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a0f6a998-5a92-426c-8c18-a42f223b1d2d"
        },
        "item": {
          "id": "1a975efd-07a9-48a9-9da1-811b508704b7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "56838edb-db85-409a-8832-15063e2d33df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735f43da-2596-4221-8350-e4a7c39d4dd5",
        "cursor": {
          "ref": "c45f2e0e-7195-47d1-9b66-098a255b9094",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f0b207f-2793-418a-a137-5554924dcab6"
        },
        "item": {
          "id": "735f43da-2596-4221-8350-e4a7c39d4dd5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8d7aec26-8e32-4d3a-aaaf-a738f7c7370d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29ffa8-32dd-4a57-a98c-a09fa7d8db30",
        "cursor": {
          "ref": "229af6ed-15b3-4c07-a780-e68d87d4b81d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea9384d0-f06d-444d-bba4-9d916a18bcbd"
        },
        "item": {
          "id": "9d29ffa8-32dd-4a57-a98c-a09fa7d8db30",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7969cfd4-6843-4886-88fc-00b4cabd513b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a57a5e7-fd50-4e17-9369-4ba8ead32b1c",
        "cursor": {
          "ref": "99429678-6edd-4554-9f7c-11a8dc5f6bf4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1d6a3283-d0d6-4267-bdef-bec2165dd2b8"
        },
        "item": {
          "id": "9a57a5e7-fd50-4e17-9369-4ba8ead32b1c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5ec44a1f-0b03-4683-a8b1-6b2bc0ebcb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b434bc-dc22-403a-b116-49d7278f4f0c",
        "cursor": {
          "ref": "1078f528-523d-4bc3-bb4c-8a922a91feb2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "24e26992-adee-46d9-a449-a604b82b5a80"
        },
        "item": {
          "id": "92b434bc-dc22-403a-b116-49d7278f4f0c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6ae645a8-a114-4fac-9103-f7b077fe4a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c3c96b-986e-4d97-aa89-87535bb6dbd6",
        "cursor": {
          "ref": "80d0a0d5-8135-4b5f-b991-22c73dd10ff6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "54ba21e4-f120-4e7b-9a24-f84d85c8c089"
        },
        "item": {
          "id": "90c3c96b-986e-4d97-aa89-87535bb6dbd6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b6dcfedd-7071-4f32-ad24-c34497dae8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1bbd0f-3d9d-4fb6-b237-d43597181e88",
        "cursor": {
          "ref": "4e9dfd37-437b-4249-9fde-34d60590fb68",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "694a9a47-daea-4d0e-a5a2-0c42176e2155"
        },
        "item": {
          "id": "5b1bbd0f-3d9d-4fb6-b237-d43597181e88",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "85953bc8-b04a-48f3-a54d-54da5d419880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dece095-75c2-4088-8627-92d93eeec65e",
        "cursor": {
          "ref": "0a688b90-c0f0-4a04-9d06-485dd315c3f5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "78eab3d6-f549-4543-a0af-1821ba39991f"
        },
        "item": {
          "id": "1dece095-75c2-4088-8627-92d93eeec65e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d74ed6d7-336e-419a-a90e-cc317e7d2916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54fd009-9c8e-4dbd-ad46-df38e45cd34b",
        "cursor": {
          "ref": "c3e009f7-738b-47dd-a585-b886dc2b6b38",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7904f444-ce05-4a55-a953-af797ffbd466"
        },
        "item": {
          "id": "d54fd009-9c8e-4dbd-ad46-df38e45cd34b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f0a02a3e-e75a-4bb1-a47e-23cdb96f6c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03ebdd1-6649-4676-b4d5-ba112a78cb52",
        "cursor": {
          "ref": "505b275e-a1f0-437c-8a2c-6739fba26fdb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b20418f2-a681-487c-ba59-423d6e6be603"
        },
        "item": {
          "id": "e03ebdd1-6649-4676-b4d5-ba112a78cb52",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "debb6991-e43f-47c0-8a95-e15e00ff306c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc95b5e-2cf2-40c0-8aa4-acb3eadef28d",
        "cursor": {
          "ref": "3e2d2c76-3b26-4f25-9ea1-107558c7c100",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9a2f7278-6e37-4e6b-a261-44f380f282c2"
        },
        "item": {
          "id": "3bc95b5e-2cf2-40c0-8aa4-acb3eadef28d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "247ddd3c-aaf3-4003-9ac9-1fc60c2ab51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000c1890-fec9-4d57-bb68-bc411d6ac91c",
        "cursor": {
          "ref": "4221e557-2de9-41a6-87d4-67e360abe34e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "579fa13a-e0aa-4258-8670-f8e76591448f"
        },
        "item": {
          "id": "000c1890-fec9-4d57-bb68-bc411d6ac91c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "92eda4cc-428c-4856-a6a7-c07693d8c24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb97702-b068-449c-a927-b681af97ec17",
        "cursor": {
          "ref": "1befd755-b0db-4d1d-a679-8bc4ac89b43e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "85664b2b-fdb3-4085-8cf0-172d468fb23d"
        },
        "item": {
          "id": "8cb97702-b068-449c-a927-b681af97ec17",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f7edaf9f-edd4-40b8-be67-80f74549ec21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4deb2f0c-9b0a-45b3-9a7d-e847a3b7bd25",
        "cursor": {
          "ref": "ff3035fc-c711-4822-8301-8b6702025819",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e81475a7-498e-4f57-a73b-74fb181e43d7"
        },
        "item": {
          "id": "4deb2f0c-9b0a-45b3-9a7d-e847a3b7bd25",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c5520f25-e36d-40c5-9f42-501bc3d21120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95645c4e-b0fc-4abc-ad35-d7f8282decaa",
        "cursor": {
          "ref": "e225368c-bb52-4f89-a53d-f1b26242966d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9d66f131-d18a-4a4f-ae26-6a0003db9f2b"
        },
        "item": {
          "id": "95645c4e-b0fc-4abc-ad35-d7f8282decaa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0c7258a8-7a0f-4271-abce-39dc685005b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15ab4d5-2cb0-4d64-bfd5-875a4a0cc630",
        "cursor": {
          "ref": "0f481b62-1b0c-4d19-834f-17dee64871e6",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c51575d3-8cc9-4c8c-99af-8f47a41b0753"
        },
        "item": {
          "id": "b15ab4d5-2cb0-4d64-bfd5-875a4a0cc630",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e3b13ceb-c9ef-4f25-bec7-ff81f161939a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dab0fcc-b167-4ff3-98b4-48b6fc6a4146",
        "cursor": {
          "ref": "77c9c565-1631-4264-ae7f-877da1ad22bb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c240134a-ccbf-4ab5-a193-7e811e2e8240"
        },
        "item": {
          "id": "4dab0fcc-b167-4ff3-98b4-48b6fc6a4146",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bb7d10a9-0c21-4bf8-bab4-75abd6d8ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910819b-a56b-468f-8e6c-0e0bd0525706",
        "cursor": {
          "ref": "adfd68a5-7917-4920-8402-a6038d6af745",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b7d3e202-7143-4cf7-869b-167a8e06cb0c"
        },
        "item": {
          "id": "6910819b-a56b-468f-8e6c-0e0bd0525706",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "479f1df0-82e5-48ec-a117-17e11616e0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ea4d55-e903-429f-83e0-1e2d6aef51ca",
        "cursor": {
          "ref": "02e49c43-bd32-41fb-9ca7-a20ed2b86e4e",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33756808-f043-47c3-aa1d-c96b1db121a7"
        },
        "item": {
          "id": "08ea4d55-e903-429f-83e0-1e2d6aef51ca",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c2f799e4-9c49-44ec-b3f1-bf2041e8692c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "72074cbf-f99c-40e9-9e6e-9c96714ab138",
        "cursor": {
          "ref": "28bdc395-8453-49c8-bc86-4096acb22c12",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7b30b945-18f1-4ca3-8e19-7a978085c86e"
        },
        "item": {
          "id": "72074cbf-f99c-40e9-9e6e-9c96714ab138",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c0eccfc0-6e00-4ad7-b9d4-dc3507b4bdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "a7fd0f91-04d4-447b-9296-0f6873fc28a7",
        "cursor": {
          "ref": "33adc6e2-2c9e-4bf8-88c3-38f97eb9335e",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7d5d57b5-4dc2-44f0-99a1-48b21699bbc4"
        },
        "item": {
          "id": "a7fd0f91-04d4-447b-9296-0f6873fc28a7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4cebe3eb-e539-47f5-956b-77988a0e7e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "f2243d5f-21f5-4205-8211-0880d17d29d0",
        "cursor": {
          "ref": "ad40696a-4c7a-4ad4-8373-75cf3104693c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e1dd5d74-b457-4a54-898c-6d2ed7fcf99d"
        },
        "item": {
          "id": "f2243d5f-21f5-4205-8211-0880d17d29d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "183ed310-7c05-49c4-85a1-1dd718ff582c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2243d5f-21f5-4205-8211-0880d17d29d0",
        "cursor": {
          "ref": "ad40696a-4c7a-4ad4-8373-75cf3104693c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e1dd5d74-b457-4a54-898c-6d2ed7fcf99d"
        },
        "item": {
          "id": "f2243d5f-21f5-4205-8211-0880d17d29d0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "183ed310-7c05-49c4-85a1-1dd718ff582c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a34c1d2-ded7-47d7-9c02-5017a7d105a9",
        "cursor": {
          "ref": "7be36637-936b-41c7-9d8a-44d0808d2014",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "eb086f5a-e185-410b-8511-d56839ebe59b"
        },
        "item": {
          "id": "5a34c1d2-ded7-47d7-9c02-5017a7d105a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "92b1f5a8-b737-4952-8102-bd5172d65260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ad8d9f-e240-4d0f-985c-b99a8cb19caa",
        "cursor": {
          "ref": "a2fedb10-e03b-4f4a-b017-fa9784229d16",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9d2cdd53-62e5-432e-b5d2-ffe33129b233"
        },
        "item": {
          "id": "47ad8d9f-e240-4d0f-985c-b99a8cb19caa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "831be5ec-353c-4d7d-bb78-544a8173a770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}