{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "de7791d5-f0a1-43dc-b681-401dfd8c6a02",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7c585b31-10d2-4817-9a89-ba397f886061",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "065e554b-b995-443a-a62e-8299de91d153",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f07ec45a-b38c-42e5-9297-7984c5c3ccf2"
                }
              }
            ]
          },
          {
            "id": "2145e063-5a44-4fb2-a5a0-3c3034f16bbd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c22e9060-4b4e-4e0c-9384-6ae17a843242",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a0dd03a4-afbe-48f6-9612-986b230214b3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a37f2d0a-298a-4cc9-96a4-e02b7cb7aa4e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "657f6a06-f809-4a95-bab1-199556ee956b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "62256922-4cdb-46b2-ace9-51e06fcde16d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ee219d1-aca9-40c4-a5b2-a13db48b3721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc52c93f-95c2-470d-bf5d-cc85e6a37e73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87641bbb-8b4c-4d2d-8808-94526cae8d56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db324b4d-bfb3-4fe7-85a9-f4f5da667699"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "87d86278-c6c5-4dc2-8f5c-88b6371f0263",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f22a4da4-9bfe-4942-b8ae-d713e274ca28"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ae66ddc-5b02-4cf0-a438-405c3f9578bc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "aef2f8fb-e900-404e-80e5-f8e937c9f749"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8116676-3666-449e-b6e4-2236664afa4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9991d00f-a42c-402c-b111-1f0344c09e1e"
            }
          }
        ]
      },
      {
        "id": "2160e848-a447-4ad4-87c5-4a678c3fc85d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9307cc15-eccb-4128-b74f-dbf085e329d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0121964c-8c31-47e5-bd25-8815702bb290",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40c38183-e582-40c5-8940-a3d626d25c41",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8d6d7a-e8e6-4ebb-b86d-41b89906aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4743aa0-69a5-4ab0-9ff1-a02386fdf3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbb41eb-8cf5-4442-bc72-e70b809f4914",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff08195-7e64-4ae4-89e4-d180c8f99bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6d60c8f-ec95-4cbb-9941-3300595757b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b338a632-c558-4581-8cf7-a68d6c0c8181",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e32560-d6b6-4112-9877-0bc2cf309964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b98c4bb-d295-4a5e-90da-ac5cf14f10c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fd2fc28-fb34-48ab-a5c7-5e012d0fad85",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "06725345-6864-43ad-a8a4-cb5d08353bfd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ec7224-985e-45d2-a45c-4fed68839130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "482748d4-99e2-48fe-bd58-2773c01e08c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9d1bf-c7f6-47aa-9f5e-480360e8c86e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fca30a9-7697-4a63-be91-86c98f5f96ff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a70a9544-2a30-4f80-93fa-5db635e90af5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0f5feb6-cfa6-4684-9ac3-dca5a6a9c863",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f65e5424-6961-4622-a6ab-bb6b26d6f62b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ac1c0152-b219-4384-8d4e-d8b390f0665d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66364801-1da0-4f21-b34c-b037f804d8e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5fbf1fe4-579e-4fef-85d3-e086b02c0a81"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1c39ddd-d2a0-4a8d-93f0-58e192f57b4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff3bed32-7bc0-4ca7-8869-dde454f09528"
            }
          }
        ]
      },
      {
        "id": "24a30d26-ab9d-42d0-8095-c7df6356aa9f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6acda12c-1088-4e9e-9a1e-a198290775ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c00c7708-4ab7-4bee-a970-8f6dee2dd69a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "252cdd5d-c029-4e6e-90a1-400ae8b6d13d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7d311-083d-4c45-b2b5-af46fa244ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb92caa9-a6e9-4511-b98a-2dd8a30dd064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce27294-5b1e-483b-afdf-e92ebd3092ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a8aa21-b7eb-4f88-8910-288138ec5c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263d5fe0-57cc-43e0-bc7d-f6eeaf77b7d3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff94df1-1f75-45a8-925a-fd24ac21a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77416e1f-16f9-4959-add7-0bb8c89e5b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e88fc84-afe5-426e-89fb-8fa6170f7046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42f8b13c-3d46-4e8e-88d1-c8794c9cbfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52e10f7-679c-41cf-b1c0-0832b97cb052",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa92b88b-9c7c-42a1-bd0a-f5d4a8f728f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9050039-86f6-4a24-af27-ce9bb32a69c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d6f644-ee77-401b-94de-9cb334f0b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "628c197b-3b45-45ea-86b4-dfce31b9d21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1eec63-93e9-46cc-a09f-e59479d2e0f5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2640d2-88e5-4962-89b3-df1c4a3faccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4743986c-756e-4d53-bf61-9082df05f4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce96f5b-7478-457f-8215-b3b5c48825fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "212717ae-9582-4146-954a-de2ca16befce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091fd5ef-dedb-4ff0-9c07-1f7915b03262",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131dd633-bdbf-4cae-bb83-68ba234970e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e69f0d-4e14-4b00-9988-b757c1a2f652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277865ab-f354-4c08-ba74-52181d50cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52af2af-5e2a-49a5-b4d9-0cf5c83e9569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953eb60d-b993-45cc-871b-e311ed3a4c52",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f262505-2175-4210-87e5-2f9a59a847c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeeabb6-afa2-467f-aaaf-cf2f1296dd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081c62e0-c939-44ea-bbf3-508c07de9797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "091af008-7f5c-425b-808e-e153578fddd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b171f1e-1660-4433-9d4a-95074da95513",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a015a979-3321-4035-9e22-de80cb2c452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6b8072-3610-46f6-aaa8-4c33195ac560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d1c601-e716-4d99-9184-ec5d105b0b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "365aaa53-097d-4e56-8416-54613700a837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4cbf94-a6cd-4cb0-a528-7889178a2361",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b726a8-5859-4689-a5b8-6f392b0d6fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e43e4f2-a91d-45f5-b0c3-a2e8287f7c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296d1d1e-9256-4123-97dc-55f1202763da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca71c5b8-cc49-4b61-98e3-e3e5a0889543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b5368a-b96f-4ee3-b8c3-f9b91c3fb57e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc161e85-f994-4f15-8d50-52bd5f258390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611e9074-7194-4495-9aec-0948d6fa206e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac4acdb-d867-4554-b169-25c049004bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ed93dd8-80b2-4fa1-9d21-c77c099dc378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5130cb40-aab5-43ac-904b-ec2e64c3fac0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a372e7-3b5e-402e-a416-6564cfc238cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9959aaa-5cce-4c32-85ad-11b522aa74ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc384d24-2f98-48ab-9cce-94054899497c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2f404b3-d9bd-4eab-be52-79cbd973cc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57b5730-bd26-4aa4-ac7f-3bc7c4ff2153",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51f4594-e519-40bb-9d2e-46b58115528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826e832f-9bae-40ad-b041-25d076f442c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce60ad00-5f31-4157-83d1-993c2bd55eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1905848-3d19-4ae1-b08f-4c95cb4f6203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7c6c8b-874a-429c-a8d7-90de853bece5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8940797-ac3b-41ed-98ac-9e01dbaf5eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e16f957-a766-44ff-932a-76433df7cbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db6e338-abea-4ae1-8f27-f1994cd7c722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5a2306d-3ce1-4fcf-93d0-98c6d59844b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf218ca9-97f3-4af4-b148-937b3407e9db",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e82aa0-e7ef-4946-9127-d3e5fa35a1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55fe532-46e6-4d50-a49f-4c0170d4e916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99549eeb-0df6-4be0-a086-6b69d61d1be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d890af6c-69d9-4161-aa7e-a44daeb7580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d04b0f7-708d-4c43-9eb9-b03adbf93f66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0b425a-72c7-46a1-8c2a-fa18395d3634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5d5052-827c-4afb-b445-59942f32e2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7cb11b-d6f1-46fa-824b-0ae549229b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7a00263-ef87-4cd4-97c0-c06894d9de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32af3cf-15b5-4252-ac76-02d99e27907e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09210d2d-dcd4-4322-b46f-425d1f135e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94851620-45c8-4481-afc8-3abae25f5280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775d4d7a-8609-4349-8b7f-300bd3c7433d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eea7ad32-3b98-41e4-9e65-5a1cb83da175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13227d64-4464-4196-afbd-0903a1b20c11",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9353fe45-e250-4dd4-a39b-2124ddcb2776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1044c8a7-80b0-439c-8d1c-01655a0e447b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe5c3b0-e719-4257-b2e5-448cdaeaed92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90fb1606-e265-4313-83be-e9f089876ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3f3447-6b02-4e6a-8851-89a8ceb491ad",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c36836-45be-4494-9c69-b36e737a719e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf1455c-d519-42c7-a7c2-8c73cc2ddc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b200befe-0c75-47c5-977a-418bb43ac382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2822398a-c1ee-44bc-9c59-c3a542d358b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0403ff1d-9469-40c8-a3b3-3662fcc5f592",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9c769f-5b23-4fda-a5ec-a0ac115dc9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349a4ac4-48fe-4469-8c43-3f0c08932079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098f132f-18b2-463b-ba8a-a7b2a45af052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c796068a-f634-4fbf-a406-e95d374a99c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e7e22a-6c25-4f3e-b55c-1f54cb3597c7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2f25fb-2212-4d80-9196-64db5dc75967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74331cb1-e2e6-4c4c-a11c-c88077e6c65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ee8794-5336-4c08-be22-8f3bff328ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "594af28a-7bc6-4e68-b562-17557f6d3f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581b0041-14ff-4cfd-9644-e8275d130abb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6cd82b-2091-4b0b-8584-f46ab9198160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f842da-f9fc-4a0b-a97b-7ccf480fee1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2424b8ed-3297-4161-b1d1-bd130b968990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c18c515-57df-44bc-a292-90f50b69d7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b423c0-1038-454e-8416-dd8a9701bb86",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d054d7-8886-4fbd-bfbb-068bb8b81706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7d1ce9-2e84-41b1-a9f7-bac20792a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384aa3bb-483e-4de3-a1b9-2bc12c2ee7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc343ef-5f7c-4b4f-92ad-e79b6ca912b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7473ed9c-4fcd-4f86-bd8b-9588efc5aa0c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9204fea-6bc1-4e6b-96a8-60be1bbec6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ebfe5c-5642-4880-bd8c-8a90cdadfef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9679d0-a96c-41ac-a242-4e672cfda728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e12dfffe-6846-431f-8f8e-afb5d705be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad39540-dec1-46ae-ad1f-67df55f3fd4f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0567521-85da-41ec-bc1a-cb5acfaf0f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a9ca19-1e19-4e94-be32-53479d592de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82a2d34-54d2-43ae-a8de-1d93fce1fd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caed9b4a-c869-4687-9d18-b0178a0af69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be99ada-3a99-42f4-a99f-ec4f17dc7bf1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1868374c-e230-4008-a03a-cb8e387b466e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22d0a15-d830-4643-830e-91df0b0c395d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b439626-11dd-4c3e-9961-829524926565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "153a37a7-a2c6-4bb0-91b9-2efc8ac26111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ab76c8-0016-4573-895a-0605a9496e46",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9525b447-b4c7-418a-b2aa-282ae2c1e269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2652d9d-0a4c-4fd6-ac4a-bbb6415952d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d0d5f-f4d0-4e18-bc5d-2be842591737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea31a46f-7ee1-4a54-b896-15a70c8b11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4a9217-3bf4-4149-8dc6-30f8710275b9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dec612-ea8b-4075-a107-b3e887f11172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a0ceee-6376-4dc5-b731-0ba77ae6e4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd04e6a9-ac26-444c-81ef-5a101ea06832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "daedbc4a-38bb-4fff-bc63-5b4382781c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb07a0c2-8cec-4c8e-8d35-015ddd465920",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c4ce7f-5554-4a40-a046-2db174b1f6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b8c07b-26a4-4b8d-8491-b90dbc115051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a803c0-bdd2-4239-a5ce-4afb2a8c3116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a9f61b-a35c-4c56-af0d-c8e535d7e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca64a58-8670-4354-8832-3649b4523cce",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c357b9-80d6-47e9-b078-c5d02a9228d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318354e1-9283-43f5-b21e-41b9f388af82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe13a24-0b27-4d1c-a573-1aac88f5b756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "550b759b-1aa8-454d-a99b-513302af8dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c164986-f395-4606-ad45-f43ec716d327",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f24a18-0dcc-4f3e-890f-600f85749aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5ecd60-f87e-4a73-88cd-2c8790c3a26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae311f2-d0b6-400f-bcba-d3d8bfc712f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71197030-faf9-437b-8ce0-0e9507bbf68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d6fe86-baf7-457c-b55c-5a8e33fb54b0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e396053f-6ed6-47f6-917e-d724e3491a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ca33ea-7ae7-42e9-805f-577e31c53552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4436b02e-c6b2-4a9a-b68c-e92609354c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c655a2ec-14dd-42e8-8a54-8218071bcb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b0899e-d956-4c5c-af44-b33de419f256",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7e4cef-6424-429a-beb6-a1901f5a6785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0461fb3f-a909-4e4f-b82f-92e36086130a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44a83c-4b60-4e72-95b5-3eaaf95396f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb77ab04-70ee-4a6b-ae78-5ab9b5419a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df1cd35-bca6-4cb8-a155-3964e1cdeeb2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a00fd9-e80c-4899-a27d-f04e7ceed1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfda944-8678-4b87-9484-79789e721d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2361fd85-631d-45c5-9dae-b07d14848c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e620818-ba50-453c-8fc7-f0156390744f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1f896d-9108-42fa-8591-4a6deac16227",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5401d3b6-e498-416b-b853-d76a575fa294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806fc1da-de79-4f25-90f6-bac0157a1720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874fd03d-9d71-4942-a12d-d90ff19a0afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58588716-35cf-484e-8f3f-c4d3f08ef0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b73d8d8-da7d-4779-b1a3-0d284a66b23e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa981987-3642-43e4-927d-8256549f2c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a89d3a2-5e49-482d-a7a0-212bd71e5338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e1ba8-2168-4dde-8068-a042e72699e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b9e5d7-faf7-40bc-b937-b70fd1dbfac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b0af7d-2478-4de1-89c5-ad56f9886ad7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d123f4c1-0525-46b2-b2de-8d52df1f9360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f304156-4aa6-471d-b2aa-13ed556ea93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097702c8-3574-4f49-905e-3419e14affb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "622af29b-457a-438b-ae10-48ffc96939b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c68ecdc-9785-4d45-a8b2-3fb27a9020c8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad2173d-ef91-40c0-bbc4-59b77a635375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b218adc-6498-4b05-8dff-632f9b9744e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09646a83-1365-40dc-888b-0a905122af7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13b8cfc6-643a-4e60-b088-0663ea614ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63eeaf06-1dd3-4517-8784-96a46262422e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ca0d43-b928-4216-9ec6-7d67f3b484f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac505456-7d78-4ff0-8e91-602fe1d3d0d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e52537-3eb8-4851-b572-bcacfece77d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c191a812-44b7-4834-9f19-2b8c7be5b52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f8c4d0-d41e-427f-ae3a-d6516c6c0180",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e6273a-cade-4fd4-9678-dccfe2a83b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad658f24-b3d9-4e85-902c-abac9ae7ca20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1957a75-8285-4a94-8bda-5f285ac503d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b823a25-deca-47eb-9168-2129bcb0fda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530bb16a-40ce-4b33-b437-95b6b678ff4c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6882b456-a032-4883-806f-cc1dcaa29b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05d461e-406d-487e-9ac6-36710a2e1960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f85550-e79f-4a21-8ea8-c0bce78a7cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f540a1a-5a3e-455e-ac87-890fe22a26c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418ce25e-78c8-4011-a38e-44e4dd200135",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5eacb-5261-43a3-9201-37976fbea231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b294c6f-e66e-4c27-8381-bbf6b350d0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc83ed03-af2c-4539-858d-a5724fee2ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c96b000b-9f98-4571-b34d-9869dc241149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dc8280-e99d-4a46-9063-753dc0931200",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209397a1-0dd0-4999-bd92-c8913b06d396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730381d2-190d-4629-b448-9dc5800ef7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4096843-3f8b-48d4-8a16-6e5d2265c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdee2e59-7f8f-4ffd-88dc-78e4a79a2366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc80147-d926-48ab-bdd3-1bfc9f6442fd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f011c2a1-d730-4dd3-8214-e23b3bab73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d30b38-e2fa-4214-bbb3-fa26a5e8f63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ddede0-2f4d-4a33-b8bd-fbbffc8ff8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d80df7-552e-44c3-a399-212f062b57be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec5b89e-ae3d-429e-a9c6-80ee7ef6b4e9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05433b20-e26c-4109-a8db-d26538b42cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36512d9-cf6c-4577-acdb-74623632767a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0106fb95-f121-4c4e-a776-f72dc70c5aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd3548d-a1fc-4a73-ae08-727566c3a9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b06e90-1253-413c-a9ed-15d3be1877eb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209aa4e9-f6ba-42a3-93b4-46499118e86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0411d2d-ef90-4f0e-8ec0-aabf6829a924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06beddc1-334c-407c-8a1a-326640a9c301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "962ec271-016f-4ef1-b723-233fa09cf440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe52089-c363-4d98-902e-fb34922b828b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf8ba7-34b3-4d1e-8973-c117a251ff8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abba2771-9623-4f22-9307-21179f866548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ca1957-a9b0-47ae-9953-bdda1a14bd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3548c1f-5d92-48a5-a9e7-8afae2fdfdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c0cce4-9655-4681-8586-a6fa0202836d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7028bf0-0bf7-4945-ad79-d29ec97303a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d6087a-e1da-48b4-8758-4e73d9d2e4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ad7fb2-0b43-482f-a1c5-ce88c633e300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfea1db-02d8-446d-8455-644bd3f4ea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a2c768-ad51-4629-b4ed-cd25d25ae7dd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe762bcf-bd38-461e-8389-313b6feb7454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e98eb0-33cb-4d4a-9fad-aa2fae884c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d9ff3d-8828-4aa7-b41b-404ab28905fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e764773-1c54-4e39-9acd-636d934fb28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3003a9d7-08f5-401d-8b9c-1071ccabf32c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8556b0ba-f721-4211-8e1e-c52d8f6d110e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e89ed2d-0dfc-40b6-8983-b69364079e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b90cde4-f725-4d17-910c-ade33e78d882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5b6f23-7fee-4d42-ae64-9e23115de5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baadfed-1a45-47c5-bf0e-68f72ad392cf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6175c3b3-b896-4d07-9d49-7eadbf17e34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b728d4-2648-4b9b-8ab9-41ec68c4c5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7649b217-ca44-419c-9c91-564aa6a18e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3d3a60-daee-4b54-b651-2299317c9f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d18ef-d9d0-47af-88a3-27b668217895",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c3c03e-a177-4ecd-acec-85ea094559f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b4ef40-7882-4694-ba96-88384d38a6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bf67ee-2f0c-4cae-8dae-26bb0abea0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80af6c7d-c634-4bb1-9981-be4708370503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb1f046-471b-4ff1-9b90-243d457060d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c9abf8-b1f4-4d36-9870-1533722da0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd7480c-6e25-45d0-958d-89a0d21b2acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc7e07-5486-4a89-920c-db547bc98e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "47064a3d-f39a-47f6-aacd-69c79306187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f70115b-1156-42a1-8519-45ef2c05671c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a52130-dfec-4d27-a59b-4592e21ebf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009de006-d562-457d-82b2-b31e7e829311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5dc7613-19be-4084-9b6c-821a8bc772b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64081c05-c763-4ef2-b1e3-0255dc892aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfd5156-afc8-4d19-aba8-3bb38e061e65",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d1efc-31e4-4bd3-87bc-0895fcf9c67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf58d80d-7234-4cbc-95ee-7c5615190562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2747ca-3401-4233-a48a-38a6373c400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db44b8e2-4de3-4c5a-979b-d253101ac7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d6c4e8-66d0-4803-a2c1-84076fc772f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8878776d-2503-42f4-83ae-f82213483c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da30bc88-1b9d-4848-b837-ca7c991eeda7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1dedc5-bccf-4fbd-96f4-f1b954e4d2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cfcb177-fc4c-4d72-951b-e329a5187968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e2c49d-7a5a-4d14-ad83-09150e3ce5e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a92526c-e241-4866-9e39-cd76a9fe077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb82815-794e-4277-900a-628c8bc6807d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99413b0a-82b0-4721-95b1-b5617e9b1ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a0975b-a48b-4a3e-bf3a-293df0864efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ffa7e3-0fc3-4d5f-9879-d24a326cdf94",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c365b774-e41d-454a-9162-1948b9bed929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dec81ec-f60b-41bd-bb62-9b4c8b76c545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcea23ee-9f7f-4f6c-9b2f-11bc97b44cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c868b691-9dfe-45b8-8b57-db704e1eed3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e479e0d-b6b0-44f8-bb64-097206c93c34",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd3001f-3724-4643-9eb5-365fd83e5974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43f59f5-7210-4025-9b78-bf3fb14cb518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348a4f08-16d1-4e74-a8b1-bb381298c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8476345-b8ff-42bd-8d4d-481eccca335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033b553e-c82b-41e6-8b46-321a979ece2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbba322c-d8d2-4031-bbf1-0c364eed989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8242f9-0a9a-4f40-9bd4-560cb318a826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4b7163-322e-4d75-abe3-a0ec7ebc16b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "16135b7a-244d-4efe-a556-f67ffb3bc2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43c4314-9141-4551-a7c0-860149177f4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1eba1c-18f4-4f4c-81b8-b990137c5d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1268766-4e7d-4206-9ab6-8792c5c87936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f769358-48e7-40a2-8c58-28ad05f589da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5584ede7-9275-453f-85d2-f8ac1e5b8615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef801b7-af4b-49c0-9608-7a05d12413fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114990a6-8730-46a7-9781-267e91884531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de91534d-6aca-4b82-91ee-32679c7f4411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb5030-99db-4d11-8d73-2ec5e46835ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d915255-e1af-433d-92b9-9c206617f1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c554e9fd-5ff7-4961-a26a-08359628b74f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce8786f-fa16-459d-89e0-4997636906d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d837796-971c-4871-8f54-fae00d4186eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904f8abb-646e-47c2-a2b9-9ac0cef1c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e19cee37-4167-43db-8878-68138f6960a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9eccb5-b98c-4ed6-ba6c-40325ea1fd4b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dcfecf-7ed8-4e7c-a337-0bed086caa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1793f62-4c40-4d7e-8edf-4a431d5f8a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52f3607-081e-4225-80bf-4d7fdf7b390e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "da42553d-7dca-4dbc-8a4e-b7c9107f5903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a5db1-5699-4561-9dbe-4f8866b95c4d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6862df98-68a3-4ae3-94c7-3cd0ba365b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83e2b08-ba63-40cc-bf4d-f2de224dfefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8303e70-dc0f-4980-9d6c-dfa65c0fa41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "513ba2be-697b-4ede-bdf7-a050bcf4472f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcda205-2881-4e40-8317-8b35e8175b87",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba01fd19-4028-464a-8b70-a75531bba106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37089904-1e29-4729-87de-4e41e1b73000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43b38ae-b62b-42b9-bc1c-a57c18b45c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e019f38f-ec44-4904-95e3-e7f853d73c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900abbe9-ad32-43bc-b99e-200281fa8f1b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e2245-70d6-4379-8f25-73674467b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00c6c5c-41c2-4fb5-8740-d6cef4f7d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff43175-c04a-4a52-9f02-e4073fd3ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36695d85-f701-4d67-a890-6e7aa491807d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05f73c0-99d8-45cf-a464-694fbf944bf0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff6115d-5fed-4890-aae3-15165434a22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1f3075-f042-4d92-9df1-4adf8bbeccc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e244040a-8bea-4752-9efb-e2f5fbe77823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da4a3e1-41a3-4488-805f-2e96d9ad11a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313a4aab-2ef3-45e4-8783-439f22620deb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d08236-06a5-412e-a63c-784a8449c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f07de0-01ef-4561-92f1-1ee88af17707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab8dfc5-84dc-4920-9cc8-5740570e65fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a296bb6-45f9-4b07-8174-be188c00b5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa56f606-5175-47da-9c15-f8aae4526355",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc6b480-7c55-4f05-bec0-514c9389c95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9782a131-ecc0-4c99-9adc-e0a75b233df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de8f73-1a32-4b0f-b935-e5a4c5701ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b872964-e636-436c-9280-a12955a88c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed7395e-a986-4603-b818-db880fd5cafc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d7d652-4537-4137-b330-68d61a10d9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755e9da9-3de3-4ee9-8e42-c7531f06cea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2838138-cade-4c9e-9ad1-b8c45556072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c75b8d-ba38-426e-8f35-e74c2e7fa4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb1d7f-334e-4205-a1b3-a47b1017c134",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703a0bee-3ef3-435c-967b-a37eb87a156c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d075494f-4e7d-43b1-9d8b-8691ba116272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa8a317-7bdd-488f-a7e3-df9a39687084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc475cbd-c607-4f14-b166-4afbdb8a0402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137784ff-b92b-406a-8bbb-89516bb5fcb2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ac7c0d-d25a-40fd-ab91-c7b1d71f7171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf715dd-26bf-44e5-a4c9-43b5113b6c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9440b7c-1470-4de5-a406-9cb9b5a85b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "813aa5a5-4a4f-466a-8efe-f7b9036ab964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e39c9a-6841-4138-bebb-e62754a324d1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d3c906-1a5a-484b-8210-b4639963bfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8c0404-d1b9-479b-b558-2e3f454e5004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef2603-9dcc-4b85-830e-f683fa30d718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15d4d32e-d670-47ea-8ee6-f5970db850b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b6c0b9-393d-48a7-a8ca-8498344b117e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a916a3-ee54-45b7-9879-25b05917ce19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414c8105-fc30-408f-aba5-4a27680889f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2804fd-45c8-4f1f-aa41-d607c6ff6b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c974adf-9fc7-4ec9-a4c2-f945068c6e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f596e0e-3317-458a-a1ab-57ecd942530d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29600300-36e9-4737-99ff-70c31f989382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4023899a-b5c3-40c0-85ce-d89fe6f443f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd22d06-d1c3-4940-a215-bd7625eef38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24a438e6-ebca-4c9c-bc87-eee1c45379e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde4417f-dc04-4e8e-9e87-b99669272320",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc67f0a2-c863-4161-adfb-22b6924d6858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a11c13a-6045-44e5-a73e-063b5ef503f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04353415-064d-4fa1-b8fd-2f4c0d61cc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df6093d-4890-42f0-ae16-15877d42d7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede7c0c8-91a1-4e43-a9ee-22c62ccfff11",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2549c94e-c215-4a5f-881a-b17754b5224f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bddac1b-db03-471c-8176-9c679f9aed04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32408d9-9afe-48d6-a7db-f26b9c938914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4876de-c32f-46df-9481-43a295d053f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8f64eb-450c-4f02-ae31-00d5eacc9ee1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc81390d-e7c1-441d-a1d4-d4b1f4fc9fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6dd337-9596-4b31-839c-2978d177c00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea162fd9-18f3-4f00-905f-f51bf4e3d284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a601313-191e-423c-8e4e-bc61a6a8f1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ce7878-9a02-454f-bcb8-1c0482f1196c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c9f2f1-a556-4a37-917b-91b027207fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b53243b-cd2a-4d30-b0bc-254be7cd8109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e1422e-3293-4159-80d6-a88d0d7259d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d1d965-ee65-4636-8837-aea6562e3f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cae2d3-c8c4-4b71-834e-ec428ed7a2a8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1827409a-d2bc-42e0-a131-abeb6728c030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc3492b-f52e-481d-96ac-b1d6caefacba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14023835-74eb-4229-a919-7c68662d1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0366b27-a754-49c8-97d1-eb8fb427b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456d65ed-abb7-4bdb-bb54-64949781eb3b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e2bc5-6e35-42b5-8be3-4d0e07d41b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4113893-97b6-469b-a31f-0b7f3ea01ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a63a97c-3efe-4d30-8670-30bee4f46a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a98273c9-4832-4665-ae3e-1b4397b7c55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c724fb3b-cfcc-4cd7-bb8c-8c1e46c7c9e7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71c6bf1-edc9-4b1b-a7d0-8b11df5a26c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec3d1b3-76a1-4924-b77d-6016aa1232da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80ae1df-93c4-4fc8-a8a8-7d668b0e04dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2d7ae3-6e5f-47f5-9666-b9944171ef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d190d58-8cc5-4e2d-9925-266c5be0b1a7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52faeb59-9318-4156-9d16-160c14ca9cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e5cc57-cf1d-49ce-9f90-9931cead2fcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b3abf2-b77e-4fa1-84b8-3f77b707cce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe22852a-234d-4912-96d1-3753f2ba891a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd61b736-d0a6-4a49-b0e2-ddc6b2b3c30a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c3c854-a0d2-481b-91f4-f9effcb421de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465da410-1682-43f2-a1f4-486cdcd75f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19a19ae-b700-4f08-9f69-43ba5a84b216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f4296d-6a57-4b0e-ae29-499058fd4676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31544623-42f1-4ec1-abdc-b450b468965b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbef78f-1d8a-4a3d-96cf-7c3b68f0f18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e1b28b2-6055-4429-9736-0336d238bafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761f2ee3-2b0c-4402-befc-af82bc60413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "519a5ea2-2cb4-46e9-ab04-8b54c27774c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d40f3cc-4270-4fd3-b84f-b92432eed026",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f26fbc6-2282-410f-85d7-be6b5ade28db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9107ad73-18ae-478f-bfe4-fb52ffbf9e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051499c6-5918-4632-987a-66bc96cbecd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e0c806-3583-4b46-a7c6-6e2d8502ab59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d8f5cd-fdd2-4010-b6bd-1afb2272b3c3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f059fdf9-1bfb-44ba-99f2-8b531809a5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0ea91e-2b9a-4c2b-9e0f-165f6655d4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47812b0b-eb24-4907-90ce-c2414ae81001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0b64dc-a34b-4f9f-86b8-8509327c80a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae0f53-00e0-4b8d-a63c-40e72bc1b697",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1844046-a1b8-4cc3-8e05-42ef6619e7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacd32eb-8545-4a13-8826-0e23364ecf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da94774-2a5e-4255-887d-057773cbfd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7457b5f-7570-4820-91da-ec95c6414f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c70218f-c4ff-41b3-b707-7e80afe1bc41",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a0386-1e84-4bea-8fca-1a9daa770aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e8a18a-e4fe-4415-81c1-5fe9064753f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bcc1cc-6313-41fb-9cc8-1e09167af653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7224db8b-3de6-4c8d-bb70-a2bda2b23bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6932040-c312-488c-a4ca-94cb5f65da2a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a5e3e1-e1fb-4f2e-b67b-d4b38eb4e4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7dd606-113f-41bf-9099-2e3af5031857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef273acb-421d-4609-910d-91cdfc682f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed22293-5f89-4a60-86e7-483194055caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4b4d83-5db4-4ae1-8a3e-c37ed63089be",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c335204-6d1b-4f7b-b0a4-ccb4f368c28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848ecaee-8e76-42cc-b07b-bce53dd3d0e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a780bcf-8516-42f8-a3e6-6670508810ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa6be32-8658-42ab-90af-a514b551bb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83aab763-b04d-4f51-97ee-3dcf2ae48bc5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff63086e-0391-491d-b57f-2de64df31766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042a498e-611a-4871-8298-ba28e5ed1e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53914217-4e96-4d7d-9fc8-16a6d9025757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c44c4ba-9773-4dc1-9c29-2e16f4e1f0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5ff951-e576-4f25-a717-1f818340bacd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d54a4a6-fbf4-45a9-ac66-bd390f8e2a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "49a1673b-d3f5-4f94-ac46-731f955465e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e74729b-63a5-4164-8aa1-985e60046519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b279914-d316-4e13-9129-0e45ba995979"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3d614039-44b1-4164-8c74-1d4a296db327",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff2a27bb-fe60-4c3c-9a16-057e1e0a4f4e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7313f42-337b-494f-9878-71d40d944811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b042404a-dc35-4d2d-b333-f8589bb8f9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d88881-a5a7-4c5e-b5ab-53dac29ce2aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c93c1230-c579-4cf6-8e50-9b655c076d81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e56df6cc-e3b5-489e-b55c-005b66a6f546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd126a86-75b2-48e3-9981-c812d2d43132"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf6b004e-22a3-452f-911a-cca61031f088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0091dc5-3b5d-4ecd-8749-d2949635ed79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "af06e2c4-5f8b-4f72-be7f-f37b255cdcd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "83686082-83c5-48d2-91aa-a8e182c4711f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eee0cb11-7458-470d-b33f-2934ebd8630c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "026118b3-4ac0-4eee-af35-f10d094b9206"
                }
              }
            ]
          },
          {
            "id": "93071a8b-e313-4906-b5f4-39b695bd4d11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dc76bff2-9527-490d-b748-dd5bcdcb5cfe",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d30e2ac6-88f8-4447-9606-5b8c2126106f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8773912c-a6cf-4a68-912d-cbd962597662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a5fd32cc-75d9-46a1-9527-1571e8f4adfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b77df1e-044a-4a18-82f5-d0037b786e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b9f1f7-d8f7-4ce7-a7df-95f5c9bf2526"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e90c535f-4a87-43e7-b8ef-113e8c209d55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f93a441f-4c04-4fd2-b558-04d68f01b954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e1e60df5-3c00-41af-93f6-215aa2e64f36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6813c15a-a038-495c-8d58-79746e892bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ff8cffc-68ba-43cf-8719-9ab8db1f7ce1"
                    }
                  }
                ]
              },
              {
                "id": "a0a480c8-d9e9-444f-a2aa-0eca953babe3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b89dbb32-6236-4e7c-95cf-aed4b596035e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f9e2b5e-39a9-4f81-8c0d-1d51786a947b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e2c3d2a-9713-449e-8739-39f360eabf38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49c5ca4f-fdac-4db8-96a8-a038676f5c81"
                    }
                  }
                ]
              },
              {
                "id": "af6cc30b-274a-4db2-ab34-05255222b5c6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f38624b-f1ba-406a-939c-094efac8c7ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d812d34e-3148-4d3d-8edf-ba71ff64ab9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6547a2b-03e6-4bab-8528-4b691d3ffc45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8a8e43ff-d4a0-4bd0-b5b1-ee372b680448"
                    }
                  }
                ]
              },
              {
                "id": "a522ddab-91b5-4985-b1ef-e6195dcb30fc",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e4c77c6-a92a-496a-bee0-1e186dac7fdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a8a9f3-9ac3-4cdb-95b4-e9d3f5024248"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09578eda-6b3f-49d9-b989-9750e3661d40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e6b4997-d780-4cbd-b472-80d81bab9bd4"
                    }
                  }
                ]
              },
              {
                "id": "c0cbd831-98a9-41ef-9ecc-9ef10c05314d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcbe08f5-33cb-4e7c-9ca0-601c28b7ec2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30958719-b9ab-447d-b12d-2dd3635e8de0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b83e1aa7-55b8-4755-ba8f-41ebb5a43907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7f913120-b6ab-4030-b38c-b7d99b107224"
                    }
                  }
                ]
              },
              {
                "id": "a687265c-d358-482c-87d9-c39fb33b049c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c487247a-c30c-4581-809c-1df2cf6bf6d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "961b75c8-4451-486b-8bd9-425268b912a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c60d13-8096-46d8-b0f0-2409e0d4cec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93eb2e4d-eb01-46b1-977d-dbd0c6b9a1e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "26088fe2-3781-40dc-94c8-9edd77229a61",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a07eb4c2-93ad-4a3e-ab6b-24af23bf3e74"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2955355a-81ff-4a7a-beb6-c39030f35b79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c69a4604-3526-4035-a3ac-a1b988e00c8f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c33a7fdf-d37f-44a3-aaee-1c5fc0976752",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f9c9c76-ea8d-47e0-8bd8-21e78cfc3edc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3b966ac-e89c-4136-9053-e614f075285b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a68b8c-de7e-4059-9e57-ed4ceed29a16"
            }
          }
        ]
      },
      {
        "id": "83204986-2800-4a8a-8a85-dd474aa1ac76",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "91f1f8e7-eaaa-4b6e-9149-54729529448a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec957a48-31e1-4227-8120-1c901262c110",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a12b06ec-4db0-42f9-9388-a80b9e19f762",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e45054a-e649-4a60-b229-bdec3eebe38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cbd0295-678f-4b9d-9c8f-8a997e106f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7402de0b-0693-4f78-bbc0-c8c2e0bb1c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "90405bcd-77a3-4c1a-9af4-bd6d72d90455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136792a1-9792-48c0-89cf-a2f675e454d1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433baf4c-c998-4bcf-9b3d-f8fd16e76913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afa0b1-e65a-4a72-bcdc-3fb1b509023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2be8db-8ac3-4e71-a5da-a15a38645e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c4836e-84a5-4ae9-b37b-626c3ed69841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4e6761-1099-402c-96a1-79b7ce557638",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181eabe3-5d64-4cc5-911e-8e3447e1e0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97daa410-b21f-4dee-8a60-b530b031d705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735186fc-98df-418b-925e-8cba30791635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "923596b6-198d-42d5-be05-09e3c022e869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1640f8-b701-4daa-8c92-e3fb643ddd31",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9fca23-d672-4be0-bca2-e9fc22cb5a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e9517b-08ce-49e0-b69d-d141c4b2cf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bf1e7b-a81d-4af7-800f-5f4dc0a18dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4332c271-0de0-4c53-b2b8-d225ea47de2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931a5ff1-716e-4139-a63e-926965ebdab4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b451908-c018-4b3e-a12e-a42ac5b9d417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "380b2edc-ecbc-4386-b770-71918abbe736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4dabee-d9e3-4e5d-b35b-d91ea1c4f458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3fe4d5-385e-4b41-b4cb-451a04391dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfbdfc9-8d62-4020-80d7-f9425c18434b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382a4d23-4648-4e3d-bdd6-e191dead4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af769fab-9d8f-46e1-a86a-dcb47c149ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95099a1-3c25-4934-b95b-d2a4f45d7589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d543f491-e9eb-4d55-a8df-f9337d1d49fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001744fa-55f0-4dba-a009-493c1de436f0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9669f8b6-53c0-43ab-bf77-02393acab80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0b13a7-3b6c-40b3-8780-9e20916aa4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ee69b-99c2-46ac-bebe-283bf134f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a7dacb-034b-44a5-9131-e3b79e23f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa2aee-cd8c-417f-88c8-5621505794a3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65094fea-abbe-4214-a52a-ba00f5f569d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5247bb71-a924-4b15-9411-e0bc3c37de04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bef1c7b-3b55-4d1f-94ef-3d7214d0a3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13be5127-95df-4966-ad97-ff5aa85d85cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff797f56-ff52-4a81-beed-bc78b41fe829",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dc6a31-b328-433a-ba4b-25ecb74934e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286b3f4d-d8cb-49ca-b74c-8c7bb33513ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7ba782-0941-403c-b903-b2ee31e8c37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f96dbbd-cf17-4561-8b6a-5969e9e9e136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde2f41b-5519-456d-b69f-e081bb518894",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05826ff-b247-41f1-8c5d-a35434d02032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3b4efd-cba6-47d5-b22c-2f7e975e18f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577512c4-5bc6-433c-8577-2bef4c900d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "423481c4-b9dd-4d6c-97d1-086cc1cb2229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e3ed9e-8b7f-4157-9c53-7c537fdffe86",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d33bb4-6901-45d7-a77f-b28a54f6c440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efeb9ad3-24b1-414f-b0ff-8833627713ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6df71ef-7594-4eaf-8977-4ffc3776630f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4af6f159-8931-44c7-bde1-90a343c2b5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631e6e61-4c4f-45c0-9c36-65e45d1353d8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b97b789-9a4f-4699-9ece-54c61f37ce98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ad6b79-b2dc-40d1-b928-22667d332d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88596520-5af5-4c1a-b2d3-5477f1e0fb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "48306fc2-ff91-4fa7-ac7b-5016e2595cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded14d37-4845-42f7-8689-99cbab185550",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf61326-d90f-4887-8fd0-f5dbdbfdb7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85ec672-c99f-4ae0-a949-e30b0e0de2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b728c54a-96e9-4bd4-b94d-90c65550a77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec69be6-ec04-4013-9eb0-f576aaf76b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0044b60a-bc75-4d68-a38c-584f62055ecb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d913e040-394c-487e-bcc1-429e420e4def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16689a3-41b9-439e-bd11-5ac05d1d31e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149a409c-20db-47f9-8b42-72190a6d72b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c944ade5-c901-4f4e-95b9-d9406c21c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36a155b-11fe-425c-9b4b-b36b4bf792f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b374d4c0-8af1-41a7-b0b7-7aa51ecc8e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb45ee2-891a-4360-ac95-e918da3eb6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e0b30-af1a-4111-b1c8-e0ff4ed7f177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a2a760-e46d-43a6-a114-1b88122dd3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd641678-b47e-40b7-8f67-6cc98e0973ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35a38d-1c3f-41d3-b04c-a5cad9f8fe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f0943d-30f7-463a-9a37-3e4af4db9bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b33b67b-6d39-4ea1-9c74-abd017888f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0bedfd-55b0-4480-8e0a-5543ce14a9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7ae2a0-2b65-4a26-b1a0-3b86fd15ee71",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a87bc0-cc0b-474c-9123-ac83f5eada08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb735059-7bbe-4d63-9a2e-061b52cf8737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22d2be5-98ca-42b4-8fbe-f0fa4276b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "df8127ec-18a6-430f-8041-b32eec36cf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5b36a4-261e-4efc-a9cb-0514bc539257",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d32ce05-8120-45bf-b98d-754730397439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37333ad-ca02-4e64-80c4-6110a604ef48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812bd981-672c-4d82-844a-a23c6e36c6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6900898b-5e40-46c8-8c49-d86e931df1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d939fb4-618a-46f4-9df1-58fe9ad5d72b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "640c0b6c-51ec-4fc4-92d2-2e6751d37634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5710fb2-d1c4-420d-a999-6969efebe995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a74f8b-ad95-4d8b-9959-8f6b10864c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce6929a-b115-4b5a-a218-9cde1b95f8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986fc62c-95b7-440a-b88d-7ac500b16da7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0462aef-27ff-4f16-a65f-8bfc377f6e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ddb154-f3c7-40d2-8cb1-a529d530ac27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6b88b7-839f-47fc-a96e-5d5b8afddbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f32d6b9-3dfe-4def-83c0-d526424b2703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42cd0245-d85b-4159-bf4b-05c788fb581d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4de563-6c0e-4ea6-b488-6bb92a6f3df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747f2e44-bf07-4b6e-86a5-55da39278278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321ebca-5a89-42e2-ba19-023b043c38b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e38f704-f22e-460f-8c58-e16daebeeaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc646f93-01a8-43e3-902f-a50a7a4e24f1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aeebaa-3898-48b3-bc10-703ea50422ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22ddde9-8817-46d6-af30-70ebe121806d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fdb21f-0d9b-4340-8c2f-f20f1d755cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a41cc3a-fd12-49ce-95d6-11200ed0a464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f34c82-d7e9-4a77-87e8-baab7e9e16c8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6e10d4-b734-4fe8-9566-b44cab9743d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a171c0-f01a-48e7-b731-124385f17c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e561054-005b-44a8-aedd-2fbc57bf62c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fba4476-29ba-48ca-aaaa-403c204f1ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1912e6c8-d5e1-4f70-8d5e-dd6d3aed0ea8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099fc4f6-ce4b-45d5-8d25-1f00d69e4642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178b3a86-bed2-4e94-96cd-c78d0a631f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc008b0-5896-4d4a-a63c-a13b3fabff7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f27f474-6ed9-4f65-af5e-5fe85509ac31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b67564b-8b3c-4d63-8402-e80d985d9a6b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b4822e-608c-4541-9df2-5abb57f04b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79182bdf-088c-453f-a0b3-e2d5917a21b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835c78f8-f21f-46fb-9776-e6a7e49eda0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d27848d-0194-47ec-8eb1-c61eddd4d77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147d14d9-d408-4411-89da-4427d744f3a2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84edafc-f913-4f39-83a5-9a3b83224d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82159064-d475-431a-a517-98564877731a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a91c18-5717-49ee-abd3-7ded8e9c3866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "672e546e-cd7b-4340-b0da-1404251fd826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f350b2-5827-4865-971c-628e034fff0a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33d728d-2913-4c98-976f-f0d3798f0de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1513bcf1-74ef-4beb-8de9-83a92976071d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02131a-55ca-4d30-89da-4dec170692cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555c1ebb-613a-46bc-ab93-cc510b27f2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4527408e-b97b-46f0-9e6f-6bb1bcee6c5a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fb2655-5eac-4915-9d20-d98653353ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ebcd14-0dc4-41fd-bf28-dbf924903c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2272f0f7-beb5-472b-9e84-42d3ae86c57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "861eb0a3-082e-47a6-bff0-fba2bb3763bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d9bdf5-f26a-40b3-93de-a225658b7a15",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc392c9c-52a5-4531-b111-cb3284643ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63f6b64-c75a-4e73-b897-4029f47ecc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372c3a5-bab0-4b53-b278-4ef2fe95b9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d87cef-9d77-4af4-9666-0e45bb47cc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df70793a-01ce-41db-a119-def92e06eabd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76112e92-ee48-44ff-a58d-cc9c070512f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b6f1d3-6d3a-41ff-a10a-be756c1680d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c059696-761d-475b-a5f3-8c1ed8adc3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2319816c-3f8c-4612-8fd3-d6b38a02c442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09c5d3-567d-4bd6-97d8-9ca814fcc0ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ebdc41-e037-4c6e-a67b-e340d69c68f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c885d81-0a7c-4625-aade-b039c7dd8079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59817653-1e4f-4aaf-8c57-d26d79be8c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac4dbbb-d266-4291-a21e-018b7d079f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2771d07-7123-4d16-9923-a764676be495",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ee07a-a221-49cb-99f0-27bd3a0695a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cbf023-02c7-443d-897d-e6e6f423a005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7568d0fd-d8dd-45f6-95cf-4090e48a5ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f9ed782-ee61-4ec9-943c-325bd20e38bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2df5208-d35c-46ba-93f9-76b681303cd5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81ab259b-06d3-498d-b54e-ccf44e0e4847",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7696da-caab-4f04-b948-476d613910af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cf182f62-946b-4f96-8ad0-45d01e3d5cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d23198-c55a-40b9-b4e5-1293a7448d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e4474d4-6cb2-47be-97ce-5a2a7518d95a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b88104-2da0-4912-bea3-d36ed3e255fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aa914c8-bc30-4221-8828-010f40ede2e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b4814b3-45b8-4dcd-9e5d-03bf397b9e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d8a7a55-5fcd-46c1-b98e-cb325fd7a4a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25ee1ba9-1fcf-465e-a4ea-69939b00c5a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7139d328-78e9-4de4-bebc-30b239d37c2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bc15587-c5b9-4e65-8fa7-c7f900c50dbe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1628f188-ec60-4d45-af24-dc0954e7afe7"
            }
          }
        ]
      },
      {
        "id": "896b3ee0-e999-4ee3-893b-dbf8b8b21816",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8f8b92ed-0989-478c-ba0b-9deda7e715e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9a6d10b-9760-4ec3-bab5-e1a7db15a754",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a1000a7-c2c8-4565-bb80-f1cc992d610d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae01b49-0f9a-4b37-9cf3-925420158b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7217cc-257d-4783-bee7-f0d31f415acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48948d9-84a9-4b87-b468-f556f2322acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67f00cc-cc5a-40e0-b85b-4e3bddfe799b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fa2921-6f87-4b1d-a137-a0a97dea830a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0528073c-5b17-4321-92f2-17591012472c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbf2a6c-6f30-4196-9c5b-c91cce7d6a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdaa26c-859d-4cdc-a022-bbfece9049c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37836a32-92e2-4cc5-b5b3-5dcfa65ee5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d413272c-9c22-4b15-9cb7-49df76d0ca80",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ddc2a8-ef1c-4ede-bdf9-8f4eb4316412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa35027-f649-4e23-bed6-a684db7d5cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded8e5d4-4f26-47ac-9510-5432ac02646e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe148e5d-a528-46ac-b047-07e2e902e2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0fc0d0-a51e-4116-ac5f-51915622fdc4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedecf32-a9d8-48e0-aa46-993e4fd39ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca6e8fc-9062-43ee-b53e-7fb6dcbf0aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22af2f60-f859-4622-af67-cd702dd3096a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4cde04-2a42-4c9f-8175-4bc8526b888a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7002637e-aab5-4556-8f69-4b833d9dccea",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f649b7fd-4166-4606-9610-235bfea2486c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a5aa72-e3a4-455d-b8b2-e3e41a71e990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a619ad-6312-4854-8004-ac62006c295a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2990f9fe-0e4d-436b-9eda-07178c6771b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4640a9c5-6fe2-4985-8244-ea6b9f9bda2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e71642-7a4e-4892-b8e6-bb0baf5a8da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "946d6115-5884-498f-a1c8-9ca4cab9361f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c274a8-42f5-4d06-8546-4862d1d2808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e7acd7-015b-4705-b520-1c09191c6a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc054a-a04e-4a1b-8b57-9a124209ee27",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39cb8ae-1ec3-462d-9d79-359de3ac529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6506a375-3124-46e4-851d-3c209fb14536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db764157-dec1-4619-9398-6d51c903ad77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "768d7ba6-9c9a-4de3-9cb2-2732a7fdb20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a437544e-b789-4eae-977e-adb3a45152c4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319db3f4-de6d-4f39-981f-065310e7fdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0975b9-0e9f-4f66-b63e-e39266e2f0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2af046-5fa0-4135-98d6-527880bbc222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ccacd9-ea81-45ad-8112-d4d113925547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa14a89-2d89-45e1-b3cb-c0c1d693bd4c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a508ee-efa4-40c7-9a4c-8075300fe86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e14a6d7-ad52-492c-8023-8053e512bc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89857083-d294-4c28-8456-1eeb3e859950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eafdfa7-8a41-4963-8e85-7ecbfc47929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90affea9-e2cc-4cee-b3f6-105e83ab85f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6599fe-32d2-4acd-8646-84048462cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa69938-05c0-4d32-98a2-c966568b58be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305952a8-60b8-4915-b00e-9ad843b9ebd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15719d2f-5648-4f70-b9d7-18d0c2f7ddad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2857b51-5d69-451a-b874-35560f4c600f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07a23f-4525-493a-b428-963e3946c34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eae4271-2fab-4f2b-8190-d180ca783ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75eb7c82-63c6-4806-a207-6fa554d81ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "254ef624-8c0c-49c7-b16b-f2da502a844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebc5c6b-aa16-4cf7-b004-45c2a60dfe7d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf16d7fb-d4e9-4800-91b1-7b35ea56b60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7bc70e-5103-4387-a9ef-d78fd802f748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0112349-74ae-4d88-a343-3112b7de6fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89a88abf-1a24-42ae-a6ff-244b892a1271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687b4845-a8d6-401b-8227-698321370588",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e41f0c5-a93b-4569-872f-1122a822e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20260daa-f898-49af-a350-decd13d402f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539a5026-cd4e-493a-9cb0-f71d46ed09aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76661e2b-e192-4523-b1ae-8ada5e80081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e986049-edbd-4071-becb-c4487f21cb74",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3e64b0-2213-47f8-a783-65a74fe56393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6def4876-37e0-4cb9-8bbe-40b3a0fd37b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3093b746-e691-4943-af90-30e8d989815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "73f9c2a4-2f06-4e57-92c8-0025343e27e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c917762-8461-414f-bfd6-539f84d1bf8f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae03cf6f-fc62-4fe7-850e-81ee78356639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294012f8-4bc8-4dec-8e92-8edbb61509be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ecd211-faaa-4aa3-b17a-65cb69edbcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd783d1c-f300-4928-85ff-a9ba5371bf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013a5724-3cee-4866-b8c8-785c9f9450fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f498594-c065-4e4c-8357-52fa0e68b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbeb062-b899-487c-aeda-dd2bcb592461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83babd1-c587-4b6f-ac93-a4c3c78288ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "56c68a6c-c048-443f-afd2-063d70cb3ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870c5d7d-04cd-45ec-94e4-0c24392f729e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c659f1de-0902-4e08-9fc4-88cba200bb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42d24aa-9639-43f4-a0ef-efc676e86e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64a36cb-9f7c-42a8-b8eb-e7d767c067c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f595446e-4b45-4b01-8844-a88ad622c695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a09e2c-e9a6-48b2-a5c1-d869a44bdef2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fb5369-e202-4285-9e2a-b5fdcd0ce685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f852f0a6-39dc-4e09-90da-08e03d94b833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef39ec85-5cbf-4393-8cfd-553b49771ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b7b085-212c-4bf1-8d15-5e8a9966e2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4246f30c-5136-4f80-838e-7da1d20fbedf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e8e4fd-3c9c-4b7e-bf94-b3954b152d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938138d2-1fe2-4d42-91df-b70345fc78f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb514623-c7b8-48c0-a414-1ec605dcdb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13910d99-cdc5-4be9-8926-541490926807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7161a84-10b2-4f20-b95b-f00eb7968c1f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b2f91a-aaba-4784-945b-96cd439ff865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60707b1-1ba8-4de7-9610-cc48030c3781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a850c9b-ea51-4d29-a941-1c2e8ecd1d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747f7bbf-5c9c-4973-b1b5-c346f7dd301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ae0465-333e-447d-8fb6-fafa2cf3fdd9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9dbf65-96a6-413d-8104-8aa88bf1b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ef0296-1c13-427a-960f-2b6d0eb920ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2747ac5a-651b-4fe4-ae28-425b39047df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1da1683e-df9c-46c6-a663-43694973fc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419f47be-a758-4269-8294-e4f73a766120",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea5c1da-f560-431d-a2e0-6e0ec604ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b452188-bd6f-44a6-bb0f-a2151f8a51bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c929d85-123f-4bf5-a3dc-d72818dfb064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebd5075-12a4-429c-86df-783343bcf000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13201ea3-ea17-41c1-87d4-c234933b1112",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57f62f0-cdc9-4497-b856-d9fc1dca91cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d53b19d-8d74-45c4-bbd0-6309d4f966ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf799c4-fcf5-432d-94ac-d180abd7f655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "982fc735-b0aa-4b4a-9580-a3cf2e3f6560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3bbe90-0fd6-4abd-9daf-f93a6d4be442",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbba382-a69d-40cf-8ac8-acdb02c4d72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc94f895-44eb-4733-9324-be7340b65257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5cdb66-1cde-4bf3-b2c0-273f20315df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ef0f35-83a7-4f44-9512-c3988a44e5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251c8ecf-dedf-4127-8950-2300c58e7534",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be4a9f2-0b52-4943-93ac-402cde7681df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5c61ad-9e2e-4c70-8e33-2b65c9cb480b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2acd3f-264b-4d80-abee-b1537e23da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90643590-e399-4576-855e-285ac52ad6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf47b864-e01c-48e2-9d97-41a96f7c0cde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06969a97-5e48-49e7-9205-164902799dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1875dd97-37e6-416a-96f0-7c5a3dd34fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7e6e11-5ccc-4667-b28c-b05415683fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02165296-8930-4261-8e46-f0fe908c955f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c4ad57-8fed-4445-ac08-8e423668884c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff555e3-0a5d-470f-9ce2-4d01e3e21e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7f5c4d-3d84-4ed5-af4c-cbac6a73e318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e48fe99-0916-4088-b282-cea9461ce3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26389f32-2162-4ed8-943e-d7625ba5a388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dcb858-1e75-4b00-a5a4-b01893e6a6f6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd2fd3-386b-4fa2-9985-5a1ca801eeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5725bb2a-b5d2-4b55-ad81-b567b65264c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214e7723-388b-4303-bf6c-ad3c8daae5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02269dae-7d64-4624-b1db-59271528c016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94505f15-be28-4bf9-9220-8df0fb53100a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26880ef1-1631-45eb-a9b6-b219bc51fe2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3c0ad-588d-439a-be82-6b70e74c4afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076bb07d-b736-459f-8635-a53eaa10666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b65ffb-0b3a-48ef-82d5-641cb8fe1bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f280c3-cb67-474d-a815-fe662f9154b3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d1c114-df75-4e4a-afdc-58894aa829d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd79f6c3-d4c5-4ce6-aca6-d565f0da1a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2695a1dc-27d9-493d-935c-d1119a1fa942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a7af95-72da-4208-a475-e889a224574f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08034738-fe95-489d-a269-bfdad63c11d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09cb186-daa3-4476-a8ac-ba35617013b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9e70fb-29e5-485f-81e7-026b0cc9a260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b891ac-bee2-49bd-9533-5cfe826adaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0f910f-0407-4916-a190-bc7789da4e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b2a784-3887-4673-afe8-ced5682abccc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b565b97-b3df-4eb7-876d-685d3c8c553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a34d9b-ca82-4d10-9525-b94f76009de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f3dcac-67ff-43e5-b81a-0af79a38c2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05e501f-1e64-41e6-bd36-b2d3102285ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fafd56-5806-4bf3-ac4d-05e550d10f8b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcd61d8-bfb1-44f3-97d0-64d98c0012f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c694e2f-8f21-423c-93df-8c3643fe81bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598e7ce4-83f5-4386-9218-e6d3c0914274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f2034-abe5-4fd9-9217-68ab91f59836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445adb2d-11e8-4be8-adeb-14d95cda6084",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed564e-826f-4e8c-b78f-72dae647afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fbfff9-3f34-46e8-bf5c-c36d9caab6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4016afbf-a7df-48ee-85cb-eafdea1d9206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0027439-1101-4d59-95e3-208ae7c373f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfec45c-8350-4786-b306-2b06c9feb6fd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7efba26-1558-4f7b-9722-01c8e3897c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa292a41-5551-43d5-84c5-5ab41fd725af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00af7d-04d3-4707-b46d-f21bd4c5f8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f7db8d-34c6-42ed-9940-e67042ba4b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae96f27-ef6c-4bbe-835c-31ec0d5d678f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c7191f-e4b8-43ca-8f63-f23e8c5d7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9ba92b-a22c-4619-b587-7fa76a561d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19246935-c618-4fe9-b736-7692fada7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8244a9b-84bf-49e5-9fb8-b85a1cb06cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afcba53-59a9-4457-81c9-2de63a0a8b6a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e87ff5-6cde-4502-8161-758192409e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b5b4ee-e559-4a9a-bfb7-d220ded747f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7567c76e-fc78-46c4-b7de-f046c71c6ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be60d41c-6818-49ad-bbcf-6735d9f09727"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "311423d7-7701-468d-a3b1-c5f8991ac1e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a84f8aba-3e03-4eed-8f97-c2e8136c7bf0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20da5cae-f37b-4226-b613-65ad899987fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f253b6-4216-4910-bb24-dac26a78eb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057947ab-a656-48fd-bd79-013cbbe80930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a6a514-7187-43c9-9f7b-51415396f201"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b648c208-d637-47ca-bcbd-3e0f237a66e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20e0db51-3358-4d05-9a5f-fb181df58f8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6caaa24-528b-4211-b72b-f9d333abc4ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e125f9-4fdb-4ff6-8b70-0f854c10c788"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d398897-5aed-49e0-8284-c909fb1157b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4cad224c-510f-42c4-bd9f-f7eec7466549"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "261e7b5d-68e0-42d2-a2d2-dd684607947a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae909d76-7a1f-488a-a677-8e9c3b3f7334"
            }
          }
        ]
      },
      {
        "id": "6040f1d6-e781-4f17-adb7-595c181afcf0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b21e4403-5758-4f6d-bd72-6be456afe14c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ab9f908-8822-48d7-bf08-99cfd3e9dfa1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01af953d-5471-4421-b6ef-db78609d73cb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bc0c91-3371-48d6-8880-6f3a46034795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f22af1-9b66-45fc-96aa-ac9dcffe5ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd624cd-51e2-4995-bf6d-dd5134c75a5c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b266290a-b9cf-4b78-96cb-ad2a598bf201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9814ac-69a4-46af-8190-5428b0f089c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b964c49-85cc-472e-bcfd-926f004680ce",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1190b8c3-aa6a-4a48-99f6-25125cb01b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e7dcf96-5f38-4099-aa14-2a64f8c3c4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d29235-500e-4b2e-82c9-6a726ecf01d7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73458262-259b-49ac-bc1b-4472608e4129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520a289a-3e19-4998-93cf-6f264634aecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a3505d-e800-4ab4-a681-1fbad0055300",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585d23da-dfa6-44df-b7df-454c02b53b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a64c16-25f8-451c-8b37-fb9fa18a42be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2dce9c-0479-4246-a79b-2e79f2d7a387",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d1129-44bf-4e7c-95d1-319fa8d17356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd9f8b4-158d-40b8-956d-14df4705cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c13ebd-94b1-499b-8bc6-b48c9b6349c7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab61f8f9-6ba6-4bbb-a16d-2f4ad2cd6dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7776236c-e37c-448e-91f7-c8ea56f21b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0b9402-9dce-4f2a-bec2-5cd4ea2b1afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f64b83ae-0d8d-47ec-bab2-d38841489164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b89ba0-6363-446a-ab0e-04746256f2ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7910c8-0a6d-4701-834c-96c5f86cd023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f651bcf-77cd-4d2d-8da0-73c003c2290f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10316620-e8e2-40d2-a817-b3d778ade4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be8e5ff-50ec-4c70-bcd9-73103c0fe7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f7b7d3-1131-481d-93b4-9506e5405b9c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7577e6dc-1ec0-47ea-bdd3-93048d9a0c33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bb58e8-a96f-40cc-b5ae-b921d02f4419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105bd1d3-f23e-4428-b84c-f9e339169614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887828b3-fefe-46a5-975c-fcfc0d585575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017e6a70-171e-4f6c-9a58-329f250ed96e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8676becf-8827-44fa-9c45-fee004b6751c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9516ceb-0eb3-48ae-9e54-d47ba3cc98ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd79e03-6196-4470-aa12-67e87c43221c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0355a86c-6656-414e-bfa6-95c0688fb0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6b9ec5-85f4-432e-b996-321517a7eec4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e563be57-04c9-4f5f-867e-8549081f4923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be52875-d465-4f50-818f-dfed2fbf9026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e4d870-8dab-45a8-909f-e61aec3917a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e75380b-6397-4f51-9a4c-11ddf9a19960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319dbe2b-72d6-4206-9087-bb4c7fbf6647",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca52e3d-1e8f-4013-a3be-c0b23cd1345a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659de47b-1661-4490-a60d-3ec1ead6b62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11f17f1-c94f-40d1-98de-e8bc8a6a6df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571c9161-cfc1-46e6-ae62-8f4915853dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2391c57-8c31-4c94-87a0-abc5213eae1f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd511673-6d4d-41c7-9cd2-4f9ebd2ba35b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e908b5-521c-4894-8cae-c2b065d41ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd039801-bbf5-4330-a5d2-aba8fd747158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd48c6-cd59-4511-b884-7364e305cb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3ab097-9b0f-404a-904d-2e04f07773fa",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7645eb0-1cc1-4568-88cb-ede02581b3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424bbd8f-951d-4fb2-a20a-2ef3feda9a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03989759-7802-4fcf-bcc2-1b61c1647883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25824c08-6969-4b9f-92f8-b5de9d89f221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477373ca-d7dd-4a99-9df7-9f5b109bf60c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261ee177-7e11-488f-8b03-03560f5adc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c951c8b-c60a-4b04-a6a1-215163b2ea0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25edd76c-45d7-4482-acc6-d08dbf9b34a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dd3d90-2653-4c44-8d7f-4cf256089c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b1208a-98a8-473a-afb6-4bc4c83eb13e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db38b4a0-1a1b-42ce-9744-1e4f50bb5016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed667bdd-f36f-4350-bbb3-affc5cb2f6bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2ff38-bdd0-460e-b4d1-fe53beda2d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267129c1-ffb5-4974-92ec-98e033cad317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47289a5a-b451-474f-9493-1fe1b75164f6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d826048-9bf2-49a3-bcb6-4f0e7e733e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f727e09-3422-457b-9b9c-0441ac8a8e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e73a6d-db3b-4f06-8098-70c9561a4533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e0173-c4fd-4d81-949e-abca3c4e6226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f8629-c87a-45bf-9c00-eac4701bd91d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787ce34b-c753-4270-9b20-fe7396a067a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2120282a-34f5-445e-86c7-fc6f2ec51cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030db705-8e47-49fa-a623-df40d98d0c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c601ef1f-0d65-4545-a8c7-c45616d30baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c7d027-230a-42a3-a0b2-438576ec7eba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd36fe1-dfc1-4fa5-b8da-6b6b5058e118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca2aa54-f5da-438a-bc1d-f183346a9e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73985785-b051-484e-993b-2304f1f51fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829d297d-9065-47b6-bdad-0c3f2243ddb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2b95a7-b807-46fe-9137-87424f5f5608",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4069ef81-9dd6-49d9-bc54-8b354c5a345d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d848c7e-42e0-4ddb-ae30-a684bba1cbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c730aa-3a1b-4486-945c-77baa4a17eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b23a48e-199e-4293-ae7e-36bdf846aeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b5b15c-ad3f-4367-92b5-91e5b3974e0c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77f51cf-ddb6-4878-a5d2-039825377267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8891d86d-90e8-4559-9eb4-b4c75cb8cc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b43b569-8430-484f-bfda-b5f4e8201b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837e6239-a5f1-49ba-9d3b-8f378b7ad21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bc5397-1363-46d9-8556-1b87b6b907fd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb85f15-a128-41f4-a5c5-f32baa338d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2421f91-716b-4dd6-a538-74323cc5f1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e436d4a-5253-466f-a31e-84f8b3d5b22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b012f48-4775-4e16-97d0-5087f068a527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50480c7-7ef0-4b1a-afc3-1281e796d26c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cedbc5-7718-42dc-a58d-5c66d9dbf512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1695ba-b8cc-4891-b2b3-a6555bb1754c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2bf731e-b1cc-4ee6-95fa-1c866eee70d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9aca87-6907-4b5f-82c3-be6bbd109253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4673ece8-58bc-4526-bd3e-72acfa8575c1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bac56b-ed63-41cd-b115-db69cfac9bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617160ef-bbbb-4660-938f-cb9b4248a908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d69b11-92d6-44d0-af5d-99401ffa62fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cdd1c6-5ff7-4813-b2db-a0f1e5d0f70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbc1a7b-2e6b-4ae9-8640-c6e4ed05dab5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3a47d1-ff53-4b86-b681-1a24ab42c8bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9778a9a-dcc9-4fbb-9115-b7cd63c3dc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61492984-2b8e-4b42-bb17-f3085bdffca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb2f149-390d-4f93-b93c-3b42cc55675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef51870-5ab2-450b-aef0-a7d74363c9cb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abb2290-ea3e-4932-a2f4-1d55358c1b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03e0dc4f-9add-43b8-ae8d-02d90b3b58da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0c4485-b1e8-4acf-9fcd-515d05dd3421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898a8002-bfdc-4420-adbf-ff9ce9b1888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3623fcf9-3afd-4cd0-b155-6c8df1c5eeeb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525dbec2-8b0a-4358-ad6b-d9e561de0fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3a7983d-8a49-4fb9-a7b1-14cfddf5322c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9390b307-e2e2-4d01-9d91-00c6e5e1edb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c451624-411c-4a35-9483-f74abb2a3f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb14e24-313a-43f3-ae1f-b524cda35b1b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f170c0-0318-49ab-9d45-c260babda30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d19995-01e4-4803-8a68-b6dfd0ce0e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b49f2b7-d287-4f03-a2dc-92d47c0ad9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7034ab-e995-4f5d-992b-c4ad608a83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34b66ad-8588-4610-bd08-eac178e2abfe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231552a5-c122-4900-95f9-73507765ef9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58df2e2b-faef-454a-8721-a82dcf9cd44a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e3886a-1f5c-4637-acc7-ea9704abcbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3866a5f9-bfaf-4fb8-99f2-5666de3b7b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0346e372-b1a0-4bc4-a151-3366d346c159",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5cd060-e5b3-489c-9486-f7ccc953fcaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da1c6a7-da99-4355-a9ac-a1a8a0d7f4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f405788-1574-4712-a548-60ed4ad534eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fd9c20-6c19-4fd5-a183-bad7e6c1987a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d98ae57-47f7-4599-8784-a72cde171f1a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99935cd6-07c4-4638-ac04-e62157647ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e662cf-8fb6-49fb-8dd5-b1dcb86eae5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf1fe76-60d9-4a91-a76a-5a05aec9ffa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547165a9-ab2b-470d-8a62-bbc94f585bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8aaad9f-7127-4e20-9daf-7c8d3c4781fb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed48807a-085b-444d-b655-8c7f59bd9a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a555b1-d91d-44ac-8881-0659a5a87c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617766f1-3bee-45a1-aca5-7b45cd9adb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240a18d0-b107-4da9-8e18-369cd5963a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22687107-8086-4051-869c-d1872816ebc7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f717c8f-b332-4247-a4e6-93c98fddb4ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b0919e-78d6-426c-8c49-1b0e0171b5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f96e21d-3522-49f4-8cf2-2b72c4666307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2638689a-78a5-4146-8eaa-b2995079c193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e22b1c2d-aba1-4538-9365-f4f38b6e496b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87690fba-d43b-45b9-a050-ea0928ce59b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd96f509-4001-454c-97bd-d5e76ddb787e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1d0e95-627f-4893-bfff-3801253148b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b90616-f4ba-44ae-90b7-2c58eeca9dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaaf8b0-9ecb-4802-a186-732ef3c590bf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09affcf5-095b-47a6-b5d4-027d653de168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0419a73a-37b0-4b69-b152-96fc8da0de21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38481138-8e6d-45b3-8ce1-91e6504fb010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60045a43-fce8-4b4e-b289-c40af79db730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea15b24c-89a5-4e55-81c7-ce04618ad10c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac0cdd7-2538-4e61-aa51-b14a8e3aad1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1abaea4e-f116-4fd1-9661-92dc9e7201ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98df287d-a87d-4f01-b96c-62ae9bb711f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc71c714-1420-4b9b-96b3-7a9ceeaf7b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011053e7-3e03-40e4-9e0d-312b26b0c91f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabda48f-cc8a-4df8-84e0-309dc8c3a495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733cca7b-a314-45c1-8856-b0a6a1c1fdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4710f5e-5d1a-4f65-9b68-ca9537465ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea52726e-e684-4a31-98d8-919c1da7b994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03f7ffd-9ca0-4efc-bcd4-1b75dc9f4a34",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae88bd4-9423-4ac2-a1fa-746477d45647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd100bd3-8e27-408f-98ed-5c6decd17dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8138a96e-87a7-4fe4-aba4-d7f7662a38d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6385889f-07bf-4775-aa09-d2e4cc3b9dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f412af8-759c-48da-978e-a19eee4b385f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3055da8-940e-40d9-a1cf-2b65a5f5fda3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd97b3-ef88-4e77-8e77-37e8e1c05624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7569792-aae5-489c-9ba8-c09d3d1b162b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc24bd3-5ef7-45ea-8b0f-b239e41531b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a084b8-c1e4-407b-a624-72a035a341b6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd26d14-8627-40c9-b095-4f92928cd3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5e70aa-386e-415c-8809-461397dcfb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0394a82e-c640-4662-b52f-c3e21a649e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e2fee9-d1a8-4ebf-b5f4-325d645893c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b474fe2c-effa-4cbc-88cb-505dbe263f1d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21709484-376b-4d56-9e4d-5f7d7fc19d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078c7a84-cf5d-4741-95b7-940a8bb486d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9013586b-c3c4-4940-b1ef-9c430dc502e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fe9c6c-17a9-4d65-b958-621ed9dfdacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6f75b7-b209-4ca8-9563-8eed7a4ab9bc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb382f27-d419-4b92-a0a3-5b73a29f463a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e104478a-887c-4ecf-81f7-8c01fecbc3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008a50e5-228f-4c15-af4e-4803c0fed6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ffbddd-605a-4c95-9558-493253d82f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3919197-9cdc-4ada-ac85-984b35c38893",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa184861-fa78-4ec4-9465-19f5b9dab319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81d00e1-4231-4e68-b894-066eb9260458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac3bc77-d3f1-49a8-9d8c-83a63f7b174a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff06fdd4-a861-40f9-830d-92292e7d9e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2f8a09-eaf1-4382-953a-935f47703ad6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2ef676-05fa-4b20-90cd-60f940e14ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b07eda-63cc-4b90-9500-c18dab6ca69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca38c7e-0e4e-41b6-8680-cd5ca85c0ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64d0e09-f072-4d8c-9e9b-f04df552ae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba448b7-0700-4da6-8763-d027c54e16d6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d4b8e3-cfa1-479c-aabe-df77e479a600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952f31ca-a37d-4084-a4ee-6b4c7bb844c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d52091-fe58-4370-92af-f863b95e4d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca63eba-3d6c-4a25-9410-bd9e7647f2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa84de9e-e808-4e2e-9f9c-4f04f355efc2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea54e64-dd4b-428e-a6a0-9eb2abdd8f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07594d6-94ad-4076-b57e-3d5b40b41c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b3aa42-1ed8-4317-8711-85eac2d64551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba9a5f0-dfd7-4afc-b124-9c3374e95a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3360b52-93d7-4deb-b660-fb4c6a471809",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b65584-5426-40cf-9376-a5d903feaeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2320bf-6c85-409b-9b97-1606d5441e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfc4399-bd64-4871-9afa-8958dbb777ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7709c69a-438b-4d07-8d8a-8a3385f6c1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7246c4ef-a4c1-4a3f-aa7c-c6f3076ef7c3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006d7336-3e45-4827-b013-980b28574900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b025be3c-0092-4d89-b6ed-9f5aa2a70bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03092762-c4a1-4b32-84aa-ccffe5fdbcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c078d6-09e3-4934-92a3-e949beb38211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925fd4a9-db6e-4014-a8c0-2bd9a3ad09ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f23203-9fbc-4b57-bbb0-7477bb6677af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48ed538-9f7f-479e-b776-d8da950a7dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85193038-d2c6-48d3-ad2f-61a74206ed17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3601b6b4-797e-4e77-a274-ffc959244034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cfb86b-a2b7-4bea-b3f5-d7bfbac1e18a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0128aaf0-5c7a-4f71-b06d-95ba116e0399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d6c70f-0678-4c8e-a591-0f6e8673e669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349da6e2-991a-4350-88ee-48cc9537c0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7d27f2-9bca-452d-bbff-2787acfc0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f24010-e56d-413b-8278-0e4c3dd84d9e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d598b54-3f76-4dc9-a81c-88481ccca966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04c1429-1292-4816-b30b-06bd690e49f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345180f1-c628-4664-9a14-d5fbc3282e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c6f514-28a1-468e-8a24-fec8921f6421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84332bd-4f40-4828-b8d0-7ecbd50e0ef5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a88d1ae-c0c9-4b05-abdd-11adfffc8fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d31c746-2550-44a1-9cb5-02a5c7c78137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51491cd9-c5bc-4a80-bd1b-aad4bba55f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff04767-ff7f-42fc-8708-c49862f02463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65081c84-243a-4cf0-a54a-81d5e3ac934c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fae2e7f-230c-44ab-a50c-86f7164507d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c847ef4-47c4-4022-991d-5f5d48608405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c42081e-3a13-46e5-a11f-eb94453600b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a67a14-abf2-411e-9f91-0dab16d4f05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b51576-2535-446f-8726-7bf5c69dc4e2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d86e50-accc-48ac-b4ac-5bace6036d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4c93a7-46cc-4037-a1a0-94682cd0cddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10698ee-0c7d-4aae-9bac-399d46e14c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c651820-2612-4b43-9983-adb47174e07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c3a0ee-89f4-4800-b916-506c2d754414",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c4b23c-0e95-4cff-a62d-3257ccb12d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8560f29-75eb-4513-ad53-d356de4e83be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b160a721-5b75-4a58-bc8e-a65e56a5a15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88a4503-53d9-41c8-9655-3b0bfaec8ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb078f2-2868-4db3-b362-03e7f45bfc0b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1c0949-379c-494f-a7f6-557f246acb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a876f50e-552d-44ad-9985-b346fe680031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1c9095-5ce6-46b1-ad26-a78045595a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910f7b20-a2c4-4e13-bb88-24ca87dac87f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd692e0b-1302-46b6-aa0f-2b80b2ac3360",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f10f70a-266f-4c75-bca6-b0cc58ccf9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a772c70-1bf3-47fb-8ad1-d937aad0c4ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4786cba-2cb6-4912-ba39-7d26d6a60930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9f6e9a-25ff-481a-9dcc-70ac76d21d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b34385e-01ea-4663-b966-e978d3f62f3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50296507-be19-42ff-830e-72b1d915901e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2383e966-e9bc-4d91-b43b-fcffb1a61ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c8328-bc82-45df-9338-a7b3963c61fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9ebd38-3a33-4ef7-838b-f93d566c85c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d83998-f275-47c9-911d-4f190bd85b0c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe87668d-4bb5-4bc9-8c0f-87ba8616dba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15302b8-41cf-478e-8c58-f0ad04744d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61568a86-7631-41ea-bbaa-f126d711b459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f0df34-5045-4ee6-b763-57ce0ebccfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dee0cb-8aa1-4071-80d7-89e644ea98e7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7582aca2-8b65-40fa-a8cd-2234a1bd4d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bafd863-d4fc-4a08-8b27-5d1b6ee8a499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9460122-39b6-45bc-9b6a-1995010501ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c002d76b-f0f1-4dd1-8fba-ea694ecc4775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee0084-a3b9-48db-a492-8971cf63fab6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec91293f-a731-4e69-a40e-bac1c3de8497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58038940-9eb9-477a-8b8d-038fbe8f8efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be011687-5c9f-4363-8478-1f9c6f109b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc9169a-c1e3-4155-9288-85fae83571ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680eac30-87eb-4ccf-a355-2e4d0d6f88cc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2715f9eb-af29-482d-9c53-ccc62c1e9660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521ea18e-27de-42c3-bfae-0d0a3ad49758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b09859-327e-437c-a10f-70bbb36363ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f31e0ad-ff6d-499b-a761-f28da00c6fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd987c1-37d2-41c6-b212-e57c98e21872",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea76e8a0-f02d-4345-a0a2-b2cc3e2eb0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c5835a-d6b9-42ab-b5b1-83e82dee3bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24267744-955b-4456-ae98-82ba2a07f5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a823a9-80ea-4aed-b41c-1baf5e0a675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcf3554-c9c2-4f09-855a-4fb0fd58e013",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3331d162-f5f3-4a8b-ad71-61cde45dbe0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab8f73f-9d53-48d0-8f2e-0f360dbbbfc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d78a5e-03a1-4748-a6eb-610d2471a07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93393220-237d-45db-a5dc-3ec0324bfb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4af1081-ab28-431e-85f6-3fc39f5cbaac",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af5057-5eec-419c-8b19-cdee46bfff9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d622cca-ea9a-4693-b41b-2756a57654e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d366c5b2-f2f3-4fc9-b67f-85312833a817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c64794-269e-47b2-b9c8-6c62bc00652a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88396257-7d66-4c4b-a4fa-27b537427d7c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1acde3-b7c3-4e8d-aa5d-58deb626b0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b502a68-e962-43bd-8798-a2a3ce3931c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91244179-20f2-427b-878b-e9bedb9c4243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e8f91f-8103-45ea-beb9-4a38d171f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f88d47-8aab-420e-a3b8-ee411b0c6a55",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5a7688-142d-4b54-a329-0d6e63b35873",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36602e07-9fc7-43f9-9447-c1d6da2f8187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a17b69d-35a5-4b3d-a291-d89f1fa0b134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2cb40a-3cea-4e17-b6f4-51fede5a9ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f40de5-024d-45cf-a3a3-11d57c4743e5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7a6f8f-755d-4bfc-80a8-ea59c14278a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a5c1f0-aea2-4c99-82a7-56cb156a9e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5540475-a721-4d60-ab15-e570b935d06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec76d674-059e-429f-a8ea-646ed3b1eef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7094fdf-8c1e-4202-800b-48e2671f3a57",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4438593f-490f-452c-ae13-d844cf8a8bfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccfca735-0b6d-43eb-96d2-21cb3790a36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab7aab0-7ca3-4af1-b710-55a793b2f45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b737cf2f-ce37-429c-b506-b868a6724b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c19f257-2647-42e1-9281-b380d70767f1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77eb390f-eca7-4efa-97a9-e70f2e86b453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea68b54e-4088-4571-97e0-e9bd9e5db632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d3dd3-95d3-452e-8ee9-cd176d7fc1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393d2ad9-64bf-46ac-bf2c-88d1d34c872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e4012-5d10-4be4-a78d-ee6f4b0ec0ed",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78466619-d3ff-48c5-bd92-b26a92819082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7577e167-9a56-46e4-a423-dd0539276c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaeb9e2-8441-4c27-b7e6-a517115e0ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767a8102-6be9-4ca8-bee5-c85768994e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8cf776-05d2-4a86-880a-66a56f6ccd8f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04de0c4b-4f90-400a-8165-3da7f6679439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcecc5c-4ea0-4713-b478-16f9f50c96a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f2cdbe-3ae6-4784-a0f1-6a6d8a7275df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e24ae45-2157-42c0-8a2d-04f05b257036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4826006c-efc6-4fbb-bfbd-86153fb708ac",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f518c6f9-23e3-45cb-b11f-499bbe53567e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a67eab7-1c07-45f8-99cd-8e8d96d6ebed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01612d2-da77-4598-b858-2ffbb22c53e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ef7bcc-8a23-444e-8f53-4dd38ada5968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac45471-b85d-46b8-85f0-d50494641fa0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84d8838-8461-4ef8-8a9c-75630b652def",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc027ca-bcca-491a-abaf-ab921922781a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336ff08e-f46f-4ca8-9d3e-a6488dae2fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db10ca1-a223-4323-acf0-cfaaac596325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4a190a-001d-4371-924d-90eacfcf3c1b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297a3bba-8e30-433b-90f1-7e328bf75cec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e45fa21-99fe-44dd-aa7b-9a966ddb3513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ff156-280f-4ef3-b1e2-a533357fb1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4effc10-9012-4645-88da-d048f5d4fc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8024f65-7a7a-4f75-b980-beb813f9bd63",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e3a364-c25e-4ea1-b8a6-a61a579389df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bf8eb11-93c2-427b-8108-a21e99ad0590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e22a1d1-3b0c-4d91-933c-52ab5f068901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e2dad6-802f-468a-9baf-1e4ddd9ac92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4ffca1-7f0f-4cf7-bbd7-a3e77cf436b0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef491f7-de9a-4003-8b66-7c2245da388b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e95ca54-d5e1-46ef-b017-d0c803a39a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877cbfda-64ac-4c88-8a76-84c24d53c943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f850c76-4292-4b46-998b-566f603bd7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862f3199-ac6d-47be-8d3e-318484977e39",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20cc3ba-49c1-410a-a7cc-8003bd1332c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43961aca-caf2-4aad-9013-a6b11a37d1fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d572c72a-183d-4190-a0e1-4990efa4e8b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c8c12a-a885-42ae-82d8-a5c9fc70442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92deada-0d57-46e8-890c-4b372246aaf2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b91ab-1e64-44c8-827d-a9b24eed0332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d27a155c-6818-418c-8a63-c9a780bd406a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d643c24-7ede-4691-8785-94df60e7d4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1b8859-9d49-441a-9e42-af561bff7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb19d3b7-3ed9-4275-ae53-c867a7fae10b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998e7aa8-c713-4964-acda-0ff9452a3857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412ac70e-a046-4ab3-b64d-771669b856ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24254be0-3162-4d03-a425-bcb1086fc591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c326728-7691-42f8-b3f8-add2811c146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e64233f-5241-43f1-92f6-e194c5332eec",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b07a8fa-568a-4a69-8387-caa15954ef81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71f3a58-9915-4d70-8c7a-6c3e7f82a9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ef3e97-6f38-4b41-8d90-058acfecaaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62125a20-a5ae-4268-ab3f-dbf22c5f8006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88bad27-14ac-4315-9743-8f02b64659a0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30df57e8-e2c3-4728-934c-6d0925a35983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ea504f-0776-4ffc-ba98-beeff49fdcad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249b704e-9dd5-462d-9da9-ff4ad8086cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9375c8b0-8195-4ce0-bb12-a6173f7ea186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724ba956-0a49-481e-bb9c-e29fde8b1927",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7e8b58-72fa-4826-be5c-9c951ff3fa83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafd975d-f615-4a97-80be-7d8c7df9a980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9349b661-35b3-4912-bf95-f2c21f9a88d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b81a46-4222-4d00-8a98-31999c9d3692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178ecce5-cf1a-496d-ab49-b601e8905118",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0739ed7-bd3f-476f-bf47-5f8a6e07d51a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f82159c-21d8-45fb-a8a3-599c41478e71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f3aec6-7809-4885-8bf5-4024ace6bd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77107c6c-8fc8-4cef-9d4c-3827836488b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82798b01-bfee-488c-9b16-6798613f8661",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e38ede-13c6-4fc5-b212-fd19687a0e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f731f3f-0c32-474f-9c89-c0c031a02557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f31b23-ebf3-4e96-8beb-f1584489a355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5b2987-9bbd-4b57-a7bf-1f43e86f918e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969022d1-cf99-445e-9e4a-a58e59f4d012",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0217c535-a080-410e-a362-b8e465ec6eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f9f5bd-06ae-428f-881c-678e765a94f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8179a627-4946-464b-8d4b-013d402d45c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a96d28-51f7-4d8a-8c08-3d8639ff2d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c13d57-c172-436b-850c-d08a1ca6779a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce96752-aa4b-40a6-9911-c0c4da2bbf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b1ba86-296b-4071-b03c-636074403a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45223ebc-adb6-497a-be13-d2b38bff9732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c108e4ea-bf11-4dd2-ab75-cdb3579ea9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7012046-564e-4b9f-b8e1-621ffc96e73a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0284cbe-632f-4df9-a23e-9ff6a44ad140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3212c551-5bbf-406f-a895-f56e173496eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b397ec-b9ca-4342-83bb-fd020dd6c794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5843ff6b-bf43-47b9-9c53-4da1c7bca207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c947d1a-f8ac-4fcb-8087-2f50ffbd9e62",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f5c663-d8e8-4088-86b6-81f56dd299ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c0489d-66ba-4226-b35e-d24af2e44aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0652e55-8c4c-4def-9154-f0ddf2626f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6b2942-8cf5-4a9b-aa4c-d0a7a83e72f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7563b5bc-0e2c-444d-805c-78d12908b5f2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a948f9-2361-4a89-91b5-04c85ecc2cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8091d7be-b471-4ecf-a959-d811995ca0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecd5f1a-3b55-4372-90f5-eb9d434c7168",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60e081a-88f0-467b-aa5c-b807a4520f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a762f-22c4-46a4-95a5-6ff090347098",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2301b62d-9aff-4a5a-93e7-1ba3e1bb6dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64422e0-935c-4a01-9089-a906094ec4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae2275c-2106-404d-8408-40fbd25f6876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0cc87a-7e55-48af-a9a1-d8255d820f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc190a79-dbc5-4dfc-aa3f-23b45dd372b5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45a34e7-e61a-4663-ad02-292448e8499a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0792a0-2096-46b8-8126-6cba74409fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd49f5ea-e6f2-4b3a-8f1d-fa0b26c76933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68299602-c215-45df-b319-0af29337d87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca6362-08b0-4d9f-892a-5a29917a79b7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347f3b24-9776-45bd-bc5f-26fb7c78f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db4a9425-602f-4eb3-ae64-9eec5f066de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8422c9-9770-46a8-b640-a1e2864c5f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea468306-315f-41ee-858e-9544ffbb288e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee8d36a-0a7c-4f6b-b8e4-b822d7a619dc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0291bb8-5098-4ba2-99e9-9ceee2622047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d1fd70-78dc-4d76-a2a8-ef4b5f1fef0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7f58ec-048b-4f76-b1d1-deb6c23efff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9318a245-df7a-4697-ba2d-102f9b979d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd27ed-b5e9-465a-95db-2e367f0085cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e92b4-ec0a-4433-9486-dfc9c38544fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3e49b0-88d5-4249-8b2e-56f76bd166cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d972f777-df7f-4a2f-9a33-1a8b777318a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690d849b-d783-4375-b903-0e43ba3eb8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1ce443-ae4d-48ff-938f-5997c05c688a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a56bae-11df-4d8a-b4b3-eebe0c954cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03166017-7c19-45dc-8862-d5cbed1c028e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a9e962-3d12-4a78-85ea-4bda65788895",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f34604f-ef82-4664-8e9a-13c8bca427ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff721b4-da85-4a4d-bfdb-32cdc430d781",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4057be1-4d4f-40d9-975a-63831fbe9353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1493e20-e968-4d3f-9c07-5153566ecebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409de6ec-ac61-47ea-92ad-bc28f831f293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fd4931-8fc3-4a0d-b85f-47a895012aaf"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819b2112-a8ce-4593-9774-272ece4dfecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7638b44f-4b8f-4092-a575-052cf429e1d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e1a0060-40ee-4927-98ae-2bccffdf029e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79da7474-7e39-4688-8e72-63eafa4caf0e"
                    }
                  }
                ]
              },
              {
                "id": "9fea6c42-6b22-4799-a9a9-c1078c8e62e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67ad625d-7413-4a86-ae6a-a9bfff984d88",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d794d461-f8f5-4238-bddf-373a228bee76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e6ed6d19-1124-47ef-8a8d-2d4e5fa8f3cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "def579cf-4dfe-473e-9827-db02ec9dfdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6db0e72c-c16e-474d-863c-355d804a3aaf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f8ae066-9d8e-4ace-af53-5459d2269a21",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a92fee4-1ac2-4a07-80ea-b3a5651a1596"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "109d739c-4cf3-45e7-b70c-5e08addd9613",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65bd8c21-6abc-464e-adef-4835c3c4f334"
                    }
                  }
                ]
              },
              {
                "id": "9fd06999-eacc-446a-9e8e-67885bba777d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "99357997-0635-4e6c-ad57-afc2aec6c8a4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ae9ec9-38bf-48f8-b931-9737a06a965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2f02fcc2-5271-44e0-bca4-75f7ca81068d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aefd95-756d-4b04-906f-731e0bbea0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b4f556-9fd3-49d9-95e6-d3917e9f6bde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e788222c-c32f-48b2-8ee4-0b2300aa8b7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c041ef19-7ebe-4cbd-82eb-5b00b32d5ad8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e7b3902-3cab-41d7-a6e0-877c8b415c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0403e6a-a8a9-4b2f-8655-6d23c9f23d37"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14e7f023-e33d-4c79-a262-66b57598e730",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efd2f3d3-e6ff-470a-860b-28283be12c08"
                    }
                  }
                ]
              },
              {
                "id": "9c863c9e-f2f7-48d9-bae8-feeadf0bf769",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b527280-3258-4645-bafb-9e5d335cb00e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "68f794be-2a17-4ff3-ae21-9a12187efa72"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adee7501-e832-4f6b-aa75-832053a05ae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3445701e-feaa-4256-b832-f4ac5989099b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f701c9de-ad76-47cf-afcb-ff3bf0f1687f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "89841271-1a55-444e-a3ec-d9fbd8139769"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f23c75c-4d67-4a44-ad57-2168c08713fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7617d57f-256e-470f-b3bf-c9c92eb1939a"
            }
          }
        ]
      },
      {
        "id": "85308d49-17c2-42c9-b74c-ba30a6d898a3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "47cb5346-8d2d-4a8d-b72b-d8d2900feb24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e433720f-03be-4f6a-82dc-616f3bf26417",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93c80c6c-fe4a-423b-9f9a-adb7b734ec68",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31657fd4-258f-4aae-a3c7-305c9077e608",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "450f7234-6c34-4e8f-aba1-ce25120c090d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284155fc-960a-4ba7-8fe3-67d1dec87e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c35dd4c0-0388-466a-8aa5-53f2c26fcce4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96d958b0-faf6-47d0-ab5c-afc278879c2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fe053db-5686-43dc-8056-4f751dd6b54a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95dd65e2-9038-4c56-9ffd-27a12b86e3f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "764052b0-59aa-4828-abe5-3d9b7ed86796"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f9cf4cc-a367-4277-b7e2-29e195f773cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f9d743d3-d0d1-4c63-b192-d81dd5127b05"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6530530-caa5-4a7b-9f6a-f020be6b145b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b523e61-14da-4455-a4ac-e7a8b53ae8b2"
            }
          }
        ]
      },
      {
        "id": "dc0c22f0-d1aa-4d74-bf62-82a2ee753cbd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9705fa77-6269-459b-82b1-e2cee451bb7f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03d6ebc8-2cfa-476c-b688-b5fbc8bd1839",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17610955-c63e-474a-b707-ad1b1f1c3949",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b666047-64fb-46e6-80b8-dc5ac373f24b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d14219db-1079-46a0-a241-1d1f3111554d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425c8464-dc4d-4763-8bde-198393ba22c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60baa912-006b-4a98-a67f-128577615c03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68f4988b-757d-44b3-801a-97104563c34a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e27021f9-a0b2-4e51-bc01-be36ceaa3d84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e448f715-ef04-4d2a-a782-7f9d977c87e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d7a6c6-27c2-46a8-ba87-3cd22ffb0140"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98210909-89f7-4563-a47e-08f313caafb6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6f59dcc0-bbf4-453e-ba6a-4cb765d199a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d29b220f-3df3-4069-93d2-674764e0343d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "918e5350-b401-4d5e-86c2-01513f49a4ad"
            }
          }
        ]
      },
      {
        "id": "ec101e38-2eec-41a3-a10f-2599cb9ed19c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bcb4f2e9-14fe-45ea-81ab-296fc35db553",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca8a9726-46aa-4a34-8236-3e9bafc70d29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "044cdd59-d7c3-4700-a5b2-518c8330ea94",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974a52dd-7e9f-42e5-8833-c325f4f834fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "adfe8d7c-edda-4825-89fe-cb16765a702b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e0e6fa-c65a-4a7f-b48f-3746bf0d9342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5a4f5d2-641c-44e1-b5df-e8cc7a53f783"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b42f99c-bffb-4fa8-9741-b77cdd852ead",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1902d7dc-9b5f-41f7-8eb0-ee95326f8def"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d34373fe-a90b-42ba-97d8-6de7ddf41700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4c33026-cf31-4a1f-aea7-25fb3b7efe81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96941eba-9634-488f-8839-d0bd80080e4c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2cb3765-b6b3-4bee-82f7-76151069dec6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3382116-3320-456f-b493-0f350b384a20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a66b9a9-41d0-4bb6-94d2-3a0f3be86a19"
            }
          }
        ]
      },
      {
        "id": "80d6c7f1-2a92-407c-b166-9ef0d5be7fdc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cafb542-4d8a-4068-a6fd-0b6ee1ed3d6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b449d27b-9637-4036-af8d-2c7667e68b12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d9128af-cdfb-4c4d-9d98-1e65c58b893c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed92bab-590d-491e-b7ae-d0b7bbb900fe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20f1c65d-06b7-468f-aa1d-f20689dc3fee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 96.42807017543862,
      "responseMin": 10,
      "responseMax": 6937,
      "responseSd": 475.5048278591168,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705797595182,
      "completed": 1705797631690
    },
    "executions": [
      {
        "id": "7c585b31-10d2-4817-9a89-ba397f886061",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "23244159-61ed-466d-9700-830048445baf",
          "httpRequestId": "a2e7085f-487d-429a-aefa-eaa2d83bb8fe"
        },
        "item": {
          "id": "7c585b31-10d2-4817-9a89-ba397f886061",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3234ee34-4f05-4b68-859d-541b9b67a4c9",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "2145e063-5a44-4fb2-a5a0-3c3034f16bbd",
        "cursor": {
          "ref": "66d57a63-c12b-477a-bc37-8481ed0f4424",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3776cde5-30af-40fc-be7e-73b6213e1046"
        },
        "item": {
          "id": "2145e063-5a44-4fb2-a5a0-3c3034f16bbd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a37a61bb-d982-42b0-9cb8-106f19c0c7a6",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "62256922-4cdb-46b2-ace9-51e06fcde16d",
        "cursor": {
          "ref": "6a3031fd-8e51-4e4b-b77b-06fd2b805ab4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "74b6559a-da26-44b5-ae46-f4adc6ffd667"
        },
        "item": {
          "id": "62256922-4cdb-46b2-ace9-51e06fcde16d",
          "name": "did_json"
        },
        "response": {
          "id": "e71d22e6-47b8-4ebb-9d12-a7e9609473bd",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c38183-e582-40c5-8940-a3d626d25c41",
        "cursor": {
          "ref": "22b34f45-77c2-41df-8b65-8f13bb1226cf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "296cdfa0-faab-4540-8d50-43bbba2ea4aa"
        },
        "item": {
          "id": "40c38183-e582-40c5-8940-a3d626d25c41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca0f01c3-15c7-4f42-8fe8-97326707cd26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c38183-e582-40c5-8940-a3d626d25c41",
        "cursor": {
          "ref": "22b34f45-77c2-41df-8b65-8f13bb1226cf",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "296cdfa0-faab-4540-8d50-43bbba2ea4aa"
        },
        "item": {
          "id": "40c38183-e582-40c5-8940-a3d626d25c41",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca0f01c3-15c7-4f42-8fe8-97326707cd26",
          "status": "Not Found",
          "code": 404,
          "responseTime": 578,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbb41eb-8cf5-4442-bc72-e70b809f4914",
        "cursor": {
          "ref": "43ce1b63-1a05-482f-a5d0-f3de936d0ba8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a70bdbdc-6b17-4ad3-a2f3-28479bb56245"
        },
        "item": {
          "id": "0fbb41eb-8cf5-4442-bc72-e70b809f4914",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "340ab7f3-3455-4c1a-a6ab-f395562f6ba3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b338a632-c558-4581-8cf7-a68d6c0c8181",
        "cursor": {
          "ref": "5b13dd23-ef36-4322-a72a-90d2d633a31d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f9243505-bd84-43f5-9a08-b27bb5614a99"
        },
        "item": {
          "id": "b338a632-c558-4581-8cf7-a68d6c0c8181",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0f7cef6c-54bb-4a09-8dd7-3efd2610a23a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06725345-6864-43ad-a8a4-cb5d08353bfd",
        "cursor": {
          "ref": "9793db37-6846-4798-9c85-5e30e0a416e9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b5116018-328f-474f-80b5-b74311b092c2"
        },
        "item": {
          "id": "06725345-6864-43ad-a8a4-cb5d08353bfd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a0d79a07-3139-4bc8-b7c4-e377252c4fdd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f5feb6-cfa6-4684-9ac3-dca5a6a9c863",
        "cursor": {
          "ref": "0587bb65-7bc2-4c89-80b6-68977476a097",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "afd67850-f794-41ff-bb7e-a4fe2fa6582b"
        },
        "item": {
          "id": "d0f5feb6-cfa6-4684-9ac3-dca5a6a9c863",
          "name": "identifiers"
        },
        "response": {
          "id": "3e2a5a74-2371-47e4-81ef-6d70329d1c0a",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252cdd5d-c029-4e6e-90a1-400ae8b6d13d",
        "cursor": {
          "ref": "53b5c592-e63d-400e-bbfd-ff31b383ff7f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4eb72946-9e73-4be7-a9a3-941b9b4a19d8"
        },
        "item": {
          "id": "252cdd5d-c029-4e6e-90a1-400ae8b6d13d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9362634-da66-4ce3-9670-ba44a0cf92ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263d5fe0-57cc-43e0-bc7d-f6eeaf77b7d3",
        "cursor": {
          "ref": "2161123b-27b5-4476-b7f6-033aaca74887",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d0afb84a-3b5d-4d6d-a8d0-4d590a420a65"
        },
        "item": {
          "id": "263d5fe0-57cc-43e0-bc7d-f6eeaf77b7d3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "260135ad-a9cc-4e7b-a79b-033f0c8924e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52e10f7-679c-41cf-b1c0-0832b97cb052",
        "cursor": {
          "ref": "c51186b8-7672-40f8-9854-849fcf1baea0",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62e8cee6-f023-4335-9ad0-7e51c5ff061a"
        },
        "item": {
          "id": "a52e10f7-679c-41cf-b1c0-0832b97cb052",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c9e25644-f972-485c-a3b4-112ed99864f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1eec63-93e9-46cc-a09f-e59479d2e0f5",
        "cursor": {
          "ref": "4650307a-c5e6-4412-b324-7f134ec86bab",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "468d7b8a-c289-4de3-a30d-981351756ae2"
        },
        "item": {
          "id": "bf1eec63-93e9-46cc-a09f-e59479d2e0f5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "78ac7166-798d-4634-a2a3-fe22e3313c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091fd5ef-dedb-4ff0-9c07-1f7915b03262",
        "cursor": {
          "ref": "9ed48a68-9e23-41cd-9ab4-f29f8a92cd38",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a199a3ae-9c92-4872-a5da-85b88302930d"
        },
        "item": {
          "id": "091fd5ef-dedb-4ff0-9c07-1f7915b03262",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "82b81f20-b7c1-4799-992b-1e00143860d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953eb60d-b993-45cc-871b-e311ed3a4c52",
        "cursor": {
          "ref": "b3836dc2-a09e-4bb0-9ac0-1bb73675a645",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dc6d7c11-c9c9-4b2a-9eee-0162a5ec8fbf"
        },
        "item": {
          "id": "953eb60d-b993-45cc-871b-e311ed3a4c52",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f1777434-1fd5-4a2d-829b-e05eafa648e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b171f1e-1660-4433-9d4a-95074da95513",
        "cursor": {
          "ref": "a2e73698-5e95-4a15-9395-fba72d5d9379",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a16d272-4964-4f34-a0d0-152282267129"
        },
        "item": {
          "id": "4b171f1e-1660-4433-9d4a-95074da95513",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cfbcea12-ef7d-4b57-82d1-cd75129ce7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4cbf94-a6cd-4cb0-a528-7889178a2361",
        "cursor": {
          "ref": "ff8ac2ad-ba01-46aa-b7ea-b02775fb6061",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "df606b47-ea66-4ef9-a118-c859ee0a1b1a"
        },
        "item": {
          "id": "ef4cbf94-a6cd-4cb0-a528-7889178a2361",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2bfb43f1-4d81-4fe1-857d-31396e2c66c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b5368a-b96f-4ee3-b8c3-f9b91c3fb57e",
        "cursor": {
          "ref": "0767d7e0-0ed3-416c-87c9-b6a9d5370eb9",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0c769662-831c-4ef0-a459-c16d9ad3f51b"
        },
        "item": {
          "id": "c1b5368a-b96f-4ee3-b8c3-f9b91c3fb57e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "599ac781-8f69-452a-abd8-864feb03fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5130cb40-aab5-43ac-904b-ec2e64c3fac0",
        "cursor": {
          "ref": "787741d6-d757-4e1f-91bf-60fc5fd35371",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4c8e0817-5333-47b6-bca7-684f5ee9a624"
        },
        "item": {
          "id": "5130cb40-aab5-43ac-904b-ec2e64c3fac0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9cdc8987-9748-452d-a5a9-103a93581ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57b5730-bd26-4aa4-ac7f-3bc7c4ff2153",
        "cursor": {
          "ref": "9413f4f4-be2e-47f3-a382-142f1ff84932",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae1007a8-1e4f-4829-9dc7-6493a522ff8f"
        },
        "item": {
          "id": "c57b5730-bd26-4aa4-ac7f-3bc7c4ff2153",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4668f000-62ec-4a39-84d8-16e50cb3b1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7c6c8b-874a-429c-a8d7-90de853bece5",
        "cursor": {
          "ref": "aa935f35-3353-41d6-9c7c-f31c3d947217",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85bdcf3f-ce27-45c0-b5a0-b0a14f1f7668"
        },
        "item": {
          "id": "2b7c6c8b-874a-429c-a8d7-90de853bece5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "65de9cf9-b877-4b2f-806e-54cf122155aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf218ca9-97f3-4af4-b148-937b3407e9db",
        "cursor": {
          "ref": "691962b3-62cf-4e2b-9afc-3a01b50e0d63",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fb61ef61-ad94-4f27-a01d-830d36f39a1d"
        },
        "item": {
          "id": "bf218ca9-97f3-4af4-b148-937b3407e9db",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3b10dede-5faf-4127-a597-574f8a076a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d04b0f7-708d-4c43-9eb9-b03adbf93f66",
        "cursor": {
          "ref": "e2be8ee2-086c-46c2-9dd1-4d6a63a042b6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "222e4ec5-e626-4231-be43-a22c41a08a66"
        },
        "item": {
          "id": "8d04b0f7-708d-4c43-9eb9-b03adbf93f66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fe064a26-02a5-419d-a023-3071ee53c8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32af3cf-15b5-4252-ac76-02d99e27907e",
        "cursor": {
          "ref": "20e2145e-7346-458b-92da-677ea6f8bfc0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2aa45f2f-eeb7-4640-bc29-af35498fb7f9"
        },
        "item": {
          "id": "b32af3cf-15b5-4252-ac76-02d99e27907e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7a478f78-9bbb-4deb-a5b1-d8fafc057a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13227d64-4464-4196-afbd-0903a1b20c11",
        "cursor": {
          "ref": "6a74ccc8-20ac-4f32-aa8d-38707ee3ea52",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bda2cb84-f07b-4118-acf2-42519a79a947"
        },
        "item": {
          "id": "13227d64-4464-4196-afbd-0903a1b20c11",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b504ece-7c36-41fe-9714-e368d0adaf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3f3447-6b02-4e6a-8851-89a8ceb491ad",
        "cursor": {
          "ref": "0e80f9bb-9bc4-4d35-bd12-8cf7d49c9b02",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dabcfe6d-fb89-4a98-b757-d023c8fae477"
        },
        "item": {
          "id": "0f3f3447-6b02-4e6a-8851-89a8ceb491ad",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1ada22f8-e041-469b-bf56-34715e421338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0403ff1d-9469-40c8-a3b3-3662fcc5f592",
        "cursor": {
          "ref": "4a151593-b7ec-4d3b-80b6-ef2232a7df24",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "946b08ec-315b-497e-99e4-830c30bb15cc"
        },
        "item": {
          "id": "0403ff1d-9469-40c8-a3b3-3662fcc5f592",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "49c13814-7639-4686-95b1-0711f59f688b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e7e22a-6c25-4f3e-b55c-1f54cb3597c7",
        "cursor": {
          "ref": "1857979a-3d20-4eee-b7ad-33202629439a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "29f0ef10-26ea-49db-a8c2-e9f82d457f08"
        },
        "item": {
          "id": "67e7e22a-6c25-4f3e-b55c-1f54cb3597c7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eea5cf75-24d8-477c-95d3-6d834df52e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b0041-14ff-4cfd-9644-e8275d130abb",
        "cursor": {
          "ref": "0f9472ac-56f1-4476-b101-353672516ee4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7d5c9808-f27a-4c1c-bedc-a81bba3d80dd"
        },
        "item": {
          "id": "581b0041-14ff-4cfd-9644-e8275d130abb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "94d5d547-c79b-4d57-b92e-65d5da83c43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b423c0-1038-454e-8416-dd8a9701bb86",
        "cursor": {
          "ref": "ce8198d4-3bfb-4a75-a6d6-d482133621db",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8509bf99-71b7-4383-aa98-11c44ec6618a"
        },
        "item": {
          "id": "03b423c0-1038-454e-8416-dd8a9701bb86",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4e5a1a2f-c318-4790-9fa1-7cbb14883243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7473ed9c-4fcd-4f86-bd8b-9588efc5aa0c",
        "cursor": {
          "ref": "0d0b1f2f-22c5-4da5-980d-d70921b4a9c0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "85b9b0b8-010a-46ad-be6f-88950cc9d76e"
        },
        "item": {
          "id": "7473ed9c-4fcd-4f86-bd8b-9588efc5aa0c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b6c16ae-7b76-4229-9f25-3f17695f43b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad39540-dec1-46ae-ad1f-67df55f3fd4f",
        "cursor": {
          "ref": "56c2fffc-6b59-4884-9eef-ba99505df83a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3ed42347-2744-46f6-8dfe-0edb3c8c8d0a"
        },
        "item": {
          "id": "0ad39540-dec1-46ae-ad1f-67df55f3fd4f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "69dc8ead-5cdf-4b52-9ca2-aff5b0a25b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be99ada-3a99-42f4-a99f-ec4f17dc7bf1",
        "cursor": {
          "ref": "6c70f359-9589-4f61-9387-e1c866b7218d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ffa6f94d-c5be-4c22-b7f5-7dbb22273672"
        },
        "item": {
          "id": "9be99ada-3a99-42f4-a99f-ec4f17dc7bf1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ce787150-fc2b-4d12-8ae6-25d8e3df6742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ab76c8-0016-4573-895a-0605a9496e46",
        "cursor": {
          "ref": "7bdb73ad-76d8-4d0f-ac40-bb0a8eaea868",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "78681572-cbb4-4264-9002-6c682e758542"
        },
        "item": {
          "id": "98ab76c8-0016-4573-895a-0605a9496e46",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5102f5c5-eac4-4190-8cae-9a102667dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4a9217-3bf4-4149-8dc6-30f8710275b9",
        "cursor": {
          "ref": "a29f604e-f881-496c-ad67-47dc89fe599b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6347e3d0-76a7-48c1-b123-eba45020e105"
        },
        "item": {
          "id": "4b4a9217-3bf4-4149-8dc6-30f8710275b9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "367dd5e9-427a-4a91-8cc6-c496d55ee377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb07a0c2-8cec-4c8e-8d35-015ddd465920",
        "cursor": {
          "ref": "3cb7e407-ce90-49fa-acb0-c747f8cc9ba8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9497ce05-c056-451f-817a-f547055dffbd"
        },
        "item": {
          "id": "eb07a0c2-8cec-4c8e-8d35-015ddd465920",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5e0dd5ea-4492-47f2-997e-30db3d6cdf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca64a58-8670-4354-8832-3649b4523cce",
        "cursor": {
          "ref": "29a5487c-6ffd-4369-8180-36384a57752b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9908c18b-2fd2-43a3-a57b-500335e5fc99"
        },
        "item": {
          "id": "eca64a58-8670-4354-8832-3649b4523cce",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "86020b5e-e8fc-461d-98a1-9a7527715559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c164986-f395-4606-ad45-f43ec716d327",
        "cursor": {
          "ref": "b5dc9d28-7b0c-4413-a35a-fff5cbc8f922",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "56e59a1d-e164-4227-bd11-59b150fa2fc7"
        },
        "item": {
          "id": "4c164986-f395-4606-ad45-f43ec716d327",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "10d84117-f6f4-4765-b9f9-232e7c5c94dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d6fe86-baf7-457c-b55c-5a8e33fb54b0",
        "cursor": {
          "ref": "8627eb9c-dbce-4156-bb4e-a913f9033804",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "024c85bd-604d-49e9-9e40-a43a5f166036"
        },
        "item": {
          "id": "a9d6fe86-baf7-457c-b55c-5a8e33fb54b0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "830b615e-ed3d-4778-9994-6aa757d56cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b0899e-d956-4c5c-af44-b33de419f256",
        "cursor": {
          "ref": "b1868a2f-aceb-477a-b7d1-d021745e19c3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "32ade214-7018-48d1-895a-1e16257fce10"
        },
        "item": {
          "id": "68b0899e-d956-4c5c-af44-b33de419f256",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18ef78b2-2577-41c9-a218-7cc245d8fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df1cd35-bca6-4cb8-a155-3964e1cdeeb2",
        "cursor": {
          "ref": "28d7e68d-f966-4653-8834-cd4c8656edcc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b4e57750-37ba-48d0-baf1-b62aff05fd9d"
        },
        "item": {
          "id": "6df1cd35-bca6-4cb8-a155-3964e1cdeeb2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "25093f47-7aad-4bcc-bfc1-3a340993b93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1f896d-9108-42fa-8591-4a6deac16227",
        "cursor": {
          "ref": "103b6ca6-8454-4bea-8ff6-6c18e1a4fba6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "24da81f4-62b6-491c-a883-7203aa572234"
        },
        "item": {
          "id": "cb1f896d-9108-42fa-8591-4a6deac16227",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c7eccdff-dff4-40c4-9cc4-75f54ffa045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b73d8d8-da7d-4779-b1a3-0d284a66b23e",
        "cursor": {
          "ref": "cfed93ea-45a7-4be7-a7ee-ae394c0e6b82",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1fc9578e-8850-40ec-a3a7-5f396f160c47"
        },
        "item": {
          "id": "6b73d8d8-da7d-4779-b1a3-0d284a66b23e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d0ec8ad-7cbe-49c5-8541-f0e1cdf74659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b0af7d-2478-4de1-89c5-ad56f9886ad7",
        "cursor": {
          "ref": "f3cd3d32-9302-4ff8-88f0-79c9a4fec693",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "01c9ae25-6ac0-475a-95e6-f250fec2c582"
        },
        "item": {
          "id": "d3b0af7d-2478-4de1-89c5-ad56f9886ad7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "62856129-286e-4c4f-af4d-6ac262f216ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c68ecdc-9785-4d45-a8b2-3fb27a9020c8",
        "cursor": {
          "ref": "0e314fc6-93da-4f55-b3ca-15006058a9d1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ab046fe2-ed86-4139-a449-ac3074787015"
        },
        "item": {
          "id": "7c68ecdc-9785-4d45-a8b2-3fb27a9020c8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "65ca8c63-44ff-471f-94ee-7293ad4b91d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63eeaf06-1dd3-4517-8784-96a46262422e",
        "cursor": {
          "ref": "c81a74eb-b0ab-458b-bb0f-6ccf16bd028c",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d4dada20-1c02-4f5a-9f00-c9703a039925"
        },
        "item": {
          "id": "63eeaf06-1dd3-4517-8784-96a46262422e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "838dd543-583a-49ae-b9ed-93aeae3081cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f8c4d0-d41e-427f-ae3a-d6516c6c0180",
        "cursor": {
          "ref": "874c5609-d30b-4d12-b397-27506da1fec7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e97d9e37-64ed-458d-9e75-13e8e8f93c5e"
        },
        "item": {
          "id": "93f8c4d0-d41e-427f-ae3a-d6516c6c0180",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e997bc16-c4c0-41f2-a298-9cca8a4163a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530bb16a-40ce-4b33-b437-95b6b678ff4c",
        "cursor": {
          "ref": "d6488090-8817-4d6c-a75d-2605795ae8fe",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "26cc6c31-8ec7-45bb-949d-2a8e4888698e"
        },
        "item": {
          "id": "530bb16a-40ce-4b33-b437-95b6b678ff4c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "28364282-9f75-4ede-a26f-062b4859d818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418ce25e-78c8-4011-a38e-44e4dd200135",
        "cursor": {
          "ref": "9aa42afc-bf50-4286-827d-5f44f35e0d29",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ca85b00d-41d3-46ac-8f71-ef4499f81461"
        },
        "item": {
          "id": "418ce25e-78c8-4011-a38e-44e4dd200135",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "63693002-20c2-4c41-b701-3a8dc37842f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dc8280-e99d-4a46-9063-753dc0931200",
        "cursor": {
          "ref": "efa2479b-3731-4a0d-96c2-bdc9b7270c1f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9fab0294-3204-498f-9bbc-8391e4e02f2f"
        },
        "item": {
          "id": "20dc8280-e99d-4a46-9063-753dc0931200",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cf7b27be-4669-4be5-9b42-57a6834dda80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc80147-d926-48ab-bdd3-1bfc9f6442fd",
        "cursor": {
          "ref": "eba3849a-81b5-4ed8-bc7a-11383c7d32f6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "39fe1044-a485-4a68-ad86-7417116be02f"
        },
        "item": {
          "id": "5bc80147-d926-48ab-bdd3-1bfc9f6442fd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "78cb1df4-431a-4ce8-8849-fda7fec777a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec5b89e-ae3d-429e-a9c6-80ee7ef6b4e9",
        "cursor": {
          "ref": "8d64b0aa-bfdc-42e8-8754-636f395367a0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "95937001-a4c9-4a5f-9d54-3c59d261cb9f"
        },
        "item": {
          "id": "bec5b89e-ae3d-429e-a9c6-80ee7ef6b4e9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a6f3634f-2eec-4dee-a0e1-b113a7daa265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b06e90-1253-413c-a9ed-15d3be1877eb",
        "cursor": {
          "ref": "1207c09d-599f-418b-8c4d-786d534fdca1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a770c4c2-c94f-474d-80e8-b2bd81d4b668"
        },
        "item": {
          "id": "a1b06e90-1253-413c-a9ed-15d3be1877eb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "53dff18d-8397-4ff8-8af3-21730f6c8a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe52089-c363-4d98-902e-fb34922b828b",
        "cursor": {
          "ref": "23ab1868-3c6a-4f6c-8cd3-af757637ba4d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "999bf0dd-1a45-449a-8737-8e8fd0052a62"
        },
        "item": {
          "id": "8fe52089-c363-4d98-902e-fb34922b828b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f7c1fa60-7b4b-4e9a-be75-dc4939dd221d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c0cce4-9655-4681-8586-a6fa0202836d",
        "cursor": {
          "ref": "41909c99-9c81-4e22-a0fa-86b1dd7038e5",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5960a623-9016-401e-8ea1-208becd780a9"
        },
        "item": {
          "id": "c3c0cce4-9655-4681-8586-a6fa0202836d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4fe1f76d-f32c-4805-b850-2ee0098525a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a2c768-ad51-4629-b4ed-cd25d25ae7dd",
        "cursor": {
          "ref": "a1321a4e-739d-4c23-9bf0-8f5213b33a25",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "443cae1d-7bdb-4531-b546-1950cc92f00b"
        },
        "item": {
          "id": "98a2c768-ad51-4629-b4ed-cd25d25ae7dd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2f1ff4f4-6227-4a73-bc4a-a04bf904d10e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3003a9d7-08f5-401d-8b9c-1071ccabf32c",
        "cursor": {
          "ref": "ce7d47dc-a7b6-4ea4-8898-80c0464c8a2b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8e3ddfe8-8001-45f0-aee9-5fa93e992327"
        },
        "item": {
          "id": "3003a9d7-08f5-401d-8b9c-1071ccabf32c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2767f5d9-af8d-403f-842b-781bf6ac7a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baadfed-1a45-47c5-bf0e-68f72ad392cf",
        "cursor": {
          "ref": "e71b8ae8-739c-4344-b227-fac78fd743d8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a93722b9-27f7-4af2-b1d8-7666adf580ab"
        },
        "item": {
          "id": "5baadfed-1a45-47c5-bf0e-68f72ad392cf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "320a165b-a878-489f-ba8b-bbc75a936386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d18ef-d9d0-47af-88a3-27b668217895",
        "cursor": {
          "ref": "147e2790-9d14-4fea-be75-9986a58dbc75",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bf73831e-9046-4d37-916d-0f81641261c3"
        },
        "item": {
          "id": "088d18ef-d9d0-47af-88a3-27b668217895",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2e20f48a-6a92-4691-b00f-f2c789f596be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb1f046-471b-4ff1-9b90-243d457060d3",
        "cursor": {
          "ref": "03900c07-f643-4e08-833b-db69a3d54b8f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5122edae-1016-429a-aa74-2fe5595b317d"
        },
        "item": {
          "id": "5eb1f046-471b-4ff1-9b90-243d457060d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "51228952-6776-4fea-a7ac-ad9bb282d0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f70115b-1156-42a1-8519-45ef2c05671c",
        "cursor": {
          "ref": "ebf81b1e-662b-4310-a774-46103015b1a0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9048025-73d2-4272-a1c3-f4c16c7ac39b"
        },
        "item": {
          "id": "0f70115b-1156-42a1-8519-45ef2c05671c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "24c228ff-ae9a-45c8-affb-42ed75ff827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfd5156-afc8-4d19-aba8-3bb38e061e65",
        "cursor": {
          "ref": "45957240-a720-4711-b55b-47dd333981a2",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f8197fc5-6927-47a8-bb95-332591927d25"
        },
        "item": {
          "id": "fbfd5156-afc8-4d19-aba8-3bb38e061e65",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e457f0b-1fa9-406a-9e4a-ec2d9c4ee7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d6c4e8-66d0-4803-a2c1-84076fc772f7",
        "cursor": {
          "ref": "79a8e59d-6925-4d00-8690-8acc1d4dab3b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "db0361b9-1353-4eb7-9756-f664dafc80b4"
        },
        "item": {
          "id": "80d6c4e8-66d0-4803-a2c1-84076fc772f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "40ec636a-4272-43ce-94b5-f1d2d5e64899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e2c49d-7a5a-4d14-ad83-09150e3ce5e5",
        "cursor": {
          "ref": "b57f6c39-24bc-4650-92be-d3feb9a3ba37",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a173fbac-60c7-4373-b229-5296c0db1032"
        },
        "item": {
          "id": "80e2c49d-7a5a-4d14-ad83-09150e3ce5e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "57449b03-35eb-42f5-b99e-0e0afc1512d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ffa7e3-0fc3-4d5f-9879-d24a326cdf94",
        "cursor": {
          "ref": "70b3c60f-fecc-4c35-a0e9-4bd336a5771a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "35d76418-e8d6-43c4-a01d-c20a8d9382e3"
        },
        "item": {
          "id": "f5ffa7e3-0fc3-4d5f-9879-d24a326cdf94",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "22b27f17-b3a0-4331-ba6f-a5c2797bd351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e479e0d-b6b0-44f8-bb64-097206c93c34",
        "cursor": {
          "ref": "eec7b2fb-5424-4795-892b-c2ee10c1160c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fa785611-bc77-4cde-964d-d6ec5d74b80a"
        },
        "item": {
          "id": "2e479e0d-b6b0-44f8-bb64-097206c93c34",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "03647b4b-532e-480a-adf7-d5cc5db4fc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033b553e-c82b-41e6-8b46-321a979ece2f",
        "cursor": {
          "ref": "133fd47f-233a-4466-9a08-32d5c7074014",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d65cf254-ec50-48c5-a047-7bd04eb5e576"
        },
        "item": {
          "id": "033b553e-c82b-41e6-8b46-321a979ece2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0f14bc84-d3f5-4e77-a079-64dec11dd49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43c4314-9141-4551-a7c0-860149177f4a",
        "cursor": {
          "ref": "7013e213-6677-412e-b40e-6ac4c8a50d9e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "91820ab2-2544-4dca-8494-291aa8f301e5"
        },
        "item": {
          "id": "f43c4314-9141-4551-a7c0-860149177f4a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "604d44ba-84c5-42d4-925a-1f6a1468d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef801b7-af4b-49c0-9608-7a05d12413fd",
        "cursor": {
          "ref": "02459f79-9590-4b02-b54e-26937ec81446",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fa4564cf-980b-407b-ac70-ea64e3e48efb"
        },
        "item": {
          "id": "2ef801b7-af4b-49c0-9608-7a05d12413fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1fb8b1c9-4409-4f3b-9f24-dce3a602d41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c554e9fd-5ff7-4961-a26a-08359628b74f",
        "cursor": {
          "ref": "d02c42d2-e4be-4356-85c1-7ffb09d3cd81",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6d41d7b5-d968-4970-9656-7897a4ae8a58"
        },
        "item": {
          "id": "c554e9fd-5ff7-4961-a26a-08359628b74f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e82d6941-2dfc-41d7-a058-13af0a66fe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9eccb5-b98c-4ed6-ba6c-40325ea1fd4b",
        "cursor": {
          "ref": "ed9f2942-948d-4d0c-8829-fa4be476821d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "812da791-f16f-4f54-aa0e-753a78b3642e"
        },
        "item": {
          "id": "8f9eccb5-b98c-4ed6-ba6c-40325ea1fd4b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bbf2f788-ef92-4ad1-99db-c58e69346cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802a5db1-5699-4561-9dbe-4f8866b95c4d",
        "cursor": {
          "ref": "26d77f65-e48d-42e8-a28f-24c0b20986d5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bb88adf9-82d0-4c42-8487-65350385dc17"
        },
        "item": {
          "id": "802a5db1-5699-4561-9dbe-4f8866b95c4d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "56d6cd43-2d10-42f7-8628-2fdcaf37199d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcda205-2881-4e40-8317-8b35e8175b87",
        "cursor": {
          "ref": "06fa4991-a6fd-4ecb-a275-c7387ecd4553",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1bb75fff-3e84-47fb-ad26-4bbf506d1a69"
        },
        "item": {
          "id": "abcda205-2881-4e40-8317-8b35e8175b87",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "90544ab9-d6b4-4056-a12f-9380e29b67a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900abbe9-ad32-43bc-b99e-200281fa8f1b",
        "cursor": {
          "ref": "3515acec-057e-40d0-9e36-f139ac5b9b4d",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f709236c-c7a4-4d17-a691-1e1b1536b5f0"
        },
        "item": {
          "id": "900abbe9-ad32-43bc-b99e-200281fa8f1b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d1f80fae-9c79-489e-ab0f-6adf9c6306f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05f73c0-99d8-45cf-a464-694fbf944bf0",
        "cursor": {
          "ref": "a828ed59-5ac3-49c2-a5dc-d8502b10b657",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a45b6b3b-b1f2-4c40-830b-bebde7cfa350"
        },
        "item": {
          "id": "b05f73c0-99d8-45cf-a464-694fbf944bf0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f9c15965-48c8-4a27-bd2b-9ace89db8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313a4aab-2ef3-45e4-8783-439f22620deb",
        "cursor": {
          "ref": "b36ddfaf-d853-4cd8-a3e4-4230b81bc881",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "69549a45-e430-459a-95d3-59b50cf34ae3"
        },
        "item": {
          "id": "313a4aab-2ef3-45e4-8783-439f22620deb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f249d128-e1db-4dcd-bdc0-d72bd8f31c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa56f606-5175-47da-9c15-f8aae4526355",
        "cursor": {
          "ref": "322a07e5-820b-4978-a19c-5a81fde67557",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c16554cd-b58f-45ce-a1ca-b6b0a9afd2b5"
        },
        "item": {
          "id": "fa56f606-5175-47da-9c15-f8aae4526355",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6b15b970-fc29-4ed2-b44c-5f2892679365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed7395e-a986-4603-b818-db880fd5cafc",
        "cursor": {
          "ref": "8f7ce8ae-fb7e-491c-b8c6-34a0b8d08f03",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cf8cfcf2-a6d5-40eb-b0a1-63baa8f3bbdc"
        },
        "item": {
          "id": "7ed7395e-a986-4603-b818-db880fd5cafc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3dcac881-3d8e-4bc0-83a2-3af2bc7f1a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb1d7f-334e-4205-a1b3-a47b1017c134",
        "cursor": {
          "ref": "ea6f2a25-042a-4adf-b301-9523a20564e8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0bc5bf18-5c48-44d0-b497-38356ec7bcb7"
        },
        "item": {
          "id": "17bb1d7f-334e-4205-a1b3-a47b1017c134",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "14117475-4fb1-4b8a-b3fe-4c04082faccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137784ff-b92b-406a-8bbb-89516bb5fcb2",
        "cursor": {
          "ref": "a9b0bda6-224f-47d0-be11-bbee40d7cd18",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "025e373c-02f5-4491-b753-e407bd8c1fdd"
        },
        "item": {
          "id": "137784ff-b92b-406a-8bbb-89516bb5fcb2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0468029-dd29-4757-ad27-372b2ccc7313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e39c9a-6841-4138-bebb-e62754a324d1",
        "cursor": {
          "ref": "243c4d58-1d5c-4948-9037-83a920f013a5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77e85d5b-6141-4655-bd23-448941641896"
        },
        "item": {
          "id": "b6e39c9a-6841-4138-bebb-e62754a324d1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eb855f62-b4de-4744-b95e-010e37798087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b6c0b9-393d-48a7-a8ca-8498344b117e",
        "cursor": {
          "ref": "8fcf3241-e303-4b22-800e-6150d275de49",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7db40cf0-2be6-41f8-8b1a-85350e1bfb61"
        },
        "item": {
          "id": "b3b6c0b9-393d-48a7-a8ca-8498344b117e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "84446c64-d052-4673-88b0-d950580ebada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f596e0e-3317-458a-a1ab-57ecd942530d",
        "cursor": {
          "ref": "1d1f6926-25d3-4d2d-a46a-7271ba69bc58",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "599eb881-de93-419d-8da2-f1a1f7925ed1"
        },
        "item": {
          "id": "0f596e0e-3317-458a-a1ab-57ecd942530d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7db31879-43ee-4839-ab16-ebacfb223e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde4417f-dc04-4e8e-9e87-b99669272320",
        "cursor": {
          "ref": "d9ccf16a-048b-47ba-b79b-738e9f44538f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3e186c07-2c62-4844-a7bb-ba3a10e48918"
        },
        "item": {
          "id": "bde4417f-dc04-4e8e-9e87-b99669272320",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9d6d9bb5-138e-4b1c-96cf-acada72bbf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede7c0c8-91a1-4e43-a9ee-22c62ccfff11",
        "cursor": {
          "ref": "85daa9c1-198d-4a58-a80b-1c3e9d3d8e60",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1eaadc35-f3dc-4085-87dc-964bf72854f0"
        },
        "item": {
          "id": "ede7c0c8-91a1-4e43-a9ee-22c62ccfff11",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "acaddf67-a146-421c-a2fe-76e9f4862a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8f64eb-450c-4f02-ae31-00d5eacc9ee1",
        "cursor": {
          "ref": "9fcbceb7-939f-4c28-8de6-b55fb8db12ce",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cfde7a94-542a-48aa-90a6-11aa16eadfef"
        },
        "item": {
          "id": "7f8f64eb-450c-4f02-ae31-00d5eacc9ee1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0db796ed-0d67-4743-9830-ee99a0cbf429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ce7878-9a02-454f-bcb8-1c0482f1196c",
        "cursor": {
          "ref": "84ddb7d4-1561-4a5d-995c-e0575e1ba316",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1c4be761-9297-4f11-9c46-1dfd8dc5388b"
        },
        "item": {
          "id": "d7ce7878-9a02-454f-bcb8-1c0482f1196c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "97c9f8dc-f022-421d-bbe6-2c5c84fbeedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cae2d3-c8c4-4b71-834e-ec428ed7a2a8",
        "cursor": {
          "ref": "ff046839-04bf-4348-b227-e8930afb8be8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f81c96b2-0119-4a0f-a44a-04c1eea52b05"
        },
        "item": {
          "id": "e0cae2d3-c8c4-4b71-834e-ec428ed7a2a8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "52f7d840-fe32-4a1a-a2c1-0923e35faebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456d65ed-abb7-4bdb-bb54-64949781eb3b",
        "cursor": {
          "ref": "22cec6f4-20d1-425f-b4b0-13be3331de92",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c34b937d-62eb-45ea-8c7f-1b145f4eeeed"
        },
        "item": {
          "id": "456d65ed-abb7-4bdb-bb54-64949781eb3b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e5587674-c918-4846-95dc-17fd9c1806da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c724fb3b-cfcc-4cd7-bb8c-8c1e46c7c9e7",
        "cursor": {
          "ref": "049cf262-d9ac-463a-b81a-3028f8813319",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f737453c-5848-44b7-9387-a1e82b16f3c5"
        },
        "item": {
          "id": "c724fb3b-cfcc-4cd7-bb8c-8c1e46c7c9e7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a18c29f6-d022-4136-bbfd-2dc077e53256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d190d58-8cc5-4e2d-9925-266c5be0b1a7",
        "cursor": {
          "ref": "9e8970e7-5bb0-4ad0-ad64-5dee5f070aa1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "70565767-a25b-4d60-9725-af3ec38e4fab"
        },
        "item": {
          "id": "0d190d58-8cc5-4e2d-9925-266c5be0b1a7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7248d880-0fc7-49ea-8e0f-aed6748cf817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd61b736-d0a6-4a49-b0e2-ddc6b2b3c30a",
        "cursor": {
          "ref": "770c5ed9-8b46-4d59-be57-a083112baf12",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "81db4f7b-f7f3-490e-b7ef-b015828545f3"
        },
        "item": {
          "id": "dd61b736-d0a6-4a49-b0e2-ddc6b2b3c30a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dadeed19-557e-4bb2-aa80-c41e210548bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31544623-42f1-4ec1-abdc-b450b468965b",
        "cursor": {
          "ref": "65b15f0a-0ae8-47d9-960e-41a2586873c7",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "38c4c683-9df3-42fa-8ca8-c7772fa49330"
        },
        "item": {
          "id": "31544623-42f1-4ec1-abdc-b450b468965b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e601cdd6-9b21-457e-a139-07389e0f8543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d40f3cc-4270-4fd3-b84f-b92432eed026",
        "cursor": {
          "ref": "9260b42c-a3d8-453d-80da-09fbbfb3c556",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d55a3dce-2c0e-4b09-9e2a-d6821e871c37"
        },
        "item": {
          "id": "6d40f3cc-4270-4fd3-b84f-b92432eed026",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24854921-a1be-4f0b-bedd-b86a35f18838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d8f5cd-fdd2-4010-b6bd-1afb2272b3c3",
        "cursor": {
          "ref": "11298996-1605-4702-8c74-73e864c271ed",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9fe1a964-a6b2-4179-9fdc-009c9ad2e758"
        },
        "item": {
          "id": "00d8f5cd-fdd2-4010-b6bd-1afb2272b3c3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6b0f95e9-363d-4006-bbae-558675f5b796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae0f53-00e0-4b8d-a63c-40e72bc1b697",
        "cursor": {
          "ref": "a4141001-1ba4-4acf-a394-1eabd2026237",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "77ae14ef-aa8f-458c-87fd-6e0c699c8668"
        },
        "item": {
          "id": "13ae0f53-00e0-4b8d-a63c-40e72bc1b697",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a47cc6b8-3368-49db-89e2-e204a11190cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c70218f-c4ff-41b3-b707-7e80afe1bc41",
        "cursor": {
          "ref": "596eff4c-67dc-4341-b67f-0e76a82065be",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f955e3c3-274c-4ca4-b183-fd6c71a8ff72"
        },
        "item": {
          "id": "9c70218f-c4ff-41b3-b707-7e80afe1bc41",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8067760c-4bd7-43af-b60c-80181d57cc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6932040-c312-488c-a4ca-94cb5f65da2a",
        "cursor": {
          "ref": "d53b6be6-6019-4216-a517-c69125b2e4c3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c78e003d-cb3f-46ff-9206-8ff722e019b4"
        },
        "item": {
          "id": "f6932040-c312-488c-a4ca-94cb5f65da2a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "92e9ffaf-66da-4f2c-a37f-00e923bb93ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4b4d83-5db4-4ae1-8a3e-c37ed63089be",
        "cursor": {
          "ref": "028f6e8d-6862-4533-b788-11e6cab7eed2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d7f4af77-8298-43ad-af6a-1ff50f84d31d"
        },
        "item": {
          "id": "0d4b4d83-5db4-4ae1-8a3e-c37ed63089be",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c5ff7f72-9302-473c-81f0-629c58e43570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83aab763-b04d-4f51-97ee-3dcf2ae48bc5",
        "cursor": {
          "ref": "3667dcb2-c482-422d-9ba8-846ed0d2d444",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c5e7323c-e4fd-4ec9-8316-630a04dddb6f"
        },
        "item": {
          "id": "83aab763-b04d-4f51-97ee-3dcf2ae48bc5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "921588b1-8939-45ee-8d0d-e8801c36a221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5ff951-e576-4f25-a717-1f818340bacd",
        "cursor": {
          "ref": "8a7b6da8-f0d2-4ee5-a9b2-550e1501ab07",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6bfaf288-cd7d-407e-86ea-089d0ce57667"
        },
        "item": {
          "id": "0c5ff951-e576-4f25-a717-1f818340bacd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c22282d0-730c-4756-ab56-ef89b43d1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2a27bb-fe60-4c3c-9a16-057e1e0a4f4e",
        "cursor": {
          "ref": "9fbedd80-60b4-4037-8f98-36dacdce4ecc",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "22d0a3ce-589d-4db2-87d5-e52d111dd4d4"
        },
        "item": {
          "id": "ff2a27bb-fe60-4c3c-9a16-057e1e0a4f4e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "336e75f5-e83a-4bfb-9f48-306306bf3fa0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30e2ac6-88f8-4447-9606-5b8c2126106f",
        "cursor": {
          "ref": "3ee7a8a0-5960-4b89-8368-f43188aeedec",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "04603d49-92c7-4603-8c08-ce6a04bb4a3e"
        },
        "item": {
          "id": "d30e2ac6-88f8-4447-9606-5b8c2126106f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "af69eb19-27f8-4cf6-a4ca-8c86b81f3fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e90c535f-4a87-43e7-b8ef-113e8c209d55",
        "cursor": {
          "ref": "b82de54f-90e3-4ca0-ba48-690b1c827dea",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0d95f7a7-21ae-4e40-906b-5013646c4ee8"
        },
        "item": {
          "id": "e90c535f-4a87-43e7-b8ef-113e8c209d55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "92a770c1-35a1-4c39-92f2-30ed97dbbcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a0a480c8-d9e9-444f-a2aa-0eca953babe3",
        "cursor": {
          "ref": "4d8fae46-be29-4c32-976b-86a74453b8b7",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "486c16f4-3259-4719-8c61-fbf4fa5fb378"
        },
        "item": {
          "id": "a0a480c8-d9e9-444f-a2aa-0eca953babe3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9249a461-45a1-4b1a-94e6-05e5e6791bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "af6cc30b-274a-4db2-ab34-05255222b5c6",
        "cursor": {
          "ref": "a2a55a23-41de-4064-a50f-8c2d3315e0a4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46a5eb17-6aab-47d6-84f0-a20ebffd92ef"
        },
        "item": {
          "id": "af6cc30b-274a-4db2-ab34-05255222b5c6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "74fd8455-0356-41b0-97f8-b5a2a72d635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a522ddab-91b5-4985-b1ef-e6195dcb30fc",
        "cursor": {
          "ref": "82573481-fa48-42e4-824b-a2557bd8dc52",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2f9baa48-b907-4bbb-bfbb-163b94128809"
        },
        "item": {
          "id": "a522ddab-91b5-4985-b1ef-e6195dcb30fc",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "23c9b9ee-2638-4c24-b5fa-023739c72dec",
          "status": "Created",
          "code": 201,
          "responseTime": 6937,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cbd831-98a9-41ef-9ecc-9ef10c05314d",
        "cursor": {
          "ref": "fe12678d-0531-44a2-869d-1cb6411c8acc",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "410d634d-c97c-4abd-b00a-369c87322d6d"
        },
        "item": {
          "id": "c0cbd831-98a9-41ef-9ecc-9ef10c05314d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "071ab310-a58a-4f30-ad6e-f4ea942a17cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a687265c-d358-482c-87d9-c39fb33b049c",
        "cursor": {
          "ref": "243edb31-ebd7-48a0-a98a-75b07fa8d50a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "023311c5-ac55-46b9-b411-8c34ce3e6c8c"
        },
        "item": {
          "id": "a687265c-d358-482c-87d9-c39fb33b049c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fd34f8af-f220-48b7-b167-0eb3d2788e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a12b06ec-4db0-42f9-9388-a80b9e19f762",
        "cursor": {
          "ref": "8f0804a7-245f-426d-ba66-92fbd81fdb1b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2c825be2-d4d9-4cfb-965d-d6a66a61374c"
        },
        "item": {
          "id": "a12b06ec-4db0-42f9-9388-a80b9e19f762",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0513337a-8d05-4b9f-8ff7-37cd8de4f831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136792a1-9792-48c0-89cf-a2f675e454d1",
        "cursor": {
          "ref": "dce1ac5f-5ffc-4738-93c5-487f54d8d975",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4c12dd1a-515d-43b4-afe2-3b127377982d"
        },
        "item": {
          "id": "136792a1-9792-48c0-89cf-a2f675e454d1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3c057a0d-c858-4edc-a780-9682bc4bdd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4e6761-1099-402c-96a1-79b7ce557638",
        "cursor": {
          "ref": "6d1ffb4a-b9e8-43dd-bcbb-e535987b4d46",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a81f5114-613c-4682-a5f4-4eecf1c96db7"
        },
        "item": {
          "id": "1e4e6761-1099-402c-96a1-79b7ce557638",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e861a5d-ba0b-459d-9bc8-38b05382af7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1640f8-b701-4daa-8c92-e3fb643ddd31",
        "cursor": {
          "ref": "6b7698c6-0ff7-4c6f-8349-06f2e8bd55ae",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b95ef743-2236-4cc1-896f-9a0099c16932"
        },
        "item": {
          "id": "bd1640f8-b701-4daa-8c92-e3fb643ddd31",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b535fc39-6b59-4e6c-abd8-e3808ac20a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931a5ff1-716e-4139-a63e-926965ebdab4",
        "cursor": {
          "ref": "453bde80-e1ee-4f47-83f1-a888b09fb001",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "320161a5-763b-4a9d-ab94-5b7157df3436"
        },
        "item": {
          "id": "931a5ff1-716e-4139-a63e-926965ebdab4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9d41dda6-1ed7-4f60-aa86-2a4354872f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfbdfc9-8d62-4020-80d7-f9425c18434b",
        "cursor": {
          "ref": "f74e0fa4-d74f-4ccb-be37-571d6c8535d4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "13b1114c-cf04-4b33-9fc6-4ec49bc7bec2"
        },
        "item": {
          "id": "4cfbdfc9-8d62-4020-80d7-f9425c18434b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18961fe6-5756-4b93-808f-7ad211823b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001744fa-55f0-4dba-a009-493c1de436f0",
        "cursor": {
          "ref": "9ead9df6-2858-487b-847b-4263f877730e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "15b21bb4-ca27-4d8f-a996-fe83bb995e47"
        },
        "item": {
          "id": "001744fa-55f0-4dba-a009-493c1de436f0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c7b36de0-11cb-4f12-a549-f50e700e4edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa2aee-cd8c-417f-88c8-5621505794a3",
        "cursor": {
          "ref": "51eedca8-9648-4860-9a93-947706df3e36",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a8ba0f72-d2fb-48c9-865e-217b81425744"
        },
        "item": {
          "id": "f8fa2aee-cd8c-417f-88c8-5621505794a3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9184e89e-4356-43a3-bbb8-b17fd9640cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff797f56-ff52-4a81-beed-bc78b41fe829",
        "cursor": {
          "ref": "1e98d8a5-41ba-45d8-ba33-6744f03fc9fb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b830ae14-d1fb-47a8-aeaf-dd40ddb13738"
        },
        "item": {
          "id": "ff797f56-ff52-4a81-beed-bc78b41fe829",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df136bc7-947a-4c45-8d58-8b27ae61d165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde2f41b-5519-456d-b69f-e081bb518894",
        "cursor": {
          "ref": "2432644a-9503-42a0-b1c4-bfe9e9330134",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "00dd0565-cc6a-4570-ad88-aca7340e1b62"
        },
        "item": {
          "id": "dde2f41b-5519-456d-b69f-e081bb518894",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5eb6a58f-4c6a-42af-a5e3-88fd201c466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e3ed9e-8b7f-4157-9c53-7c537fdffe86",
        "cursor": {
          "ref": "10988894-7433-414a-a415-1a7995a789ec",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "634eaf47-5ab2-4c58-808b-a3bbb8060c01"
        },
        "item": {
          "id": "71e3ed9e-8b7f-4157-9c53-7c537fdffe86",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ccf64db-6706-40f3-8d17-d4ddae7786c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631e6e61-4c4f-45c0-9c36-65e45d1353d8",
        "cursor": {
          "ref": "795a267d-7da2-4b1e-b797-976df0c6992f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "45cca867-9813-4812-911e-82c21597a800"
        },
        "item": {
          "id": "631e6e61-4c4f-45c0-9c36-65e45d1353d8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8557c72e-c21c-4283-9722-6edcca95007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded14d37-4845-42f7-8689-99cbab185550",
        "cursor": {
          "ref": "50d376f0-f742-4d37-88ab-aad81ca1462c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "585dc813-0d13-42b6-9240-7ada00540dc6"
        },
        "item": {
          "id": "ded14d37-4845-42f7-8689-99cbab185550",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e16fc692-59f3-4067-a283-88cf804c3ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0044b60a-bc75-4d68-a38c-584f62055ecb",
        "cursor": {
          "ref": "b98b9871-e031-42ba-8e9d-2cef7ce7654d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6528e13-681a-41ae-b888-d9ea1f8f345b"
        },
        "item": {
          "id": "0044b60a-bc75-4d68-a38c-584f62055ecb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fe488c19-43bb-4694-b942-8cda1d9b3c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36a155b-11fe-425c-9b4b-b36b4bf792f4",
        "cursor": {
          "ref": "7146ccef-e02a-477e-81bc-4fffa485001f",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9cf76782-e66a-49f8-b7c3-89a93ca3d4e6"
        },
        "item": {
          "id": "b36a155b-11fe-425c-9b4b-b36b4bf792f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "876f1ba5-37d1-48f6-867d-7ab0c6e7c6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd641678-b47e-40b7-8f67-6cc98e0973ac",
        "cursor": {
          "ref": "9952b4f5-8fc3-47ba-94ac-e65e6f622bd8",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "59aeee37-8feb-49af-97b6-e0c586759a5a"
        },
        "item": {
          "id": "fd641678-b47e-40b7-8f67-6cc98e0973ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c4cc7ab8-cb79-4928-95fb-a14d85d7e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7ae2a0-2b65-4a26-b1a0-3b86fd15ee71",
        "cursor": {
          "ref": "dc2c1f2a-de00-4b49-8f58-346e9beaef74",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e42f7ff6-413d-46ca-a539-6c6a38c681a3"
        },
        "item": {
          "id": "ca7ae2a0-2b65-4a26-b1a0-3b86fd15ee71",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ca4c8a5-0f5f-4255-aadc-c6b868bfef1b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "0b5b36a4-261e-4efc-a9cb-0514bc539257",
        "cursor": {
          "ref": "78ec6ed3-f87d-4b62-8420-e0cea58ad326",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cd19ba88-5bba-49bf-be2e-26f9dc7b41a1"
        },
        "item": {
          "id": "0b5b36a4-261e-4efc-a9cb-0514bc539257",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9248cf86-8e90-4d75-b4d6-adaae76b8830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d939fb4-618a-46f4-9df1-58fe9ad5d72b",
        "cursor": {
          "ref": "eddcb624-a4a3-42b7-91c6-9f7690d6a74a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5a3e5c99-1d19-4175-8344-46187c65dc33"
        },
        "item": {
          "id": "8d939fb4-618a-46f4-9df1-58fe9ad5d72b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d75a4cbe-9b79-433a-acb6-3af0d9548ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986fc62c-95b7-440a-b88d-7ac500b16da7",
        "cursor": {
          "ref": "7ef66822-5c19-4b3e-a679-611a0a09111c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5be62d60-0919-47fa-9f0e-87ea59ff8d9a"
        },
        "item": {
          "id": "986fc62c-95b7-440a-b88d-7ac500b16da7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ad46aec9-a8e0-4cc2-9f8f-f7ea6f0836b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cd0245-d85b-4159-bf4b-05c788fb581d",
        "cursor": {
          "ref": "67cbd460-7935-43bd-995b-632e820282a9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a680358-dd66-404c-b04b-c818695b2e8f"
        },
        "item": {
          "id": "42cd0245-d85b-4159-bf4b-05c788fb581d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3b48a30f-a755-4eb7-a610-c1befbd48854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc646f93-01a8-43e3-902f-a50a7a4e24f1",
        "cursor": {
          "ref": "7cc572ca-ad87-4cc8-853f-869e8766e85d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e90f6302-e090-456a-99cb-f1339d2a88e2"
        },
        "item": {
          "id": "fc646f93-01a8-43e3-902f-a50a7a4e24f1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a93de974-9a45-49a3-8d62-447e6515528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f34c82-d7e9-4a77-87e8-baab7e9e16c8",
        "cursor": {
          "ref": "9044c8b6-f448-441b-baf0-ce2450960231",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2de4b18c-5f64-4dcf-b914-2e6c4afc7612"
        },
        "item": {
          "id": "f2f34c82-d7e9-4a77-87e8-baab7e9e16c8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ee3dbc4-de79-4f0b-a698-d05cf8622c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1912e6c8-d5e1-4f70-8d5e-dd6d3aed0ea8",
        "cursor": {
          "ref": "e42d29b0-f149-42e4-9c45-65c9e77faadf",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "30b9d840-2741-4326-907b-8838399aaeb2"
        },
        "item": {
          "id": "1912e6c8-d5e1-4f70-8d5e-dd6d3aed0ea8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1cbacf2a-7ee5-46ae-85e1-f14c223f2d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b67564b-8b3c-4d63-8402-e80d985d9a6b",
        "cursor": {
          "ref": "7793d31c-c310-4c5f-9818-76e9eebfaf34",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "130ddc83-4670-4e23-a6a3-b9d092f30c75"
        },
        "item": {
          "id": "7b67564b-8b3c-4d63-8402-e80d985d9a6b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "00f403d4-ce8c-419c-a411-b595d64a6859",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "147d14d9-d408-4411-89da-4427d744f3a2",
        "cursor": {
          "ref": "c459ab26-5fb9-4d79-a9ca-2c52b81f5d5d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dde4b041-2575-4227-841a-439a24d46b17"
        },
        "item": {
          "id": "147d14d9-d408-4411-89da-4427d744f3a2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2583634f-204e-425f-8526-dd71a9e3282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f350b2-5827-4865-971c-628e034fff0a",
        "cursor": {
          "ref": "054b530f-ba94-4069-a369-3b77d00073f3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b8001f5b-cc8a-4e57-9408-8c70504ef408"
        },
        "item": {
          "id": "93f350b2-5827-4865-971c-628e034fff0a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c0612a2c-0fbc-4c3c-8427-50d3c611bb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4527408e-b97b-46f0-9e6f-6bb1bcee6c5a",
        "cursor": {
          "ref": "0ca9cf1d-24ce-411a-8078-e3cd40999749",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e5cd1787-44cc-446c-8166-0ec295bcc5f9"
        },
        "item": {
          "id": "4527408e-b97b-46f0-9e6f-6bb1bcee6c5a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31fb9fc4-c0d8-4720-9386-961127e4832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d9bdf5-f26a-40b3-93de-a225658b7a15",
        "cursor": {
          "ref": "0f5c1703-395a-42f9-b84a-89a7520b901a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5892b698-2664-4681-9662-f4b9ea28ef74"
        },
        "item": {
          "id": "f1d9bdf5-f26a-40b3-93de-a225658b7a15",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ec1a21b6-b991-48d7-bbe4-266baecc7090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df70793a-01ce-41db-a119-def92e06eabd",
        "cursor": {
          "ref": "3b0813f6-7f2e-4c62-ac55-821caec83b9a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42cf3d22-7bdf-4796-ba06-8d64b0e62432"
        },
        "item": {
          "id": "df70793a-01ce-41db-a119-def92e06eabd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3d2f7a6-f710-4990-a7ba-e46b93263a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09c5d3-567d-4bd6-97d8-9ca814fcc0ca",
        "cursor": {
          "ref": "f3c35d44-4878-43dd-ba0e-3795aca242ad",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a8d53293-1623-4854-83e8-67be0e99c846"
        },
        "item": {
          "id": "ba09c5d3-567d-4bd6-97d8-9ca814fcc0ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c67db05e-3c2d-4f70-8028-f51ba3231fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2771d07-7123-4d16-9923-a764676be495",
        "cursor": {
          "ref": "70828771-fff6-4f33-8584-cf1b65535d1b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "301d8151-fa09-491e-9541-2632cdd7e587"
        },
        "item": {
          "id": "e2771d07-7123-4d16-9923-a764676be495",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d99f543c-45ea-4e80-8fea-12739e226511",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "81ab259b-06d3-498d-b54e-ccf44e0e4847",
        "cursor": {
          "ref": "fc11e36b-2f89-45fa-9e88-dc0de11b54d2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "51b656b7-1725-4997-b100-c2e940106ecc"
        },
        "item": {
          "id": "81ab259b-06d3-498d-b54e-ccf44e0e4847",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0cc25b9d-4252-4834-8aef-b590f46c95a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1000a7-c2c8-4565-bb80-f1cc992d610d",
        "cursor": {
          "ref": "f65f9539-b8d5-43c2-960d-8044a998a822",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "088233d2-ea4b-4138-b334-0c137c7d9911"
        },
        "item": {
          "id": "0a1000a7-c2c8-4565-bb80-f1cc992d610d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c34ba8d0-755e-482d-85b5-e9eef882f795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fa2921-6f87-4b1d-a137-a0a97dea830a",
        "cursor": {
          "ref": "02566557-a5ee-4022-a47c-0f879589e85c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "133045de-5778-4af9-b99d-6e0fab44a1c0"
        },
        "item": {
          "id": "b4fa2921-6f87-4b1d-a137-a0a97dea830a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "12205cdb-0255-4bed-b253-a86219df9bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d413272c-9c22-4b15-9cb7-49df76d0ca80",
        "cursor": {
          "ref": "3f6e0597-73a2-4018-85be-9c6b71f3a37d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "efa54c8b-9344-4035-9b5d-6eb5895c8a2d"
        },
        "item": {
          "id": "d413272c-9c22-4b15-9cb7-49df76d0ca80",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64bc1c48-7975-4551-b2f6-fc27862e0f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0fc0d0-a51e-4116-ac5f-51915622fdc4",
        "cursor": {
          "ref": "dadd239c-2090-450b-91b0-dc54c4f16d52",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4c930a7f-2bd5-4c93-b592-b2b66586b9a6"
        },
        "item": {
          "id": "0d0fc0d0-a51e-4116-ac5f-51915622fdc4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0da74ded-c9c2-436a-b194-be25ee6f26e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7002637e-aab5-4556-8f69-4b833d9dccea",
        "cursor": {
          "ref": "8267a7d7-ce52-4db2-8d8e-c8affd09e032",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6dcba005-f666-40dd-bc79-cd6ba1d9e1cf"
        },
        "item": {
          "id": "7002637e-aab5-4556-8f69-4b833d9dccea",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4030af48-e182-409e-96a2-d2814e5f1228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4640a9c5-6fe2-4985-8244-ea6b9f9bda2b",
        "cursor": {
          "ref": "c817e70f-3b1a-4dee-8fd5-1fdc9e64daf6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "dcd7bfa7-8f8e-47f2-9267-1a59c832fd29"
        },
        "item": {
          "id": "4640a9c5-6fe2-4985-8244-ea6b9f9bda2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad33b828-e67e-42d3-b82b-776154b02c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc054a-a04e-4a1b-8b57-9a124209ee27",
        "cursor": {
          "ref": "de8c87bc-cbaf-4903-9f5e-745183f2b694",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6db13d28-fc08-4732-89f4-a3e055b9a7d3"
        },
        "item": {
          "id": "33dc054a-a04e-4a1b-8b57-9a124209ee27",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fe9efcd6-f344-4ee6-92c8-39df8889b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a437544e-b789-4eae-977e-adb3a45152c4",
        "cursor": {
          "ref": "fb570c07-5b2c-4c60-a517-8ea6ea78043a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e4ca5644-4255-4a01-a183-0d7b11432add"
        },
        "item": {
          "id": "a437544e-b789-4eae-977e-adb3a45152c4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "74b9b1c4-5749-4568-9a5d-3b9585478354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa14a89-2d89-45e1-b3cb-c0c1d693bd4c",
        "cursor": {
          "ref": "bcdf2655-d3c4-4dc4-b6bf-5463465cf210",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "048c3cab-7120-45d5-8afe-71ffaf3e1882"
        },
        "item": {
          "id": "8fa14a89-2d89-45e1-b3cb-c0c1d693bd4c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b53f6af9-1159-4a09-85d4-06ab00f33cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90affea9-e2cc-4cee-b3f6-105e83ab85f9",
        "cursor": {
          "ref": "c530103c-fcc7-4738-9597-9c3edbaf4945",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d746972-1a74-4859-894d-9e18e7a6fbb8"
        },
        "item": {
          "id": "90affea9-e2cc-4cee-b3f6-105e83ab85f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "629f0fe7-b076-415c-ab04-ee00bed675fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2857b51-5d69-451a-b874-35560f4c600f",
        "cursor": {
          "ref": "5e71f903-ac18-4025-9bfe-b813ca66ad92",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bb3f52d0-f20b-4350-be75-93157265feca"
        },
        "item": {
          "id": "d2857b51-5d69-451a-b874-35560f4c600f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f32841bf-4445-431b-929e-e52a7911a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebc5c6b-aa16-4cf7-b004-45c2a60dfe7d",
        "cursor": {
          "ref": "ae00016b-ecff-4981-9adb-cca13103d475",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "851a83ea-9081-4046-b8e6-ffcf4b7d3c32"
        },
        "item": {
          "id": "7ebc5c6b-aa16-4cf7-b004-45c2a60dfe7d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bd7d3bca-dd1d-42f4-b88e-3a929650ebad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687b4845-a8d6-401b-8227-698321370588",
        "cursor": {
          "ref": "4f019192-7ba0-420c-9efd-34bd4e3a73d8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "69c7f7cb-8d57-471b-b3d4-cc01ba80ada8"
        },
        "item": {
          "id": "687b4845-a8d6-401b-8227-698321370588",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ab06bce1-6ab0-46a9-b473-02b3842c9204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e986049-edbd-4071-becb-c4487f21cb74",
        "cursor": {
          "ref": "2a4c98c8-bbc6-45b8-ae12-05b37eb175d8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "840b9173-b51a-4df0-95e9-4a0b48a5d567"
        },
        "item": {
          "id": "0e986049-edbd-4071-becb-c4487f21cb74",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e8590286-c62b-40e2-b503-1ded41bdb369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c917762-8461-414f-bfd6-539f84d1bf8f",
        "cursor": {
          "ref": "e6a595f5-0c85-440b-b5ef-d110b7a9fecd",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e4da26af-2db4-4c6c-8fd4-dfd406d5d190"
        },
        "item": {
          "id": "5c917762-8461-414f-bfd6-539f84d1bf8f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "acfbfe43-a534-4c4c-80c7-b3e398d17a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013a5724-3cee-4866-b8c8-785c9f9450fb",
        "cursor": {
          "ref": "f20a4cf8-0e76-4e49-8db3-fd5b0420aed4",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5445f4d6-b29f-4622-95af-3b9cab2cccdc"
        },
        "item": {
          "id": "013a5724-3cee-4866-b8c8-785c9f9450fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6535ac43-3f73-47f5-9a0b-b5c130c43ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870c5d7d-04cd-45ec-94e4-0c24392f729e",
        "cursor": {
          "ref": "9e0e5f0c-0e12-4c79-881f-9a31b81f73ac",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f639da72-e64d-439f-8c19-ebc38b88dbf4"
        },
        "item": {
          "id": "870c5d7d-04cd-45ec-94e4-0c24392f729e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fc445fd8-91a0-4162-9cf1-b1bf1dbb5fa3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "f4a09e2c-e9a6-48b2-a5c1-d869a44bdef2",
        "cursor": {
          "ref": "c775ddc8-abb7-4794-8a78-4991d3d58990",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ff0ddaed-a717-4ecf-b291-760b5589cb56"
        },
        "item": {
          "id": "f4a09e2c-e9a6-48b2-a5c1-d869a44bdef2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ae88721c-91b6-4769-8695-05268fe5a2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4246f30c-5136-4f80-838e-7da1d20fbedf",
        "cursor": {
          "ref": "429b42dc-09a3-40d5-a1bc-28fd8d8be5ad",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "34e9b09e-b9ae-47a4-a6e3-da9f97d1ffa7"
        },
        "item": {
          "id": "4246f30c-5136-4f80-838e-7da1d20fbedf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc681cd4-24bb-4a18-a3b3-cad53f40ffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7161a84-10b2-4f20-b95b-f00eb7968c1f",
        "cursor": {
          "ref": "c229a01f-05fd-4dba-9c6f-b54f9ba1d22d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "34369952-9a1e-4791-a6d8-84bada885829"
        },
        "item": {
          "id": "c7161a84-10b2-4f20-b95b-f00eb7968c1f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "172afb28-ce20-46c2-86d9-f3fee469c8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ae0465-333e-447d-8fb6-fafa2cf3fdd9",
        "cursor": {
          "ref": "969aa168-7f0b-4ede-8b9a-9f5a41e9ac21",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ca8861df-6136-4312-b976-d875565f9ed3"
        },
        "item": {
          "id": "19ae0465-333e-447d-8fb6-fafa2cf3fdd9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "96e2fdc2-2605-4f56-b739-9a9814d29bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419f47be-a758-4269-8294-e4f73a766120",
        "cursor": {
          "ref": "5ecd93b5-8cec-4bbf-af11-2007c994756b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "207a2fa7-fb82-4cd2-98cf-995e1b70eb99"
        },
        "item": {
          "id": "419f47be-a758-4269-8294-e4f73a766120",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "86cf1d06-d079-4eeb-9363-1331d8920515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13201ea3-ea17-41c1-87d4-c234933b1112",
        "cursor": {
          "ref": "ff3c1b8c-1f11-4d17-b59b-97cfc6a0e702",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "02789a83-681f-42ec-948a-cb45afc422e1"
        },
        "item": {
          "id": "13201ea3-ea17-41c1-87d4-c234933b1112",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ac1a54f-2771-4220-a35a-952043d19fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3bbe90-0fd6-4abd-9daf-f93a6d4be442",
        "cursor": {
          "ref": "dbef53df-9fea-4a2c-9e2d-e7c6891b6f40",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f891f35-496d-48dc-b1c3-c28811f9bf77"
        },
        "item": {
          "id": "2b3bbe90-0fd6-4abd-9daf-f93a6d4be442",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9e7a11d3-6196-4133-99a2-68fe9c9db3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251c8ecf-dedf-4127-8950-2300c58e7534",
        "cursor": {
          "ref": "e863c72e-27b3-4dcf-a1fe-95270de5783e",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "322df884-6e42-44d7-b6aa-b2b51c3bbc3d"
        },
        "item": {
          "id": "251c8ecf-dedf-4127-8950-2300c58e7534",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5caca0fe-b155-4c4c-be76-a1b0602a6703",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "bf47b864-e01c-48e2-9d97-41a96f7c0cde",
        "cursor": {
          "ref": "28cff008-f028-47e1-9788-a376446284f6",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "445b045a-c5a9-49c7-8981-09793e523ed5"
        },
        "item": {
          "id": "bf47b864-e01c-48e2-9d97-41a96f7c0cde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1128a9e5-bdd3-42f2-b505-416343869f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4ad57-8fed-4445-ac08-8e423668884c",
        "cursor": {
          "ref": "9cbd7acd-3772-4810-8f66-4c8f8afc762a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "59d50103-2dc1-4aa4-9f45-3e556427a84f"
        },
        "item": {
          "id": "32c4ad57-8fed-4445-ac08-8e423668884c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e4ea692b-05b2-4c96-9dcb-feeda8db7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dcb858-1e75-4b00-a5a4-b01893e6a6f6",
        "cursor": {
          "ref": "d4e34e72-f845-479f-98b4-646dedfd1954",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "118864cf-3eda-42ca-8bc1-366a1fe45536"
        },
        "item": {
          "id": "e4dcb858-1e75-4b00-a5a4-b01893e6a6f6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c2db90c5-d660-4e9b-8b25-2c32704b67fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94505f15-be28-4bf9-9220-8df0fb53100a",
        "cursor": {
          "ref": "268d9c6b-c5ad-49b5-812a-5468e62d2162",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9aed14a0-d01e-4ed1-80c7-e0695c8d37da"
        },
        "item": {
          "id": "94505f15-be28-4bf9-9220-8df0fb53100a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1fe7379a-d6f1-4a65-9de1-3371b69bdf93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f280c3-cb67-474d-a815-fe662f9154b3",
        "cursor": {
          "ref": "87c4c60a-fa75-4d42-946c-229333e538c7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0f7ec51b-1e51-4f69-b7a1-d55f4b496e5c"
        },
        "item": {
          "id": "a4f280c3-cb67-474d-a815-fe662f9154b3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cac797d9-d3d4-4b92-bfa3-fbf27891f7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08034738-fe95-489d-a269-bfdad63c11d7",
        "cursor": {
          "ref": "a40a2686-5c75-4279-b37e-d9b19b09ed86",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "13896547-37b0-4d95-b7f9-1ee1da3b7a7b"
        },
        "item": {
          "id": "08034738-fe95-489d-a269-bfdad63c11d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "74a09637-99ff-4439-a57f-2ef1c88eea4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b2a784-3887-4673-afe8-ced5682abccc",
        "cursor": {
          "ref": "68b40a2e-621b-42b4-a40e-0fb4d1a7a2ff",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cb4f77dc-f033-402a-831e-aa60a66031c2"
        },
        "item": {
          "id": "f2b2a784-3887-4673-afe8-ced5682abccc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ccb82728-2498-4a67-969a-dbbed46b2d8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "f9fafd56-5806-4bf3-ac4d-05e550d10f8b",
        "cursor": {
          "ref": "290ec234-3b95-4612-b23d-903b57470c8b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "45bfc75a-c6af-4eba-b1af-57cd64457e08"
        },
        "item": {
          "id": "f9fafd56-5806-4bf3-ac4d-05e550d10f8b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8628a2f4-fa27-4458-87c8-ff15211ba0a1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "445adb2d-11e8-4be8-adeb-14d95cda6084",
        "cursor": {
          "ref": "ad33fffb-201a-4e79-a14b-f604453d7254",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7897e8b3-7f6b-4be1-b6eb-64b25b56094f"
        },
        "item": {
          "id": "445adb2d-11e8-4be8-adeb-14d95cda6084",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f2085e59-c61d-41eb-ad7f-72436d2365cf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "1dfec45c-8350-4786-b306-2b06c9feb6fd",
        "cursor": {
          "ref": "bae38827-2c3f-4ff1-9992-758556ce1a8c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8e93b3c2-f11c-4104-834c-22d53d36a86f"
        },
        "item": {
          "id": "1dfec45c-8350-4786-b306-2b06c9feb6fd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "26053455-a4bb-426d-ad48-c304978799fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "1ae96f27-ef6c-4bbe-835c-31ec0d5d678f",
        "cursor": {
          "ref": "578e2e8d-b65c-4743-a399-f900cd85f2e8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "93e408f6-9e8b-4c18-8eaa-de733c9864b5"
        },
        "item": {
          "id": "1ae96f27-ef6c-4bbe-835c-31ec0d5d678f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7f2fe65a-6868-43e7-9a70-ce64515b2ca6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "7afcba53-59a9-4457-81c9-2de63a0a8b6a",
        "cursor": {
          "ref": "a8bea87d-5297-44ba-93c4-ccb048e1ef93",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a65ec460-2156-457e-a6a2-ec21bcceeea8"
        },
        "item": {
          "id": "7afcba53-59a9-4457-81c9-2de63a0a8b6a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8ecb5238-3700-4258-8b8a-b07e5abf0f14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "a84f8aba-3e03-4eed-8f97-c2e8136c7bf0",
        "cursor": {
          "ref": "dfadec3f-cbdc-4244-b59f-4716a822e134",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "22ac3e20-5040-49fe-b901-652842cf72cb"
        },
        "item": {
          "id": "a84f8aba-3e03-4eed-8f97-c2e8136c7bf0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "eb105d67-6341-4036-b591-9a5311e5fe3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01af953d-5471-4421-b6ef-db78609d73cb",
        "cursor": {
          "ref": "c8c37ed0-6b8e-4d28-812c-994e6c153f36",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "edac5e2e-65e8-49c7-9409-75b63c5daf2e"
        },
        "item": {
          "id": "01af953d-5471-4421-b6ef-db78609d73cb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "897007a4-2982-4ac1-8fc6-4476d5a18985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd624cd-51e2-4995-bf6d-dd5134c75a5c",
        "cursor": {
          "ref": "b9a6475d-6dbb-487a-b4b9-2739fef30655",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5afcd872-d7bd-4f70-b804-316c262e888a"
        },
        "item": {
          "id": "6cd624cd-51e2-4995-bf6d-dd5134c75a5c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dff0add7-3215-4c91-8ece-2f278795bb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b964c49-85cc-472e-bcfd-926f004680ce",
        "cursor": {
          "ref": "c512c98a-92a4-4cdc-8543-c01471fa9e0a",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e6e9cb25-4525-420c-a11b-2b3bb8ddba43"
        },
        "item": {
          "id": "4b964c49-85cc-472e-bcfd-926f004680ce",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5f2e5fb1-c9c0-4aa9-8818-4d8a84d145f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d29235-500e-4b2e-82c9-6a726ecf01d7",
        "cursor": {
          "ref": "40d1fdfd-c6e9-4907-a67b-fd66c1e162de",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7fcae334-95c1-4f81-abec-41fb01ff2e11"
        },
        "item": {
          "id": "26d29235-500e-4b2e-82c9-6a726ecf01d7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e8a956d9-eb13-4695-9fda-fabd37b7425d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a3505d-e800-4ab4-a681-1fbad0055300",
        "cursor": {
          "ref": "36cffd66-d0c2-4b0e-ae1e-9d2b20ff74fc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c0f289f0-88df-495b-b8a9-64f2fbe89117"
        },
        "item": {
          "id": "f9a3505d-e800-4ab4-a681-1fbad0055300",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c84ecd7d-6183-4ce6-803e-faa8aeeb7c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2dce9c-0479-4246-a79b-2e79f2d7a387",
        "cursor": {
          "ref": "f186bb02-f781-4859-a43e-ebc2e9373d1f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f0adc33f-0d6f-4700-b179-6d50495441dc"
        },
        "item": {
          "id": "ab2dce9c-0479-4246-a79b-2e79f2d7a387",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6f80c23d-af4c-47b5-add0-ed1273fd2aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c13ebd-94b1-499b-8bc6-b48c9b6349c7",
        "cursor": {
          "ref": "2cb4e251-0f9f-432a-b12e-b9845755e8c6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "18a5529d-ee46-4536-bed7-4a5fcd98e993"
        },
        "item": {
          "id": "46c13ebd-94b1-499b-8bc6-b48c9b6349c7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "35d40b4c-0f43-4862-9e82-4a41c28d185b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b89ba0-6363-446a-ab0e-04746256f2ec",
        "cursor": {
          "ref": "c0f44c70-bde2-48fc-883b-7065af1915f5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "262c8be4-c60f-417b-a7ad-3bdaeca4be98"
        },
        "item": {
          "id": "c9b89ba0-6363-446a-ab0e-04746256f2ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c4aaf2b0-52c0-4a6a-850a-cfd53654c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f7b7d3-1131-481d-93b4-9506e5405b9c",
        "cursor": {
          "ref": "0544b3a7-1091-43ae-8b6a-98a0a433118f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ef819846-80d2-49bc-96c2-8db1fe696a4d"
        },
        "item": {
          "id": "22f7b7d3-1131-481d-93b4-9506e5405b9c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cf17bacd-3b39-4e22-971c-f9c44eb05305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017e6a70-171e-4f6c-9a58-329f250ed96e",
        "cursor": {
          "ref": "644a3b8c-7cde-4152-9488-1055d7310839",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9fefbd13-2637-495c-bd7a-ccb7b4e69a0e"
        },
        "item": {
          "id": "017e6a70-171e-4f6c-9a58-329f250ed96e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f75c72a1-0560-4f7f-85f0-a33e13b8649b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6b9ec5-85f4-432e-b996-321517a7eec4",
        "cursor": {
          "ref": "45786b39-c580-428b-9659-0455aab49aec",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4cafcf8-f049-46ab-8496-cc1fdd7d160f"
        },
        "item": {
          "id": "8c6b9ec5-85f4-432e-b996-321517a7eec4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7c686d3b-8cc2-4682-a815-079f615e3354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319dbe2b-72d6-4206-9087-bb4c7fbf6647",
        "cursor": {
          "ref": "6826674f-3608-4d40-8829-57c50e502ca0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "45b8f7ef-ed3c-432c-b0b0-4dd2c477564f"
        },
        "item": {
          "id": "319dbe2b-72d6-4206-9087-bb4c7fbf6647",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ed82621-cf39-445a-8b0a-ffa10760ccfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2391c57-8c31-4c94-87a0-abc5213eae1f",
        "cursor": {
          "ref": "47b49150-9018-4806-a318-3aa88c178d9a",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "15533145-cac4-479f-817c-3656b913ff79"
        },
        "item": {
          "id": "f2391c57-8c31-4c94-87a0-abc5213eae1f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "77ca6882-26b2-4b5e-a1c3-c9fa16ea068b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3ab097-9b0f-404a-904d-2e04f07773fa",
        "cursor": {
          "ref": "eac749d7-f40b-444f-867c-4b50a4c2f561",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b8dd4871-473f-4cd0-bbf2-03532b5f895f"
        },
        "item": {
          "id": "0c3ab097-9b0f-404a-904d-2e04f07773fa",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3cbc726e-6a0b-4c26-a824-e3b00606ef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477373ca-d7dd-4a99-9df7-9f5b109bf60c",
        "cursor": {
          "ref": "91750a49-7a61-4377-8973-26842ac2e2f3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "465fef08-1f6f-4d54-991b-33f49cf9a69a"
        },
        "item": {
          "id": "477373ca-d7dd-4a99-9df7-9f5b109bf60c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d1b5a1ef-12a9-41f8-8784-93a5ac4be01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b1208a-98a8-473a-afb6-4bc4c83eb13e",
        "cursor": {
          "ref": "2c4227ed-a9d9-4da8-a311-7f6a62559cd1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebaa1f5b-90e1-4d10-a421-e08884ce3aa5"
        },
        "item": {
          "id": "e7b1208a-98a8-473a-afb6-4bc4c83eb13e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8468209-fce8-407c-8a04-6c3a27badeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47289a5a-b451-474f-9493-1fe1b75164f6",
        "cursor": {
          "ref": "ab21ffe3-223a-4306-b260-ee253b39a72f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4293378c-882a-4447-b149-26294bc9cfdb"
        },
        "item": {
          "id": "47289a5a-b451-474f-9493-1fe1b75164f6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fdd991d7-cdb0-4875-810b-61477fca1675",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "8f2f8629-c87a-45bf-9c00-eac4701bd91d",
        "cursor": {
          "ref": "6c7dea09-9bed-4561-a7dd-7cc2b7bec80d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7fef9dbf-4dab-45c9-8bd2-6474846ac82a"
        },
        "item": {
          "id": "8f2f8629-c87a-45bf-9c00-eac4701bd91d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6713c59a-4f77-4d82-b9e0-9d1448985662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c7d027-230a-42a3-a0b2-438576ec7eba",
        "cursor": {
          "ref": "97c72de1-5b9a-407a-81c9-54007fd6188b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4e900142-1b22-4698-aa84-f36e1625b24d"
        },
        "item": {
          "id": "23c7d027-230a-42a3-a0b2-438576ec7eba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "94d9168b-6dec-4238-b361-e5246e00d37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2b95a7-b807-46fe-9137-87424f5f5608",
        "cursor": {
          "ref": "db1b35a9-953c-4d74-ad26-de972a42eaae",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7b80d82c-a95c-4811-aaef-0dc413950531"
        },
        "item": {
          "id": "5a2b95a7-b807-46fe-9137-87424f5f5608",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "99a6db72-66e4-4080-bd5a-a7b770f966ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b5b15c-ad3f-4367-92b5-91e5b3974e0c",
        "cursor": {
          "ref": "307cb670-74c8-48bc-ab11-3d8495ba11e2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "73fd0033-b504-4f24-8d68-f507f7b12732"
        },
        "item": {
          "id": "05b5b15c-ad3f-4367-92b5-91e5b3974e0c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d43fbaea-151c-4a9d-b415-94b845db56c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bc5397-1363-46d9-8556-1b87b6b907fd",
        "cursor": {
          "ref": "4b246db7-3dc8-4892-bf91-1b0cd0c0525a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "45056a0c-274d-43dc-a677-df40760a4a48"
        },
        "item": {
          "id": "79bc5397-1363-46d9-8556-1b87b6b907fd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ef7f0d6e-850b-4b45-b659-1440ba310255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50480c7-7ef0-4b1a-afc3-1281e796d26c",
        "cursor": {
          "ref": "65d35962-c89e-44eb-9ea4-ffd398c53099",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4479ec3e-5a79-428c-adbb-79541369f8e3"
        },
        "item": {
          "id": "b50480c7-7ef0-4b1a-afc3-1281e796d26c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9882ced4-1c58-4f6c-8c3a-660fba171533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4673ece8-58bc-4526-bd3e-72acfa8575c1",
        "cursor": {
          "ref": "b0c8d56b-52fe-41c3-8350-0f08d63f81f2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "78c35017-72fd-4522-9bac-687ca8378303"
        },
        "item": {
          "id": "4673ece8-58bc-4526-bd3e-72acfa8575c1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3e9a4f0b-f4f4-4ab7-b080-8d32b9a38c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbc1a7b-2e6b-4ae9-8640-c6e4ed05dab5",
        "cursor": {
          "ref": "693f59de-07fd-4df4-8389-25bc395fce6e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b14ed29-f5bb-455c-980c-1ad87ab7d5f8"
        },
        "item": {
          "id": "edbc1a7b-2e6b-4ae9-8640-c6e4ed05dab5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7a241b6e-d260-4408-a28d-9feef70646e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef51870-5ab2-450b-aef0-a7d74363c9cb",
        "cursor": {
          "ref": "65ff11e3-19ef-443b-93ad-d1c12582f620",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b77f820e-34cc-474a-9057-0d7aa73356ad"
        },
        "item": {
          "id": "aef51870-5ab2-450b-aef0-a7d74363c9cb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "17947b7f-7f4c-4682-a6a5-f0e0b1eb07ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3623fcf9-3afd-4cd0-b155-6c8df1c5eeeb",
        "cursor": {
          "ref": "fd0e14b9-1c01-4c12-889b-59a28f25ef7d",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d920f591-ce03-4f19-803a-c88cdce0902b"
        },
        "item": {
          "id": "3623fcf9-3afd-4cd0-b155-6c8df1c5eeeb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b011c2bc-59d4-430e-8ed6-aa1c65c0484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb14e24-313a-43f3-ae1f-b524cda35b1b",
        "cursor": {
          "ref": "9a92e650-ee78-4e1e-8f17-9b509402a36e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "75f61374-4ea3-408b-b8f2-1450b70d1f7b"
        },
        "item": {
          "id": "8eb14e24-313a-43f3-ae1f-b524cda35b1b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b85f30c4-a271-4d63-9051-076190bf3447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34b66ad-8588-4610-bd08-eac178e2abfe",
        "cursor": {
          "ref": "574b796c-a29b-416d-a4f5-b4ab288cb3c1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "60167c7c-207b-4caf-b7f3-9905fd3cac37"
        },
        "item": {
          "id": "f34b66ad-8588-4610-bd08-eac178e2abfe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0dbab0ce-193f-411b-af1a-675100268c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0346e372-b1a0-4bc4-a151-3366d346c159",
        "cursor": {
          "ref": "2e2fce2a-9717-4d4a-80c0-1133252b1617",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "93abb9dc-94ca-4c10-80e5-b5eedbaccad2"
        },
        "item": {
          "id": "0346e372-b1a0-4bc4-a151-3366d346c159",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4ab9b71a-5354-4fd9-b06e-49ffce1f9301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d98ae57-47f7-4599-8784-a72cde171f1a",
        "cursor": {
          "ref": "85ff1b50-7510-4852-8994-10ef8cf14315",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "dc46a373-4888-4c03-b4c7-d2f45b0f639c"
        },
        "item": {
          "id": "3d98ae57-47f7-4599-8784-a72cde171f1a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "330fb72c-8f98-49fa-bf6c-ab2766e120e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8aaad9f-7127-4e20-9daf-7c8d3c4781fb",
        "cursor": {
          "ref": "f38709ae-0894-468f-b492-e53bd6f862d1",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9a65c91f-a9e7-4216-9a9e-b0c6015ee483"
        },
        "item": {
          "id": "e8aaad9f-7127-4e20-9daf-7c8d3c4781fb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30d33fa0-2bf6-46bf-ad5f-0d49a2adbcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22687107-8086-4051-869c-d1872816ebc7",
        "cursor": {
          "ref": "a95ee6fb-53c6-4f71-85a8-f8ba47e75132",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4077a6ec-acb9-4d2d-bddc-fa4d5d01c441"
        },
        "item": {
          "id": "22687107-8086-4051-869c-d1872816ebc7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a4ae706f-1e56-449a-83cf-f2f85818bc26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e22b1c2d-aba1-4538-9365-f4f38b6e496b",
        "cursor": {
          "ref": "dca355c3-25ec-4d68-8dbf-22c1b3dcd82e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a5fd3f68-40f9-4f03-85e9-eabef7992e1e"
        },
        "item": {
          "id": "e22b1c2d-aba1-4538-9365-f4f38b6e496b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2e3accff-83db-4748-b956-9a9e55429f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaaf8b0-9ecb-4802-a186-732ef3c590bf",
        "cursor": {
          "ref": "d3dc1ae4-38d7-4f19-afe0-62a15163c76a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a43e75f-3695-401d-9c0c-6be5a2c517ac"
        },
        "item": {
          "id": "adaaf8b0-9ecb-4802-a186-732ef3c590bf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "376ef150-37bf-4c22-a201-760c1086ace6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea15b24c-89a5-4e55-81c7-ce04618ad10c",
        "cursor": {
          "ref": "a3806ae7-9378-44e0-818c-bcb74fa8f379",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "62101233-22f1-40f0-b7b4-158fe016949a"
        },
        "item": {
          "id": "ea15b24c-89a5-4e55-81c7-ce04618ad10c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b3a7dffa-5f85-490a-81fe-b2d7e408e557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011053e7-3e03-40e4-9e0d-312b26b0c91f",
        "cursor": {
          "ref": "4c6e047a-ddae-44a0-a455-9392a342c484",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "509723f7-5bb7-485b-a0ed-0f6ba75cc8f3"
        },
        "item": {
          "id": "011053e7-3e03-40e4-9e0d-312b26b0c91f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ad57615e-6101-4477-aaf5-e59f1b8de888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f7ffd-9ca0-4efc-bcd4-1b75dc9f4a34",
        "cursor": {
          "ref": "81742e13-8e14-4398-9f97-b9cea8e5af21",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0b2b269c-9e81-4bb9-8c78-9d09f8769445"
        },
        "item": {
          "id": "e03f7ffd-9ca0-4efc-bcd4-1b75dc9f4a34",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5f498774-142f-4330-a956-6f63bc7774d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f412af8-759c-48da-978e-a19eee4b385f",
        "cursor": {
          "ref": "cf7e1931-b5b7-4f44-b8aa-a49c1c068b72",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3480d73f-bf47-4d10-882d-19bb3906c098"
        },
        "item": {
          "id": "3f412af8-759c-48da-978e-a19eee4b385f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "deac7faa-9535-41ab-8336-e785eb55c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a084b8-c1e4-407b-a624-72a035a341b6",
        "cursor": {
          "ref": "2f1f3d36-4991-4b62-8809-27b84896ad4e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d2908e35-42e9-455f-8892-48d108fa1c80"
        },
        "item": {
          "id": "f7a084b8-c1e4-407b-a624-72a035a341b6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ef3465f8-9007-4488-9937-fcc5b2278954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b474fe2c-effa-4cbc-88cb-505dbe263f1d",
        "cursor": {
          "ref": "7aa9f0b8-eb04-41fa-b7d4-e6a8342fa9cb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "97d122c2-6073-4218-954e-cd3561872f3e"
        },
        "item": {
          "id": "b474fe2c-effa-4cbc-88cb-505dbe263f1d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6b0554a-1b6b-4936-950f-e7804d33d099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f75b7-b209-4ca8-9563-8eed7a4ab9bc",
        "cursor": {
          "ref": "fae496d2-63a8-498e-88c7-44b762e45f53",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e4d247d8-6653-4a4a-bc82-0a42f952ebf4"
        },
        "item": {
          "id": "ec6f75b7-b209-4ca8-9563-8eed7a4ab9bc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a39dae0b-6741-4c7d-8d0b-b1315be9c2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3919197-9cdc-4ada-ac85-984b35c38893",
        "cursor": {
          "ref": "584f1830-2162-49f2-8b94-b51fb9a2996c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0be566c1-44e7-4a3d-ab94-cda91d7e7729"
        },
        "item": {
          "id": "d3919197-9cdc-4ada-ac85-984b35c38893",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a06ef138-c3fc-4718-98f3-a6127c602b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2f8a09-eaf1-4382-953a-935f47703ad6",
        "cursor": {
          "ref": "a9cdbdb1-dd9e-4b77-887d-01b50ea9923b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fd3bde99-d764-4f26-8f26-c83dd8230083"
        },
        "item": {
          "id": "eb2f8a09-eaf1-4382-953a-935f47703ad6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5363ccb8-f7e7-469a-9736-a9d48d24a1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba448b7-0700-4da6-8763-d027c54e16d6",
        "cursor": {
          "ref": "2ce102b1-4d86-4746-9b47-7dbe5b7922ab",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "64849df4-778d-4255-a1f9-158064cacc52"
        },
        "item": {
          "id": "9ba448b7-0700-4da6-8763-d027c54e16d6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28750ddb-445f-4e6a-9fc3-5a2c5565ff10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa84de9e-e808-4e2e-9f9c-4f04f355efc2",
        "cursor": {
          "ref": "9a710ca9-94f2-4eb8-a285-91cdb19e58e9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "adab55d7-d126-490e-b643-3370baaa285f"
        },
        "item": {
          "id": "aa84de9e-e808-4e2e-9f9c-4f04f355efc2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9d890e4c-2c3b-4d2c-a04f-888794587a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3360b52-93d7-4deb-b660-fb4c6a471809",
        "cursor": {
          "ref": "29d78d0d-8d7d-407a-adcd-b76f7739bf85",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "578de427-8488-476f-a635-7670c2e1306e"
        },
        "item": {
          "id": "d3360b52-93d7-4deb-b660-fb4c6a471809",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d24575a8-353b-421f-83da-025fcce6dd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246c4ef-a4c1-4a3f-aa7c-c6f3076ef7c3",
        "cursor": {
          "ref": "8ac70426-5195-4dd8-abc1-29f4acfa62ff",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e6a48691-c427-4d70-b0f2-076e65ed7339"
        },
        "item": {
          "id": "7246c4ef-a4c1-4a3f-aa7c-c6f3076ef7c3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "852d1a18-53ac-4c80-aca8-11e17b6c65ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925fd4a9-db6e-4014-a8c0-2bd9a3ad09ce",
        "cursor": {
          "ref": "a58b3202-d97b-44b4-85ef-8b3635cb7b02",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c003b8d-dfdc-4865-b673-02085ec53935"
        },
        "item": {
          "id": "925fd4a9-db6e-4014-a8c0-2bd9a3ad09ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38e44090-6835-4094-bc64-3b6a0e88505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cfb86b-a2b7-4bea-b3f5-d7bfbac1e18a",
        "cursor": {
          "ref": "9f2c088e-4884-4f76-8ca6-9e540609b348",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "055eb803-b100-44cf-b7da-ce4be39053b6"
        },
        "item": {
          "id": "18cfb86b-a2b7-4bea-b3f5-d7bfbac1e18a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b9a87dd6-9ef1-4425-8f31-28ff7cecc5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f24010-e56d-413b-8278-0e4c3dd84d9e",
        "cursor": {
          "ref": "ad781534-3eca-46c7-885b-84f351b4b721",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "75b4a4f1-3226-49e5-80c0-8cf7eb0a3f8c"
        },
        "item": {
          "id": "b1f24010-e56d-413b-8278-0e4c3dd84d9e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "174fca16-c2d8-4053-af46-0e8623ad8a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84332bd-4f40-4828-b8d0-7ecbd50e0ef5",
        "cursor": {
          "ref": "5ce28aa5-28d8-413c-8b71-df5a1ca756a4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f6cd734f-9b14-4229-9afe-1b939f5a9417"
        },
        "item": {
          "id": "c84332bd-4f40-4828-b8d0-7ecbd50e0ef5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1e2da06d-6186-46a1-bc9c-23c5f8d26f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65081c84-243a-4cf0-a54a-81d5e3ac934c",
        "cursor": {
          "ref": "d2186920-3897-41ba-8bae-f0baa5b2dffa",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b606b056-a87a-4ba4-8f28-bdfcbeb33256"
        },
        "item": {
          "id": "65081c84-243a-4cf0-a54a-81d5e3ac934c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6fc7ae1f-3075-43f7-b644-a5280c36e23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b51576-2535-446f-8726-7bf5c69dc4e2",
        "cursor": {
          "ref": "b606a142-ecf8-4d0b-9305-c3c0337b3fe4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "51ac11b0-c025-4813-acc7-a87a6c9842bb"
        },
        "item": {
          "id": "04b51576-2535-446f-8726-7bf5c69dc4e2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4d006c7a-2549-4719-8eeb-1556e5a6b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c3a0ee-89f4-4800-b916-506c2d754414",
        "cursor": {
          "ref": "24437a7f-736c-4772-945a-983d9e87027b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "192e7997-6244-4044-acc8-aa9bfd775c30"
        },
        "item": {
          "id": "91c3a0ee-89f4-4800-b916-506c2d754414",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b780bded-6252-4daf-b568-92e695891ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb078f2-2868-4db3-b362-03e7f45bfc0b",
        "cursor": {
          "ref": "d5d06c6d-f559-4d40-8777-2e37cd10028f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9084b4e7-614f-4ca2-afc1-775bb21ef51e"
        },
        "item": {
          "id": "dfb078f2-2868-4db3-b362-03e7f45bfc0b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fd521f1e-d2df-408a-b506-09d68d9c0309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd692e0b-1302-46b6-aa0f-2b80b2ac3360",
        "cursor": {
          "ref": "29a072eb-e4e8-4965-956d-2ea2538d9e38",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1deca63f-f574-44e4-a497-f2f3f28e77c8"
        },
        "item": {
          "id": "cd692e0b-1302-46b6-aa0f-2b80b2ac3360",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ae401604-980c-40fe-a96f-d4f4acdabdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b34385e-01ea-4663-b966-e978d3f62f3c",
        "cursor": {
          "ref": "07527f97-6288-4ff3-98f0-4339a9b4b8ad",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cba0853e-b483-4d20-8c4d-c3def69df9ba"
        },
        "item": {
          "id": "7b34385e-01ea-4663-b966-e978d3f62f3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "86ae2cc8-338d-43ed-a784-762347e810a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d83998-f275-47c9-911d-4f190bd85b0c",
        "cursor": {
          "ref": "dab0a7c1-d0a1-4e9b-b121-8fbdad742015",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ecc432b2-30b9-4af4-ad56-2096be9ce49c"
        },
        "item": {
          "id": "60d83998-f275-47c9-911d-4f190bd85b0c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "64cd600a-6d2e-4083-8cf8-c29d30526f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dee0cb-8aa1-4071-80d7-89e644ea98e7",
        "cursor": {
          "ref": "7c7e1274-3dde-4d94-ab25-144b020e0d5d",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "69c05d65-0afc-439a-8a34-dcee7b20ad59"
        },
        "item": {
          "id": "48dee0cb-8aa1-4071-80d7-89e644ea98e7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e7fc5139-9a62-4f22-acde-86e651655302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee0084-a3b9-48db-a492-8971cf63fab6",
        "cursor": {
          "ref": "6a97b94b-4b63-4af6-ad16-bff47da6ee5e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c50b4551-d316-43c9-9b39-073524567e82"
        },
        "item": {
          "id": "60ee0084-a3b9-48db-a492-8971cf63fab6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "287ab0a0-a24c-4cb9-9678-a927c74d153c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680eac30-87eb-4ccf-a355-2e4d0d6f88cc",
        "cursor": {
          "ref": "82acc160-b577-4166-ada8-0688ec71a468",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3f79208f-5f9c-4947-9c2c-d78957add801"
        },
        "item": {
          "id": "680eac30-87eb-4ccf-a355-2e4d0d6f88cc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "06fa29e6-7fb1-4531-8338-2f5b51e9281f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd987c1-37d2-41c6-b212-e57c98e21872",
        "cursor": {
          "ref": "ba160df1-994b-4a54-9c1f-2185a888341a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "86910a6b-f9b0-42d3-9469-a7b47b13dcf7"
        },
        "item": {
          "id": "dcd987c1-37d2-41c6-b212-e57c98e21872",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00ce4623-dd46-4783-9301-f905fe39f6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcf3554-c9c2-4f09-855a-4fb0fd58e013",
        "cursor": {
          "ref": "80e81d2d-30e2-4404-a39a-4b348b87c24c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f2facad3-a274-4c3d-b08d-4d8ea6407e31"
        },
        "item": {
          "id": "cdcf3554-c9c2-4f09-855a-4fb0fd58e013",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7b6dbdc4-d0c3-46cd-84c5-a709f2d37fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4af1081-ab28-431e-85f6-3fc39f5cbaac",
        "cursor": {
          "ref": "45cb6bfc-3728-4cbd-b1e1-9d7975187229",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4965b23d-fe5e-4bbb-aade-6ba4d8df10ba"
        },
        "item": {
          "id": "a4af1081-ab28-431e-85f6-3fc39f5cbaac",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "407a7901-8a8b-4bcf-a5e0-c0a58cb7d11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88396257-7d66-4c4b-a4fa-27b537427d7c",
        "cursor": {
          "ref": "b9419874-36e2-4710-a649-bedeab546022",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82663f75-fe7a-440d-8fbe-5a136b5c5b99"
        },
        "item": {
          "id": "88396257-7d66-4c4b-a4fa-27b537427d7c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4b55b721-9754-4e61-8a06-e422b32bc17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f88d47-8aab-420e-a3b8-ee411b0c6a55",
        "cursor": {
          "ref": "54e7a0af-1b58-498f-b8dd-e49d071e20fe",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9b5868d9-c0c9-4a7e-b3dc-d745725b588a"
        },
        "item": {
          "id": "58f88d47-8aab-420e-a3b8-ee411b0c6a55",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "971190cc-5eda-4b6e-b697-9230613c7449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f40de5-024d-45cf-a3a3-11d57c4743e5",
        "cursor": {
          "ref": "6f8f5515-7cc1-47ec-bafa-d2de1cc6ac3c",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7fd8aabb-2992-4c1e-8520-ef8560f5879c"
        },
        "item": {
          "id": "e2f40de5-024d-45cf-a3a3-11d57c4743e5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "86b1a7d5-e11e-45b2-abdc-64de71c4e5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7094fdf-8c1e-4202-800b-48e2671f3a57",
        "cursor": {
          "ref": "738e3ff6-1dc8-4f96-9179-775e7ed15a36",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "95b6d329-823a-460f-a57b-3f75fbcc5c1b"
        },
        "item": {
          "id": "c7094fdf-8c1e-4202-800b-48e2671f3a57",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e3045ee1-2259-4ca1-8ed7-0b8e0269e4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c19f257-2647-42e1-9281-b380d70767f1",
        "cursor": {
          "ref": "0fc73b01-d182-4099-a72f-6b15f838d937",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f6d025e-06fa-42c6-9e1f-4701bd6f9b74"
        },
        "item": {
          "id": "1c19f257-2647-42e1-9281-b380d70767f1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fc1bc185-b6eb-49f2-ae87-41b7ff0ed70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e4012-5d10-4be4-a78d-ee6f4b0ec0ed",
        "cursor": {
          "ref": "f529c38d-756d-4058-bfbc-e6e476707fb2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8876c75c-f9c6-4532-9039-3423a79e6d0d"
        },
        "item": {
          "id": "2b7e4012-5d10-4be4-a78d-ee6f4b0ec0ed",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6750676e-415e-4c8b-83f3-20e8a5b19342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8cf776-05d2-4a86-880a-66a56f6ccd8f",
        "cursor": {
          "ref": "9961966f-2abe-48b5-8203-55f4b7218ace",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "08ce9fc4-e90c-4c86-9e60-2644ae93caa7"
        },
        "item": {
          "id": "4f8cf776-05d2-4a86-880a-66a56f6ccd8f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "89bb05d0-a144-45b4-a4aa-f99d37015caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4826006c-efc6-4fbb-bfbd-86153fb708ac",
        "cursor": {
          "ref": "27c09e9f-3691-4d32-9a2c-fe3d4762f91f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f605533f-d4c1-49de-895c-f0b8caebe657"
        },
        "item": {
          "id": "4826006c-efc6-4fbb-bfbd-86153fb708ac",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "31941979-fd57-407c-8e9d-f4a0293ee38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac45471-b85d-46b8-85f0-d50494641fa0",
        "cursor": {
          "ref": "77dbb28d-0ff2-441e-af1d-63458d406da8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1716b55f-31a3-4d99-a9a8-7c9401d0b13e"
        },
        "item": {
          "id": "eac45471-b85d-46b8-85f0-d50494641fa0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b6a40142-bd73-42f9-9f1b-06ef1c606b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4a190a-001d-4371-924d-90eacfcf3c1b",
        "cursor": {
          "ref": "aa2c6b81-6619-4ae7-887c-318884485360",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a362be45-3558-416e-a301-cdd346c54bbb"
        },
        "item": {
          "id": "7a4a190a-001d-4371-924d-90eacfcf3c1b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5a431bd9-ec99-4b8a-812e-83919fc337f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8024f65-7a7a-4f75-b980-beb813f9bd63",
        "cursor": {
          "ref": "d336a78c-792b-4b88-a2f7-5e6fd68358a3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "733cc109-e601-4146-b4db-5011f5f71050"
        },
        "item": {
          "id": "d8024f65-7a7a-4f75-b980-beb813f9bd63",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a5ff413d-02f0-4afc-9942-7a33862e9e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4ffca1-7f0f-4cf7-bbd7-a3e77cf436b0",
        "cursor": {
          "ref": "87150649-0493-492f-8e43-44f57b624a0a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0a6c9c46-dfa6-4391-a5e4-ad5684458cea"
        },
        "item": {
          "id": "dc4ffca1-7f0f-4cf7-bbd7-a3e77cf436b0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ccc6bc16-c37a-4a52-95ea-4dafaca02d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862f3199-ac6d-47be-8d3e-318484977e39",
        "cursor": {
          "ref": "1b170720-7123-4966-ba5f-834f0dfc7cf6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9ddd5758-0068-4b27-a91a-56ca0fda34ab"
        },
        "item": {
          "id": "862f3199-ac6d-47be-8d3e-318484977e39",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5c3f9381-d74c-4d7c-94c1-370ce17bc7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92deada-0d57-46e8-890c-4b372246aaf2",
        "cursor": {
          "ref": "6aca8fd0-ee57-49eb-9373-9fc0f456c2e2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d1a1e8d4-1365-48a9-92bc-5d4cecd15a03"
        },
        "item": {
          "id": "e92deada-0d57-46e8-890c-4b372246aaf2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6dac2847-4282-4295-a45d-81097aff23c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb19d3b7-3ed9-4275-ae53-c867a7fae10b",
        "cursor": {
          "ref": "5f60633d-e2f7-4869-a914-d6189a7e9030",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "80b44fbc-a1c4-406a-83cb-5e6c01e6fb76"
        },
        "item": {
          "id": "bb19d3b7-3ed9-4275-ae53-c867a7fae10b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1e36285b-6087-4f25-9b5a-43f668564b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e64233f-5241-43f1-92f6-e194c5332eec",
        "cursor": {
          "ref": "f9b5f672-9c6f-4312-8650-a019651fc599",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "619003ef-fecd-4806-be07-d6087d2a13b7"
        },
        "item": {
          "id": "2e64233f-5241-43f1-92f6-e194c5332eec",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a3e7a3ea-1936-4954-aaad-c91f4d9108c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88bad27-14ac-4315-9743-8f02b64659a0",
        "cursor": {
          "ref": "74ebc0f5-44fe-4ea5-8530-d255ca713b8d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c3258c39-e4a8-4676-beaf-2e778e4b020e"
        },
        "item": {
          "id": "c88bad27-14ac-4315-9743-8f02b64659a0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "632d64e4-a5a1-4058-825a-2b0b03d2a701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724ba956-0a49-481e-bb9c-e29fde8b1927",
        "cursor": {
          "ref": "7e12e6f7-7e6c-441d-8ae0-9b52007f3752",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8deb1a0f-dcdc-4739-b0ed-a7f485fcaefd"
        },
        "item": {
          "id": "724ba956-0a49-481e-bb9c-e29fde8b1927",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "62d883a0-674e-4352-bb03-039369c5fda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178ecce5-cf1a-496d-ab49-b601e8905118",
        "cursor": {
          "ref": "6fa62ae5-c937-4cbd-94a3-b2bec33daba9",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e3b04c50-dbdf-4759-aabc-e9fa802d3934"
        },
        "item": {
          "id": "178ecce5-cf1a-496d-ab49-b601e8905118",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2423e7f3-a558-40b7-9177-01aa2de58f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82798b01-bfee-488c-9b16-6798613f8661",
        "cursor": {
          "ref": "6c69287d-e009-4455-8e52-a56332572e25",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fbc9b61e-e7a1-4858-8338-eb5a1a5567fb"
        },
        "item": {
          "id": "82798b01-bfee-488c-9b16-6798613f8661",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2d532c59-8a59-4f3b-be0e-a38d78110b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969022d1-cf99-445e-9e4a-a58e59f4d012",
        "cursor": {
          "ref": "4c05160d-23c8-44c3-aab1-d67a37beabfb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "17634ef4-7fb0-4a06-aaa3-a49f817197ed"
        },
        "item": {
          "id": "969022d1-cf99-445e-9e4a-a58e59f4d012",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d52d9f6d-561d-4bf7-96c1-9a3ce490cdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c13d57-c172-436b-850c-d08a1ca6779a",
        "cursor": {
          "ref": "ba5f2846-c6d5-4cca-a49a-f25e50a6cc44",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f30926df-62cb-4320-8dba-7e376052cb3b"
        },
        "item": {
          "id": "74c13d57-c172-436b-850c-d08a1ca6779a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dac587cf-b59c-4f5f-a67d-e03bbdcd0d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7012046-564e-4b9f-b8e1-621ffc96e73a",
        "cursor": {
          "ref": "4fca71f3-d367-4ffb-8dd3-f68c0b4d28fd",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "881b9968-4571-423c-b594-f552805faff3"
        },
        "item": {
          "id": "e7012046-564e-4b9f-b8e1-621ffc96e73a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f15e8d42-833b-4037-a1e3-9924b726f4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c947d1a-f8ac-4fcb-8087-2f50ffbd9e62",
        "cursor": {
          "ref": "1ee72022-c082-4e9e-b4a1-ba1f2a483461",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bdfcdb88-bce0-406f-841b-e8cc8b50d52f"
        },
        "item": {
          "id": "3c947d1a-f8ac-4fcb-8087-2f50ffbd9e62",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c8dad384-7f13-4ce1-87f0-524a0f7df0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7563b5bc-0e2c-444d-805c-78d12908b5f2",
        "cursor": {
          "ref": "47fc2e66-97d0-4844-9bf9-b1ae56c6a283",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "31a4e145-ff87-424a-bd6d-c7520d1b6f19"
        },
        "item": {
          "id": "7563b5bc-0e2c-444d-805c-78d12908b5f2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bd096fde-c777-4a5b-a9d4-d4cab1334c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a762f-22c4-46a4-95a5-6ff090347098",
        "cursor": {
          "ref": "b5dcfc80-7f72-4c96-93c1-669461e2d448",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3d05a20d-ced1-4f24-9389-82719722d787"
        },
        "item": {
          "id": "ca2a762f-22c4-46a4-95a5-6ff090347098",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "90a3bc8e-3fad-4881-a9d8-b4ecc597d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc190a79-dbc5-4dfc-aa3f-23b45dd372b5",
        "cursor": {
          "ref": "0da8cf82-07c7-4319-b19a-5dbac01c6fce",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "975d4bb8-ecb6-4c12-8c4b-23ab35539277"
        },
        "item": {
          "id": "bc190a79-dbc5-4dfc-aa3f-23b45dd372b5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b13e61a7-8c5d-4300-a33d-b79974559640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca6362-08b0-4d9f-892a-5a29917a79b7",
        "cursor": {
          "ref": "4c8fcd44-2315-460d-9a38-cb65fd694a0c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "db827325-b861-4b67-b09a-92afcca5cfb6"
        },
        "item": {
          "id": "3fca6362-08b0-4d9f-892a-5a29917a79b7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4a1eb210-3a39-4008-915c-e3b5476765cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee8d36a-0a7c-4f6b-b8e4-b822d7a619dc",
        "cursor": {
          "ref": "4b870d1d-8ccf-428e-9249-dee32de503d0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "bab58e63-b278-42f7-a02d-eb1dffacca64"
        },
        "item": {
          "id": "fee8d36a-0a7c-4f6b-b8e4-b822d7a619dc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e8739dcd-9269-45c7-a86b-791b47c3186b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd27ed-b5e9-465a-95db-2e367f0085cd",
        "cursor": {
          "ref": "dbefbe48-1ef0-4949-8a8b-4ea3d543fe0d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "fab736f7-7fb7-412f-b5b1-77752be57de8"
        },
        "item": {
          "id": "0ecd27ed-b5e9-465a-95db-2e367f0085cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94d8bc3f-c07c-4bf6-bd9d-f79a833e3cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1ce443-ae4d-48ff-938f-5997c05c688a",
        "cursor": {
          "ref": "bef0183d-9e34-4558-8051-07bd9238390c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "23d649ed-4d6d-40aa-80ae-540aa0abbef1"
        },
        "item": {
          "id": "3b1ce443-ae4d-48ff-938f-5997c05c688a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c215d3e8-4f0a-4da3-80dc-2677d8b72d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff721b4-da85-4a4d-bfdb-32cdc430d781",
        "cursor": {
          "ref": "78a15ea5-7932-4ae8-8961-8201200b1d1c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1de6f959-1452-4e29-8032-c9b2595d0bbb"
        },
        "item": {
          "id": "9ff721b4-da85-4a4d-bfdb-32cdc430d781",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10bcd4ef-b73c-4c85-b527-babc3673ffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ad625d-7413-4a86-ae6a-a9bfff984d88",
        "cursor": {
          "ref": "ecde3e6c-d0f0-4140-8c29-2d0dc7b02ca4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "9f6da445-eacc-4f16-9676-4a5a265b04ac"
        },
        "item": {
          "id": "67ad625d-7413-4a86-ae6a-a9bfff984d88",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "04a0e3a1-8c20-43b0-9023-a8a14fd2b96d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99357997-0635-4e6c-ad57-afc2aec6c8a4",
        "cursor": {
          "ref": "772c8a03-1a02-4107-bad3-94377cd69bdd",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e1ae73d7-c1ca-4185-97da-fe119d709eef"
        },
        "item": {
          "id": "99357997-0635-4e6c-ad57-afc2aec6c8a4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1f55e9ab-e44c-4210-b871-6f9f45b86f94",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c041ef19-7ebe-4cbd-82eb-5b00b32d5ad8",
        "cursor": {
          "ref": "91aa454d-fedb-4ffb-bcc8-a3c7026b2bf0",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "31a3a640-29e3-49b0-a0cd-37595725d1c4"
        },
        "item": {
          "id": "c041ef19-7ebe-4cbd-82eb-5b00b32d5ad8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f86390ba-4c49-4305-aca4-84b70088eacc",
          "status": "OK",
          "code": 200,
          "responseTime": 2804,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c863c9e-f2f7-48d9-bae8-feeadf0bf769",
        "cursor": {
          "ref": "cf0641e4-c9d2-4d55-a432-c79512a31cb9",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2a75c860-92b1-4ba9-b692-3ebea16e3d0e"
        },
        "item": {
          "id": "9c863c9e-f2f7-48d9-bae8-feeadf0bf769",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c3694561-cb7d-49e6-bea1-a294af01a19c",
          "status": "OK",
          "code": 200,
          "responseTime": 2848,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c80c6c-fe4a-423b-9f9a-adb7b734ec68",
        "cursor": {
          "ref": "fc117af6-c5d5-4528-8ff5-daba3e890aa7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "63aad3bf-733c-4f32-9504-093b1947fbf8"
        },
        "item": {
          "id": "93c80c6c-fe4a-423b-9f9a-adb7b734ec68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85ae0ae3-eaa4-4fc6-b637-be8562c474ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c80c6c-fe4a-423b-9f9a-adb7b734ec68",
        "cursor": {
          "ref": "fc117af6-c5d5-4528-8ff5-daba3e890aa7",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "63aad3bf-733c-4f32-9504-093b1947fbf8"
        },
        "item": {
          "id": "93c80c6c-fe4a-423b-9f9a-adb7b734ec68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "85ae0ae3-eaa4-4fc6-b637-be8562c474ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17610955-c63e-474a-b707-ad1b1f1c3949",
        "cursor": {
          "ref": "f59a5c74-88b8-41a3-bd2b-5ecdfcc3fc36",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8583009d-f86b-4c3d-8e23-9050af243b54"
        },
        "item": {
          "id": "17610955-c63e-474a-b707-ad1b1f1c3949",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8b218a23-915d-4048-9ba0-68fb9f28a731",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044cdd59-d7c3-4700-a5b2-518c8330ea94",
        "cursor": {
          "ref": "d1ee0633-4c96-4657-9cd6-c25ada6f46f6",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "25223782-67c0-4cae-9f11-dac713f281ff"
        },
        "item": {
          "id": "044cdd59-d7c3-4700-a5b2-518c8330ea94",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0967a6e2-016d-4b91-98f4-00b34c496117",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}