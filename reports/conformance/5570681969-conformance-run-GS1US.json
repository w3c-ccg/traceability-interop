{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c65ae2f5-1333-41bf-a2a8-afd475acf16b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "971791ce-b33b-453c-aae1-6f1e767eaa14",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c149f2a1-7bb7-4118-9053-0d7aab739f10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "883bc68a-0a87-4354-ad8e-303da9c56884"
                }
              }
            ]
          },
          {
            "id": "7131958e-26b0-4b3c-946e-a85a12717f0b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de2671bc-06ce-4675-90b0-5bc04f0be2d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ada1d323-d4cc-421f-94a9-4713ac2ee653"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "69a77599-7bc6-4c77-85de-da115c414f64",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2f1e5da3-6282-4796-9b60-d9015acadf2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1ff0d799-8904-46c4-88bb-373d7a646183",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "430cd57a-ae32-4b4d-9c5a-af5d9e35c581",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb038aaa-f397-4f40-b9b8-39babd27417e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5ecdf0a-cc8d-47de-8ad1-c056673d1184",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85a21cfc-7779-477c-a8c3-906e1f8c2b38"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3fd54773-fd06-4c53-b2d0-1e59bfadb835",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "581af84e-a0e0-4aca-a89b-469ffe847f9a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f13f43d-4e99-4604-b304-37fb106656ee",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0d4c11e3-5199-457b-a9c1-94eb3a0ed4cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78558ce2-424a-4886-a4b0-1100e1b885c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81bdd662-f368-4604-9fdd-20bc618c442e"
            }
          }
        ]
      },
      {
        "id": "cd8846a9-dac8-43e6-81dd-038e55703729",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "10f2bef4-ed72-4804-a0cc-53fe7c321d88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d38e376-4e10-4a5e-91e2-1d3db7fe1c00",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c7028cc1-42c4-4d96-bf67-3798d4ac30c4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51eaed46-957a-4ffa-bbc4-93b76596d0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "737bf02a-66c4-42b4-951f-8d4ed7be88a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961e79a1-8c08-4618-a259-46dc63fb2515",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5602f3-48aa-4d56-abd2-d903e1c3f266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d01b9fc-c709-4b48-97bd-d29a78087044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caeeb1ad-d543-4534-8736-9652593558cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1047dfb-0d11-461f-ae12-241ef71947c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88eae3ec-49ce-4808-901a-274243d350fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd57e02d-1d74-44fc-9a38-5c74d15fa71e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a3e9688-b82c-4e1b-832e-93070e97f973",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49a6f26-72bc-4b3e-ba78-56f3ce8428df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b80bd24-28a5-45be-8588-3d387e6ea244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385c85bc-7230-4ab9-b3ac-7cd7febddbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0365c765-37e6-4c24-8a05-eef9d07b855a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81e7185d-4002-4cc6-ac8b-af4713767544",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51c6c895-8bb8-4814-bc96-c6582dc525e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e35c56a-6115-4073-8147-ce97d697d9c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6971befc-f976-4ba6-934c-561fa77f7128"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64d0fd6a-cb1a-4842-b61c-25e1fb3fd53d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "501723fe-f802-4405-8101-e7235ffa3f3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bdad69d-3daf-4434-aeac-123e95ffc88d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea078ca3-43ea-472f-b882-45eed6cb77ad"
            }
          }
        ]
      },
      {
        "id": "05b07416-5536-4c2a-9ac6-3712fe5c36f4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "234126cf-13ee-4776-9594-8c841f91eb9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "199ada45-1344-4c6e-b87f-b8b3b1b39bbb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79eeb204-f8d8-45c3-9d3e-e61c0847eee0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc1d457-50d0-4cd2-9113-e1fac14d4f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf2e939-4f8b-472a-89f3-cec90c84d1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe36a88-bc28-41eb-a25d-972206084d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bd51b29-ede8-468c-9015-ca6dd2ef621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cace8515-59cf-45aa-b076-aa883e817ce7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f4de9-d70e-4e9e-9116-9b46ae53a779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e04409c4-ad44-44f0-a6d3-fdb3abd9a200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ba3e2d-1576-4898-b331-5339d8dd79a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34f1f3fe-0e5e-4bf1-a782-d80096d54f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95a48e0-411c-441f-9473-d17b675eb840",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deae24bb-b055-40ec-8e96-b494444a7515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fab885-ed79-41fb-9356-1fd29c2713f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a43a66-223f-4242-89d3-885b281dc3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1472a957-7d91-4ab3-95e0-15080e7be3f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e105a55e-7020-482b-ad50-ff2a8c87d9bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad390ea2-5573-4789-a516-0735b5ca4934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b43ba82-1036-4165-b2de-f999830a57b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c262776-ce54-4964-aab8-3a471c4e2ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "570afdc5-26de-4ca6-93cf-7e8aa0136b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025b402c-9fba-473f-9c53-383e9d5b4910",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a03dd81-32ba-4248-8fc6-315a2f80009e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fab1f9-af77-442b-8ebf-55764fc90bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ba446d-13f7-4acf-8854-49a65a4cb917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c11ac9b5-c4a1-4ea6-8fd0-475cc9c1a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eef1909-d2ed-4373-9bac-d56710e8a1d6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb9bf20-112b-475f-8ac7-3f2afb797e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afab9ac-423f-4782-976f-adf00594500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d39c46-e8c2-41b2-bd18-f395a05aed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71108308-3e5f-43cf-943e-15780eff19ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58a6395c-ce23-48b7-8f18-d55adbd39fe1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1cffe9-32f3-4a36-baad-b639aff48ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5334a0-f209-4286-bde1-94562b23c992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727293dc-85c3-4ad9-9ef1-866445a47f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d53e7635-9cdb-40e7-aa7f-238fa9804609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb1555b-b549-4002-8ee1-73ebd2cf7176",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417517fc-000f-4290-ac9b-41f23ca22dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d61f929-e618-4a0e-aa63-313f96abc354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0fe007-8555-4e72-9fe3-e546a5c8db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57f6fb80-e578-48bb-8169-93b6a8a71bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5914e50-de2f-4415-9b45-9c28408acfc4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbf3d50-fdd2-4325-b621-0c10a828fc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103d5e36-8cf1-4777-b535-41e1d12c9e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296bb96f-8d26-46c4-9085-5d30fda12621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ec4df3-03b0-4410-8517-602e82b16752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86848eb-a629-4558-a475-4228c9ed5c4e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f04a38-6b59-400e-85c4-0e5623c3d16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9e5b09-7211-4cc5-b59e-befa0552f9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46c3cac-08b4-4da6-a95b-e07ab67e39ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37e9b005-7dbd-4b7d-9467-6ecdfa069f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9465df2-6950-4cbd-8d91-9b83723c1f82",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659bf17a-e657-4fb7-bcb7-ee95458dee53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3564743b-4098-4acb-957c-ca61bbc19427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5330c6f-4048-4ed2-910c-1b72f04a7cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e61dea-6780-40f4-9780-b1e3f9193bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c094210f-29da-48b5-a5ff-bdc86ef00ef6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8394c0-d829-4f3b-955b-4c0b3a3f9daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00b2d29-06ea-4384-ad85-fcbf2dac3960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d93ffb9-132f-409d-bd65-56d3a3811093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa3e1963-ff7d-431e-8b21-2c39ae5322de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c0d889-9d95-465a-96c5-ce4df08d53d1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f4ce45-0719-4796-97f8-12ea2dbb8dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdd21ed-f286-4a17-9800-4f027fa8fd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2eb87f-23e8-4d38-a0be-bc2202890c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "675f3b7a-710e-4954-ba86-14b6a8d5547d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec0f5b3-a795-40a9-a1a9-9377022b49b1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c0d327-3745-4fc7-bf9f-45bd83cdd139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71894e3-ff7b-48dc-83af-ba3fe05bb8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c6a084-72ef-4326-bf46-1ba449f83524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c564f4da-282e-427a-8fea-375bb2215ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e28378-dfdf-43bd-aefe-0573b937e736",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a940f67c-e150-4287-a960-be2fedb1442d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92a0111-e130-47b6-80f2-d161921fc64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd8ac04-5bc4-4ddf-b3a1-b838f8bbd88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beed4e8a-2a4b-424f-a74a-40a5b73d710e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0742b5-0d4e-4565-9425-bad98c823b20",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b36cf82-4fff-4068-9a9a-d0f8924420e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bff59e8-a48b-4551-9fde-f1786403e8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbb82da-7601-46c2-914c-9963582fe598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48278796-f390-4888-8b59-cef174963446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c973c2af-e868-4406-8802-0e9b056aaa21",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94cce04-b73a-4451-8d38-9897d0241972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91089b93-136e-4eac-8d92-efd1cd511dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab2e25a-9bc1-4508-a60e-dee52f9c759c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce3fc7a5-951e-4bd0-94dd-16c192f870fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8cb65b-d0b4-45bc-9329-06cbc0b30bc8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3109966e-be74-4639-8ba5-9cafbb08b353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdd5a21-593a-4fc2-afa8-147034cc5baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e225bd36-941b-4173-a828-9174a182fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a27f410-0027-4ceb-a6e0-25f382e7bcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2f5fe1-7b9d-4028-83db-c09c626da7b8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf25de5-0d1b-411c-9957-915766cf491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac0e7d1-7d8d-4963-a696-30074f2f7da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb8de15-7958-48a8-a1ab-83ca0c416c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c59492-238c-46ac-a3b6-707a3d5b3fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002f97c0-def3-4455-b051-cd48cc6c965b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5552c124-487f-4118-9f06-78089b7b02e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14629f7-0a96-4bd1-9d4f-216d3551bdc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aa35aa-0138-4e27-b8e6-93a1afab264a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fd580a-78c7-4af8-bab9-28e18e1194ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a92ad2-89e8-4486-b6ce-37819943dcfc",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba4fa2-55c3-49cd-a949-3a8fa2f7a21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d840ecbc-bf92-42a2-8e43-c51853681df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305c9e42-27aa-4f1c-9c80-e70eb6661d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e2c397-4974-4237-a405-d5af7d64496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666fc061-98df-446c-aad7-1d20528c8232",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea631024-d327-44fa-8228-350c082613d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3356ab-f8a7-4f96-9849-730ce7ccf4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa41674d-d145-4eea-9d7a-815c3440aae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54bcdc7-ebef-4f81-924f-5d12638529fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e3574-8eef-4e00-b24d-b3e121eeb122",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78162226-a9ae-4869-ba56-0c1c0aacda7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dfc0a5-4805-46c9-b523-86bd0fe86d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d171679f-f708-4cc2-bd88-4a67f4bb0694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fea666f-e183-4e75-9925-bbca09fa7361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c56e0a-c076-4750-9e79-5978a81690e6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea61fc1-09a8-423b-a8a0-5a271230c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e88ba4-cd7e-471f-ad62-2f43b1562294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa25915b-1f92-4201-97a5-7cb16e592845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70a0835d-7c2c-4b0a-9bd7-25fb5e371919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5f53ab-a926-449d-a75a-19ae7c1970f1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91583b14-72f5-4625-a70a-0ee0d7885df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "effc7ebf-2f67-455f-b403-13594d928537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3e4043-b3f2-4b88-bb4c-b1a49e807687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7682c2-b5eb-4a64-827f-a46a53a238fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69557707-3649-4617-9fc7-eeee2f194357",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2efe1aa-3ac7-4fdf-a737-745f86590237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773e5e2e-5721-4a47-a3f6-5c242313d27f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1dfed4-e176-40a7-b8aa-ecb3375cd86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a19988-6004-4845-9e7b-5612708a77a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39892e1-d941-4fde-be0d-9973d853b98d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173cbfca-d1ff-4688-9a9d-500b922991dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bb30df-5c2a-47b3-a591-79a26993b3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedf48e5-d6b8-4b62-b413-e9f7a24657c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d126b00-d3db-4180-94ce-9b84bd141f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706afb2a-59a4-4000-9102-468ec37433a5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca2a88-6245-4870-9012-c88bbc7ae09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd06c045-305f-401d-993b-3dc52537047a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c1ce7a-818d-4941-8b5c-83e60c457012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fd3dfe-9f7d-4854-9604-0395e0221a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71471704-d222-457d-9385-26e461573201",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46bf16-3df9-4087-b8ec-c632cdcb226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eec352-9348-4910-96a2-1d89fdd3cfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07da8d74-9183-4bbf-a72c-244b32307769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be17845-c1bd-433b-92e0-4ee7beda9207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8658451-6c22-468f-b0f2-966b7d2c2240",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712079a0-794b-4b5d-95c1-79015382e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85724075-287b-41b8-a7fc-72d687e828af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2295f5da-27c6-46f5-9596-eab93a0a0913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "18811cfd-44a9-4c41-bfb0-d033dbe897ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb2bd79-684a-4734-86ed-1d4c66a7173d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64712de3-f3b7-4ad1-b483-ecef2cb17822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d855b72a-ad6b-4113-9138-4665ad8c9b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d3536-f288-411a-b599-bcccb6bc50a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf81ac35-28b7-41ea-9c80-cb196593e43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277d6af1-569a-43d8-97c7-cbde34a968eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e6329b-1566-4fed-aeae-0746dde8dc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e45f9dd-6870-415d-a8a0-1f27e3b44d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e422da06-7ea5-49da-b8a5-a55a6bf1e9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28137be9-148c-4cf2-989b-b1a44a40f72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a713b5-b2fa-43d1-a503-203a2da096db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0e48f2-97b7-4f85-8315-ca67bcdb39bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529047b9-a5bb-4938-bd54-95b9a73efda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343ef60-9bcf-4fb2-83fb-dc787de349fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4f7c36-5634-47f5-8b96-b456de71c5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b62fda-594b-498c-9f89-a1b5e394ab3e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed629e60-3d80-4f02-88c9-d18d604cae9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68f2a8c-ebae-4d48-b86f-cae6fec3e96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7877c7cc-6ad6-4871-86cb-96e5bbb610ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56580a3c-9ea4-4f33-b14d-a41535fcdf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c119650-e20c-4066-9609-c6d2109588d3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e15b499-7236-4d94-91db-16e7a47fc098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ff8653-82a3-47fd-b2a4-5312e4acdc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29274711-d75b-4df7-a022-6ab18aacc996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "feea3150-9861-43ad-b6fd-cc47ec2ca1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2723e2ed-aa07-4d86-8f30-267cfcf9f04a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef1eb4-fb14-468c-8be4-b7a0562cb0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f34ef739-41b8-4bd5-b9ed-88a0f847170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7dfe1f-e24e-414c-9017-56b251b30e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8cab75-18da-45b0-87b7-d42ddf65b21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cd8303-222b-4b21-951d-e91bcba4ee72",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca8f4e6-f82c-4ae8-a2b3-b94328100544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a24c753-3dfd-49dd-b235-045d944e0e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c51d48f-1482-40d6-a5b5-1d44c822e734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16bcefc5-3eca-42eb-81de-ab46ecb88943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37df4ed7-0c0b-4354-8f8b-f937c157207f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cba2fde-fb6d-4c73-9481-c2c278c65c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95323064-340e-4a47-aa33-e34602963309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce845e8-0277-42fb-bc5f-42856eee3eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8da869-cf68-4033-ae22-df4b9f443c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274ca50a-1de0-475c-b50b-95ae24517dfa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78abd85-472f-49b4-9f38-0bee39f3ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d8128-1076-44a4-948d-457951900d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a29133-9c75-486e-a076-0e6912ed78e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff0ce8e-ebe6-4d53-ac0a-9db694e9a28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1ac144-9380-404f-a4b8-a55548001e25",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7795d0-008f-4c3a-bf6e-567465f71759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649c6068-8ab3-44bd-80d6-eab9506ab44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8e2982-2203-434d-bf54-5a90a853bc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfb854b-cf18-49ad-8f49-c3c8e8caacee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f370dab-04f4-40c3-b416-94f38be7573d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f86c32-a6cb-4b0b-91e8-bfb4e88af5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f611fba4-36b4-4fdd-814f-d2e59e12f9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b70415e-1498-4f36-ae87-a2d58cd9ea7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29d0d2a-e22b-48cb-988e-0aa824caab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72329c5a-8add-4254-ac0c-d261fbc7895b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15664539-abf2-4f60-b016-750447fb1aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28b02e1-2474-4151-bd3a-616fb77f3732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195dfe50-b5e2-4e77-a2d6-1fbcf827ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "056dcf5e-b437-4e92-965b-3370f14f4d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed0a376-c3c6-4f8b-a118-9e8bde3777e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226bff92-957e-4a6f-a920-a823116344c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651834e3-abb9-42a7-bf5d-987504ea283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c029af-03b6-4788-9957-4014e4a47706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7986765d-c069-460d-ab79-29d1235c274f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b36270f-3ec2-4e81-bf1f-5000148800d0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772fc4de-4d35-422f-8899-185f66eb47a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1397c38-2469-445c-9038-0f9b5f6ce295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106525a7-84d2-4c2a-bf2f-123d2670e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbb727a-ec7b-4770-8fc7-4f10b6f3f8c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf016ad-6651-4fd0-89d2-bdc7a32d67cf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9525ce72-7df3-4a9b-a6f8-22179ab308b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1358324d-d92b-475c-88ea-490341437e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2333fa6c-6e0a-42ef-b095-d4df9240d033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d1ef01-8653-40ec-9dc4-16e3b2cefde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acde6aa-ffa9-4a61-8ca6-8e75b784b485",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e794da63-2328-4613-ab5a-761a433c37cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954cef93-77ef-4ee8-b2c1-dc2ef35a9acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a3000d-6a7f-4522-9ca3-3fcf655efd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fddd73-1640-4cb8-8e9a-1cdd13dab89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da27028c-87bc-4caa-85ab-437f15dbfc25",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7394364-fe48-4115-b5bd-ef68dc25f650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c6e823-4533-4854-9541-387502877afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5ddfc6-bb9c-47fa-8476-6397bf8e9375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09ab3862-5411-4e3b-abe8-9261d6573cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955e1897-d211-4b84-9645-83368e03400b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecee426-d864-4ebd-903f-fd964c744d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cdcaf6-56db-422a-89ee-91f8ec9e53f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a689a4-0d36-4be7-88ba-b03021ce2f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1685d2e7-efa6-47ef-a37b-e3b8f771dbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4564b5-8ffa-4e4e-9f56-d6f10ef538ca",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02826f5d-a9ec-4074-8f79-601d6ab2322c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f246f1d-78eb-4a59-97dc-28c19c801e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec3f84a-3c75-4ed4-976f-24504285ee64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52edabdf-12f3-4e22-82dd-51d9ce0e72af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd409aa3-3dbf-497e-a873-e4397cfc3b08",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc2574d-bb37-4894-84fa-f2658bb15d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381e7f8a-dc72-44ab-b71d-2e1abb144afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2493d72-2572-4b6c-9e6f-9402cfa05677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "46450a45-df1c-4b93-a810-36b2d2a53f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff972688-e8e3-404f-a579-425165cf9e9c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b4faa5-5d04-4fb6-a262-9578c35af3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec05b4c6-764c-4d57-b2c1-6263ac13a552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef03ae7b-bf6a-46d7-a047-a8a86306d10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "af97ee49-bba4-4457-a519-26b24b9331f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7489bfe0-3f9e-49ba-9b90-6a04a8b79e9c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a3c20-7251-4911-9f19-e32a8f224395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f927ebcf-5f89-4bb5-9281-060c088af091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1926695c-6cb2-49df-8fd0-cc3023b194c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "841d4a54-7198-4722-9c68-333e559edef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2adbda1-972a-49f2-8a5f-033e4e9cc326",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d9d673-3c63-45ba-b56b-9924012c8963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e687239b-fcab-4aae-b79d-9cd7a4efa9f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812cd5af-7651-4960-95af-b619ac0804df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e394e7e-ab9b-4cf8-986c-a973ace89efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa3881-c476-4720-98f3-41733b20e639",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9956fde9-e057-4d37-a8d4-6e628f1c3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca915f7b-a227-4dbb-91fb-dbd59689a92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f7e0e7-cf54-4d33-8acf-71a358624d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58c59be0-ddfb-4394-9979-846135a23b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8d2c8e-2be4-4c69-84f2-99061490d12a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032814ec-29b8-493b-9ec9-0afc1000270d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a15650-c45d-4b2c-8c42-3a7430be237c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e29190-374f-4746-a6bf-0145b46d7e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3d3c33-6c73-4ea3-a990-e004d6bd80d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987186ff-f3ed-40e3-98f3-fae3a426e651",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a0bd74-ad53-438f-b269-43c3aa7a2c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edb6285-d4cc-41d9-998d-c1a134bd6eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e506777e-96b3-4506-8dba-98b8fbc854c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce71d441-0d4b-411f-a693-fc5cf9ffcb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1385382b-a3c9-4bb3-b310-a72e7f38cca6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135b22a4-a6d8-47ff-aa95-30e8bd6c994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5631a8e9-638f-446f-b489-cd6f0624d09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94acc205-2af5-4251-88a1-544aa98ae437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "409469d2-5f3d-428f-b61d-7da2b0bbfdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b4310-8a2b-49f5-bde0-9cc7ba0de836",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6632bff0-a990-4059-869b-1db7fae1c29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a58b2bf-76bc-437c-a9b2-8c43ea1b9eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9594bff-20d5-4a4d-99ce-f3dffdb71bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbc236d-a287-46af-b9ae-23cc07238315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccefefd-6df5-45ea-91a3-6531a9b23f57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9406e705-95cd-45f6-85d8-2fa1264586f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2164fc3e-3d24-411d-9992-95d57d318647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d5bcc-f836-47df-9ba1-9e1aecc0b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68f56e31-0ed6-40ed-ade1-2c65706a3ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3cc19a-7af9-423a-9db1-fc82b3d79c18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eb4400-2ed6-49cf-af7d-f389487d09fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5078f166-4fe3-477b-8d5c-46f8364c3983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b6fab9-ef1b-4801-b74a-9d9d0fa0518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "23d0671c-9927-4b76-9c46-6b0c55ddcfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182de16e-2b10-4cd2-a9fc-89a2a0de3343",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a60e6e-6961-4af1-a18a-13f137985491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b688f9-ab8d-42f3-91c5-cb0971470f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136642c8-96de-4d8f-a101-67b84485d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bca4cf7-5f58-42f4-91c9-7bfce6efeb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e3da7c-5e23-4cef-ab11-f0200b4aa3ab",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f1e915-eb38-4ad6-945e-27a22dc8c554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36b36ed-eb96-4e80-8804-3ca9fa2782a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefea96c-75b9-4e2e-a5bc-1dbd295fda24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c7cc05-cdde-46cd-8ec1-0e1c2a43214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0ce29-3ac3-4bfa-9af7-4fffa5b28545",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d13fd51-12d8-4667-8309-70bc931010c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0736f63-d07d-4c81-95f1-94bc91f25904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666bc49c-09ce-4f59-84a4-58e6421d9168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d396c76c-b6f1-4316-900a-40968f72dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a46bd-e0cd-4671-80e6-ad56f3d657a3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c113b9-832a-410d-a91a-2e84fa1798d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284fbd4b-8c95-4564-afbe-2adbeedf028c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8976751-c3ad-4a6e-a4b3-1ed37ac83b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4879c8c8-2925-425d-9c6e-8bff85b5536f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991f540b-e19b-4683-a95c-6d10357ab800",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06de3b23-1767-4c55-896e-9f63d63c1317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e7d0e2-486b-4c01-9b11-11ba541fab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42915c4-47e6-4685-abcc-252386c8bc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "839e444e-23bb-421d-aaec-8838e9d1a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45714be6-2e0f-48c0-9643-5f5d4ed77dc4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6cb416-6dc9-42c9-8f99-d3fe5790fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b1d90a-cc53-4eeb-816c-2a4a88baa783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15937227-71ad-418a-a616-5ba3c88d4f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e5f388-df33-4248-9c4d-fc5185ee89b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a435eda-f379-445a-ae53-e279d99117e5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f8592d-22a0-4132-b761-53b3a07b0adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d86376b-7a07-4731-9a6b-d5a5c64f10fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06626021-c4a3-4c90-a187-6dc277fa0ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3374dbd4-7d81-4cfc-b636-9fecf7cd98e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7e5b86-6be5-42e3-98f9-b4f28ff595d9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97481b-b158-40bf-9c11-fc768fbb530e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456bdede-93a7-4a27-abad-3b9ce622727b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1782d50a-fefb-4b54-a1fa-bec9d661e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29285887-6035-4784-9942-6732945b5366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b308fe7-e164-4476-b570-3912df9d41bf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45677af6-b028-4d0c-b288-af93ca98ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd728c24-1cd7-4b17-9c21-20d1716cfb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a436677-a641-427e-937f-cbaa16770439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed4d34f-54a2-42a8-8c47-8082b86a713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de3f5ba-9dd2-4701-8dc9-29064a0a57c6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9883b4a-a586-4d44-b6c7-ad96ea18f93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76fbd86c-f5eb-4c08-8957-a62d20ec7030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcbd7e6-2448-4f5a-be95-08a6ec87fe27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "950bf0ec-8a1f-42fe-93bc-a1889beadb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecafa6a-425a-4a2d-9085-a69336ab4555",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e20b1f-0bd1-4a80-86ea-813038b64e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5aaa49-8510-43da-8bea-628f608d3000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e17fc33-d713-4804-82b3-116eceaa6716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a279be29-691c-4829-8dcc-3f5d75121e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a081e-2688-4387-83d6-33ca020e56a2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f39d62-e77f-4642-9705-1b43d7f9d327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4c3a21-ccb4-4184-ba67-9e5200471689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350be077-eec5-4715-b4d2-f6a69de37b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "742e310f-2aed-4542-979d-c650dce6c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b725cab-c44c-49ec-8f2f-7e4c7c3e0c6f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5832617-ea80-4f24-99cf-d8afb4930a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d1b060-974b-46b1-a06f-99c44be13580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe29f17-4b39-4789-890f-592e1ec012a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "372d73c7-c3df-4b67-9d17-308d07ad2d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0f6bd8-8ac8-4c4a-abf8-1527e26a310d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd219d0-db68-499c-b73d-130e11470a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d7be23-943b-4a08-a578-45760baed2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5aa5f8-7b79-4f11-ad13-92c1535a9af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcbf500c-13f5-4935-968e-2597c5d22a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb112005-e4d8-4ab7-a57f-ad5845398c91",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c7380-bb67-4d06-a1c0-8876a38f87e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a4d62c-2345-46f4-aba4-0d0cbfb15d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d454c44b-b760-4460-8602-a81b3c72b515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25bff92e-64fc-45b2-a5f2-c8fc9efe085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df81896e-4837-4cc1-ae7b-65a863ffb6a9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c049b21c-9521-4076-8656-8efc8aaf39cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14b5bb1-1e8b-46af-bdf9-51734432e33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0e1abb-b357-4110-bede-80db137c87b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59ff759-003b-4117-97d9-081a21932237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b9d731-d673-4f86-9184-6dd9106d2bab",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bfc3b2-d17c-43bd-9414-6608b638aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3191454e-3b12-45c6-8153-a9fbb02c8080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e22e4b-463b-4eb3-9061-b73386fad01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb5a23d-8788-4662-84f5-30cfe952ccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc15c4b-8ad7-4e74-a0e1-13edf5d45282",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1015b36d-2fbf-4be9-b479-9a54c8c91242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3b3d56-df19-41d8-928f-68e3a2b657e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e1f164-03e3-4f99-abdc-22e912993aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2117c6be-7ef3-4a33-8963-024f4a4f6f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888be591-7b29-4670-b1f4-bd7afab7ee09",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f7801a-7082-4e2e-acef-fabed189d62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d04e36-ca25-4de9-95b2-1361531a6c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050a9d71-30dd-4ad3-b5d5-cccebacaddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af20fe4f-ab82-4fe8-a0cf-f46e4db7f259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234c7386-4587-4fc4-9691-9663a17b46cf",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14333207-5be4-4c60-962e-4bd50ff40cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716c073b-b769-4231-9940-b926057b4fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29ef5de-235d-4926-8f55-f38d5075820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68e6a657-e1ba-4ef8-9df4-7e272d6df8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c05b3-7524-45a7-8054-604565ff0046",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2dc61f-e982-4bb9-ab57-be624c54737e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9748ba95-d421-4abb-8d35-855dcd03082d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049054c-06e7-41b7-acfc-2f7a9c488cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38becce-7015-47cc-8a33-4455811b934d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a406d0-51dd-4dd4-998c-9e3f56672433",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a997d43-f183-46d6-83a1-a658aa7c4cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e5241-b4f0-447a-b34e-26f36585ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc968ff-4c82-4a8a-8e2f-54c1ceba2be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aafcb80-6f1f-4da6-8d18-32fa1975bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129dfb73-b5e7-4b0c-8bf1-78613238f374",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b56fe3-9d36-4013-890b-1d9fc2c675f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e69439a-c74a-41ad-9847-6ddaaa3d3e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af9cd80-0057-44c0-9cbe-98c4b45dae3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3782b4ed-ff4c-4167-9f36-2060a5c763f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816d1a29-1b39-400c-8197-d302f2087cc6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503b89d2-9f3f-4cf6-8364-5228c183ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076dc526-5675-47df-b36d-30328a625dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bbb30a-6d83-4448-be5f-5c23cc001183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a219218-df4f-43c5-8316-e23ca9bf3b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ba4dfa-8a0c-4ae3-a509-64d85f222746",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3032d010-b762-40c1-87be-54ee093e4d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b68bd8-fff0-4f44-b7b6-cf00e760855d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eacd4de-7ab2-4b7d-b5b9-ec78ca7c75c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77383913-eef2-45d4-9527-6b9a630d76e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd513bd-06d1-40a9-b1ea-e37f7fd415cc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fa3624-a88d-4829-a5a4-3e9904656bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35dd17e1-e87d-487d-aa02-eff91ad35b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1cd86c-89ae-49e3-93e9-e33ac4847689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7892c765-774f-43fb-87ad-e194a982fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac89d69-36e7-4625-8b0b-19826f28f18a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f7a674-4169-4197-9d30-f74a79f3c664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262172f6-3fb1-444a-89d4-bb01171a583b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da94aa7-67b5-4090-8720-4403480ea036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc424073-dc34-472a-8b7e-53431a29c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c87bef-73ad-4b65-8b2f-2ec54f9806c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9902c580-1123-41ef-8749-1b2ec1967357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbffff2-466f-4c1b-a894-45babc7f42f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df23e039-c0da-4c07-a667-ca6c0e0561ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3191bd8a-895f-42ab-90eb-2c710f470582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a77d90-c835-4ed8-b85c-10a6d4368758",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e50420-5575-4ce5-be8c-e4f62d1d4dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2ea4e3-8952-4511-8efd-87b086ef8b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bbcff2-9dc2-4c70-a669-f1874ddc9eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd93854b-954a-4e91-9407-88aeea8090d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49eb9f6-e30d-4992-b57b-12a5fb97590f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7593b3-2bbb-49f3-b0ea-58eaf8672207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9af81b9-09c5-45b6-a508-9786a69f031d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868b6259-39ee-4d60-a058-b258caec2ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3232c3-6d85-4b1d-a408-953177ebaf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148e2472-74c5-4ec9-9a40-45661f8c8faf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc03b4ad-e495-44d0-b740-ac84605b6650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6633acea-64fd-467d-ba75-60d7aa5ad7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145bba22-7be2-4af2-b5a0-663a7391203b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82966252-04e3-46be-9930-37c19c978d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b99c0f-dbb6-4332-a37d-c0ce79f8ad8b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11d9f9d-76a6-4da1-a7e3-f724aecc8bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38c3035c-7c28-47f0-a84a-362d7e4080e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99276596-1d89-46b6-815e-bbbfd2a53fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbbd237-f760-4cb5-9a1d-fd8a1d61e0b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c45adcb4-d3b1-4a89-b306-39fb8edaa331",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f632e19-f7a0-4802-953a-3750d52434a0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe1be16-99f7-4d9c-b272-a42c3ff3b7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff398b9b-9b2a-497d-9c4f-c74e441ffec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdafc742-914e-4b0a-b607-15e92be21c86",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9f277e2-db23-4017-b132-c4fb027557ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0665f82-5b1d-435f-8812-e85b2be88a2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e4de020-394a-41a0-900a-911c5a5f9575"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26e32312-1229-4fde-8dff-0d2c02b1660e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f21ad79d-94b3-4191-b537-0f2d60504e8f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffff319a-c30d-4c3c-b850-1bc45ec90b20",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d554b2e-0db9-45ed-91e3-34a1e1f078b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "578e8b2c-e093-40bc-994c-564a7e1ae5d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e73a2977-66ab-4f8e-a006-d96a70753136"
                }
              }
            ]
          },
          {
            "id": "c1c92835-40d7-4682-8e1b-bfbad176382b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efec9093-4f70-4350-be77-d6777f38e70b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d11dddd2-4a9e-467d-872e-bf333aede0b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "792b9d1d-2be5-4522-8264-00bc3d53dfb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef7c9ac0-5493-4d53-a775-946f08c62e60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f58477cc-5007-4963-9216-d735479501f6"
                    }
                  }
                ]
              },
              {
                "id": "9102cb27-0b40-4301-bdd3-970c62497eb0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07af369b-4929-4d45-b0c4-cdcdd8480b8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4af79904-f285-461b-a6df-1692d9b4d926"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfb623fb-dae7-4d33-8861-9bb521dc7e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0b2d81b-f060-4f56-a809-1b16a34c1f68"
                    }
                  }
                ]
              },
              {
                "id": "f4805410-ec1d-41fe-9fd6-cae9cf0e4915",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a15ff2a6-50b9-47db-b819-c47250e925cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60cca1f1-6af2-4856-9ad8-916b1c95fc46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af22312c-c4a8-42fd-a30a-6b14631caf8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d353ad8e-33f5-4159-a1b5-b52a171290e5"
                    }
                  }
                ]
              },
              {
                "id": "206cd5d8-8442-4597-b7d0-ce0c763e9401",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5553e7a9-324c-4edb-9966-013fb87bb259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c86cf99-0641-4b61-847e-59ee7e0c0f4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb3cb74f-25b7-49bf-adaf-135b3492c58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "377dca81-bfba-4a9b-bf36-ed5a30af135f"
                    }
                  }
                ]
              },
              {
                "id": "f1db777f-bc17-4e58-9550-2d9385c240c1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6b22dbb-e6f6-4907-b8d0-bad927c57c37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d29b59f2-2ce7-489f-a54b-ae0765f0c501"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85e03281-ecb6-4235-97f3-185a4835004a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "11308a8f-616e-4874-9efb-78939615cb5f"
                    }
                  }
                ]
              },
              {
                "id": "256582f6-e96e-49ef-abdb-4a184350ad22",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0abed3ee-8622-45b3-bea1-770ed79c2dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f4e9a85-fb0a-437f-b0f1-ebe6668622dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b306e1-803f-4cf9-8f37-edfcab00c904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b5919ec-f73c-43e9-bf61-1ea559190da8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eda5d29-c90e-4203-acf1-6ba6fdde92e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a7aa11e-d545-4c10-a89f-6713e52f4277"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa744f4f-5d92-4ba8-b98b-74b72f0e0585",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8963ff7-4c5b-4dbb-9b85-a44b95ab488a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f89ca6a-2ae7-4459-8956-7459e5f1181c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "864473d0-7e3c-49f7-b0b3-2adee702d1c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33cfe3c6-c37d-43be-a365-f60db55232c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5720506c-d438-4fa1-bbbe-b3e96321475b"
            }
          }
        ]
      },
      {
        "id": "38c3b4ac-8605-4b98-8039-ff0094b107d7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "28a91c26-8315-4acb-9545-66eb5acd60cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "434b2d1f-cc02-4f69-9e5a-54d9282d1def",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f987d92-5346-4008-a881-55105e1348f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4498229-60f0-41f2-af20-60857600aeef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc8b119-bb8f-4267-8ec3-5c2907ff7974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b3abf-26ae-40b2-b363-f42672b8a39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0724d833-5ce2-4c95-8d44-52e648d1c330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d87a75-8806-4f0b-965c-d998ba56f493",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990e752e-03cd-442a-a2fc-5aa6005f73b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f1cd01-b31e-4072-afa4-f9ad9b28c670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2bde78-4740-4a10-9d3b-15e85c21f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8992420a-72cd-496a-a9d5-d7b71bbd4328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b25520-6ecd-471c-8d91-d87cf7cabcf5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70301b89-e5fc-4775-80d8-3bda38904623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae3f2131-623b-4f08-afe0-356c9c5200a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd78bdc9-964b-45ee-ab4e-7bb70e11c114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51dde6a-7d95-45ce-83b2-a5c6ab7dfc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef51727-d59c-4ec1-8c7d-099a711329d1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a53356-512c-44f2-b074-23af1f54bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192edcef-b376-49ca-9177-693d146ee8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6dafa1-b087-4696-ba85-a7213a2a8f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69935ac1-d15b-4ecb-b046-3f23f7591d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8bfe67-a140-4903-b93c-2d89be038469",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56843e5-e2da-4758-be68-08f0f81d5a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea47a7d-00d8-49f6-8346-32ecb175ffde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e13e792-c8ff-421c-ac2b-285058678aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c6a0df-5831-4f66-b630-27b846e1c1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5734cb3-7c04-4c96-aa99-dd678a2db098",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0316c03-e9e5-4673-b1f2-55da46e6f02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6bb867-df95-4c39-8b2e-9c0f88ab5f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e531c2-333c-4f2f-856c-70f6ae8b5380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b5cc608-af01-4a16-9663-9be4f85c97ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2e3449-b256-4b9a-90ad-f3b5375efc9e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c7ade8-aebd-4d7c-8860-1d490eebc795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa93290-6bd1-4f76-ab7f-9b0f98da09d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa24dd1d-03f6-4938-b235-5f75174c7f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e5b610-b28d-4ff1-917b-d2384e756165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d5de0-5d81-4212-a2f7-ee4985573f37",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9769d5-f803-4645-9051-f5c0ae9ccbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c632c111-579e-4c3d-82d0-57a2a710d657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93232cb9-d8ae-4229-8125-3acf3b75963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae5e44f-2803-459f-9472-19e5a3f7395a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a94c665-86b0-4154-86c9-8e04973f1c56",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace44fff-da41-4f9c-a737-0421602e26d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead0c86f-dce7-4749-b9b9-dc34f947ec85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883ac200-04cc-4f72-b1d4-0dd8d4efea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6b970c-4503-447b-95a0-8d746ee20cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8313d890-44ff-4866-b46c-907ded946d7f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925e6040-f723-4d32-bc10-befa98833ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a59e8b0-02ef-4bf1-a789-297dc9a41593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bac1aa-c316-4245-832e-0733f5021784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac84e042-ec8f-4099-9ea0-a4b5dbe031e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d500cf4-ab61-47a4-9e03-9451127cface",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04a6de-1e5e-4659-b026-bf1824c3ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9c3776-790e-492b-9aac-9016737d5bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb11783e-40d5-456d-8ad3-b81277d5ca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e6026681-83b6-421a-b550-b26a12fa5fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28596149-1a47-49e9-8d87-9dbe27b0039c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9796d1b5-c66a-41e5-b3ba-b604cb621c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c7f92c0-558c-49c5-8907-177d384ff63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52984bb-521d-4823-aceb-31b5c1d12437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36a00601-fcc3-4656-a83c-cb5e120f0a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5691279b-9a12-4650-a2f1-26797b6702e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93c6924-d632-45fa-8951-c2b9e904d938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397ed426-38e4-4bfb-a750-0330cd4bc2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d0b052-1686-4b3c-97de-574e2e8d8f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4feb9f34-fe4b-425d-9207-1019fd5a014a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963a3e51-7db6-4db5-b502-05fbb85dc6da",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae67e4a-5312-4650-a282-49d03e855041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05040189-4cc3-4508-9ea5-c68a3cb335c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ca7e04-5195-4048-b27f-2d2fc57037bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96e49c1-c830-488f-873c-88c0af1f02e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea03391-af61-4cbe-ba4a-8b511b5e3ed3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca4181c-2142-4dcf-895a-527a4d4e2b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8b7f82-8849-40ac-941c-e223ac175a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871bb9a6-ce23-4e16-b92a-57c584b8f67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "062b6e30-7604-4943-b2a8-f294eead62ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2647b0fb-688e-49f5-baf0-e5d1614f3968",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ce424b-25f4-4438-8897-4b027be744d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b02851-0337-4dbc-837c-f65e68a2a12e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f40778-24a7-4b3e-9353-78b5979f05bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a72c6cad-b54d-4860-ac6e-02ce30a8c68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8365c25b-7186-4d19-8341-4dbc565f217e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d15986b-54e8-46d6-8b9d-34bdf8ae0739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aef712e-9ddc-4eb9-b57c-48c356b45cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedac148-365f-485d-b9a4-6800fcd65f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dee519e6-8ef9-401e-959b-1f96f228c24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b169cc-e70d-4071-8a1c-eed1ab401657",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd315dca-470b-43e2-bb1a-1110c0a4167d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4914f37f-9928-4e08-9480-65174f5585ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0973508b-22c1-4925-9ad9-39409428e63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3c981e-f75e-48e1-83c3-915429c8d382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fadecba-4692-4b33-84ec-47ad784c68de",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d6170d-dce1-4987-8ce5-cc5a99ad12f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd78e981-bf93-477d-afff-11ea2d1a78da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fa75aa-472c-4934-8232-299502dac516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eeaea7a2-d5f3-4165-99d2-9eed84f43b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792fa88b-2b3d-49ba-95a3-a60f246dfe09",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a246070a-dd85-4601-9c56-51f628675b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1148e06a-4f87-407d-904c-8df4289d834b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27503de2-57c9-4c32-9264-a388229fe45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff1103e6-d12b-48cb-a733-78256c33ebb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1b4221-ccea-4f99-a75e-a119564d6d4f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8645a6e-9f18-4052-84a3-951073097c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ecb11b-8370-4043-9d8c-2088beaecbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f471d6-d945-4914-b504-542a8e609273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3ac952-f0ef-47a6-b42e-2ca2e7c3f3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf1f7a1-54f2-4279-b7cc-e86de3cd86dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80927a3-5167-4fb2-859c-b7c7105b4544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fc66c6-c6de-4a14-b96c-40c6ccc6e56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb927a4b-029c-44e3-8404-03a12d9f90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1167e1-5c81-4858-9ad7-f9f137043cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df7e39f-5b43-454e-933f-b5cdb589718e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e2c8df-71c6-484f-a928-1639094908bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c72cf0b-e176-4aa5-9ea5-0880c6b2371b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5dfbee-54ca-457e-99bf-2a74c68acf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "287cf55d-2e12-4384-a816-822ef870293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606b5225-353b-48b1-8f53-868d99d270a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e32830-527a-4263-9660-ce468094226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52d427c-864a-4f5e-a38b-8d4b290e7f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df46dfe1-8abe-4f33-87ae-c403f0600a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f08c79fd-9c1c-491b-a31d-02b05816f77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e933f592-e1a2-4399-9d2a-add516f79daa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8741282-8aa9-43d3-bc5d-85318448d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3555c152-622a-46c3-bccf-a21cc7c35b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513d817c-18f7-4f11-a23e-757793bca715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82ab42f0-11af-490c-b83b-3417d9af5ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800ec0fb-334d-46d3-a544-5ceb30bbdaa7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0c163-e224-4720-8f1b-b069b8828893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904a400b-621e-4d05-a4bf-538860291194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a45d6c-9388-4121-adb5-b8e982cadc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06975bff-d7ce-4e16-aa8d-01e0898f8b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cea9b86-5d61-4f95-9a7d-7d2bfe2ebfbc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabed0f5-6e31-421e-be18-4c91b0b6b614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aa8fc3-6da2-4a6d-9f2f-d16190457c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ebf1ff-52a4-470c-8e97-39506420443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a96e88f7-10f7-4337-83f3-a98427b16677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb80c117-baa3-4f29-8298-9eb050c8208f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd9b251-375a-4c52-be0f-cbcd24908d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba7c579-cf00-4949-aff1-a812fe86e7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a816e5c-cfff-4c23-9a77-3ca5dec24215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d90b3b-e1ea-4e2e-93ba-1d9398d41008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef5acba-0f9a-43c5-947d-1748345fa9a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f31ef15-4fb0-42ee-a306-64ebb19aba80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461f632d-4e8c-4200-b3e4-f1224764991b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c123c752-61e2-4e26-b819-fabbd625a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0490fb66-a4a9-4fcc-8249-0fa7babe7fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af3f597-ed49-4291-9674-71e21d4f3d9d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63da71c-e5c7-47a6-b8eb-b6a211165135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faeec75-0e29-464c-9f72-f3aa10a521ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319997fd-c90f-4e91-a36d-db1e11654779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87dda05-478a-4671-948b-42699bbef503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b570746c-886d-4aac-97e5-6b5732b167a2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d7b94d-bff7-403a-b8eb-11fe4dea38b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46cab8a-3f7b-49bb-9ea2-d8edda184609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0710c923-6462-4b43-8650-44c956724be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bea56459-d0cb-472c-b21d-8aad7a425df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271598f5-4d14-47ed-9de8-0cfdd033ae0e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa3d6da-a128-448a-93f9-3adb2a7a7470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c5340c-c7dd-4b8a-9cf6-97161a549b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283b8b4e-ed40-4dfb-a388-ce2b362ee152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0968e79d-53ce-4225-9579-c0dd410f86d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b822350-7c90-4238-ae22-267c0f1e6dd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fb17f69-2b23-491a-a4f8-eb3573549a58",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51579c9b-75db-439a-bda8-810cfa4dbc61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "64cd001f-62fc-492d-bee4-7f0a758040eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc91954-146c-4571-9b71-c43fcdd4e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49afa13f-0440-495c-8792-24e56c3c4851"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c97657fa-5f04-4032-8f8a-88a809ecba31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f586f76-b81d-47ca-9387-4bc1e8cdf28c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "821d317d-e813-4f27-a2d4-fbe1e03e1c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c44c642c-c5e6-4229-b7d5-630f3d51aae4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e531d49-24c0-4e4a-b98d-5cc67f59576f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "017f5494-3c7d-412a-a4a3-32ae87da0442"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4710f8cd-8bb6-469b-82b2-8e68d38a0525",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91de9c0a-95c8-40e8-a949-84a4bde8d5cb"
            }
          }
        ]
      },
      {
        "id": "f67fba33-ba30-48b0-90f1-d16d7faf544f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6b03a487-95a9-461e-8caa-e7c4417e2faa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "295f417b-ae87-4ab9-9639-1258b94afbda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ed56d8dd-a131-487a-af72-52dadba62623",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922ce3ce-ad63-48f4-8776-2e565c2a7611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0637d3b3-3dba-4f51-9860-ff0dd11659f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a9787c-dfbb-499a-aea0-ae914e98be02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "adab897a-a9cf-40e5-806c-fc2eb8f87405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae43cc6-0770-4c8a-965a-c2a3cdf28f3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0392c56a-585a-4c2a-b0cb-b3d179e44a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc61dad-07cc-4a89-ba6f-3b0961b3c9e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffa5ca5-33fe-43d9-9630-5f5b562a0ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6063b0d2-9e4c-4fb9-9a0b-7b17c104bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2139ce-cbf2-4fcc-9bd4-d6116b53776e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3eaff6-7e88-484f-a9cd-124dce7ccd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f9e322-48d7-4688-ae11-7f6908b0274c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44948546-fe84-4495-801f-adde15e4b4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af3b2ede-b3a7-41f0-b1df-a0c63c7e219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e77c99-532a-4439-858b-c6befdfdb1c7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ded345f-8f23-4006-9587-e837a05919d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e678630-d3c9-4089-b762-ea04681c1337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f2e1e4-b8f2-4e34-9382-4c616e9cc7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2773c118-5df2-4296-8540-19d7c9d517df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a6be3f-c4f3-40b8-84dc-145b1a3819e5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3fb940-9458-431e-9b0d-863f2209b289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8f181e-3fdf-44a6-acd9-4b7224778f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22777091-2d35-4bdd-8c54-cd03a104141f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03bc6ceb-2b86-4824-a388-336d6f2b5b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c3b62c-3f67-404f-b881-59657357f495",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1f0923-a400-4e6c-84b0-76716a042b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af98f9b4-14c8-4b66-b5ff-dc59b44e2374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ca5e0b-f746-4254-94ba-747e4568e607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fefce75c-4a1a-4a14-b01d-bffec3fe351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f839530d-8f50-45bb-81eb-8b44698e7e41",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d7d519-0acf-473d-9add-f66df1bd1a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a692ee-9a95-4499-bc8f-92b201e9e3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d721abbd-8733-41bc-83be-fc15b769eee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5f6687-dbec-4125-8713-38de9bbaeaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35d33c9-73d1-4efa-9539-8a12670200bb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364a900c-6344-4438-8ee7-35491fee4f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e99d8f7-e73d-459b-8e8a-636441548a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a7c4d9-d29a-48f1-ad14-7f99f04c0d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f32a9e-1523-4c1a-a3b6-bd5737696408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43d309f-0e75-419c-ac28-4eb37fb7b8fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5f60b0-01dd-41cd-8d0d-737d3c28c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7783074b-5b30-4c8a-bcec-54293b9848ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedc76fe-1fc7-4136-87c5-dc8ef240e707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "405c8ac6-956a-40e8-adb2-32ada3c6e325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a38ea4-c718-45d0-9aae-e289e66063f2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b7f477-3acf-40c4-b416-d29254947127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766db694-6ff8-49d4-b916-bc2535b46e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22492377-882e-4569-af0f-44f9240a6497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1fc32d-3201-458c-9712-b39ab890f8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7fd23a-a85a-4e34-8fdd-157c40870d83",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9696038-56a7-4531-bd75-171b5ae61738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97abe48a-87d9-44d5-a0e3-b948ba99cdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef15d8d-2999-49c7-ac10-8d5883f81de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "689ecdd2-e104-4fb2-a0fd-e2eea8d9192e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb037df9-6fbe-4132-a15c-60917d3e931a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e214ebd7-368b-4c6f-9820-fef846c54a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94637301-fbe2-4c47-9220-37990e366b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3aab8d-db31-4539-ab0f-78e0c5a841ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02a60de3-abf2-4214-9a0e-0339209152b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8199fac8-a0aa-4ca4-a7a6-c1ed4a1c82b6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2310e5cd-c308-4c29-b2b2-45be7fbd917a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1565879a-181a-4c77-86d2-9c6178f91113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f44b72b-bda9-44e8-9ac6-dbae9287a95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e843ad67-5f61-40ef-ac20-24a92033516c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf30e6a-1125-44d9-b1a6-da8c7db87abe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53262075-8eac-4c71-a924-a44af4077c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2300f5-cfe6-4661-ae68-ce3fa7d39927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e19bb00-923f-49b2-953d-26d279d6a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ba9aa3-db73-4603-9f2d-be9f3238dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55be09cc-bb99-426f-b278-70e54dfff659",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa079f37-79db-41ad-94ce-b72478625694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60d5e1a-8518-41fb-96f5-fca8d610a7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49447708-1b44-4595-8cc8-faead8df269f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6a536d-0463-4de3-b869-ce0fab3b9688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72cfde3-8d77-4f7c-81af-c12257467d7b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d28d30f-9fbf-4591-b843-50c9b2df53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f77cb7-75cc-40ad-a9a6-11bd76be51d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2b913e-b1dc-4150-8e49-42918944dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "94757f48-3d73-45f4-ae7f-4d26f8230e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241ce90f-1321-4ada-9acd-2f9fdc8f540d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2a7cbe-5d2e-4fc3-9f26-e5a0def23173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffed154-e0a1-4ddd-a9e6-65f75760a6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9408f928-0232-40ab-9518-06a7eb17308c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17d892d6-3f86-45dc-9401-29ad19785792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d777df-7d68-47cb-b1dd-744577800d60",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f5fee5-6d9e-450a-922c-d422374209f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc387621-7a43-4ae8-ab46-2ae0096dd8ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3dff4-c51a-40f0-b04f-7d9d819ebf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bb297c-7642-4169-a697-cc39d8bed35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea9ab21-f9e5-4399-be81-3ac751eb84e4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4d620e-4b7a-4773-b7bc-5e1e296b7624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b57673-aaf2-43e6-befc-891d80671b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa5e8d0-f96f-4c13-bb1e-a01d326c0fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee9ad68-6bb4-4ee5-a113-8b23e776987c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb7140d-0742-41a3-ba44-51a3659f9355",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58abbb3-2667-45db-ba4e-a53b106f9633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ac9448-e9c2-40ef-899a-eb0fd95739c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffa3e65-f3df-408a-98dc-79f470ee1c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf00cb4-9f37-40ed-81c3-750f13c4260c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5882ef5-f80f-4ecb-8383-95d91b979400",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db2ef08b-2b54-45be-b511-9ad610f4c637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7e06a3-38cc-49ea-a65b-fcd66861746c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0ce23e-d2bf-4450-ae6c-20f07ada7718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09913c83-7bb8-490f-a8ce-0a4f3eea0e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd166bb5-81e4-4323-bc0a-c5a6ca254ecb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e4e03-2ff0-47d7-b97f-e40ec5e481c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d30fcc-4c6a-4493-93ae-06a80cf00194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ad3c85-7d52-491b-a0f3-bc7930576189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08b9b130-472a-45f3-a2c3-2d1b05c14f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890f813f-71a4-40b2-bfdc-7311bbddc471",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ebaa16-ce5c-48a2-b051-0b0589e16e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6fa070-d7b2-41eb-b5cf-bf95f588fc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d273392f-aa30-4b7c-ba78-55303b79418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92da96c1-3926-412c-bf64-48e95571b539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e2824-457a-41f7-a745-447a43ca89c4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6049c494-56fd-43bd-b624-c3125314d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59668999-a7c8-4522-8a98-05536ad161ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6666009-7d2b-45f0-b900-589303bb5b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29d1b76-e4bb-406f-9b64-fb077a4323a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f58c0e-aea2-4a7e-b461-80afb1270814",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d733501e-0034-43eb-bc19-67d4414bae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84913e0d-bb12-4162-ab22-3af682f23b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90b52bb-b948-4ccd-afd3-9dedc5d25b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0c50c6-037b-4327-ba5c-9704a10c0049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d886108a-f03f-4950-9040-a4fb6eef0bce",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca06b7-08ca-454f-93ba-6ab04af0c4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae285beb-ce12-4e90-b38d-6be11e8a42c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3660abf4-f587-421d-a8fb-870561eee5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dda1a601-f2d2-4dad-9a40-f8d4538086c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64e900-9bd5-4d4e-a11e-b0dd5e6aecb5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f740b82-081b-4b51-baba-12c5a8f2bc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f825b2-fa19-4b09-8b86-37ca5da7a8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a88b17-9d53-4572-809d-1e4eb31828eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acff85c8-7a41-468d-a582-2ec719136880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcff2d21-5519-417b-baee-1dc8da31a3bb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a4c127-5624-49e6-ad09-8d76f0ef2f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e24dc7-5326-4f69-9e5f-6a16e0d3a21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c7320-9fe7-4381-98af-d4c40b297246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce39aedc-c2c5-49d4-bcde-c8ee9ae1c8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5eec1e-5671-47fa-aaf6-1bc6cae20c18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8a9086-750c-4b78-8fd4-16656a131daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782e3f10-8ff7-4de2-becc-292dfc0db49b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84603bf9-c46f-4ec3-b9d3-79541f9fca6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f3ae8b-a547-479c-b620-ac8c4c4ee19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9588bf-cd94-407b-a5b5-c35932023efb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ef38a8-2b98-4ea8-99eb-9367cc7c1848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a59e20-0d39-4a33-9d73-658fb096a09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362b5f15-2fa3-4350-a6a9-01267e0c9cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "befbbb59-7448-49e8-9978-47993e0e444b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a140aa8f-928d-4653-b84c-da7f6d41bc24",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85c7385-7ccd-43be-82ef-bf3b4cd66bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c3bb245-9e28-4931-891e-4e6a3c8b154e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8359db97-3747-4f80-8506-ef68125c5bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ed9d3b-6266-433d-b18a-fa6326c64b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8525b98-6f7c-479d-b855-5cbdc1009498",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f44f32-9636-488a-a331-299a1b75ae71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca20438-2ddc-448d-b40a-6c543c0fbd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce1baa4-a29a-4c2b-9c7c-a6de44e0c07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1955c0-1f3f-420c-b2df-2b506dc6c721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e04c9d0-a711-4df0-9c4d-8eb83e5665af",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e9d4eb-ee8f-4666-91fc-21844fa716ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e437885-ffef-45d0-92e5-7079c0b99106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca74f83b-1ad3-4157-ae01-9826c7b09cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68d2fa75-b338-418e-890f-81ec2cfd3f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00d1519-6466-4cb9-8dff-620ae3582235",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f204629c-33d4-4ac8-923b-c3587c4a1fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b68ecd2-e952-4546-8e69-9123cf5f5216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25ffd09-89b2-47dc-821b-9ae0bfebec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d00849-20bc-4412-accd-ee1ec5814f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b00b2d-f806-42fc-847f-4c5da502f1ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf78fbdb-1aef-448a-a1bb-b57ffc912f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32964b1f-5e5e-4cb2-af8f-439fbd45ae00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e190b9d-4945-4e13-9cda-b001c6bdafdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8411232b-5f2a-46fd-818b-6e6d5419cf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038cd63-dbc3-46d7-b7e3-8ec01dd0209e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2bc246-d0b5-4982-8a06-ea4ae6870db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d255b68-cf6f-41bf-9ae6-a1e9867ce9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69616f99-873a-4f1e-b3b3-80d00dc2919d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b719bce-0049-4687-8a06-20d889a3aff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab093c2-851b-4994-af8e-a992cf3321eb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a65d231-94ea-46ea-856d-ce6f97015ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef29519d-be0c-4e04-ad78-c5d24f70cc2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4abe03-f2fa-4b9b-bd4e-e34c2897d547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb11cc9e-3053-4a31-a0e5-67edf3698c15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5efeb522-1518-492d-b563-c74819e5fece",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0815e42d-62a3-431a-aae9-e89bc1f73503",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300a9fd1-c56e-4654-b630-f213c6a5adcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcb9887-3812-4107-ad42-bb0b58dad8d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6af9e-2dda-4e5f-8bcf-0d39bf5dfe23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a1d5556-f653-4a70-85ae-e2723299e2a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5081a295-582a-4f03-a6b5-03e524ea072c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bdaa3e6-bbe3-438d-9c71-6a8645be17f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fd71c94-b0c4-4459-9ca3-b90c9c40e9b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ca59ac-2509-427e-9282-24bdcce4a939"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "171c230a-005b-43c5-983b-0d9cbb3ca31a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f76565f-38fe-40cf-b7c8-d37beec2156c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7498cd18-6a93-47ec-a2bd-b93b63e00249",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8bf2703-ed01-481b-8102-a5bc5864a853"
            }
          }
        ]
      },
      {
        "id": "c085b2e9-82ab-4bbe-9e73-081f33b60118",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "43a06d3b-06ee-46e7-9adb-0ac48694bbf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b533bd0a-6bfc-44f2-9d22-ea9b516cc02c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4099b38-b456-43ce-9f67-07be4d6768ff",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4c5fc8-98de-4c6b-a3d8-e02e348136ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d687e47-9c92-404a-a86c-16f1b9de51be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f08481-3dfb-4395-8bb6-c4d2876eb54e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d28b2d-74b6-466b-8d83-636893bf2da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6820e8ff-7332-44bc-92ad-f71c8dcabfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eec081b-adf7-49ee-844c-e3a6ff45418e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c06a73-8749-41c1-946c-b8bb40299554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd034c1b-83b7-42f9-95fe-0b85484a85f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37b7342-cca0-4c77-bdad-8a01c144ca71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af3208-9aef-45bc-8196-aaebb60d915f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bf8d92-be4f-40df-9492-bf1608eaecbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faf15d5-7637-4191-bc89-3fa21e0e1b33",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e9277-2e28-4774-a682-1abd12528912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9e5701-a865-4715-9c0d-d59f57093b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc6e1d9-b43f-4611-b32c-c4bcb7b8300d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594518ed-8101-4c34-95a0-04fcfb22cab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa42ff40-f118-4337-a0fd-e88f4c0f460a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aa712e-82dc-4866-b6eb-c0cfe98efaf8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afde617-8a76-49ec-8f1b-35d4e5ed60aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb4f0d5-37ea-437c-aa49-6bc5b88c093c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3e52c-1feb-4eef-ae9d-85e8f76e0d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508f0401-d3f2-4333-8524-f4c6011d74db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ce97b3-e280-48f7-bdb0-50047ade437b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26801910-2e89-4fca-979e-73903c69d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fd2f60-2e4a-4108-83d4-601e98e4ce42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d613cde-8bc3-4dac-b5d4-5ca0f28c0d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c87c7a0-b2bb-4e88-9b09-1acdb793282f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272c8189-61b4-446d-85ca-e6b924f979db",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3db5ba-1ae9-4103-abd8-b43f8a28bff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cca7aa-e022-40b3-acca-3ef4ca5630c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76e8f3b-4f14-4181-b1f7-c95137aed17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871a8d2a-5abc-4cab-ac10-b04d2f927603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32500cf-092f-4ca1-9d48-64edaf4fac5a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6256af-0c49-44ea-95fb-7a05acaf0c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5a2f77-434b-4568-9839-f3b24bac952e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cfe054-84f3-4c75-b175-c99cce630e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d855661-4df2-4083-bf9f-460af5875ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38737b3-f6e3-4ed0-b512-aace70f15923",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d465985-aeef-4fd0-94c0-e76d85642a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14e52df-368b-45a8-8bb4-55b03aa842a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa8918b-d856-40fe-8b16-164035650b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225346c2-92c7-4518-8ed7-77d9c8699d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d579da7-0e96-4fa9-baf2-bbeff8dc7a26",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b83773b-f31d-42fa-82ad-cbbf4280b731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c90ab3-2412-4b0c-97f3-b0d0a187fbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d0247d-b058-4026-897f-7fbcecaa6fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd86d837-7b01-486b-9afb-e4bea64b9d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be578c87-ae82-4a13-b4ef-7d42bad3fa36",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071e32ad-c605-47cb-b6a4-0e5c8def19a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30da1afd-24c1-4032-b61a-3c7bd7a07f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83e5305-7106-4fab-b8be-987c5fa20024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43008c0e-271f-4a42-9044-b7fae7fea9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7f3c1-7553-4c4e-90c5-c14ab61c2f1d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ded45d-5e85-4fad-a236-f7b92ea45271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e8deb0-7188-489c-a723-a617bafa13bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f18764-f6fd-48c5-b1ab-ca2bf664b2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a4532-2167-4122-8f79-4789d9f76783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43211fc1-cf11-40c8-8ce4-2adc4977ac23",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ad0b4-e02a-44a1-9855-dc02e3e79815",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4cd1d2-c534-4d0a-948d-3fbbd57df1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30f2448-a58c-4e26-850b-50f92af38bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd29b97-5e71-4f71-b7f0-52cb0f487232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9428bc1-182f-4da8-8215-e154b51ad609",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc0665b-0ae5-4730-8925-9e2cb2fece3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b848213-d75a-4405-9e72-53078bbc54e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b700d-f69c-48f0-831d-0fcc37b056d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59eb104-c365-451f-8cf7-798d6d46fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc31b9b-5149-4985-8999-79ed4372545c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ea8eac-a29f-4709-bcd8-0bf001bb5f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a28166b-6ae8-41bb-a49d-bc712a09fade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c6a933-73c1-4691-8ed5-82a3268a1d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9873b999-334a-411a-868d-e57399da38e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7b81ff-9895-4802-9506-f61bb26e58a2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cea336-d967-4705-88aa-2c563297d733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768d0bb8-1776-409b-81ed-d85529212f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344628c2-276d-41e1-945c-3bb2945dac19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "272dcf2d-3bd9-452a-bc42-3e65941769da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e6d626-08b4-4309-8123-7bfbb9a05a9f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb72b44c-7f98-41fd-a8d5-a6bd5f47b51d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af69dd6-24ca-4afe-b64d-fa1acc74b6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba27a0-9d20-4f14-b9c4-809f4fe49dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1231337-782e-4f42-ab9a-de6cc44626c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fdc8a0-2a36-41fb-baba-be57ea0580b6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d935bb47-70c8-4889-984e-ff4dd9744a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f373ceb-215a-460b-87d9-d6c7c673222a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea089cdf-327a-4b36-86af-296b24ef723f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a50572a-4be6-4436-8a2f-ec4bbf4f325c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ed0ece-849c-4e6d-95c9-cd0195f02c98",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496bdfb0-4d6b-4eee-9d48-d820d7c67b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e673469f-e5fa-476b-aefa-e420e0e7f4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c765f2-cde2-4e93-9dec-bfaa398f5353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4cbf6d8-eda1-4877-af50-0e87f3f2a9fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f24aa8-d9ee-434d-b091-9c2136907746",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7c313d-030a-4247-bb8a-5a6f963fdfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01bd69b-f195-4391-a174-dfe0f6f6b884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704e3058-6b0e-4917-8715-9f81c00c00e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfa24bc-e39d-40f7-bdd9-553498497f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a979c3f-390b-45fa-994b-6c7b2a4511d4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b039df-ce01-4867-911c-86989b3ace20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01278926-a0cb-42c5-b1b4-9840a40023e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d0eb67-1653-4fa9-bcd6-34d3f16af3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5de7eb-6bf0-4e72-a489-b0f9d572492a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5a616e-9dc5-4ce3-b829-f97b1fbb65f9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ae506b-a9e4-492f-b821-2bd97ef12094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6fabf15-28c0-4077-b65a-170b39da4e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2541cee8-724e-4437-9e5e-a9a10676b8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d35ecd-15b8-4784-ae3e-da2c03525e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e494b3f2-5263-4c89-a75d-6c9436517119",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb0c84-7a5a-4c5c-aa83-d895b10a57f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85052658-95be-4c6a-ba84-8b86a0bebcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ccd311-dd37-475f-9632-1403bdbe406e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02868a46-edcb-4867-924d-c0ab9bdc81c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441b8d5c-deab-4e5a-99f4-0def6043e005",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb950087-05d5-4c9d-919b-69b8675067d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe8e34f5-e2d5-4b26-b369-edaa9148f9bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378698d6-1df3-42e5-a57c-0d00418d3ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ce84fc-65cc-4841-8072-cdd91f5e3dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aedb61f-f7dd-46b4-a3f2-c1853b36490f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b3c384-9137-4254-96c1-bdcafd11333c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a5f98f-19bd-4f12-b383-8618f470c35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d20a0-c1ee-40db-a748-dceba6812c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eadad26-114d-4925-a768-74913cd7091c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e0c701-d8c2-4061-aaf8-5f980cdd0067",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b967050-d7d0-4ba0-9487-afcb9f92d6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cc4be3-9c2c-463f-b0c4-48461ea92aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d297c91-3662-4337-b6ea-4c57b164c016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1dd11b9-d256-4edc-b689-0babd7d2cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60e1322-30ea-4d57-8f51-f96add37e541",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c010bc-61ca-46dc-a6cd-52162f2b0ffc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b909dbf5-8a47-44bf-9b21-e2c66699e5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a28da81-ea85-484a-b0b0-3ba6ccbc4d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c96b28f-ad94-4028-a85f-417a437888fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd5891e-f210-4288-99f9-3a85931dc6f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8eb288-8215-4635-87f1-28979d65c339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3186487-6612-4ba5-a936-fbb05853f975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e9aa0-13a1-44ba-99ed-617560a2c402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc463b15-421a-4459-b99a-a22fb4c4d9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7220afe2-8ac4-47d3-b77c-3e97967d663f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1f27a6-a59f-4236-a417-1fa4f47ec4cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d0b9bb-cff8-496f-b951-d1a797395cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c2bb47-c5b3-43ba-acc5-f6e8b0912e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a87ce20-12d0-4cb6-b3ac-9573adb020da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8e1945-789e-401b-a9c6-595a25ac7b24",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91467535-679e-48d4-84df-a4129d63bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e4c714-3642-4ca3-9e78-4340a8e3f846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1805f430-3dd8-42d6-871e-625ea68a4c7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87f4d14-c2f4-4818-bc61-ff2bd8d9e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74cd827-ea93-41af-bb8a-15eb058c1b16",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a86e96-b9c0-45ca-b52a-b4207c202591",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05f43f57-638f-4427-8216-fab4c2fa8f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4de953-4056-4944-a9b0-bffde6e42241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50e9fd9-fbe9-481c-b8b3-fa94ad91a82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80831202-4c26-4bf7-a8de-bf5020d9a15f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322f8bb8-f3dd-4a33-8fb4-f1192c84c1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d910925-db1c-4a43-b3b7-f12623965e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc1ddaf-5760-499e-9589-0a1e1ec46e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39cc151-7537-4821-92fa-bb8fee6bda1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c033ff35-c3ad-4325-af99-5f1afb78662a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96adfa27-c0a8-495a-b203-78fdabe21934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e81135c-bb4f-408b-8db2-193029a26547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f17ed1-6b53-4de0-825e-c32eb228911c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7d0b92-fca4-49b0-ba24-52e551b8c9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86076b69-9c77-4d04-b867-3f90290f0100",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2724c80c-7d41-4cc5-a7f1-ba2b50fff8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a17e98-f838-4e50-81d3-0835301ab438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfdad28-12af-4af5-96cf-b593ab841178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1defd0-de4c-40c1-9d52-da759273272e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c242be62-0d80-4da5-9a34-095c3195dc73",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d67633-57af-43df-a0b8-e82378af953b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c490ecc-bd47-42a4-80ba-c4efbb14cdb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282524a7-afc2-4257-bbf1-9db377c101ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218c4e6c-caaf-4237-a81d-3170825acf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c50345c-ddc1-4d71-be30-bc50627960f7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d514102b-cd6d-4e18-bfd4-d13d43084bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2374fffe-216d-4f7e-a2fb-5ee913cb3c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9609a934-e511-40e1-8dc2-d75457bc872a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97551769-2cde-4c15-a8bb-aea5b0ee2c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09ac7df-c0e3-49dd-92bd-ca97fd743f64",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e7f241-8a9a-4e16-8911-e8dc21045efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b386ca-51c0-4d56-be81-4377360306e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e9fb56-9420-4520-954c-cc4996097289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4427886a-0f0d-4c53-9375-99a9129db71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18acbc78-b3a9-4993-91cd-834acadb7c8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b92638-2184-46ba-b3af-ac1c8b2a9a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ecc76d-f60e-4465-b5f9-631d73a49f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd22de8-fa75-4ae4-a79b-7d556e87bdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5319beaa-cb0c-4067-9f72-2174d763eca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e05c14-3ec1-42cf-a80d-e938a4084774",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a326f38-4262-4bf9-a8ba-5a9a8ec837ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22a3f75-68a4-4f49-8ac9-0e14c42215a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c627b9-b4b7-4eaa-afde-23798d15985d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffd5766-903d-4b33-917d-a5e9cafa97de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befa202c-ad58-4eb9-9caf-5b0ab34aefec",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccedec0-399f-4a6d-a2dd-ed5b79f4449f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43569eb8-f8fa-4395-b8d8-6e89e0c1fedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e43bc6-53e4-4d50-946d-b8a92a2ff8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2b1b93-4054-451a-9e92-1798adb34f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965eb8ba-ad05-44f5-9f95-dcea79c35ed3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28428654-5917-42f2-a894-497d7ba8561a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919a52f3-91e1-4b9c-8e38-1a4dae2541d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50460684-b7ce-4c44-861a-8d82a67569ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1590f8a2-daf7-45fd-98b8-47c0a8a9ea35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d598246-cb61-4c68-9117-4f103a5ab406",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7007b2db-4b99-4064-9e78-12fa781dce97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dffabc8-4c0a-45ab-a5c7-837abf1fd136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe46622-abf6-4190-8b89-ec93749b1d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb85ed46-e9ae-4455-9be4-70acc0ea63b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0980ed-a0fc-4b37-9d83-37680f32a99e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed8d5ba-10ed-4dbb-8707-260ae97abba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e72f06-f799-413d-b5ad-ce50c30feba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7ac9ab-5676-47b8-810f-0ca5e29bd0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26b6926-d123-49f5-a90c-3a1f417a0abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c5fa3b-4fdb-450f-9b07-7f3d8c423710",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd44adbe-e6bd-4b08-9b7f-0d393087a128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c674cf1d-2446-4e3f-a307-6aa466e9fbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa20c1-9d32-4d18-870f-80e2f8a52b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7963240-fe02-489b-b78b-3d0f82051abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ec0e25-35ba-41d2-b3c8-4f33d4213c07",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1029db22-1361-4157-b2da-0ede2dd960d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b997595-c145-4c84-a150-9012f0da4999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a17e716-c072-4d54-8c9d-7fb0adb85b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9879579-12c3-4cba-bbef-ffc278208e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b4cf93-5a1c-46c2-99f1-3add417a1aa8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad29ee6d-39f5-4b82-8717-6f134b265c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8edca49-2f6e-4adb-a3d7-5bfb69a12068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006835e1-a007-4db8-947f-e07f754c8791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b109549b-9230-4961-8672-31edc92ea96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebc0235-b07c-49c4-b091-bb3dcba81090",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009fdc8b-25a8-4f16-bd0a-f5425a04b731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea296a5-4ccc-4247-a96e-da4e066e1183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a311a10-5784-4b12-a7a4-d222005e1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b198a52d-e2c7-4ac5-aea7-67f2da680b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e518fe3-c44b-4ee9-aea8-19f0eda245ba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e7e03c-eeb3-457b-9b5f-01ebd077280b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1624a3-96be-4236-a66c-5ba5cbbb56ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f46d36-92a3-4f7e-a771-4f007af63ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3f6a19-5862-4127-99a3-b213363f0a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd4e2d-e7bc-4d2e-9094-c4cf41319c14",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795f33f5-ee28-4160-888e-7ed4abdce891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693c9543-5e5e-4be8-8658-7b7f0e81ee59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725af171-c399-4a7e-886c-d1f4789aeaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "442e6cec-aea2-44cf-9cdb-262f4ee764fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd67a457-08c0-430b-8a61-8a78921a0ae2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2113173c-89d2-463f-8673-df74e2ccbadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1dca75-dce0-40ed-8801-65b501efe07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a1f4f0-8ef2-4b89-8c30-a7fbc67bec2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f292cfc1-56cb-46ce-b1d2-4bfcf646105a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83de3045-761f-4d08-b68d-ab025671b209",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92f8e7c-8acb-42d9-9af8-7acec675d2db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3846bc3-958b-4c5a-b8d6-22ececab19ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4727b2a1-6a6f-4980-b932-5e8b9b3d10c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e889a2-8e1b-437b-a573-7dd05e3ed3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e56b18a-a36d-4735-bb39-a6b0761ed6e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f92b39-9c83-4896-8947-bc79bffc9594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d59e2b-446d-422a-b9e5-18b1930502b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506e3ebf-6004-48ec-9a0c-ae4055b44c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72116a2f-76a2-432b-8b1a-d57777c965bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726e18bf-d22d-43d0-ab43-b972bb8901b3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34daef56-fcaf-4d01-8722-d7939080bead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eeff7df-778d-4a5a-8284-45a713989187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4777ece5-a6cd-4d9a-81d5-029d6409d478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c18212-5278-41d6-8dbc-71fc49d3cece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526b12e-ec18-418e-bcd8-885cc9bf7501",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0a0ca6-9fb5-42bc-aa71-a2ed3ea72cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dac169-4508-4c89-b5d1-d758bd1c5d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af30497-b9b6-49ab-b0ea-a6b1048b85d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a73a7c0-4306-42cb-93b0-56149f5bb256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098445bb-950e-4aa8-b7f9-cae845f11e0c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0596d2a3-a691-48b4-9a4c-2e718ab5d786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ed72f1-5884-494f-bff4-2f6073a04f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef98ae0-11dd-4c69-b3fd-669c2a9311b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424d4d7c-42f2-4226-a383-18f0872d1e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662d7e41-c199-473d-ab36-b543e928d105",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f5311-342e-4701-91d8-21c71668d215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b5b4c0-18ee-4b61-b7c9-aa6f826f9b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87efba58-bd7c-454f-8fbf-a9ed2637919c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c503c9fa-64b0-4a08-9526-a2b31e0eaf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1086aa4-5bd5-4bb5-8500-3bfaa84c665b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b15f8d8-9c63-438d-9093-026b22c84a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35817dd1-b2af-46af-8256-d1aac2fd1855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69029523-04e0-4981-ab34-dec9d16139e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd7d06b-129d-40c1-983a-b4a0f8b4bf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f17fc2-9168-4cdb-95e2-badbed4a9b52",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cbc63f-5482-4a6c-a630-e5b75881dd0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d479e64c-9dac-4214-abfc-4530a7844082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6ef55b-2efc-482a-bb9b-0b90218ebfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a9c3fc-3f6d-46af-be22-67f503f329a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b3a920-ec6b-4355-b05b-c512e41efc21",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d75457-83a6-484f-81ff-0fbca9ed8cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e94d734-283f-4741-aae8-b30ced135ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19140fbb-9bd5-4e3f-8548-16689627c994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4deb7b-7fdb-4762-b33d-cf9bfcb4690a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc09d4d-17a9-4e03-b842-db081a8a8e77",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb32a10-391a-4447-bda4-6fd43ff6189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ac3014-61f5-402e-8a08-114ec19526c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6500b5-62a4-42b8-bad0-111d79dd36cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05f9ce5-38a4-44b6-83a2-42335c0a9dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32cb4d7-55d6-48ed-9454-32123439e154",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828ec60c-a936-4704-8d8d-424e6be764e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c064fe9d-7f8f-4bf4-bc39-76a4eb879e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be18e16f-bcbf-4ca4-8d18-af16cbf924a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dece6ce-d2d2-49cd-97e4-92bcff158c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4855d3-ba13-4640-b571-0ac858e8ee8c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecafe5f-00d6-4f6c-b625-35f1d1cad907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c9989f-3362-4257-90cd-bcaf4c20e6cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b36c9a-9330-4890-ace6-99caa3cd4055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dfde827-d34f-44c8-ac90-0346a6ec79e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ed08d2-abd2-41fb-b511-856a8a454c67",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314a9641-66f2-4846-a952-e911d39292a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5f403b-402c-4b0c-a7e5-8049b75c1335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8ee0de-d9e2-4d2e-889c-03f5b6dc07e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aad2575-5102-4898-9638-11d6f515271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ed4916-bca1-44e0-85c3-3a27270fddc5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c27407c-1c00-46fd-982d-ddebdf75df97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db481265-13b9-4666-b040-e0003cd7a58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5fcb7e8-29b0-4928-9c53-af8899a52c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7577ec-ae79-4e0f-bc99-6ac2428efb0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f24aaf-7986-4f02-bae2-7f59493c955a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34672bc8-f6c6-40e3-91d4-b9e989b03f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a44638-64c9-4e9c-a925-736b90683ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8372f079-e9e7-4d58-8698-3e19e2497137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be907bd7-64b7-4748-80ed-56a04a9aaf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dce8d4b-f77b-4627-b628-328c25bc8ffc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665d8610-2c62-4714-b6d1-9ec55117f040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514f4660-f194-44e6-b732-825abfe4a363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6581a32-7f2a-43cf-8290-96cd40beb23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db30e3a1-a6b1-4ef9-8a99-b942e7d35355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53766aaf-3513-4a97-b68c-3a84e4dcd2bc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1993c1-45e1-48bf-ad40-9dbcd627ac42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65aa9ff1-230f-4ebf-96d0-91ccffc9fbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba03a78-3421-48b3-8a71-6cb5d94e2038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dbf2a0-b587-4f78-bd24-ce47eb5b742a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d96b934-2d13-438a-b08c-4d3e84ad308f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de317abc-912f-4c77-abdd-606bedf2219b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e120300-f51b-4cef-9ff1-6ab4bb32b776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a83a19d-8088-4802-9583-e1bffd2afc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c97441-fa89-4767-81d6-ae463784d2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dc2379-55e2-45ac-931c-c01f1c8ca26b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97efc679-266c-48fa-bbea-2ee2f61d3639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b9b8ab-06b2-47d5-9bb4-4c08ee4dc989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781aa455-5446-48ca-bb4a-3f8d68e58e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209134e7-98a9-4de4-99f4-84ee77ebe935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc09931-8748-4bab-84f7-5088c29a8d31",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b94e42-f64a-489c-858f-05dce891e550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45bba9b-6fc4-4653-ac4c-ac2326c206ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ae769b-6a4d-466c-82d7-0872ecad93b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e549ad-43ec-4ac7-ac8e-2ea362d44bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566dbace-d53e-4f44-8db6-6a0bbddfb54a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc76cb6-9f1e-4b45-88f5-01b84a2339f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b622601f-a63c-494e-8d98-b10f3661034e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f9c2b-d2c7-4d22-b46a-bdfb2ed9f116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7ce2f0-0d8f-4662-9673-90e1deb10a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5730252-43d7-4684-87e1-1c74349e7ef8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bc74c5-3fd3-4a65-ad92-8026154d6995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961a3d03-c043-40eb-b2b2-cfd9252b7a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadf521c-7db0-4add-bfd6-0c419627b522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b296d7-16b9-431f-ba81-3debd2c53227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c161cdac-d5a7-4ca6-a84c-92de0d4d925a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75bb721-2f3e-4f20-b4da-18ba90937c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4a224b-b1ed-41c0-bb6d-b388e2afbd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52862ee-c790-4113-8c79-dc7c362df492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fe31ed-5e68-4032-a250-e3a3d224b69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f33cef-e73f-450f-b728-de5f6d03abf2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5682372-69ee-4060-a491-a20894e5aff6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919ed259-5caf-4e29-852b-fb179c0887ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6704fd-5fe8-4539-96b6-b71731075eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6027c0be-1b89-47ec-bf05-d71401cee426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b42663-4b81-4187-a1ab-dd6464fbe10f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a2e349-fd14-4327-a2e0-a9a5f69fb32e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "771f9ebc-6018-48f5-a27d-918bf7c04949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fa8660-8f55-4c03-a86a-8d1f5c8c8514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81ac82b-3657-45ae-8633-63fe79c222c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd94ff6-b0da-4b46-81b0-db9dfc5f5347",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa26e421-6b16-4341-95f9-59d9f93c856c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d93a657b-d130-4611-94d7-3f4726df82f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda6748a-0c94-4960-b584-d78031de8748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729afd1a-4d0f-4857-aa8e-8181c9d2c0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8acc61-6d21-4715-98d6-b32aef72db94",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e1a12c-442e-4f77-b647-1c07919d7384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6553387c-6a6f-4b4f-a69b-f8d9747f5563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f567ba-296d-4e28-890a-4ed509611db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d7d012-ef31-40aa-9c17-617bcdafc300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064c595c-1bc1-4673-821e-eaed2e2c4881",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a54877c-9883-4fef-bdae-65d5290c9b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbfa431-db58-481d-81f0-256db5ca0811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a06c330-caca-4bb5-915b-e7affd8c333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c701c6c3-70ee-474a-9154-a1032d5cddf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96761c40-6df3-489a-aa04-a070bb434242",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f4d98b-84bc-45fe-9f82-474480df5d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86482314-3765-4109-bb25-1e34a3a5e16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88db4a-38f9-4e91-a776-f3ee767c6cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974999d7-1879-4822-be45-31e2253b9e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0974058-27a7-43af-aa1e-c78c4f7f1cc1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acb9680-4df8-496f-a151-f5a346bb768d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb75efd6-7011-4737-b3ab-45ad99ea64f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5acc31-91ee-433e-8e9c-d22cdedbed26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0445d52-bfb4-4008-8694-f313177e1403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53ded36-bbe7-4c4f-bebf-331ea209651c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985d2c03-29ae-4dc9-ad9a-f05abf28b96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d946f4fa-14a9-4259-8996-e6403962abbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef8f5b2-ae90-4dc0-b2ea-56c0b97d0f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d35e8f-5fea-4b96-a31e-236fe9ce996f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40339939-ffba-4a29-b558-c25ba249a6c2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdda8d4-8ca0-4528-a2e8-a44b2d6c76d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbd8751-adeb-469e-ba66-6c2cafbd72ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44a8d9b-95f6-4961-a8ee-afcd438dfa66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2aae8c6-ffee-4f4b-b540-8600525bb46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f1d7bf-98e9-4a9d-a498-1126b7797c21",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2f46de-2e2b-4edd-80d3-17e57b5d2635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef31bbf8-0f93-4b5d-8323-263a4b72632d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1580e8a4-88a1-417e-a37b-268072fa92b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141dbab7-6c96-4d48-aa5c-a6e0e7640bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b47eac-81e8-48d9-b704-d2d190e7e388",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e83604-c832-4fc9-975e-c8a3328e96ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2ffd0e-6c7d-4910-899d-686a4fd7ffbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781d3e95-88e9-49df-9e45-eaf9616ed676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e712a99-e5b9-4954-9db8-de6653fc021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4687aa3-a793-4a2c-8bc6-31bc202a980f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943b9739-5aa7-4155-babc-dc95d7661a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ee9ae8-163b-42fe-9dc4-6980d42e0a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318608c8-fc7b-4d67-9fc3-592d034f6cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eed7b18-2a9f-411b-a738-b64d89d633b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4207f113-ba81-4b1a-852b-37a1eec1509c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1327908-8c77-474d-8748-f28f14498160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "204f6181-c3e6-4243-9540-9f36e3d83f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6f8c1d-c3ac-4dc4-b56d-a6931045889f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e22168f-1aa2-40be-829b-f85948830e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06cbc1a-1176-4378-88ca-80f9a7e0bd01",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6629bf0-2551-4922-b0c0-1eebc41c0329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f3afe8f-b204-4c6e-b3ca-75ebeb05ea2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf9cb3f-1797-4d19-ba8e-fb1b83e4ac83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd7534b-bd1f-4ee5-b719-bf8aefbd601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80695d7-6d9f-4600-a1bb-b598be41d66f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982bc391-3861-4db7-80f5-a1e5b519495e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b6d814-5d6e-4572-82aa-d727eb464cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4528f0-d73e-47b4-9433-b95ae3c32454",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b56b2de-1dc8-4a10-892d-ca0f7038d0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49318c0-93a0-4fba-8b60-d69b48855ade",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072b722-6b77-4dbc-a623-53b768abbd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa195bb-c819-430a-87e3-04a2ae18ac4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcaca5b-abad-4ca0-bf82-a139baac2b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8baff0c-7a41-4d9e-9126-73e9cc576e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0798ea74-3765-43bf-b819-a32a3a1e9521",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba917f2-4932-4a2a-b77b-d2cbe4068edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69dd0db6-dda4-4783-bc63-0254ca3dcc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec05918-1397-4670-a2ce-01b67b758213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "743b021d-5871-44c0-98ed-122f437e3de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26720bc5-7fde-42bc-af31-b6302b7b86c5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c386fd2-8f03-4778-8fb2-5e3d4adf748c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b976fbd-0a0b-40ff-91c2-97c026be43e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca81513-7788-412f-a79e-17d7d85231fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c5a6fa-4d04-4b20-be49-82bae47b612c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885b6541-ce11-4f9a-b852-865d1fc95adf",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8001ebb-8a50-4a38-816e-16335a741b38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0eb62ef-137f-4aba-b4e8-c4dc032d01be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16e130e-a563-437b-8f60-dcf3ff9f29f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23430c8-d43a-47ec-8561-4362de2cbfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e071ffb-63cc-4253-a80c-864e8eb3d414",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79345d4-57bb-4fc6-b189-085f81476959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "975e0d12-7459-42d7-b5dd-eaab31f021cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf86b9a3-aedd-4a95-93b7-9d8a5d552f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dfb55b-98be-43db-bcae-82c539d07f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f264cb96-d48f-4d93-9997-15193c1bdd8a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7d5bba-c4be-466d-b851-9a82566bb09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08a94d02-e069-45a0-a3f8-39d9f4f7a8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a932b2e-1bd3-4d71-a2f4-da90c61a377b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520097e4-b875-44e9-8b1f-addca1fb1bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49acf1-99c0-4b4f-a77b-051690e0e323",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81330a1-4160-4d39-9d6e-73edcbcb18b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f3171a3-3950-4f8c-bd42-8d09a8279e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9b8c7b-f096-4940-9dda-a55684a78b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6d91f5-388c-414c-a7ce-fd4b7a38e674"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759d3a71-f323-448e-8a86-697422f28033",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c510a09-f0a7-4410-a893-a38fea69c570"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5414ba81-0bcd-4b05-bc7f-076f0a11698e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb95cddc-a273-4ac9-881b-0102a5b7ba4c"
                    }
                  }
                ]
              },
              {
                "id": "505d3e7c-09b6-4d30-abbb-6127254fb7ab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "669099b2-1c9c-4fb7-9815-12e57ae10375",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f58a18-08f5-4824-9b80-1123fdb2f1ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "823f9b08-a868-4fa1-8d54-7e10e223b34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7582789e-4d48-49fc-b876-df2187718dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "334c4f0f-7b7f-44ac-a69c-02261e8c703e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "303ddd76-e561-494a-909b-035fae06a994",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f19adec5-a4e1-4123-b4ad-a5e941447b5e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a95a4422-025f-4100-8a36-7bf2f8b842da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56e84701-c178-4009-a5cf-31ec7becf932"
                    }
                  }
                ]
              },
              {
                "id": "2f7a6452-b7cb-4c22-8380-8b73df9ad615",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bf2b275e-f8d0-4c0e-8025-c1e430f56e74",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2204a772-2af6-4a7d-9588-61b29f3c3fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "078e53ab-fd87-4e71-9860-ff880ed3d611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893725c2-4d61-4873-86b7-83535cd9adf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a678158-3619-43ea-8d5d-8a12491a9f2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f55c60d4-cccf-48ed-a171-d654f375210b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ca972c76-de42-4b2b-a9bc-0dfbd100056c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a033cd-2014-4a74-a166-b78eca24e2d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "94ed8042-0001-4d77-9cd1-920c2870a278"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1c3bcf-8ec9-4c12-b277-dda6974c357b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "946e85bb-ba4b-4da2-b184-6df514ca546b"
                    }
                  }
                ]
              },
              {
                "id": "4dea3008-ac3e-4f99-bd58-913845af981f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7268cb9-30b3-45f1-b7e8-e483d5c03b31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "593fd93d-64fa-4bc7-b0b8-7a51f1b115b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbcec6f5-2f42-4ce8-9a45-4ed96d943df2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1813957a-5c32-4e8c-a61c-9280c6581a3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "897dd7c9-a483-4bee-b7b4-08b3548001f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fa345e40-589a-4a65-8146-2ab2f430c6a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eec88c06-daea-4726-ba8a-2f5fe084acb1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8f80465b-2714-4304-baab-d5b662d2155e"
            }
          }
        ]
      },
      {
        "id": "8cf7a5e3-ba2c-42ab-b3f2-7de18e09b7b7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ec0008d3-5c63-408e-87ef-12e8aa923ed8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "256ff1d1-1e48-413e-9612-c8572aaba597",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c9f473c-6506-4970-aa7b-fdf2609f3a82",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8fec45-3214-408d-a3d4-e72511e6f377",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "caf8b258-b4d3-4643-900c-a651ee966140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a2adc1-fe5c-44a9-8a11-9813504adb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e8e94d7-f019-4077-bdb3-488624c6dd34"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e86cb543-2ce4-4eb2-b472-cb89e0ac74b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae421faf-f019-4377-a95a-9feb330cd72d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c927713d-bda4-4736-9f49-81b5590a4b35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea102d58-ccc8-489f-91ab-37babf1dbce4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "025a91b0-55be-448a-a4f5-db93df0f512d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a56d4add-f0c3-479c-90bd-953d1e2526f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1087dc94-d630-40dc-934e-1f431e14f944",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f675115a-ec14-45ab-8f8e-110e984a756b"
            }
          }
        ]
      },
      {
        "id": "3b9ecf72-9d98-49aa-b74c-2fa554d92acf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dd8c615c-f7c7-4db1-927d-69da53f1a12f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f30db584-18be-423b-ac21-1078785b9e53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8e2e79cb-9eec-4bac-993e-4f2f4cfbf32f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752f0ea4-76f1-4291-a7f6-04dd62c19ccc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "613d4e48-58c7-4a82-b9ca-97f7acffea6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f067343-6a75-4568-a072-29dc4dc7d0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f05598a9-a17e-49e6-8b87-4c0387c79c2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c91babbd-7841-4a37-b6d4-2ad5bfca7219",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59fd7dc0-ab29-4ef1-b805-bf46b3dec902"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a265337-17f1-4f2f-93bb-054bfc0afad3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b2fc6f-16db-44fa-9430-dfdbced2b697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d37445-496a-457f-9a73-28493516d5ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af909709-01a4-4944-86c1-593c23266b0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7decaef6-eaf3-49d7-a8c1-db20cb03d978",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6592e604-1c0b-4770-af9d-2d00c271e5ae"
            }
          }
        ]
      },
      {
        "id": "336b2a2d-e636-4e0d-a9d1-4f7f3a04b40e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "37e3fb4c-e21d-4a00-8808-0d10e8a712b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9ffc954-742e-4e6b-8ac6-e4ccb8806736",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5fc299ff-09f3-4f0a-8b82-c207f3f5c46e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dc5eed-6d52-45d6-86c3-768b112625a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36b3feae-1d21-4908-a477-036a85e6e882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc60ece1-c0dd-4831-8303-07601ab36b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9fa257e-1a76-4a7c-ab49-72761a560aef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa5d45d8-6ea3-4f1d-9389-afa412b4eca5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "423ca8e3-216e-43a1-a481-84c9e6521852"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c53a17d3-34a4-4b47-8bec-13ccf1711d6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2b39f17-07b7-4b73-8efe-c22cd7d1a2dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13aa3bbf-d4dd-4fa8-8e5b-108591d7919a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d1a16f5-39d8-4c42-8f1a-71fc75cd7179"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20b8fdd5-72bd-493c-a8aa-c81d0c845bb0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b7438d3-f666-46e1-bf9d-b9b73d44344b"
            }
          }
        ]
      },
      {
        "id": "97d9a571-0bdc-4d5b-9f02-eb873d71bb40",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7302881-54b7-4f65-b774-2447109094b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98ac4615-8a2f-434e-887a-7051a7cd046a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8a8ae42d-51f3-4c26-ae9b-1e216ea976f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79e9cf91-046a-403a-a89e-8ef3657a1e82",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "565e54f1-d04e-4c2b-8bac-767f2017e653",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 243.62323943662003,
      "responseMin": 11,
      "responseMax": 7144,
      "responseSd": 888.9806131669525,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689555094695,
      "completed": 1689555176395
    },
    "executions": [
      {
        "id": "971791ce-b33b-453c-aae1-6f1e767eaa14",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ea17c039-f731-4621-9b12-07b6ed717755",
          "httpRequestId": "9ebd9784-d872-4390-b03d-e8dd33eea995"
        },
        "item": {
          "id": "971791ce-b33b-453c-aae1-6f1e767eaa14",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b73e75af-c6d7-43ff-a2e2-4b2db82b535c",
          "status": "OK",
          "code": 200,
          "responseTime": 126,
          "responseSize": 0
        }
      },
      {
        "id": "7131958e-26b0-4b3c-946e-a85a12717f0b",
        "cursor": {
          "ref": "37a003a2-4160-44d7-980e-b0fbcc4aeddc",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "406eea39-0fff-4a33-88e8-04726d9e70af"
        },
        "item": {
          "id": "7131958e-26b0-4b3c-946e-a85a12717f0b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "834d6792-9307-41c6-a2d8-69933658fc2e",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "1ff0d799-8904-46c4-88bb-373d7a646183",
        "cursor": {
          "ref": "acc57fe8-f7c5-405d-93dc-e5fec7394690",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e616b597-4494-48e1-8501-aa1859babf21"
        },
        "item": {
          "id": "1ff0d799-8904-46c4-88bb-373d7a646183",
          "name": "did_json"
        },
        "response": {
          "id": "712d0bbb-d3d1-44a3-8546-16175412a5c0",
          "status": "OK",
          "code": 200,
          "responseTime": 447,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7028cc1-42c4-4d96-bf67-3798d4ac30c4",
        "cursor": {
          "ref": "d1686021-f18d-43c2-9f94-74bc7c8e3b04",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f124e357-1ce2-49dd-aacd-fdf0323d4b89"
        },
        "item": {
          "id": "c7028cc1-42c4-4d96-bf67-3798d4ac30c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "40f0da15-c138-4baa-8058-230889e0db73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 880,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7028cc1-42c4-4d96-bf67-3798d4ac30c4",
        "cursor": {
          "ref": "d1686021-f18d-43c2-9f94-74bc7c8e3b04",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f124e357-1ce2-49dd-aacd-fdf0323d4b89"
        },
        "item": {
          "id": "c7028cc1-42c4-4d96-bf67-3798d4ac30c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "40f0da15-c138-4baa-8058-230889e0db73",
          "status": "Not Found",
          "code": 404,
          "responseTime": 880,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961e79a1-8c08-4618-a259-46dc63fb2515",
        "cursor": {
          "ref": "425ae3c0-106e-4aac-9024-eca20a9c5554",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e5a3c22b-f35b-4c51-95c6-334926a356c4"
        },
        "item": {
          "id": "961e79a1-8c08-4618-a259-46dc63fb2515",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d9fcaa97-a97f-468b-9350-49b2f6efeb42",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caeeb1ad-d543-4534-8736-9652593558cb",
        "cursor": {
          "ref": "67b2b2c6-6af6-478f-93fb-2667ac88ec85",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ebc59ca5-59b9-42fd-9deb-086099a3d4a7"
        },
        "item": {
          "id": "caeeb1ad-d543-4534-8736-9652593558cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "93ed529d-c19e-4d0e-99ff-4bbfba87d528",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e9688-b82c-4e1b-832e-93070e97f973",
        "cursor": {
          "ref": "a3721661-e783-4200-8377-bdc05673b3f2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "28c0ab9e-8257-424e-953b-0f7453ebd2df"
        },
        "item": {
          "id": "6a3e9688-b82c-4e1b-832e-93070e97f973",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1150b30b-0c35-43cd-be25-b85a13c99dfb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c6c895-8bb8-4814-bc96-c6582dc525e7",
        "cursor": {
          "ref": "82a197c2-5aaf-425b-91d4-d19f002562d3",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7597ca78-0b76-4aa1-9c5d-61cd52fb57bb"
        },
        "item": {
          "id": "51c6c895-8bb8-4814-bc96-c6582dc525e7",
          "name": "identifiers"
        },
        "response": {
          "id": "adfbf27e-2dd0-4fae-a735-85f139f5eccb",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eeb204-f8d8-45c3-9d3e-e61c0847eee0",
        "cursor": {
          "ref": "ca0aab48-dbe2-4499-9f82-7a7d4ee66d15",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2a08fcce-aebe-4092-818f-6154b4c5412f"
        },
        "item": {
          "id": "79eeb204-f8d8-45c3-9d3e-e61c0847eee0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "634a7c13-e87e-41f2-b0b0-32f021dceb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cace8515-59cf-45aa-b076-aa883e817ce7",
        "cursor": {
          "ref": "d13deeaf-b053-419a-a63e-656b1a58a06b",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "301c52f6-ec01-4281-ab5f-757b8ea39f0f"
        },
        "item": {
          "id": "cace8515-59cf-45aa-b076-aa883e817ce7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4422caf1-4d60-4fe5-8dc9-72d297f1dfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a48e0-411c-441f-9473-d17b675eb840",
        "cursor": {
          "ref": "5c1477d7-683c-4951-bc4a-65c4d0fb9222",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7945a65f-9d4d-4d9e-9bc1-891d5efaafe6"
        },
        "item": {
          "id": "a95a48e0-411c-441f-9473-d17b675eb840",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "899635eb-8ba8-4d9c-ac74-ab0d9e3bb3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e105a55e-7020-482b-ad50-ff2a8c87d9bf",
        "cursor": {
          "ref": "57e00372-42ab-44b6-a7dc-b5ad8e3e5854",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e68f43f4-04a5-4f8e-9bcd-d3e5bc496a8f"
        },
        "item": {
          "id": "e105a55e-7020-482b-ad50-ff2a8c87d9bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a51fca5e-249e-4638-8f78-1edc09249489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025b402c-9fba-473f-9c53-383e9d5b4910",
        "cursor": {
          "ref": "8ff6942e-52cd-4830-8c0d-2c0b8843288f",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b98caece-8f19-4615-9fd9-ec8f30b4047e"
        },
        "item": {
          "id": "025b402c-9fba-473f-9c53-383e9d5b4910",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "605a8463-209b-4e62-b332-f38978dd5129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eef1909-d2ed-4373-9bac-d56710e8a1d6",
        "cursor": {
          "ref": "e49eccf8-ecce-43f8-915b-00200f2b75be",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e3cbf0f-a873-4397-b29b-281b32aefd42"
        },
        "item": {
          "id": "2eef1909-d2ed-4373-9bac-d56710e8a1d6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8eab731b-46ab-47ce-99f9-2a51d674fa8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58a6395c-ce23-48b7-8f18-d55adbd39fe1",
        "cursor": {
          "ref": "2e01380f-bcaf-4f47-9f43-e37a6d768e2d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e9405dc6-a1ce-443b-b9d6-f8c8290a6c2b"
        },
        "item": {
          "id": "58a6395c-ce23-48b7-8f18-d55adbd39fe1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce7bdc5c-1031-4230-ba74-7b91c033e20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb1555b-b549-4002-8ee1-73ebd2cf7176",
        "cursor": {
          "ref": "1b80311e-bf2a-4728-ae4a-760f6735f6d5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4dca567c-3d05-4e5b-9c1d-73a4451d4134"
        },
        "item": {
          "id": "afb1555b-b549-4002-8ee1-73ebd2cf7176",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "81de29e7-2c72-4e20-b6f1-4da3543a85b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5914e50-de2f-4415-9b45-9c28408acfc4",
        "cursor": {
          "ref": "59fb99a9-0fe2-4c1d-8621-e239f7cf70c7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0731ecce-7c89-41c6-ac4e-be668ef04b51"
        },
        "item": {
          "id": "f5914e50-de2f-4415-9b45-9c28408acfc4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b4667c53-8994-4eb3-a2b6-8842371fbbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86848eb-a629-4558-a475-4228c9ed5c4e",
        "cursor": {
          "ref": "cfd0bcc6-3072-4f0c-8693-3fd5d33fc9c4",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ad8ac692-86ce-40f8-af09-628d3496adc3"
        },
        "item": {
          "id": "f86848eb-a629-4558-a475-4228c9ed5c4e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "bb5867d4-4172-4cf9-a3b9-cd14e6778e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9465df2-6950-4cbd-8d91-9b83723c1f82",
        "cursor": {
          "ref": "69e93360-109a-4583-97c4-163ce3c72c63",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "21f978bb-4cc4-4712-8ec3-eeca010e439a"
        },
        "item": {
          "id": "b9465df2-6950-4cbd-8d91-9b83723c1f82",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8eeac260-3e49-4068-98ce-94d1815babfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c094210f-29da-48b5-a5ff-bdc86ef00ef6",
        "cursor": {
          "ref": "def6a846-7f4a-4cfc-a4f5-bb809eacfce8",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7988e45d-0a35-4188-92a7-95e288ac1417"
        },
        "item": {
          "id": "c094210f-29da-48b5-a5ff-bdc86ef00ef6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1745e914-fb07-4b62-a59c-f49c5e222975",
          "status": "Created",
          "code": 201,
          "responseTime": 934,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "67c0d889-9d95-465a-96c5-ce4df08d53d1",
        "cursor": {
          "ref": "6d8e534d-9108-475d-9e26-4b78bd50b6a4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e268ee64-7ed6-4e8e-804e-92ae8f4155ac"
        },
        "item": {
          "id": "67c0d889-9d95-465a-96c5-ce4df08d53d1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5f1baf61-27e3-45e9-b688-98dfe7fb2844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec0f5b3-a795-40a9-a1a9-9377022b49b1",
        "cursor": {
          "ref": "da76f34a-5f29-47da-8d32-ab34ccd58c6f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9ad542fd-3213-4e55-93da-3dfb3c68feb4"
        },
        "item": {
          "id": "5ec0f5b3-a795-40a9-a1a9-9377022b49b1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e95ecb2b-5d57-4ae1-86bf-d8dbfdf56df1",
          "status": "Created",
          "code": 201,
          "responseTime": 7144,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "61e28378-dfdf-43bd-aefe-0573b937e736",
        "cursor": {
          "ref": "cd01d16f-b648-43f5-9f2f-dcee07ff8aa8",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4200e7b7-0abd-4f6c-99e7-b84641bf0de3"
        },
        "item": {
          "id": "61e28378-dfdf-43bd-aefe-0573b937e736",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9c5956af-7fcb-4333-81c1-f15c97ff2979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0742b5-0d4e-4565-9425-bad98c823b20",
        "cursor": {
          "ref": "8caa3657-26c5-4d77-86ca-a11403bf75a3",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "465c8390-11fc-4085-802d-2c550c7c9b57"
        },
        "item": {
          "id": "7e0742b5-0d4e-4565-9425-bad98c823b20",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5725993f-6f28-4a1e-ac9c-246774946ef8",
          "status": "Created",
          "code": 201,
          "responseTime": 3093,
          "responseSize": 968
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "c973c2af-e868-4406-8802-0e9b056aaa21",
        "cursor": {
          "ref": "47ab6aa3-f95d-473e-8ad0-4725693c18f5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f1bb14ba-3bea-4048-8b96-ab060225a44d"
        },
        "item": {
          "id": "c973c2af-e868-4406-8802-0e9b056aaa21",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "07e46f67-fcca-44eb-a1ba-b46864795b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8cb65b-d0b4-45bc-9329-06cbc0b30bc8",
        "cursor": {
          "ref": "63a53361-6bb5-4895-9757-103bad6cdc13",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "39855ba6-a617-4695-a499-55dbb3b5ab51"
        },
        "item": {
          "id": "ad8cb65b-d0b4-45bc-9329-06cbc0b30bc8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "339e8327-f010-4ade-999a-867e1f681182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2f5fe1-7b9d-4028-83db-c09c626da7b8",
        "cursor": {
          "ref": "4535710d-b820-4a25-8c3d-8bdde4b36c48",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b5728e15-f136-4e03-a8e6-f30db0a410d4"
        },
        "item": {
          "id": "bd2f5fe1-7b9d-4028-83db-c09c626da7b8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "16f7212c-ec20-44c1-9063-f88ac7d12b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002f97c0-def3-4455-b051-cd48cc6c965b",
        "cursor": {
          "ref": "2b3ff47f-1191-44e6-ad15-351c3217ed28",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ed23287a-559b-43da-bfe4-be94c40e819c"
        },
        "item": {
          "id": "002f97c0-def3-4455-b051-cd48cc6c965b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7423529-0393-47eb-8c15-c74c6515efce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a92ad2-89e8-4486-b6ce-37819943dcfc",
        "cursor": {
          "ref": "daf0edbe-d17d-4761-bd0a-b174f6e9f7a7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "99b74c98-a7b9-4c7b-b975-a81b59227ad3"
        },
        "item": {
          "id": "12a92ad2-89e8-4486-b6ce-37819943dcfc",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4fd7bc30-ff4c-45a4-b0d2-fc6d0a615975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666fc061-98df-446c-aad7-1d20528c8232",
        "cursor": {
          "ref": "276bb147-99a8-49fd-8f5a-5b0a94f9aef9",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2428731d-77f3-425e-9c4d-719d1785cce0"
        },
        "item": {
          "id": "666fc061-98df-446c-aad7-1d20528c8232",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d11e32a1-a73f-4605-8c1a-4e37cec3a568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e3574-8eef-4e00-b24d-b3e121eeb122",
        "cursor": {
          "ref": "ed0d4f07-7230-4949-bf9b-9ecdabda2e80",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "119814c9-2462-4524-9a1b-a3f336528826"
        },
        "item": {
          "id": "b84e3574-8eef-4e00-b24d-b3e121eeb122",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db3b8d4a-8cdf-49d6-b352-a31e2b3cacf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c56e0a-c076-4750-9e79-5978a81690e6",
        "cursor": {
          "ref": "3baf0746-f269-457c-9c7c-ee49afec7971",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d7b7f7df-11bd-43cf-bc51-b0e4cd6f8bae"
        },
        "item": {
          "id": "49c56e0a-c076-4750-9e79-5978a81690e6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "bc1823fd-4912-493d-9160-0d847fb63675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5f53ab-a926-449d-a75a-19ae7c1970f1",
        "cursor": {
          "ref": "038400be-cca0-4810-b98c-5b4de25e0346",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c76f4fee-8821-46c7-b8b2-362d015180d4"
        },
        "item": {
          "id": "5a5f53ab-a926-449d-a75a-19ae7c1970f1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "068d0aa7-2366-4f9d-9d12-eb746ac7b34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69557707-3649-4617-9fc7-eeee2f194357",
        "cursor": {
          "ref": "e1e1ff1a-b7aa-466d-9f05-5210d09ea56d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f50b3b19-750b-4f33-8519-144bee985562"
        },
        "item": {
          "id": "69557707-3649-4617-9fc7-eeee2f194357",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d35120a8-e2b5-4a4e-8c58-206e445594fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39892e1-d941-4fde-be0d-9973d853b98d",
        "cursor": {
          "ref": "35cfe522-6b5e-4c59-afe0-c4d0ab0e0f75",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "04741169-a1e2-4a9f-9309-ad002103bc94"
        },
        "item": {
          "id": "b39892e1-d941-4fde-be0d-9973d853b98d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c987b6fe-7d70-49c5-a6af-f46ca5ed3bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706afb2a-59a4-4000-9102-468ec37433a5",
        "cursor": {
          "ref": "866faf0e-896c-471a-bd75-d268aa616b17",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "020e00bb-561b-4fc4-b3fd-e8095ffdfc16"
        },
        "item": {
          "id": "706afb2a-59a4-4000-9102-468ec37433a5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fcd35b37-9c66-4f48-9117-92150a89bc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71471704-d222-457d-9385-26e461573201",
        "cursor": {
          "ref": "a8fd06f1-c590-4250-901a-09808721a0c0",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9f231e11-da48-4dcd-985e-af352514f302"
        },
        "item": {
          "id": "71471704-d222-457d-9385-26e461573201",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bbff4f7b-f7a5-4392-a7de-8105dacdbcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8658451-6c22-468f-b0f2-966b7d2c2240",
        "cursor": {
          "ref": "55204097-4721-4870-9782-73c0b8d2ab9e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78e604eb-6162-4de3-a067-8abfc3171c15"
        },
        "item": {
          "id": "c8658451-6c22-468f-b0f2-966b7d2c2240",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8ba6cfdc-6384-4821-b6c9-8e22d744e217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb2bd79-684a-4734-86ed-1d4c66a7173d",
        "cursor": {
          "ref": "51905149-3320-46c5-9d3a-15fbab552393",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8ae9a042-2176-4ee5-932b-075f7be487f6"
        },
        "item": {
          "id": "6bb2bd79-684a-4734-86ed-1d4c66a7173d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b7ebaa8d-616d-4dd1-80c5-0f4e473510b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277d6af1-569a-43d8-97c7-cbde34a968eb",
        "cursor": {
          "ref": "0ff4053c-36f7-4d0e-a0af-6273962794b3",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9a55acd3-ceda-43a7-a7f5-3fbbeba44590"
        },
        "item": {
          "id": "277d6af1-569a-43d8-97c7-cbde34a968eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "86a0a0cc-2150-4964-a2cd-d3170aea62ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a713b5-b2fa-43d1-a503-203a2da096db",
        "cursor": {
          "ref": "de5e0af7-82af-486e-a7da-14c2789be0c3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f4571887-04ae-4560-9963-29b10690a324"
        },
        "item": {
          "id": "42a713b5-b2fa-43d1-a503-203a2da096db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c8e52e1b-97b1-4c16-a22a-644f581c7b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b62fda-594b-498c-9f89-a1b5e394ab3e",
        "cursor": {
          "ref": "8cb8016b-60fd-4e98-bcdf-c1ffa02dde78",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "79f83c03-5688-4ff5-83d5-64b5f6a8486d"
        },
        "item": {
          "id": "f6b62fda-594b-498c-9f89-a1b5e394ab3e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "01f23546-fb37-4ecf-92ef-d1c7c36902f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c119650-e20c-4066-9609-c6d2109588d3",
        "cursor": {
          "ref": "507b34f6-43ba-4d5b-9ea3-0b31cea021b6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "44618c37-a089-4931-a140-de879ee7c82e"
        },
        "item": {
          "id": "1c119650-e20c-4066-9609-c6d2109588d3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "776e89c6-ee3b-483a-97c2-c723937e31fe",
          "status": "Created",
          "code": 201,
          "responseTime": 4967,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "2723e2ed-aa07-4d86-8f30-267cfcf9f04a",
        "cursor": {
          "ref": "339bb5fd-6961-40e2-8553-5e3157a4fa0d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f8de95d0-93fb-4ddd-8ef4-74b2457776b0"
        },
        "item": {
          "id": "2723e2ed-aa07-4d86-8f30-267cfcf9f04a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0db744b5-d5d4-487d-8bf7-a4d42556b084",
          "status": "Created",
          "code": 201,
          "responseTime": 2721,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "c7cd8303-222b-4b21-951d-e91bcba4ee72",
        "cursor": {
          "ref": "6f08f16f-361f-4e37-92fe-8e128b9f9479",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d0156d3a-ce00-4891-a3b4-48a1ef8f8b47"
        },
        "item": {
          "id": "c7cd8303-222b-4b21-951d-e91bcba4ee72",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "85a0b02e-6793-4698-a806-9e2e7df1ee92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37df4ed7-0c0b-4354-8f8b-f937c157207f",
        "cursor": {
          "ref": "fddcd37a-343c-473d-b4ad-cc42647018b1",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14896fcd-b0df-461a-b871-94fbf6d22dd6"
        },
        "item": {
          "id": "37df4ed7-0c0b-4354-8f8b-f937c157207f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "050ecb61-c539-4fa0-b5d6-a750196840d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274ca50a-1de0-475c-b50b-95ae24517dfa",
        "cursor": {
          "ref": "ba9f29f5-1a91-4542-92fc-2a3a1ed41b95",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dfdd014c-4491-4a7a-a293-26d6e055413e"
        },
        "item": {
          "id": "274ca50a-1de0-475c-b50b-95ae24517dfa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3a2948af-33e9-44c8-b34d-0f270b12e7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1ac144-9380-404f-a4b8-a55548001e25",
        "cursor": {
          "ref": "5abfcbd9-8b7a-4f95-8b48-a321f70cadf0",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b69de981-cd0c-4c55-bade-d8fc29b77ce2"
        },
        "item": {
          "id": "be1ac144-9380-404f-a4b8-a55548001e25",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "481cda15-8105-44ad-bfb1-e22d3aa02575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f370dab-04f4-40c3-b416-94f38be7573d",
        "cursor": {
          "ref": "fba7edfe-d5fa-4e58-bf4a-6c6e4f7ea65a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7e48ddd0-d3c2-4f80-beb7-299c25a063c9"
        },
        "item": {
          "id": "5f370dab-04f4-40c3-b416-94f38be7573d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81081f55-0f42-401c-b213-233afd8ea07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72329c5a-8add-4254-ac0c-d261fbc7895b",
        "cursor": {
          "ref": "c746b4bf-d099-492b-95ef-9769bc0d3ec4",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "745dabae-4263-4a07-8ab3-59f72406bbe8"
        },
        "item": {
          "id": "72329c5a-8add-4254-ac0c-d261fbc7895b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d1cfc189-f480-4989-8ff2-6a0f471f557e",
          "status": "Created",
          "code": 201,
          "responseTime": 2891,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "7ed0a376-c3c6-4f8b-a118-9e8bde3777e5",
        "cursor": {
          "ref": "9ef507fa-9423-4c59-a013-dcd649a232a3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7764be87-85b4-4d9b-99a8-69d7e2bd357a"
        },
        "item": {
          "id": "7ed0a376-c3c6-4f8b-a118-9e8bde3777e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "056e491f-9b0c-41e4-876e-2318919f3c41",
          "status": "Created",
          "code": 201,
          "responseTime": 2416,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "9b36270f-3ec2-4e81-bf1f-5000148800d0",
        "cursor": {
          "ref": "5e6fcc6f-5c55-4857-9f64-bc1c837d4e24",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d76173f-e17e-48ec-8e01-2faf7082ad5a"
        },
        "item": {
          "id": "9b36270f-3ec2-4e81-bf1f-5000148800d0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3027f0d1-24d3-4afc-90e7-31c31a11080c",
          "status": "Created",
          "code": 201,
          "responseTime": 3081,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "8bf016ad-6651-4fd0-89d2-bdc7a32d67cf",
        "cursor": {
          "ref": "7ecdcf30-de77-4c37-aed2-9b4728261506",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "78d4da91-17bd-4985-89fc-5a63bd4f6353"
        },
        "item": {
          "id": "8bf016ad-6651-4fd0-89d2-bdc7a32d67cf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f6b356ce-bb34-45cb-9453-b09dc1ffee65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acde6aa-ffa9-4a61-8ca6-8e75b784b485",
        "cursor": {
          "ref": "3cb4f219-4d17-4aaf-b961-1642c5ecf3b4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "513bb86f-d7b5-43fa-91e9-e090034c01d5"
        },
        "item": {
          "id": "6acde6aa-ffa9-4a61-8ca6-8e75b784b485",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "442e97ae-2ccd-4914-aef6-d57ee8e7bd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da27028c-87bc-4caa-85ab-437f15dbfc25",
        "cursor": {
          "ref": "00cfb590-0e1e-40b3-9701-3e654a078da3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "038730f7-44b0-440e-abe9-76d8b61f8829"
        },
        "item": {
          "id": "da27028c-87bc-4caa-85ab-437f15dbfc25",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f6125a86-6c37-401f-8a62-2a80461826e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955e1897-d211-4b84-9645-83368e03400b",
        "cursor": {
          "ref": "849d05d1-5795-4d1f-b226-be7b926cd59b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f6527077-0ae0-4e3d-b20f-5063e32082ac"
        },
        "item": {
          "id": "955e1897-d211-4b84-9645-83368e03400b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5d430472-5f6f-4552-822a-c16161c80652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4564b5-8ffa-4e4e-9f56-d6f10ef538ca",
        "cursor": {
          "ref": "0755358c-e32b-4984-9d80-fc1cddf56b73",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5cfcb11c-db4a-4e14-9a23-84627fd56ffc"
        },
        "item": {
          "id": "0b4564b5-8ffa-4e4e-9f56-d6f10ef538ca",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "82faa2dc-444e-4ee6-87ce-bfc149885c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd409aa3-3dbf-497e-a873-e4397cfc3b08",
        "cursor": {
          "ref": "2998da8c-db41-404f-a63c-4c3c5fcfb17b",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5de97118-4ebd-4181-a620-b6fee8bcd1e6"
        },
        "item": {
          "id": "bd409aa3-3dbf-497e-a873-e4397cfc3b08",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7ed96a99-3149-44ef-8363-7783fd113dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff972688-e8e3-404f-a579-425165cf9e9c",
        "cursor": {
          "ref": "56f54be1-0490-491d-96c4-d826409d3755",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ee87efb2-4766-43c9-876b-b2124466de75"
        },
        "item": {
          "id": "ff972688-e8e3-404f-a579-425165cf9e9c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb211498-894b-46c1-a7ee-7e547e237b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7489bfe0-3f9e-49ba-9b90-6a04a8b79e9c",
        "cursor": {
          "ref": "e810a31d-0a53-4fb4-b6b3-65371129d507",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d4b314e6-0f77-4b3f-9112-6b0fd79dd03d"
        },
        "item": {
          "id": "7489bfe0-3f9e-49ba-9b90-6a04a8b79e9c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1ab19305-a176-4fc3-8115-87a59bd6cea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2adbda1-972a-49f2-8a5f-033e4e9cc326",
        "cursor": {
          "ref": "ce5d6a76-d6d8-4f57-9aab-c010c59271b0",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fbced0dd-6692-4d6c-b331-f06b61e9a85b"
        },
        "item": {
          "id": "e2adbda1-972a-49f2-8a5f-033e4e9cc326",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a9d5910e-1451-4ede-beb1-af3a60ab11e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa3881-c476-4720-98f3-41733b20e639",
        "cursor": {
          "ref": "8fd9ddd0-17d4-4123-b839-1dfe571eaaa8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "76ee0f03-acd0-4ace-a61f-5694a6dc0f61"
        },
        "item": {
          "id": "f5aa3881-c476-4720-98f3-41733b20e639",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4dc5c058-41c7-4515-a24e-2e077db73060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8d2c8e-2be4-4c69-84f2-99061490d12a",
        "cursor": {
          "ref": "9f0c27e9-5cb2-4bd0-9f05-d7e2c17c55ba",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b2551cb4-ce60-4bc6-b11f-fe7bb495cb0b"
        },
        "item": {
          "id": "9b8d2c8e-2be4-4c69-84f2-99061490d12a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "957c465c-e029-43d9-b0b1-c02850fa09a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987186ff-f3ed-40e3-98f3-fae3a426e651",
        "cursor": {
          "ref": "34e219fa-f2cd-4761-88c2-daa20ce66b21",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8bca6cd7-ff97-49e7-bc4a-ab8ba41e248a"
        },
        "item": {
          "id": "987186ff-f3ed-40e3-98f3-fae3a426e651",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "776e6f0f-6f5b-4166-a889-8ed4e682fc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1385382b-a3c9-4bb3-b310-a72e7f38cca6",
        "cursor": {
          "ref": "6559276b-3640-46bd-a243-dd84e7a18874",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e23e1d9c-098d-4174-878e-132a67070b31"
        },
        "item": {
          "id": "1385382b-a3c9-4bb3-b310-a72e7f38cca6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "11c03b68-5621-4663-9f54-45a38bc4b662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b4310-8a2b-49f5-bde0-9cc7ba0de836",
        "cursor": {
          "ref": "bb7f9bfb-3740-4adb-a7df-1b6f94152481",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "870aa479-1833-44c7-aba8-3b5566290a45"
        },
        "item": {
          "id": "223b4310-8a2b-49f5-bde0-9cc7ba0de836",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "14c0865f-62ef-492f-93cd-eed2b5014af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccefefd-6df5-45ea-91a3-6531a9b23f57",
        "cursor": {
          "ref": "f71a4dfc-75b1-41b4-889d-301d98ba5d1c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2e61c767-2a00-4d9a-816a-0240c506df07"
        },
        "item": {
          "id": "9ccefefd-6df5-45ea-91a3-6531a9b23f57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "76869140-7881-4785-b9d6-de9ef372f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3cc19a-7af9-423a-9db1-fc82b3d79c18",
        "cursor": {
          "ref": "07ffe802-7f50-405e-a0fa-8bdafd8c92c7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "edeb8562-9963-4cc8-ad67-5ca07915b37a"
        },
        "item": {
          "id": "cb3cc19a-7af9-423a-9db1-fc82b3d79c18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fe956d5e-6581-4458-b9f3-49d5d30b6918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182de16e-2b10-4cd2-a9fc-89a2a0de3343",
        "cursor": {
          "ref": "e1b07cbf-a178-411b-9977-b8cf21894183",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7ad85e75-b664-48bf-a218-f72d242f866c"
        },
        "item": {
          "id": "182de16e-2b10-4cd2-a9fc-89a2a0de3343",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "da75a598-071a-4b49-b264-f98fb2a336c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e3da7c-5e23-4cef-ab11-f0200b4aa3ab",
        "cursor": {
          "ref": "8a6e23fa-0157-40eb-840f-610e15e6879c",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02976750-f60a-4152-b4d6-c9ecc4f9c0f7"
        },
        "item": {
          "id": "39e3da7c-5e23-4cef-ab11-f0200b4aa3ab",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cc785596-e98a-4622-a62a-e29eb09cb8af",
          "status": "Created",
          "code": 201,
          "responseTime": 7055,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "f5b0ce29-3ac3-4bfa-9af7-4fffa5b28545",
        "cursor": {
          "ref": "43c06280-2557-4535-9548-ddae05c953b0",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa4b0ee8-62c9-4cfc-8c2e-2e0acd76c846"
        },
        "item": {
          "id": "f5b0ce29-3ac3-4bfa-9af7-4fffa5b28545",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f8d6b94e-4ffa-4b81-b755-9c0ca0bbcc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a46bd-e0cd-4671-80e6-ad56f3d657a3",
        "cursor": {
          "ref": "3410b76d-ce10-48b7-98bc-3bab904ab602",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "54002ad8-f5e0-4a7e-af7a-c913ec120a18"
        },
        "item": {
          "id": "8b7a46bd-e0cd-4671-80e6-ad56f3d657a3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3fdadd7f-6a47-486b-a74d-6cb3a289cfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991f540b-e19b-4683-a95c-6d10357ab800",
        "cursor": {
          "ref": "b2490d95-6cb5-4f17-90b1-fc123ba48d8b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "20d260fd-0881-43b8-82ea-057ec524c9e4"
        },
        "item": {
          "id": "991f540b-e19b-4683-a95c-6d10357ab800",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2f150d66-4634-4371-9b28-6ee0e34fa152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45714be6-2e0f-48c0-9643-5f5d4ed77dc4",
        "cursor": {
          "ref": "5780388a-df19-427b-ab05-8d3f17ffb81a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "62f0b636-e37f-47a6-9b55-6f4f6439a724"
        },
        "item": {
          "id": "45714be6-2e0f-48c0-9643-5f5d4ed77dc4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "624c62ec-a8da-4f75-940b-e95b565d83ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a435eda-f379-445a-ae53-e279d99117e5",
        "cursor": {
          "ref": "f14f85cf-0e12-4a6a-9395-25ab68de7f26",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ce3cb99-f1d6-48f3-a39f-1993cf61eed9"
        },
        "item": {
          "id": "3a435eda-f379-445a-ae53-e279d99117e5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c73c9fc-a7db-46cf-ad4b-60f692b1e98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7e5b86-6be5-42e3-98f9-b4f28ff595d9",
        "cursor": {
          "ref": "252abaf5-0f28-4894-b7d7-4112e6c13ae4",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5e81257b-c32a-4e97-baba-c9499c55ff49"
        },
        "item": {
          "id": "ab7e5b86-6be5-42e3-98f9-b4f28ff595d9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fad57224-42a8-47d3-883f-bb38ff889683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b308fe7-e164-4476-b570-3912df9d41bf",
        "cursor": {
          "ref": "9147302b-b6fc-4b2f-9e6f-461c995e36a3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "885ed84f-025f-4b3e-9cd1-3afef0d751ae"
        },
        "item": {
          "id": "6b308fe7-e164-4476-b570-3912df9d41bf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c419d06c-fd46-4904-ba58-d7144c91b331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de3f5ba-9dd2-4701-8dc9-29064a0a57c6",
        "cursor": {
          "ref": "e5370229-da92-4124-9353-8d6f6c9a79da",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d5ca2efe-bd88-4c49-9cbd-a52ecfa89965"
        },
        "item": {
          "id": "7de3f5ba-9dd2-4701-8dc9-29064a0a57c6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9f61d281-b44d-4326-a180-e7210cb9caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecafa6a-425a-4a2d-9085-a69336ab4555",
        "cursor": {
          "ref": "19c5f295-4b3a-43a6-b9b4-aa2f9c6d1df9",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6ed62951-be84-4ab4-ab98-cd4221716d69"
        },
        "item": {
          "id": "aecafa6a-425a-4a2d-9085-a69336ab4555",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "60f86298-28a2-4c30-8727-e88f933db0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a081e-2688-4387-83d6-33ca020e56a2",
        "cursor": {
          "ref": "130928e4-8557-42b8-94dc-dc838fd5d4e4",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f0c5f413-ed06-4423-9be2-55259daf61da"
        },
        "item": {
          "id": "253a081e-2688-4387-83d6-33ca020e56a2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9b51b75f-1cd5-4a89-8d43-32c256e8b808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b725cab-c44c-49ec-8f2f-7e4c7c3e0c6f",
        "cursor": {
          "ref": "0219fcf3-7f17-46ff-9ac9-3510918d9e66",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8f1c5baf-6989-48b2-a584-47132a2b6b03"
        },
        "item": {
          "id": "3b725cab-c44c-49ec-8f2f-7e4c7c3e0c6f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8db8f975-09ae-40bb-bd16-27bd0bbc6539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0f6bd8-8ac8-4c4a-abf8-1527e26a310d",
        "cursor": {
          "ref": "165a62cb-9aac-4c27-986b-b19e7511da84",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d6969fbe-c2db-454d-878e-b43234abde1f"
        },
        "item": {
          "id": "ee0f6bd8-8ac8-4c4a-abf8-1527e26a310d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a59b7afb-6970-4e08-acc6-4d6a4af2036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb112005-e4d8-4ab7-a57f-ad5845398c91",
        "cursor": {
          "ref": "f900028c-25d4-4fd1-83bb-2dae117e8853",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5ff30898-ee26-4c95-bcdf-9050da489e6e"
        },
        "item": {
          "id": "eb112005-e4d8-4ab7-a57f-ad5845398c91",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3c0c65d4-3196-4403-8ece-c27cd4610c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df81896e-4837-4cc1-ae7b-65a863ffb6a9",
        "cursor": {
          "ref": "6ef56e15-7f00-480a-a42c-98f03d565a09",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46f308bf-d9a5-438c-ad11-d703acf6183d"
        },
        "item": {
          "id": "df81896e-4837-4cc1-ae7b-65a863ffb6a9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "07cff531-3f7d-4c24-80ba-0ccaa4e87e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b9d731-d673-4f86-9184-6dd9106d2bab",
        "cursor": {
          "ref": "8411aa43-9e74-4443-bbe6-52fa088bcb04",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "14803bff-18e3-47c4-a756-dad01851ae29"
        },
        "item": {
          "id": "65b9d731-d673-4f86-9184-6dd9106d2bab",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "42c93c19-e6c8-4b83-9de1-74dd73dd8918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc15c4b-8ad7-4e74-a0e1-13edf5d45282",
        "cursor": {
          "ref": "cfedea38-7a20-4fc2-a507-c1a2eb9f124d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f9f28645-f289-4755-bda2-cc87bbef63f2"
        },
        "item": {
          "id": "dbc15c4b-8ad7-4e74-a0e1-13edf5d45282",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "73471d1d-b7a5-4ec6-a006-dcdee05faae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888be591-7b29-4670-b1f4-bd7afab7ee09",
        "cursor": {
          "ref": "56422bf9-cfd5-4c7c-8cc7-d17d4c4e0de2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "998b01f4-b3e3-4c0a-aabd-8499abf6aeda"
        },
        "item": {
          "id": "888be591-7b29-4670-b1f4-bd7afab7ee09",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "73739737-93cd-45f3-a4f1-215e60c53cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234c7386-4587-4fc4-9691-9663a17b46cf",
        "cursor": {
          "ref": "da0ff335-1936-46d5-9069-fc73a5214f25",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4d0bf23f-400b-49a8-9a0f-db4c29f28343"
        },
        "item": {
          "id": "234c7386-4587-4fc4-9691-9663a17b46cf",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "82bd5c6d-a59d-4c7b-84f1-3bd389e0c556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c05b3-7524-45a7-8054-604565ff0046",
        "cursor": {
          "ref": "98053a1c-40ba-4f29-b45a-48cb276ec8ac",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "698e1616-b09d-4f66-b0e8-b67d7213488b"
        },
        "item": {
          "id": "212c05b3-7524-45a7-8054-604565ff0046",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8a4d286c-dbc5-4567-92a5-f7fab3a9a9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a406d0-51dd-4dd4-998c-9e3f56672433",
        "cursor": {
          "ref": "2cdb0cef-682e-48c6-80c4-97fc16d85af8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "07ad39a1-9c84-4231-9f31-62fff18a36d5"
        },
        "item": {
          "id": "08a406d0-51dd-4dd4-998c-9e3f56672433",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6ed3d260-ee73-4d92-b233-0c65f100dbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129dfb73-b5e7-4b0c-8bf1-78613238f374",
        "cursor": {
          "ref": "84747204-5715-4e88-8290-c06c935b5915",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "14c93223-6c40-497e-b87f-4e7fb233ff3b"
        },
        "item": {
          "id": "129dfb73-b5e7-4b0c-8bf1-78613238f374",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "73cc5513-0c05-4851-8d31-3be5f1ff4eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816d1a29-1b39-400c-8197-d302f2087cc6",
        "cursor": {
          "ref": "0b36ae8f-e918-4bf9-b6e6-1d65d0d9889e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4e4605d5-903d-4781-afe0-b6b9c0afe9e9"
        },
        "item": {
          "id": "816d1a29-1b39-400c-8197-d302f2087cc6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "55e28c4a-721b-4181-af67-bd8f5ff8fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ba4dfa-8a0c-4ae3-a509-64d85f222746",
        "cursor": {
          "ref": "85485e32-7f65-4b9e-889c-84de4ef7a90c",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "33486ffd-8425-4b5e-896a-8ead60fbf8cd"
        },
        "item": {
          "id": "24ba4dfa-8a0c-4ae3-a509-64d85f222746",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5aa3783c-e2fe-46ca-98dd-8e4bef34d2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd513bd-06d1-40a9-b1ea-e37f7fd415cc",
        "cursor": {
          "ref": "8bd02cea-0ba2-40bb-b8bc-142208cae729",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "db8de3a5-428f-4f3f-ab96-d726e8fda2af"
        },
        "item": {
          "id": "1cd513bd-06d1-40a9-b1ea-e37f7fd415cc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "396d5cbf-56c0-4c45-91d0-ae8dbfc4b779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac89d69-36e7-4625-8b0b-19826f28f18a",
        "cursor": {
          "ref": "7d0b13f9-4e7f-4c5b-907a-ee9e3742ffc4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d35fe489-bd3f-4035-b75b-7b37dde8147c"
        },
        "item": {
          "id": "bac89d69-36e7-4625-8b0b-19826f28f18a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6bbd4fec-1c34-46c0-a0ea-12c646902c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c87bef-73ad-4b65-8b2f-2ec54f9806c8",
        "cursor": {
          "ref": "27655519-f454-4a22-8468-178b21476180",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d023a241-c3b0-47bb-91ce-d80bec9359f3"
        },
        "item": {
          "id": "f7c87bef-73ad-4b65-8b2f-2ec54f9806c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b5966b9d-1cda-44e1-846c-669989e23104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a77d90-c835-4ed8-b85c-10a6d4368758",
        "cursor": {
          "ref": "6e71ebbf-89bf-43cf-bcfd-cfa5aaa9aa51",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b535f1bf-ebac-4c94-97d1-242a41d2dc64"
        },
        "item": {
          "id": "49a77d90-c835-4ed8-b85c-10a6d4368758",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e9a3bfd-8975-41b0-94c8-62ee5794008a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49eb9f6-e30d-4992-b57b-12a5fb97590f",
        "cursor": {
          "ref": "5d9de387-ed87-4301-8464-a42b7e78c375",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1e8ba480-b591-4d2f-92b1-433aa3bb0c4b"
        },
        "item": {
          "id": "c49eb9f6-e30d-4992-b57b-12a5fb97590f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1f29cdae-3a83-48a4-bc8e-cc5c2aac7406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148e2472-74c5-4ec9-9a40-45661f8c8faf",
        "cursor": {
          "ref": "c47582fe-a536-40f1-ac52-f538ae98b7e6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "58b095c7-9476-4cf0-8036-792c33cc369e"
        },
        "item": {
          "id": "148e2472-74c5-4ec9-9a40-45661f8c8faf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2e0d5a50-c184-4351-94e9-902c39b60954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b99c0f-dbb6-4332-a37d-c0ce79f8ad8b",
        "cursor": {
          "ref": "403d8a2d-c431-44f4-8b70-848e02c2a676",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d6a35f2a-37c7-402c-b9be-5099462450a7"
        },
        "item": {
          "id": "01b99c0f-dbb6-4332-a37d-c0ce79f8ad8b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4cdb2d04-ee27-4c23-ba4e-494621cdd7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f632e19-f7a0-4802-953a-3750d52434a0",
        "cursor": {
          "ref": "498ca9e2-cac2-45b3-a305-790098bf95d9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b473e81-2930-46f1-96eb-7328a9db9678"
        },
        "item": {
          "id": "6f632e19-f7a0-4802-953a-3750d52434a0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b5598ade-6784-407e-b9e6-f883209be3c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efec9093-4f70-4350-be77-d6777f38e70b",
        "cursor": {
          "ref": "b22592b3-2787-48d0-8ff6-22d1618e9c06",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "31c02181-fd02-43ac-a16c-04ae8c1d481f"
        },
        "item": {
          "id": "efec9093-4f70-4350-be77-d6777f38e70b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c21cf8d2-6dad-4559-8fe5-3999852edd0e",
          "status": "Created",
          "code": 201,
          "responseTime": 4533,
          "responseSize": 973
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9102cb27-0b40-4301-bdd3-970c62497eb0",
        "cursor": {
          "ref": "4d6d422c-3f59-418f-a2c3-cb79c473a624",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6471b26a-2efd-4f08-8b92-c0f1b8f0271d"
        },
        "item": {
          "id": "9102cb27-0b40-4301-bdd3-970c62497eb0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "950c3311-4d59-479e-84b2-2d83a13cef67",
          "status": "Created",
          "code": 201,
          "responseTime": 2392,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4805410-ec1d-41fe-9fd6-cae9cf0e4915",
        "cursor": {
          "ref": "9c0c75d5-9848-41c6-a6b0-bd36eefa8ffa",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dfac0650-0aa3-43bf-8b3f-28f47acfb468"
        },
        "item": {
          "id": "f4805410-ec1d-41fe-9fd6-cae9cf0e4915",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3fa2aec5-47e8-48b4-b207-8fa852f87b3d",
          "status": "Created",
          "code": 201,
          "responseTime": 2868,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "206cd5d8-8442-4597-b7d0-ce0c763e9401",
        "cursor": {
          "ref": "9a05ff43-d098-45b0-956a-8a6f18bd597b",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5fcf4921-68ed-4e23-81e5-0be8c6b3867b"
        },
        "item": {
          "id": "206cd5d8-8442-4597-b7d0-ce0c763e9401",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "653b8776-30a5-426f-8874-57d6d0990d87",
          "status": "Created",
          "code": 201,
          "responseTime": 2803,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db777f-bc17-4e58-9550-2d9385c240c1",
        "cursor": {
          "ref": "867cf934-027a-4278-b028-1220c2656b63",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fcba3860-ca5f-4356-b165-adc87434867b"
        },
        "item": {
          "id": "f1db777f-bc17-4e58-9550-2d9385c240c1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "291b04aa-70dc-468f-ab0d-a1da3c558e96",
          "status": "Created",
          "code": 201,
          "responseTime": 3836,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-17T00:52:36Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-17T00:52:36Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "256582f6-e96e-49ef-abdb-4a184350ad22",
        "cursor": {
          "ref": "ee38f50f-a46c-4c07-9181-00f14cb09161",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d0a10018-415c-4220-a1af-f54639c0bcf1"
        },
        "item": {
          "id": "256582f6-e96e-49ef-abdb-4a184350ad22",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fea064b4-06b9-4304-ac97-9fb62063e564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9f987d92-5346-4008-a881-55105e1348f2",
        "cursor": {
          "ref": "10a4275a-3e70-4605-bc18-fe67c6230b6b",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cfdf4f39-f8dc-4775-961a-d29ce0333f10"
        },
        "item": {
          "id": "9f987d92-5346-4008-a881-55105e1348f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a4a2aba-1465-4358-a037-7bccf56542ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d87a75-8806-4f0b-965c-d998ba56f493",
        "cursor": {
          "ref": "324f0958-c534-44b2-8bbc-f85df2d24571",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "eac69ede-fcba-45aa-ba63-997685158743"
        },
        "item": {
          "id": "78d87a75-8806-4f0b-965c-d998ba56f493",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "71915a89-8c7c-4d65-8b02-5580c656f68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b25520-6ecd-471c-8d91-d87cf7cabcf5",
        "cursor": {
          "ref": "de26eead-551e-4c6d-bf66-b38cb7f007b6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "63985678-71a6-42ee-a394-caa611d01709"
        },
        "item": {
          "id": "36b25520-6ecd-471c-8d91-d87cf7cabcf5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "53109c8e-7683-405b-9841-00c83eb38434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef51727-d59c-4ec1-8c7d-099a711329d1",
        "cursor": {
          "ref": "a1f410ee-ca9e-4b45-a2b8-3b689d5a9e97",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7ba04e4b-a764-45d5-9589-57606153099e"
        },
        "item": {
          "id": "4ef51727-d59c-4ec1-8c7d-099a711329d1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bd328b55-8e81-4b73-8c38-dc5193e017ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8bfe67-a140-4903-b93c-2d89be038469",
        "cursor": {
          "ref": "d3f3319b-b6b3-4b74-b791-eaebd7717b91",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ba53752-d22a-4fd9-abef-9859a0f035b1"
        },
        "item": {
          "id": "ed8bfe67-a140-4903-b93c-2d89be038469",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9bfd201a-d3c2-482a-80a0-3a2563fc06f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5734cb3-7c04-4c96-aa99-dd678a2db098",
        "cursor": {
          "ref": "80f2764b-4542-45f6-ae17-035b52380767",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fe6595ce-4306-4519-ae36-a559f6aa5685"
        },
        "item": {
          "id": "e5734cb3-7c04-4c96-aa99-dd678a2db098",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "604af260-6f1d-4a28-a805-5604b0a90e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2e3449-b256-4b9a-90ad-f3b5375efc9e",
        "cursor": {
          "ref": "c507acae-91fe-4c04-9881-b51347a8fcec",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e51d6ccc-8d3e-4d8d-9049-369c888eccb3"
        },
        "item": {
          "id": "5a2e3449-b256-4b9a-90ad-f3b5375efc9e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71d23823-009f-4774-9a90-610edf373bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d5de0-5d81-4212-a2f7-ee4985573f37",
        "cursor": {
          "ref": "6aaa97c2-f34c-49bf-a485-4a6da4db0bf6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b04b48cb-4f7b-4516-804b-93e375532a08"
        },
        "item": {
          "id": "ac0d5de0-5d81-4212-a2f7-ee4985573f37",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bb75f09e-2ef0-41e2-a048-d0efe04750ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a94c665-86b0-4154-86c9-8e04973f1c56",
        "cursor": {
          "ref": "8ab7c604-2328-4c53-9941-69b8a38a0840",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9ac66868-2701-466b-be56-143a752ec810"
        },
        "item": {
          "id": "4a94c665-86b0-4154-86c9-8e04973f1c56",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "302facef-b4df-4ec5-a243-4160d5bf0e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8313d890-44ff-4866-b46c-907ded946d7f",
        "cursor": {
          "ref": "01aae7f0-fcbb-4660-af77-e640b56cee79",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "07fbd117-c1ed-49dd-a97b-6769c0f6d433"
        },
        "item": {
          "id": "8313d890-44ff-4866-b46c-907ded946d7f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33cd345e-c076-4fff-8729-f37dee2e0f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d500cf4-ab61-47a4-9e03-9451127cface",
        "cursor": {
          "ref": "56f4d59e-2c0b-45fd-b0bd-17a8ab84a4a2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "37d429be-af6b-4327-b038-68001efecf8c"
        },
        "item": {
          "id": "5d500cf4-ab61-47a4-9e03-9451127cface",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68dc175e-e490-437a-9270-213e3a58f2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28596149-1a47-49e9-8d87-9dbe27b0039c",
        "cursor": {
          "ref": "beef60ba-e184-4b63-8e4f-95ff621bf3df",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7fa1c34c-7fc4-42e1-909c-976bbecb44f0"
        },
        "item": {
          "id": "28596149-1a47-49e9-8d87-9dbe27b0039c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "382f26d9-d050-450d-a957-4fee07274185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5691279b-9a12-4650-a2f1-26797b6702e7",
        "cursor": {
          "ref": "2cc8a8d8-4c3f-4e38-8bac-4bf073d3abe1",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "629d5575-82ff-4984-a319-664c3cbedf71"
        },
        "item": {
          "id": "5691279b-9a12-4650-a2f1-26797b6702e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e2c3780-72ab-4230-a96c-0644f772e019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963a3e51-7db6-4db5-b502-05fbb85dc6da",
        "cursor": {
          "ref": "939d42ea-ae9c-42bf-aaff-c4ab3fddec80",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "587d58cb-8f23-4239-a919-b91aad5e1584"
        },
        "item": {
          "id": "963a3e51-7db6-4db5-b502-05fbb85dc6da",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4b146ea-73f2-4f4a-933a-02bc9a9521af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea03391-af61-4cbe-ba4a-8b511b5e3ed3",
        "cursor": {
          "ref": "db8830e9-88f5-4691-9248-0e02fd020359",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bf5bb999-f12e-4f04-9d64-503f8ecc7e39"
        },
        "item": {
          "id": "fea03391-af61-4cbe-ba4a-8b511b5e3ed3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "484b2730-459e-4392-8044-3f36df04aa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2647b0fb-688e-49f5-baf0-e5d1614f3968",
        "cursor": {
          "ref": "35c30ead-98e1-400e-ac43-e93530bd4935",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4cf89c8d-2baa-4f4e-b294-622734c2458d"
        },
        "item": {
          "id": "2647b0fb-688e-49f5-baf0-e5d1614f3968",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5cc5158e-b4d8-479b-be95-9618abb1aa6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8365c25b-7186-4d19-8341-4dbc565f217e",
        "cursor": {
          "ref": "61438af5-a321-4004-ae10-ed50a17dfe9a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56d6f98c-14c3-403a-8a08-ab381eb64042"
        },
        "item": {
          "id": "8365c25b-7186-4d19-8341-4dbc565f217e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af7d3709-4760-408d-87f1-16b49598a174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b169cc-e70d-4071-8a1c-eed1ab401657",
        "cursor": {
          "ref": "2395f2d0-3ee1-4602-ab39-021f2454e87d",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "43fbfc39-317a-4300-830d-4f180fa443fb"
        },
        "item": {
          "id": "34b169cc-e70d-4071-8a1c-eed1ab401657",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cfe70762-9df0-47a7-a803-0a525a214af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fadecba-4692-4b33-84ec-47ad784c68de",
        "cursor": {
          "ref": "2c5f21fc-efec-4500-b2ae-1460039a5320",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5f845d9f-0135-4985-935f-03d0220c80e7"
        },
        "item": {
          "id": "9fadecba-4692-4b33-84ec-47ad784c68de",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3dbf82e0-4208-4f9e-9f29-aff3fa0d03bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792fa88b-2b3d-49ba-95a3-a60f246dfe09",
        "cursor": {
          "ref": "34b31b69-1443-4d40-babf-e9e9330bf5dc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f4ad2bfd-3cfc-44f4-bf0d-ecfe30bfd0f3"
        },
        "item": {
          "id": "792fa88b-2b3d-49ba-95a3-a60f246dfe09",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ae52bd71-0d4d-4419-b838-5327605a10d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1b4221-ccea-4f99-a75e-a119564d6d4f",
        "cursor": {
          "ref": "a48170c4-365b-4d7b-9d3e-4a58c5dd7bbe",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1ad78c84-3a5c-4767-9933-5ec70a7347f7"
        },
        "item": {
          "id": "ef1b4221-ccea-4f99-a75e-a119564d6d4f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f698e620-c994-4082-97ee-7995ca4a8f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf1f7a1-54f2-4279-b7cc-e86de3cd86dc",
        "cursor": {
          "ref": "bc0be399-ed28-4cf6-95f1-59872c8b20ca",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0f61a631-1bca-4e1c-bcbe-bd4d3854a2b3"
        },
        "item": {
          "id": "faf1f7a1-54f2-4279-b7cc-e86de3cd86dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4e0cd89f-b829-4f6e-b799-0397b3f34f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df7e39f-5b43-454e-933f-b5cdb589718e",
        "cursor": {
          "ref": "af3958b6-4060-405b-aac0-7f84784510f2",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4fb72f32-f59e-4c89-9c5d-bcc98dc3d892"
        },
        "item": {
          "id": "5df7e39f-5b43-454e-933f-b5cdb589718e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a6e521b-b207-436d-b77d-0e3266515368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606b5225-353b-48b1-8f53-868d99d270a1",
        "cursor": {
          "ref": "fdda1060-3934-4509-8621-95e51297e853",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "72183ffd-51bf-44a9-8b78-107289016b15"
        },
        "item": {
          "id": "606b5225-353b-48b1-8f53-868d99d270a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ce93b2c-deb3-4869-8930-f327268d13e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e933f592-e1a2-4399-9d2a-add516f79daa",
        "cursor": {
          "ref": "8142c5fd-60c4-4c9b-a6b9-7716b6d80940",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6e11d760-788f-497f-90ec-5e6bd76aa39a"
        },
        "item": {
          "id": "e933f592-e1a2-4399-9d2a-add516f79daa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "905d1c34-c9fc-4725-a0ab-49e57eb5d489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800ec0fb-334d-46d3-a544-5ceb30bbdaa7",
        "cursor": {
          "ref": "a5a24c35-2af7-4bd5-83b5-d81fabdfca5f",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "538f97b9-0c65-4bc7-8194-dfbb5fa00c2a"
        },
        "item": {
          "id": "800ec0fb-334d-46d3-a544-5ceb30bbdaa7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "718a2bbd-4a7b-4f44-801a-89bcd1227dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cea9b86-5d61-4f95-9a7d-7d2bfe2ebfbc",
        "cursor": {
          "ref": "48f083b3-1c49-4cf6-8dc3-12b0f626c578",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cba2147b-1932-40af-a31d-352ab6b281f5"
        },
        "item": {
          "id": "6cea9b86-5d61-4f95-9a7d-7d2bfe2ebfbc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "441ec998-28d2-4035-a78e-0ef869dd6655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb80c117-baa3-4f29-8298-9eb050c8208f",
        "cursor": {
          "ref": "d4c563b3-4533-4360-b327-42f66bc993b9",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5e90bb6c-ada3-417e-85c4-434faa09840b"
        },
        "item": {
          "id": "bb80c117-baa3-4f29-8298-9eb050c8208f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46e12fa0-ece1-47eb-b155-d51221a4ef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef5acba-0f9a-43c5-947d-1748345fa9a3",
        "cursor": {
          "ref": "51da32a0-2bde-452a-88d6-72d38262dc39",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7bb853fd-9170-4eb0-9bf0-5689dbbf9649"
        },
        "item": {
          "id": "4ef5acba-0f9a-43c5-947d-1748345fa9a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b0a15d3-c159-4cfb-82a3-19a6c61bc849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3f597-ed49-4291-9674-71e21d4f3d9d",
        "cursor": {
          "ref": "02628964-aa65-40e2-b0fb-3ed0b8625b48",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1db24caf-f6de-49ae-b9b9-411ab92954be"
        },
        "item": {
          "id": "9af3f597-ed49-4291-9674-71e21d4f3d9d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d4d3f34-95be-4bff-aebf-689bfa979737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b570746c-886d-4aac-97e5-6b5732b167a2",
        "cursor": {
          "ref": "835392fb-7c1e-43ef-893e-495c773d649e",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6830e62f-85b4-4a3c-af94-2317cf2b5420"
        },
        "item": {
          "id": "b570746c-886d-4aac-97e5-6b5732b167a2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6baf4f34-b0f6-45d5-96cd-75cbac4295d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271598f5-4d14-47ed-9de8-0cfdd033ae0e",
        "cursor": {
          "ref": "dfa99e6f-8775-4ee1-883c-058a7e0be731",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "83204712-b559-473f-b14c-c021084a4b2a"
        },
        "item": {
          "id": "271598f5-4d14-47ed-9de8-0cfdd033ae0e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "331ce586-a057-4425-bb92-00493907e6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb17f69-2b23-491a-a4f8-eb3573549a58",
        "cursor": {
          "ref": "7ccdbda5-93e7-46b5-ab79-663feb996e1f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0006777b-1733-43c7-89bc-a07c87b7043f"
        },
        "item": {
          "id": "1fb17f69-2b23-491a-a4f8-eb3573549a58",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3daeafa6-a61a-4f14-8e0a-1ec6f03d2c92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed56d8dd-a131-487a-af72-52dadba62623",
        "cursor": {
          "ref": "5d2ac50f-a9e3-4044-ba87-00e490b11798",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f1995e8b-e867-4e0d-b50b-99a562cf5899"
        },
        "item": {
          "id": "ed56d8dd-a131-487a-af72-52dadba62623",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b0b4ad62-8d96-442a-9858-96fb13564e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae43cc6-0770-4c8a-965a-c2a3cdf28f3d",
        "cursor": {
          "ref": "83419b18-f660-4bdd-a3f4-9483f4a4cd02",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fe0a3158-cca8-46b9-859d-579ff0b26ba5"
        },
        "item": {
          "id": "eae43cc6-0770-4c8a-965a-c2a3cdf28f3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a0e8e89-a77d-425b-b483-a9659179e88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2139ce-cbf2-4fcc-9bd4-d6116b53776e",
        "cursor": {
          "ref": "847c258c-9856-4d87-ab10-33ac2a589e49",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ed632dc0-5ef7-4b8c-a94f-c64d989173dd"
        },
        "item": {
          "id": "5f2139ce-cbf2-4fcc-9bd4-d6116b53776e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64b4c12e-6512-443b-9575-afcfce9dbe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e77c99-532a-4439-858b-c6befdfdb1c7",
        "cursor": {
          "ref": "cb6432d6-b81a-4dd3-9315-116d45574cba",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "10c27f7c-e5be-4dcf-84a6-be27f74e9fda"
        },
        "item": {
          "id": "42e77c99-532a-4439-858b-c6befdfdb1c7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "765d549d-a9b4-4436-a5d8-ca117dfb6a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a6be3f-c4f3-40b8-84dc-145b1a3819e5",
        "cursor": {
          "ref": "4923156f-67e9-4f86-9258-eace27c2c50a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e838c3a3-6872-4c43-929a-6da622044d0b"
        },
        "item": {
          "id": "c3a6be3f-c4f3-40b8-84dc-145b1a3819e5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9056f562-fb75-4232-81b1-3ef5b869cd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c3b62c-3f67-404f-b881-59657357f495",
        "cursor": {
          "ref": "e3a7bb36-c0a7-4763-a2c0-3e03bb4b154e",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "26f0e463-c6cb-4953-9e24-7c897d9bb1e4"
        },
        "item": {
          "id": "08c3b62c-3f67-404f-b881-59657357f495",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9368f3a6-872a-4428-a569-7d06a7ac743b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f839530d-8f50-45bb-81eb-8b44698e7e41",
        "cursor": {
          "ref": "4f3e5aa8-21c7-4a3d-8fd6-640e1fa56206",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49ce126f-2c9a-452b-a54b-ff20975b5406"
        },
        "item": {
          "id": "f839530d-8f50-45bb-81eb-8b44698e7e41",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f9145853-1cea-4ac9-8859-d81cb7760820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35d33c9-73d1-4efa-9539-8a12670200bb",
        "cursor": {
          "ref": "ceec09cd-e220-4ce9-865d-906600777ffa",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9ded085f-9e12-407a-bd77-e0c95c0a9d49"
        },
        "item": {
          "id": "e35d33c9-73d1-4efa-9539-8a12670200bb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3a9aa43f-d670-4716-a5e7-3428bcbea391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43d309f-0e75-419c-ac28-4eb37fb7b8fb",
        "cursor": {
          "ref": "146cfe3c-d582-4fb3-a030-bf53b23d846d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a41b8de-fbde-4fb4-b934-a45c6dfe98e9"
        },
        "item": {
          "id": "e43d309f-0e75-419c-ac28-4eb37fb7b8fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "669714bc-cdd6-418e-a1d9-848893aa05e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a38ea4-c718-45d0-9aae-e289e66063f2",
        "cursor": {
          "ref": "88ece1a7-c28d-4901-8f7a-7fd139406663",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e9ee726b-e4df-430d-8095-dcca8edbf49d"
        },
        "item": {
          "id": "a5a38ea4-c718-45d0-9aae-e289e66063f2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "64c9c46b-6195-439a-a3c6-298efd1ff74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7fd23a-a85a-4e34-8fdd-157c40870d83",
        "cursor": {
          "ref": "fb6a08e6-5c47-4039-ac6b-721cb10c57cc",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2de57304-1ac4-4f57-88de-ce7ada9994c7"
        },
        "item": {
          "id": "4f7fd23a-a85a-4e34-8fdd-157c40870d83",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ebd3d020-628a-4cbe-b1ca-272a30e6aee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb037df9-6fbe-4132-a15c-60917d3e931a",
        "cursor": {
          "ref": "dbbb8854-be4f-4caf-8c1e-d8c1573a8330",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "abd138aa-ae93-4c30-8e24-033d3e01a01e"
        },
        "item": {
          "id": "cb037df9-6fbe-4132-a15c-60917d3e931a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c483f447-d83c-4143-8e2a-b6f52d4bdab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8199fac8-a0aa-4ca4-a7a6-c1ed4a1c82b6",
        "cursor": {
          "ref": "753b2c1d-3f1e-4538-aa07-d3a3de0252a5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e924ae26-c3df-4b98-bc09-094fdcc48a6c"
        },
        "item": {
          "id": "8199fac8-a0aa-4ca4-a7a6-c1ed4a1c82b6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7afad6fd-33e7-44a8-9cab-65190e1874bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf30e6a-1125-44d9-b1a6-da8c7db87abe",
        "cursor": {
          "ref": "10d493ea-d31d-487d-b65d-41e275dd8434",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4ef9cea3-ea8d-444d-ad51-4e99ba2e9d33"
        },
        "item": {
          "id": "bcf30e6a-1125-44d9-b1a6-da8c7db87abe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9632df16-80a2-4409-acc6-ad1712141b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55be09cc-bb99-426f-b278-70e54dfff659",
        "cursor": {
          "ref": "50008a42-d604-4f7b-af46-c106c0adf801",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "663029f9-30ba-4893-94a9-49a4a49c80da"
        },
        "item": {
          "id": "55be09cc-bb99-426f-b278-70e54dfff659",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d0401b89-668c-4300-9576-702726486d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72cfde3-8d77-4f7c-81af-c12257467d7b",
        "cursor": {
          "ref": "4905c3be-9db5-4512-b2a3-f9cc74a0fbf9",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7aeb94f3-9766-414d-b9f0-7b8cad56173a"
        },
        "item": {
          "id": "d72cfde3-8d77-4f7c-81af-c12257467d7b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11cd8dc1-4627-4c32-93cc-b931ae980fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241ce90f-1321-4ada-9acd-2f9fdc8f540d",
        "cursor": {
          "ref": "492142b0-344f-4889-9ba8-9efad2e0f85d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bcac3894-1203-4b68-9781-3449fb44f53a"
        },
        "item": {
          "id": "241ce90f-1321-4ada-9acd-2f9fdc8f540d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60468871-dd88-4cec-a700-bcfa16e77d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d777df-7d68-47cb-b1dd-744577800d60",
        "cursor": {
          "ref": "76c09520-0101-4a94-b926-b46cf4bbdb37",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a0301f87-b545-49ce-9d7f-11ce1f63b92c"
        },
        "item": {
          "id": "e8d777df-7d68-47cb-b1dd-744577800d60",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "235eaa50-6550-4ea4-8be8-0af40a3c6f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea9ab21-f9e5-4399-be81-3ac751eb84e4",
        "cursor": {
          "ref": "bb800896-fa6d-4d90-90db-8decbeffef6b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "45a261e5-d583-4715-9c12-2e80f2f43328"
        },
        "item": {
          "id": "0ea9ab21-f9e5-4399-be81-3ac751eb84e4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a2110016-dec8-4177-a610-943144795fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb7140d-0742-41a3-ba44-51a3659f9355",
        "cursor": {
          "ref": "eab45a3e-ecc7-4544-8498-551c064244c6",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e5a83e50-7a50-4f3c-b941-82aa83cbabaa"
        },
        "item": {
          "id": "1fb7140d-0742-41a3-ba44-51a3659f9355",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f9825b3-91a4-4bc2-9b26-32ed72212bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5882ef5-f80f-4ecb-8383-95d91b979400",
        "cursor": {
          "ref": "b422d2ca-0fa0-4a63-8bf9-ef2771d86c7d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a57b31f4-c711-41b8-bcc1-bcb99e03cebf"
        },
        "item": {
          "id": "d5882ef5-f80f-4ecb-8383-95d91b979400",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c2c193e-c192-4b28-8cf0-112977093963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd166bb5-81e4-4323-bc0a-c5a6ca254ecb",
        "cursor": {
          "ref": "13d155b4-bce8-41fc-a47f-3d8941d22c6c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3dbcf0bc-f8ca-4035-883b-c1345d417c2b"
        },
        "item": {
          "id": "cd166bb5-81e4-4323-bc0a-c5a6ca254ecb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2215d542-bb75-4ac0-bc30-4820d19586fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890f813f-71a4-40b2-bfdc-7311bbddc471",
        "cursor": {
          "ref": "ae45676e-607c-466a-96e7-8bc2937b07df",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b56fadd-ea93-4d8f-9d29-c05d0c4eed14"
        },
        "item": {
          "id": "890f813f-71a4-40b2-bfdc-7311bbddc471",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de635cd4-af3a-48b2-a6b1-2f2716cfe654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e2824-457a-41f7-a745-447a43ca89c4",
        "cursor": {
          "ref": "20e752e1-ffcd-4d75-8734-8b5b6672ecf1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed31405d-011f-4c94-946f-823d7939c327"
        },
        "item": {
          "id": "a72e2824-457a-41f7-a745-447a43ca89c4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b2afd509-185e-479d-853f-4f51b94e3238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f58c0e-aea2-4a7e-b461-80afb1270814",
        "cursor": {
          "ref": "d70e3515-30c8-46b7-9466-af3a2f25229e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f34edd98-bc27-433b-9159-64151e7f449f"
        },
        "item": {
          "id": "f2f58c0e-aea2-4a7e-b461-80afb1270814",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "31982b6f-61f5-4ffb-b41b-6fc8ba77a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d886108a-f03f-4950-9040-a4fb6eef0bce",
        "cursor": {
          "ref": "0043c638-6d2b-4e18-91a4-614f3dac8abf",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "661b0efd-dee5-4350-8c7b-85040d888053"
        },
        "item": {
          "id": "d886108a-f03f-4950-9040-a4fb6eef0bce",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "94213fd7-bc04-4564-b89e-69d1976ec7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64e900-9bd5-4d4e-a11e-b0dd5e6aecb5",
        "cursor": {
          "ref": "99f4db89-b5cb-4979-b1d8-6c6d490cbe2f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4c3801b9-200c-4131-93e7-6d9b6c7a64e9"
        },
        "item": {
          "id": "5c64e900-9bd5-4d4e-a11e-b0dd5e6aecb5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "523910fe-26e6-4756-ab60-d3018bb4cf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcff2d21-5519-417b-baee-1dc8da31a3bb",
        "cursor": {
          "ref": "5fa6a902-12f8-49c9-9dfe-1ce2380644f0",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8a11d6bf-a520-41d7-bc6f-09bd9d2e1058"
        },
        "item": {
          "id": "dcff2d21-5519-417b-baee-1dc8da31a3bb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a4c051fd-9841-4a95-ad22-e9d0ee72f3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5eec1e-5671-47fa-aaf6-1bc6cae20c18",
        "cursor": {
          "ref": "fa929e4c-3a84-4e60-a281-c03966572650",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "09b30c5a-13c3-4545-a277-a8927fdb6376"
        },
        "item": {
          "id": "5c5eec1e-5671-47fa-aaf6-1bc6cae20c18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee016669-4d4b-43cf-a4ee-ee1fdbc48387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9588bf-cd94-407b-a5b5-c35932023efb",
        "cursor": {
          "ref": "6d28fac8-6434-4fd3-9f12-6208da9119f6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ef570db4-05d1-4927-af66-2cd40f998ba1"
        },
        "item": {
          "id": "9f9588bf-cd94-407b-a5b5-c35932023efb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f4f64f6e-9883-4f8b-a9ac-a253098a9281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a140aa8f-928d-4653-b84c-da7f6d41bc24",
        "cursor": {
          "ref": "e29da840-b0ae-4599-85ed-9f7ee4c5725e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d5463362-c622-4ca7-8aa7-959f9660396e"
        },
        "item": {
          "id": "a140aa8f-928d-4653-b84c-da7f6d41bc24",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fcefbca5-7ccd-4ead-b769-40db7efa73b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8525b98-6f7c-479d-b855-5cbdc1009498",
        "cursor": {
          "ref": "5f1743a5-4a10-4930-b832-c9db767e783d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ee89a703-eff6-4885-be59-cb275a593e49"
        },
        "item": {
          "id": "e8525b98-6f7c-479d-b855-5cbdc1009498",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "97e693f7-7c31-4fbf-932a-090d3cb25207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e04c9d0-a711-4df0-9c4d-8eb83e5665af",
        "cursor": {
          "ref": "c67f2598-03c4-4eaa-823c-d45fec858c49",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9ec48ec5-ef3f-4a89-90d4-ce0752fce09e"
        },
        "item": {
          "id": "3e04c9d0-a711-4df0-9c4d-8eb83e5665af",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6b991899-06b7-49be-819d-1e6150fb0bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00d1519-6466-4cb9-8dff-620ae3582235",
        "cursor": {
          "ref": "35f30e6c-defc-42c3-88eb-98730c8efa60",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8af94d5c-2335-4ab3-9f38-0dedfeccd216"
        },
        "item": {
          "id": "b00d1519-6466-4cb9-8dff-620ae3582235",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a3e96fa7-58ed-4cef-8da0-2c9f84217ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b00b2d-f806-42fc-847f-4c5da502f1ce",
        "cursor": {
          "ref": "4cace09c-57d2-4948-a272-ea244e6a29b7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e2262e41-daa3-41d2-afbb-8d2d84a9bbca"
        },
        "item": {
          "id": "f7b00b2d-f806-42fc-847f-4c5da502f1ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "db8b35b4-f920-4a55-a720-ad52fa868275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038cd63-dbc3-46d7-b7e3-8ec01dd0209e",
        "cursor": {
          "ref": "a31e1443-9e4d-4494-9dca-944fc9341987",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2de256e7-c960-4208-9752-1f74dcce5678"
        },
        "item": {
          "id": "1038cd63-dbc3-46d7-b7e3-8ec01dd0209e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7a25dd98-3d86-4676-b698-8afc1d0d8963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab093c2-851b-4994-af8e-a992cf3321eb",
        "cursor": {
          "ref": "ec55aa16-89d8-40bf-b4e1-442c5bbfa141",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2c04b87-3226-4098-bd15-0fb34cabe617"
        },
        "item": {
          "id": "0ab093c2-851b-4994-af8e-a992cf3321eb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "98215d4c-faf2-4e94-af55-827901e41a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815e42d-62a3-431a-aae9-e89bc1f73503",
        "cursor": {
          "ref": "cf9111c8-6913-4308-ba9e-1a31452d1851",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "adc48b1a-b367-4cdb-9355-9cbea372d107"
        },
        "item": {
          "id": "0815e42d-62a3-431a-aae9-e89bc1f73503",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "41e5deb7-aff3-4d57-bdc6-dd673cc6da19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4099b38-b456-43ce-9f67-07be4d6768ff",
        "cursor": {
          "ref": "1f40e8a2-2c8a-4bf7-a901-1bc7caffa5e8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f8b83214-a0c4-428a-baa0-9a2c55d8dd87"
        },
        "item": {
          "id": "d4099b38-b456-43ce-9f67-07be4d6768ff",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bc6699d6-0683-4f7d-b475-9b14037471af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f08481-3dfb-4395-8bb6-c4d2876eb54e",
        "cursor": {
          "ref": "f0d6e702-4897-4f92-a104-f6fa809b4ccb",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d028d141-ba9c-479d-9d2c-6040ce614d7d"
        },
        "item": {
          "id": "28f08481-3dfb-4395-8bb6-c4d2876eb54e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4e4b238a-5f3a-4dd0-8c37-fbf835a28bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eec081b-adf7-49ee-844c-e3a6ff45418e",
        "cursor": {
          "ref": "22ad2d00-111e-4625-834e-4bc477f7319d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "109d0e02-0e38-4b1c-8897-7f7bcb91fa46"
        },
        "item": {
          "id": "9eec081b-adf7-49ee-844c-e3a6ff45418e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8591f5de-e4ca-454c-b5fc-008c0df917fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37b7342-cca0-4c77-bdad-8a01c144ca71",
        "cursor": {
          "ref": "e2552758-aa47-4008-ba6a-902c062c8a1c",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be62d69a-0bc6-4604-9af5-1814cf9db1f7"
        },
        "item": {
          "id": "f37b7342-cca0-4c77-bdad-8a01c144ca71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7e7fdeee-1969-4fc6-98ac-2fa334b8cc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faf15d5-7637-4191-bc89-3fa21e0e1b33",
        "cursor": {
          "ref": "b91f7d29-d1cc-4166-bddc-97b9157f500a",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e008eee1-d0a6-42d1-873b-cc5e87f63e2f"
        },
        "item": {
          "id": "9faf15d5-7637-4191-bc89-3fa21e0e1b33",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2dfae0ba-f9b9-4e64-b165-0fe29908ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc6e1d9-b43f-4611-b32c-c4bcb7b8300d",
        "cursor": {
          "ref": "559bc5aa-236b-48d6-89cf-574f961f0e15",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "406799b1-5588-419b-a87b-0cc696ad7417"
        },
        "item": {
          "id": "7bc6e1d9-b43f-4611-b32c-c4bcb7b8300d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d7cd117f-1409-4def-8379-613cdca7b56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aa712e-82dc-4866-b6eb-c0cfe98efaf8",
        "cursor": {
          "ref": "773ca879-067c-4a3c-9146-318af687731b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "24cdf22a-555b-4cec-b54b-670aa5803766"
        },
        "item": {
          "id": "69aa712e-82dc-4866-b6eb-c0cfe98efaf8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "647cf0ae-8f2e-4230-8226-22f4ed224bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ce97b3-e280-48f7-bdb0-50047ade437b",
        "cursor": {
          "ref": "1b07721d-a1b4-4f33-8930-b997394ff5f9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "30cfc4d0-6438-4326-8844-f4e58211e3a9"
        },
        "item": {
          "id": "51ce97b3-e280-48f7-bdb0-50047ade437b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5dfc64ac-e1a5-406b-a634-52eddb6b5378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272c8189-61b4-446d-85ca-e6b924f979db",
        "cursor": {
          "ref": "a5f4515d-2e5f-4733-b0b7-c7ef06d1f573",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ed7cd79-c904-498d-a0ab-d29ff7dd4a3f"
        },
        "item": {
          "id": "272c8189-61b4-446d-85ca-e6b924f979db",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a838519d-a19e-422e-8f76-bc635eac948c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32500cf-092f-4ca1-9d48-64edaf4fac5a",
        "cursor": {
          "ref": "bb5995a0-c162-4bbb-8aba-7d57480e6a70",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0ce902b8-a320-4e86-be7b-a6fd1f91d1d5"
        },
        "item": {
          "id": "c32500cf-092f-4ca1-9d48-64edaf4fac5a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a88f4be2-1e84-489a-90ad-f320188df6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38737b3-f6e3-4ed0-b512-aace70f15923",
        "cursor": {
          "ref": "2ddd95c8-9f8d-4e48-9e50-81a94a336b7b",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "adf669b0-3243-4d37-bdc4-1e4e9d9f9e8a"
        },
        "item": {
          "id": "b38737b3-f6e3-4ed0-b512-aace70f15923",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "937111a8-29a7-4d80-94b8-d05094cda757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d579da7-0e96-4fa9-baf2-bbeff8dc7a26",
        "cursor": {
          "ref": "a04a5c99-e52c-4d15-b0be-16c823289eb7",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aa2f9247-ee05-4500-92b0-27a852943537"
        },
        "item": {
          "id": "7d579da7-0e96-4fa9-baf2-bbeff8dc7a26",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "85fceb8c-6490-4aff-b7da-2112be5cedda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be578c87-ae82-4a13-b4ef-7d42bad3fa36",
        "cursor": {
          "ref": "ada4f654-ed51-40e2-9d88-20b836316b93",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "12698d8b-9b11-4a03-b802-ae38c818251c"
        },
        "item": {
          "id": "be578c87-ae82-4a13-b4ef-7d42bad3fa36",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cf8254b2-0f3e-46ff-84f0-7a50a44bb7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7f3c1-7553-4c4e-90c5-c14ab61c2f1d",
        "cursor": {
          "ref": "ab17d4b5-8984-4f4a-abe0-eb71036abfa3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "55a06bf1-31aa-4298-bb60-c678e39df93c"
        },
        "item": {
          "id": "f5b7f3c1-7553-4c4e-90c5-c14ab61c2f1d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff41d4cf-f2ed-4357-b3d4-aa80d28c053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43211fc1-cf11-40c8-8ce4-2adc4977ac23",
        "cursor": {
          "ref": "a9978b40-63d1-4de9-b90e-ae15116b9a92",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6458280a-89ab-429d-8fcc-f8ddf7963eb9"
        },
        "item": {
          "id": "43211fc1-cf11-40c8-8ce4-2adc4977ac23",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0950ecf9-551c-4276-9b1c-89d39002a94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9428bc1-182f-4da8-8215-e154b51ad609",
        "cursor": {
          "ref": "5693a109-6b7d-4d2f-858f-74c246634f6c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1acf129e-dd7e-4d3d-abb3-d9bb4ed735e8"
        },
        "item": {
          "id": "e9428bc1-182f-4da8-8215-e154b51ad609",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cc34dd4a-647e-4625-b6b5-e21c694e5337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc31b9b-5149-4985-8999-79ed4372545c",
        "cursor": {
          "ref": "47ab0f46-bc1e-479d-8808-dc73768e8862",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "015de62f-b974-4d5e-8fc0-eafd561f96bb"
        },
        "item": {
          "id": "6cc31b9b-5149-4985-8999-79ed4372545c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "39ea0a26-fe36-4f9c-a342-c29d119a390e",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "fa7b81ff-9895-4802-9506-f61bb26e58a2",
        "cursor": {
          "ref": "09a5943e-fe01-4864-bc8f-01889672535d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0dd249b5-edea-424f-b9a0-6b400023e227"
        },
        "item": {
          "id": "fa7b81ff-9895-4802-9506-f61bb26e58a2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a14a9c19-b55b-460f-aade-4ee7f0a2936e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e6d626-08b4-4309-8123-7bfbb9a05a9f",
        "cursor": {
          "ref": "75e7aab6-31b6-4d0a-84c9-c239c8b6517e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "49e6cc92-6d0e-4ee2-b1bb-e4fc316eed34"
        },
        "item": {
          "id": "b8e6d626-08b4-4309-8123-7bfbb9a05a9f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "27ccf60b-4177-4d1e-9933-995ac01a7530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fdc8a0-2a36-41fb-baba-be57ea0580b6",
        "cursor": {
          "ref": "81818145-22f5-4640-a76c-9a9de4c7b7bd",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f85f1aa-9f93-4b7b-93a8-225593d874bb"
        },
        "item": {
          "id": "30fdc8a0-2a36-41fb-baba-be57ea0580b6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7cb564a7-b649-42b0-be5d-11b8184db8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ed0ece-849c-4e6d-95c9-cd0195f02c98",
        "cursor": {
          "ref": "9c5c68c5-66d5-4e84-9d01-a2d40fce71ef",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "009e58a0-b0b7-4e4e-930d-b59d853b3dad"
        },
        "item": {
          "id": "f8ed0ece-849c-4e6d-95c9-cd0195f02c98",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2cb92563-550c-459e-9b4f-f96f6052cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f24aa8-d9ee-434d-b091-9c2136907746",
        "cursor": {
          "ref": "b1ea6903-69a4-4b7e-a0eb-21e96b8d22ca",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5f7c71ec-b4db-49fc-829b-42cf6531d148"
        },
        "item": {
          "id": "f6f24aa8-d9ee-434d-b091-9c2136907746",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7b18662-1ad3-4aaf-aa5d-a82ab5ce54b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a979c3f-390b-45fa-994b-6c7b2a4511d4",
        "cursor": {
          "ref": "f2583535-63b2-411e-a527-b078c983a4c7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dab5dd4e-d0d5-4daf-acde-5ee36845a35d"
        },
        "item": {
          "id": "0a979c3f-390b-45fa-994b-6c7b2a4511d4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6aff07a6-4a91-49ee-8034-cbe65bc31483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5a616e-9dc5-4ce3-b829-f97b1fbb65f9",
        "cursor": {
          "ref": "9906234d-d0b8-4c9f-bffe-a0b91f717b2f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "62425c88-4537-4713-99b0-3a46d7059a6a"
        },
        "item": {
          "id": "8a5a616e-9dc5-4ce3-b829-f97b1fbb65f9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "06c35c4c-17ec-4127-ac45-02f41bb68315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e494b3f2-5263-4c89-a75d-6c9436517119",
        "cursor": {
          "ref": "f977185f-9943-4f48-8914-e9526bb4b0b4",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2c65815f-3508-4243-a34d-fafd850510d3"
        },
        "item": {
          "id": "e494b3f2-5263-4c89-a75d-6c9436517119",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bf69176b-f348-447d-8bd0-b1206d821ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441b8d5c-deab-4e5a-99f4-0def6043e005",
        "cursor": {
          "ref": "fbf485d2-12e9-409a-b813-b9d41c6ec23c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b921a1ae-a631-4422-bb13-2ca651441248"
        },
        "item": {
          "id": "441b8d5c-deab-4e5a-99f4-0def6043e005",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba2ab171-f647-4914-89b7-b3c839326adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aedb61f-f7dd-46b4-a3f2-c1853b36490f",
        "cursor": {
          "ref": "d83e3931-95b6-4a9e-9442-fa4ca3ae0087",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "29642b4a-bb93-44db-8bec-751ad7f58b6d"
        },
        "item": {
          "id": "2aedb61f-f7dd-46b4-a3f2-c1853b36490f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2a586c20-2dc5-4a11-b1fe-ec020da0fa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e0c701-d8c2-4061-aaf8-5f980cdd0067",
        "cursor": {
          "ref": "c499a9b6-32c5-4e4c-99ea-b97ef8e7ed98",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04deeb7a-caaa-44b7-895f-33b0ee633a1c"
        },
        "item": {
          "id": "67e0c701-d8c2-4061-aaf8-5f980cdd0067",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "23df8fe2-ea79-4c3b-8b39-cb9933217c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60e1322-30ea-4d57-8f51-f96add37e541",
        "cursor": {
          "ref": "473e1214-1dae-4901-9ef7-f37c5dfd3f24",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "457f59fc-a0ca-4b9b-a4d5-f24a12662758"
        },
        "item": {
          "id": "a60e1322-30ea-4d57-8f51-f96add37e541",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "51d3706c-bd82-4e82-9b30-fc14ad314262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd5891e-f210-4288-99f9-3a85931dc6f0",
        "cursor": {
          "ref": "b385c3ec-4e12-4475-ac36-0bbbc00cf785",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "565e1f0d-6e2f-451e-b745-9a3f9fdfe9a1"
        },
        "item": {
          "id": "edd5891e-f210-4288-99f9-3a85931dc6f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c005cce0-4ab6-4d92-aee2-ece30569f52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7220afe2-8ac4-47d3-b77c-3e97967d663f",
        "cursor": {
          "ref": "e4caf6d0-f42d-4315-af95-4246b88f57e4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b0eb3c10-d9f6-474b-b74a-04c0c1c51651"
        },
        "item": {
          "id": "7220afe2-8ac4-47d3-b77c-3e97967d663f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fd125694-72b1-47b3-9e8f-922252495d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8e1945-789e-401b-a9c6-595a25ac7b24",
        "cursor": {
          "ref": "339f8c12-6b1a-4e7a-ad12-afaadcd7fd05",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b94b168a-55c7-4d9a-9e2d-e26feba9ac59"
        },
        "item": {
          "id": "8d8e1945-789e-401b-a9c6-595a25ac7b24",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0a895bfe-f15a-4232-ad27-da1e46030b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74cd827-ea93-41af-bb8a-15eb058c1b16",
        "cursor": {
          "ref": "29fb7961-4da5-4ecf-a38b-3203f364a8f5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ac144133-eebe-46c7-9523-5dc9ab0933f5"
        },
        "item": {
          "id": "a74cd827-ea93-41af-bb8a-15eb058c1b16",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4673874d-2867-4420-9c9d-df2cb0f9fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80831202-4c26-4bf7-a8de-bf5020d9a15f",
        "cursor": {
          "ref": "8a93924e-ea5a-4842-9e82-efe82fda0277",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eea63152-d56e-4fb8-b0bd-8cff0be77e8e"
        },
        "item": {
          "id": "80831202-4c26-4bf7-a8de-bf5020d9a15f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "172c4fe8-c7e3-41d6-a6ca-23fad29b37cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c033ff35-c3ad-4325-af99-5f1afb78662a",
        "cursor": {
          "ref": "94569cc9-9d54-41b9-b9ad-200bcab1b2eb",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "83aae596-dfbe-4b1b-85a3-51ab4d5f4f8d"
        },
        "item": {
          "id": "c033ff35-c3ad-4325-af99-5f1afb78662a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "39e50254-12ad-429f-a381-9f2a6ad0040c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86076b69-9c77-4d04-b867-3f90290f0100",
        "cursor": {
          "ref": "edf6a25d-c398-4bd3-80cd-8bd01d4b2789",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d7bf2ad2-627f-4e9e-aa1b-8fb0f68fa369"
        },
        "item": {
          "id": "86076b69-9c77-4d04-b867-3f90290f0100",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0915f6f7-040e-4668-8994-cf5e88c6a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c242be62-0d80-4da5-9a34-095c3195dc73",
        "cursor": {
          "ref": "369b4418-5bf1-4058-b892-2f7311bf9195",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "422f8c5e-c918-4733-b30e-89a8d9c2a608"
        },
        "item": {
          "id": "c242be62-0d80-4da5-9a34-095c3195dc73",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2f87e99f-9e77-4d75-930a-d7f6d165eb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c50345c-ddc1-4d71-be30-bc50627960f7",
        "cursor": {
          "ref": "c4fbf917-f66d-4210-8ca1-6427d5dfb406",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "98990e0d-2612-478d-9894-48fdea662f01"
        },
        "item": {
          "id": "0c50345c-ddc1-4d71-be30-bc50627960f7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6641e5aa-5335-42c3-bdbd-ef52f84ea568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09ac7df-c0e3-49dd-92bd-ca97fd743f64",
        "cursor": {
          "ref": "4c9662b0-8bba-496a-9d9c-f1cc4bd71b50",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7c704bf9-f59b-4152-bc4c-17e89e5e9023"
        },
        "item": {
          "id": "f09ac7df-c0e3-49dd-92bd-ca97fd743f64",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "beee7b3f-4ce7-4fb8-b33c-a3052afc36f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18acbc78-b3a9-4993-91cd-834acadb7c8f",
        "cursor": {
          "ref": "fc38acae-7347-4d86-9dfd-a78504ae2be9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6593b49f-fc0e-46f3-bd12-9c0e34f97b9c"
        },
        "item": {
          "id": "18acbc78-b3a9-4993-91cd-834acadb7c8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ecbb0257-85fe-4524-9ab7-b799a1cede12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e05c14-3ec1-42cf-a80d-e938a4084774",
        "cursor": {
          "ref": "3ee396e4-5369-452d-ba11-87099845bb64",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "61c92afb-7cdd-443b-b2e4-4c8af570bba1"
        },
        "item": {
          "id": "54e05c14-3ec1-42cf-a80d-e938a4084774",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e8093245-31f1-4abd-be19-eeb1ad569408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befa202c-ad58-4eb9-9caf-5b0ab34aefec",
        "cursor": {
          "ref": "3eb7703b-3bab-4c27-9f5e-a7889e0932ca",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "82a2b601-d497-423a-8508-bfdcb1c99904"
        },
        "item": {
          "id": "befa202c-ad58-4eb9-9caf-5b0ab34aefec",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "86f47a14-3869-419b-90e0-8655d72e2de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965eb8ba-ad05-44f5-9f95-dcea79c35ed3",
        "cursor": {
          "ref": "348023ee-af4c-425a-b531-26f0ffae807c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "07ee3942-5757-48c2-bd55-aada43e1f7a7"
        },
        "item": {
          "id": "965eb8ba-ad05-44f5-9f95-dcea79c35ed3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "815c4460-b0cf-4e3f-b566-0c0f80b4ed03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d598246-cb61-4c68-9117-4f103a5ab406",
        "cursor": {
          "ref": "3c4e484d-4124-457e-bf02-d14ffc004c6a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ceeab1aa-b1ee-41ea-9580-2cc287d3b4ac"
        },
        "item": {
          "id": "5d598246-cb61-4c68-9117-4f103a5ab406",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8e26ed01-a790-44e4-8362-1c87b963cea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0980ed-a0fc-4b37-9d83-37680f32a99e",
        "cursor": {
          "ref": "e6a01009-9ec9-44cd-a3c9-5b2ebaea80a4",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "bd4db6e7-72cf-4b97-83a1-f3bf34b76d54"
        },
        "item": {
          "id": "cd0980ed-a0fc-4b37-9d83-37680f32a99e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b8245d62-91d2-4eb6-b875-cdcb75622bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c5fa3b-4fdb-450f-9b07-7f3d8c423710",
        "cursor": {
          "ref": "8103ceae-39e3-47c1-8168-8ae70b72a80b",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e88e7fbc-d9c0-4766-8a1e-1c256a7bf2fd"
        },
        "item": {
          "id": "31c5fa3b-4fdb-450f-9b07-7f3d8c423710",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f4d436d6-802e-4692-aa2b-c6ccc4839d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ec0e25-35ba-41d2-b3c8-4f33d4213c07",
        "cursor": {
          "ref": "42923120-e50b-4983-a322-0b8c9640ba1b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "80299fdb-013b-4fc8-bd30-2a2c9bf6eef1"
        },
        "item": {
          "id": "23ec0e25-35ba-41d2-b3c8-4f33d4213c07",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "98de1167-d8cf-4add-984e-a11fcf4b6e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b4cf93-5a1c-46c2-99f1-3add417a1aa8",
        "cursor": {
          "ref": "dd1fb968-f9e8-4a61-aa1b-5b2503b14549",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6342cf93-00b1-4043-9274-b6f2b2cc7779"
        },
        "item": {
          "id": "b0b4cf93-5a1c-46c2-99f1-3add417a1aa8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c631155-7334-466a-bcf4-4c43dd6f5cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebc0235-b07c-49c4-b091-bb3dcba81090",
        "cursor": {
          "ref": "da154c97-02e3-4b7a-a26d-34e95c12437a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5f3f041f-ed7e-452e-a8f1-e5cab3faf3e9"
        },
        "item": {
          "id": "aebc0235-b07c-49c4-b091-bb3dcba81090",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "44633418-f962-49b2-b77a-b09517136228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e518fe3-c44b-4ee9-aea8-19f0eda245ba",
        "cursor": {
          "ref": "d485fa84-53e1-48e0-bbcc-fe4a4e666eef",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9448f6c5-547a-40a5-9148-598d990ce037"
        },
        "item": {
          "id": "9e518fe3-c44b-4ee9-aea8-19f0eda245ba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7fa97202-aa5a-4917-8385-1256bda23bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd4e2d-e7bc-4d2e-9094-c4cf41319c14",
        "cursor": {
          "ref": "45446344-eade-4d7b-bc45-6cfb13233694",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8c48d673-be99-4edb-84ef-308ca59c6c55"
        },
        "item": {
          "id": "15cd4e2d-e7bc-4d2e-9094-c4cf41319c14",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3bde8f11-bd96-4083-979e-daebbaf31b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd67a457-08c0-430b-8a61-8a78921a0ae2",
        "cursor": {
          "ref": "40402ed8-d7a5-4f2f-82de-b196007d14ae",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d5f5d43-5ffb-446e-baac-3d6b78e220c0"
        },
        "item": {
          "id": "bd67a457-08c0-430b-8a61-8a78921a0ae2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "77a14aee-01a5-44f7-8244-13c2aaef8a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83de3045-761f-4d08-b68d-ab025671b209",
        "cursor": {
          "ref": "57616a3b-e8cc-41f3-ac82-443e5f4b5e66",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "556f060b-b52b-4721-bd82-b9e8343b2169"
        },
        "item": {
          "id": "83de3045-761f-4d08-b68d-ab025671b209",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0848ed2d-83b9-499c-aeff-8c76ef4fed08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e56b18a-a36d-4735-bb39-a6b0761ed6e8",
        "cursor": {
          "ref": "4aa87d02-b88e-4336-8894-42da0f10ecc6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0d39928d-4adf-489f-8cd7-447a79fccd9c"
        },
        "item": {
          "id": "2e56b18a-a36d-4735-bb39-a6b0761ed6e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "de4c979d-282d-4ba5-bc7a-8513c87b23f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726e18bf-d22d-43d0-ab43-b972bb8901b3",
        "cursor": {
          "ref": "ba93b19c-f767-49a3-bfcc-c5b50cb537e5",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3c06327c-12a1-447f-8b52-b05e2c14873e"
        },
        "item": {
          "id": "726e18bf-d22d-43d0-ab43-b972bb8901b3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "931abc27-c9af-4011-a2d0-b911fe9a2f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526b12e-ec18-418e-bcd8-885cc9bf7501",
        "cursor": {
          "ref": "e418f2df-0667-4c9b-990c-036304f0fcfa",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "23fce64d-f59f-410e-9612-6486091fa868"
        },
        "item": {
          "id": "6526b12e-ec18-418e-bcd8-885cc9bf7501",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "11e6094d-6339-4890-90d4-0b9e0174ce4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098445bb-950e-4aa8-b7f9-cae845f11e0c",
        "cursor": {
          "ref": "98d6104e-94a9-4050-9388-73c01b6973fc",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "704d8c22-b2a4-4604-853c-39d1421ff053"
        },
        "item": {
          "id": "098445bb-950e-4aa8-b7f9-cae845f11e0c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f96bf769-bb4b-44fc-91bb-0914c53c73ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662d7e41-c199-473d-ab36-b543e928d105",
        "cursor": {
          "ref": "8fd5401d-f527-463b-9fbe-ab3bbccec3a0",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7076e660-a9a3-43fc-b076-118cb9842513"
        },
        "item": {
          "id": "662d7e41-c199-473d-ab36-b543e928d105",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2987faaf-d5d4-4876-83df-ef4ad4a47d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1086aa4-5bd5-4bb5-8500-3bfaa84c665b",
        "cursor": {
          "ref": "da9b1d71-1021-4270-8e97-463abc0efc61",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0d5e027e-550d-4e90-81ff-510da70a0790"
        },
        "item": {
          "id": "b1086aa4-5bd5-4bb5-8500-3bfaa84c665b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17884ebf-113b-4a13-8004-a7ee8454a34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f17fc2-9168-4cdb-95e2-badbed4a9b52",
        "cursor": {
          "ref": "3be3c63a-8dbb-4dd1-98a8-aefc578cd334",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4ecc4813-b5de-48a4-8429-0377b52db6ce"
        },
        "item": {
          "id": "43f17fc2-9168-4cdb-95e2-badbed4a9b52",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b1317d08-1778-47af-a06e-c2b58d257c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b3a920-ec6b-4355-b05b-c512e41efc21",
        "cursor": {
          "ref": "ec52fde5-641f-4e0e-be0d-4e492d5ac7b8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a6170111-ef8f-40f0-bae9-e93eef0b0c0c"
        },
        "item": {
          "id": "a9b3a920-ec6b-4355-b05b-c512e41efc21",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f890e7d1-119d-4bff-b1d8-ce07531367e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc09d4d-17a9-4e03-b842-db081a8a8e77",
        "cursor": {
          "ref": "ec9993c0-2eb7-444e-806c-5924e7466f32",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "93240bb1-9151-49eb-ad09-cc4045c67415"
        },
        "item": {
          "id": "7cc09d4d-17a9-4e03-b842-db081a8a8e77",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b3d42ce6-f19d-4632-92c5-3dd16a7f3f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32cb4d7-55d6-48ed-9454-32123439e154",
        "cursor": {
          "ref": "c84c228f-2cb1-4543-bb54-e8be05d9f61d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "246ce60e-22d4-4e4d-84f4-e38d7e3d944d"
        },
        "item": {
          "id": "f32cb4d7-55d6-48ed-9454-32123439e154",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "29175c85-bbe2-446f-805b-f5d4cfe9665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4855d3-ba13-4640-b571-0ac858e8ee8c",
        "cursor": {
          "ref": "21808b6f-46c6-4f69-aea8-ed7cf4159996",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "95c4d472-5f7a-456a-9025-ab90a2f2bb6b"
        },
        "item": {
          "id": "fb4855d3-ba13-4640-b571-0ac858e8ee8c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1cfb903d-a14e-47cf-b421-abf1077b03a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ed08d2-abd2-41fb-b511-856a8a454c67",
        "cursor": {
          "ref": "da2fbe35-a2c3-4bf2-b23c-23e470d2256b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6f5459a6-257f-41ea-b755-aaa4011004fd"
        },
        "item": {
          "id": "f6ed08d2-abd2-41fb-b511-856a8a454c67",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3e5c7903-0c7e-49e5-a9e9-253b70a132ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ed4916-bca1-44e0-85c3-3a27270fddc5",
        "cursor": {
          "ref": "61741927-458a-4180-b753-2b338c440757",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8209313e-7541-415d-90c7-f0596949b305"
        },
        "item": {
          "id": "a4ed4916-bca1-44e0-85c3-3a27270fddc5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "05210de3-b277-46a8-9c5e-186bab4d76e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f24aaf-7986-4f02-bae2-7f59493c955a",
        "cursor": {
          "ref": "6701d8ff-2091-44ce-bc0f-96631f677141",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2933a240-6fab-4689-96af-5bde96f03113"
        },
        "item": {
          "id": "d9f24aaf-7986-4f02-bae2-7f59493c955a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "27b73a64-48be-491c-8909-b9d3632bf3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dce8d4b-f77b-4627-b628-328c25bc8ffc",
        "cursor": {
          "ref": "4d403a7e-ee1e-4c07-b0da-32014144a6e5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ae1af9c8-0434-4c6d-a137-5412bbd4cfe1"
        },
        "item": {
          "id": "4dce8d4b-f77b-4627-b628-328c25bc8ffc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cbb1b038-8536-4930-9391-e047dac4477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53766aaf-3513-4a97-b68c-3a84e4dcd2bc",
        "cursor": {
          "ref": "1bb490dc-9579-47ad-b379-7b858badd6bf",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "985b8358-fb45-442b-a41a-a9ec485d0fab"
        },
        "item": {
          "id": "53766aaf-3513-4a97-b68c-3a84e4dcd2bc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5625011e-1aee-4973-9468-c964dc3329a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d96b934-2d13-438a-b08c-4d3e84ad308f",
        "cursor": {
          "ref": "ec0da779-8123-4757-91cc-acd2fa3a89c1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "106e81f9-9eaa-4a49-80cf-086fc1d36f39"
        },
        "item": {
          "id": "5d96b934-2d13-438a-b08c-4d3e84ad308f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4af2496d-11f8-49c5-8452-28bf5fe7330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dc2379-55e2-45ac-931c-c01f1c8ca26b",
        "cursor": {
          "ref": "8d4cc6f1-ee35-49c8-ae3f-f36deb72bd1b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e50ae438-e812-4700-b8b5-026a8a8429a3"
        },
        "item": {
          "id": "63dc2379-55e2-45ac-931c-c01f1c8ca26b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b8600659-9b7e-4e63-a831-1b9ab2235105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc09931-8748-4bab-84f7-5088c29a8d31",
        "cursor": {
          "ref": "8029b323-41b4-415a-bc75-9f3b519837f3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6762fd8e-a09d-4b19-8176-1428a8a451b9"
        },
        "item": {
          "id": "5dc09931-8748-4bab-84f7-5088c29a8d31",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3e4793db-bd5b-4c81-b3fd-2f334e9f631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566dbace-d53e-4f44-8db6-6a0bbddfb54a",
        "cursor": {
          "ref": "d5ad026d-72fd-441e-8f1c-9c15aefc1b47",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1472674c-07db-46f2-a3d9-7fdb8b158916"
        },
        "item": {
          "id": "566dbace-d53e-4f44-8db6-6a0bbddfb54a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ddba5cfe-e09a-448b-a8ad-a0948d3bdff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5730252-43d7-4684-87e1-1c74349e7ef8",
        "cursor": {
          "ref": "38e6fd6c-d5d3-45bd-a209-6500b76c025d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2a9202e7-772f-4c5a-901e-4784f22aeb70"
        },
        "item": {
          "id": "c5730252-43d7-4684-87e1-1c74349e7ef8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "310852f1-12e3-4f97-afb3-a075b900afb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c161cdac-d5a7-4ca6-a84c-92de0d4d925a",
        "cursor": {
          "ref": "42dee42a-5693-4c3c-8156-18deb8a616f4",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "861183c8-4617-4005-a9cb-e539d8df74aa"
        },
        "item": {
          "id": "c161cdac-d5a7-4ca6-a84c-92de0d4d925a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2799ef95-1c24-4a8d-810d-94407709de53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f33cef-e73f-450f-b728-de5f6d03abf2",
        "cursor": {
          "ref": "f37a60b7-d13a-4ffc-9af6-db969912af35",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "136d3932-1819-4fd0-9b66-e12c6f4db0a0"
        },
        "item": {
          "id": "c5f33cef-e73f-450f-b728-de5f6d03abf2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9b051e47-f49c-45b9-a200-d306604fddf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b42663-4b81-4187-a1ab-dd6464fbe10f",
        "cursor": {
          "ref": "8200c96b-46e5-49f1-94cd-753d78a77393",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "01b05443-5da3-4e7e-a8d6-fdce5b7496e8"
        },
        "item": {
          "id": "11b42663-4b81-4187-a1ab-dd6464fbe10f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eaa2c2b8-9dc4-43a7-997f-ce4775500aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd94ff6-b0da-4b46-81b0-db9dfc5f5347",
        "cursor": {
          "ref": "937db27e-d2f0-4d98-9d82-c7753c6327d9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "1b892e4a-65d7-495c-b5bc-5a544dff51da"
        },
        "item": {
          "id": "cbd94ff6-b0da-4b46-81b0-db9dfc5f5347",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bc959158-613b-4887-9eaf-d64ffb18ee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8acc61-6d21-4715-98d6-b32aef72db94",
        "cursor": {
          "ref": "906e2a17-4131-4c49-873b-8699659d3923",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e4c94a45-00ad-4d08-9bc9-426deb65b70f"
        },
        "item": {
          "id": "2c8acc61-6d21-4715-98d6-b32aef72db94",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7a572b34-410d-402e-9d66-a075994af0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064c595c-1bc1-4673-821e-eaed2e2c4881",
        "cursor": {
          "ref": "26a6b392-df3b-47cd-9905-8db5c32fe261",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "48649a0e-5c92-4a5e-bbc2-c723f3da865e"
        },
        "item": {
          "id": "064c595c-1bc1-4673-821e-eaed2e2c4881",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8173282c-741f-4913-8525-9757edb3d393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96761c40-6df3-489a-aa04-a070bb434242",
        "cursor": {
          "ref": "2bfb2540-dc89-42bd-8b3c-19c356ab7612",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "77683b7c-ca38-41d6-80de-807aff7ae484"
        },
        "item": {
          "id": "96761c40-6df3-489a-aa04-a070bb434242",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "363bfd2a-239b-4696-a4cf-619a7c6963b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0974058-27a7-43af-aa1e-c78c4f7f1cc1",
        "cursor": {
          "ref": "9badd7ca-3814-47a7-a275-f5ca02882975",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a33c2fb6-d3ef-439e-9996-f31cf65ca688"
        },
        "item": {
          "id": "c0974058-27a7-43af-aa1e-c78c4f7f1cc1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "47d23b34-3eb9-4734-af00-ffff6406da47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53ded36-bbe7-4c4f-bebf-331ea209651c",
        "cursor": {
          "ref": "d552a1e2-4736-44cc-9e80-4fb6050bca50",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5e5e986f-9c66-4032-9ae6-daa0d40e0334"
        },
        "item": {
          "id": "d53ded36-bbe7-4c4f-bebf-331ea209651c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "42430307-1785-4ef2-a237-5e28095118ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40339939-ffba-4a29-b558-c25ba249a6c2",
        "cursor": {
          "ref": "21c37894-8e3b-45c4-9c43-2e6f21a7ddfd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "286a452e-a3e7-4a60-90b9-e5fcec57f9c9"
        },
        "item": {
          "id": "40339939-ffba-4a29-b558-c25ba249a6c2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8a0eb0b9-838e-45a3-8413-daa4f1573782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f1d7bf-98e9-4a9d-a498-1126b7797c21",
        "cursor": {
          "ref": "6bc76564-9d71-41f8-a945-49e2c246867a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c49a8909-7e4f-4736-acab-def24e633427"
        },
        "item": {
          "id": "11f1d7bf-98e9-4a9d-a498-1126b7797c21",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6e3156f9-2d40-49b3-84aa-816e2b193a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b47eac-81e8-48d9-b704-d2d190e7e388",
        "cursor": {
          "ref": "cf97466b-1bf1-4c44-b818-733046b1f5e5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c0e6fdc5-c67a-4097-bc43-623e9c310eee"
        },
        "item": {
          "id": "e1b47eac-81e8-48d9-b704-d2d190e7e388",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "92332f8d-cba2-42c8-9b84-50c563455774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4687aa3-a793-4a2c-8bc6-31bc202a980f",
        "cursor": {
          "ref": "56394897-ea27-42e8-82ad-620a6a3942ac",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3aa3cc02-45e5-4b67-8e56-e1da812c4e2b"
        },
        "item": {
          "id": "a4687aa3-a793-4a2c-8bc6-31bc202a980f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fa954e8c-a1fe-42f8-a478-0fa03a847fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4207f113-ba81-4b1a-852b-37a1eec1509c",
        "cursor": {
          "ref": "cc23a349-f860-445c-86ac-3a309212d6a1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e303a56c-9cb2-42e8-b95e-30a034aa19e0"
        },
        "item": {
          "id": "4207f113-ba81-4b1a-852b-37a1eec1509c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "31d23ca5-c5e9-437f-9489-f98e2e077b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06cbc1a-1176-4378-88ca-80f9a7e0bd01",
        "cursor": {
          "ref": "c44873a4-e7b8-403f-91ed-ae0e166bf028",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "87d3cace-f3cd-461b-8986-8d19299439ce"
        },
        "item": {
          "id": "e06cbc1a-1176-4378-88ca-80f9a7e0bd01",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8712755d-b3d5-4d0b-8df6-d5c2e4f5cb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80695d7-6d9f-4600-a1bb-b598be41d66f",
        "cursor": {
          "ref": "7c854a0c-943b-4b32-9fe7-86ac8af67c3a",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d9ed9938-4f0a-4434-b74a-3debeaa6a279"
        },
        "item": {
          "id": "a80695d7-6d9f-4600-a1bb-b598be41d66f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2006063e-1956-4369-967b-2165139c4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49318c0-93a0-4fba-8b60-d69b48855ade",
        "cursor": {
          "ref": "3a0dab50-71b2-4ab3-9987-d40f3e2a990c",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "64b4ede5-eed2-4cb7-9d13-6b457b722b6c"
        },
        "item": {
          "id": "f49318c0-93a0-4fba-8b60-d69b48855ade",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "584648e9-2450-4998-bbac-670f8f90eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0798ea74-3765-43bf-b819-a32a3a1e9521",
        "cursor": {
          "ref": "3deac4e2-614e-460b-ba0d-2cb41480f2ac",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4a4bcb03-5c8d-499c-a4fc-7fdfe570d4aa"
        },
        "item": {
          "id": "0798ea74-3765-43bf-b819-a32a3a1e9521",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "94e3c929-0269-4742-92cb-5b79a5ca9d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26720bc5-7fde-42bc-af31-b6302b7b86c5",
        "cursor": {
          "ref": "6dfeab2b-704b-47aa-9e44-a158cb476371",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a5b6e99f-d46d-4c45-9e45-b66e0cb27931"
        },
        "item": {
          "id": "26720bc5-7fde-42bc-af31-b6302b7b86c5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "097d8202-abd0-4c89-8877-be93ddd28e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885b6541-ce11-4f9a-b852-865d1fc95adf",
        "cursor": {
          "ref": "fd88e7a8-327d-4353-b7d2-9e050c63a349",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3ab2c140-dcbb-47d5-85af-4288d61f6bac"
        },
        "item": {
          "id": "885b6541-ce11-4f9a-b852-865d1fc95adf",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1b4ce937-336c-4064-b9c1-0338c7cc570f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e071ffb-63cc-4253-a80c-864e8eb3d414",
        "cursor": {
          "ref": "bf9660ce-5de9-42e9-945a-7ba9156f6088",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ab86f56d-ffb2-4130-9681-1041962c5715"
        },
        "item": {
          "id": "9e071ffb-63cc-4253-a80c-864e8eb3d414",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3ea5bdc4-19e7-48ae-b46d-4d99a45ffc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f264cb96-d48f-4d93-9997-15193c1bdd8a",
        "cursor": {
          "ref": "e0f2d3b4-6ea2-46a4-9fbd-e529c193d955",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "78061ea9-c7f0-4e3c-ae41-074e9ae11058"
        },
        "item": {
          "id": "f264cb96-d48f-4d93-9997-15193c1bdd8a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ed2c5c41-b69f-4339-9d38-154f1bfdfba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49acf1-99c0-4b4f-a77b-051690e0e323",
        "cursor": {
          "ref": "43c49703-9a88-4909-8b01-035a69c4f1be",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "11b84ae9-6cf3-4990-aa23-26a984d1b972"
        },
        "item": {
          "id": "bb49acf1-99c0-4b4f-a77b-051690e0e323",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "90bcb25c-b506-49a9-98ad-69838906dc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669099b2-1c9c-4fb7-9815-12e57ae10375",
        "cursor": {
          "ref": "2797a7e5-030b-43aa-9c9a-7938952c02c2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f523d7f1-b3ef-491e-b482-bb1e3ea5210d"
        },
        "item": {
          "id": "669099b2-1c9c-4fb7-9815-12e57ae10375",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3328a75a-b149-4e9a-b6b8-f1598177be89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2b275e-f8d0-4c0e-8025-c1e430f56e74",
        "cursor": {
          "ref": "cb4198a6-dc6e-4adf-a129-8590d0e7ca13",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "477a0925-f34c-49d9-8b6e-e2367b525230"
        },
        "item": {
          "id": "bf2b275e-f8d0-4c0e-8025-c1e430f56e74",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "753793d1-e486-426a-98fa-f77819d8bbb5",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca972c76-de42-4b2b-a9bc-0dfbd100056c",
        "cursor": {
          "ref": "553ed7ef-5dfb-4e80-ab2e-4353520661aa",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "09aff73d-337a-4349-bc02-d41282fe003e"
        },
        "item": {
          "id": "ca972c76-de42-4b2b-a9bc-0dfbd100056c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "50239b2e-7503-42b4-98fb-8c64695787f9",
          "status": "OK",
          "code": 200,
          "responseTime": 1711,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea3008-ac3e-4f99-bd58-913845af981f",
        "cursor": {
          "ref": "4b0f60e3-23cb-4017-9b6a-419fecee65ae",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "40de4eb4-636f-4f6c-99e6-678159ef7af7"
        },
        "item": {
          "id": "4dea3008-ac3e-4f99-bd58-913845af981f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "30a5eaaa-ed0e-431d-9518-0ef259a82fb8",
          "status": "OK",
          "code": 200,
          "responseTime": 3138,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f473c-6506-4970-aa7b-fdf2609f3a82",
        "cursor": {
          "ref": "51e71990-8457-45d9-a3d9-aa5b004392f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2a87b3f4-c3da-478d-9e15-d39e12fa060c"
        },
        "item": {
          "id": "0c9f473c-6506-4970-aa7b-fdf2609f3a82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f4e30f6-f2c2-4767-a30b-68ffa3e31899",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9f473c-6506-4970-aa7b-fdf2609f3a82",
        "cursor": {
          "ref": "51e71990-8457-45d9-a3d9-aa5b004392f2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2a87b3f4-c3da-478d-9e15-d39e12fa060c"
        },
        "item": {
          "id": "0c9f473c-6506-4970-aa7b-fdf2609f3a82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f4e30f6-f2c2-4767-a30b-68ffa3e31899",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2e79cb-9eec-4bac-993e-4f2f4cfbf32f",
        "cursor": {
          "ref": "8b33bc6a-8f0b-42f1-9017-dce8369805d1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a26a93e7-7674-4c51-837b-e25215d7b4a6"
        },
        "item": {
          "id": "8e2e79cb-9eec-4bac-993e-4f2f4cfbf32f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b3c362b1-fb86-4c6b-b421-e7b4c348b357",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 12,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc299ff-09f3-4f0a-8b82-c207f3f5c46e",
        "cursor": {
          "ref": "5e035366-8f2b-47dc-b1d2-911335276929",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "34434115-c438-44d6-a138-df7b7f53b47e"
        },
        "item": {
          "id": "5fc299ff-09f3-4f0a-8b82-c207f3f5c46e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fa10a169-ad73-4743-a5c5-8dc770350808",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}