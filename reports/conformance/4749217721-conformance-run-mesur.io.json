{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "060a765d-3208-4f9e-9488-37ceb376cd55",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d8ded84e-2a59-4513-a7ce-e8463d271930",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52df1ee1-769d-4cca-9fca-aac6f88b6def",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8c97c974-3e71-49a8-a36f-59ec454a05c7"
                }
              }
            ]
          },
          {
            "id": "013d2d9e-ac2a-43f6-8b78-f1b62479ab48",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f4fc453-8272-45b8-b44b-1674d2b20328",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ecac27b8-81a0-44b0-8d8e-4f318f5ccb40"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "afad94b1-d86f-4e3e-acf2-7573b0f70f0c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2be5ef55-5e01-419d-9414-dfd9274e2de0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4afa4740-bc6a-4531-b06a-ff045e9ec737",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59e3b601-1e22-4ef2-90d6-5cabc9c3cff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bd2b21e-312a-4ddf-8598-94a4fd6f5a58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79dd70b6-56db-48ef-aad0-2c8ad9958a65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d701480-febd-4dba-b775-b09213fec074"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a4c7049a-a7f8-4608-b246-34cc07a2abdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fce659f-2e31-4e22-af37-a2caf81c8916"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ce89d5a-2e36-4e80-ae5d-1db9a9f577d4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e0ad64fb-4504-4681-8fef-8baad5a86129"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5a843e0-4d4f-4da2-b3c9-9290c2f96ef4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2604d17-54dd-444c-8f15-7a253800aab4"
            }
          }
        ]
      },
      {
        "id": "5683dcab-e288-44bb-a03d-5cdce949b372",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b385dea7-ca76-485c-88cb-cbd73671fe33",
            "name": "Negative Testing",
            "item": [
              {
                "id": "200b136b-fed3-47c8-bf9d-87a7a30820cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e16e43b8-fe17-4ef5-8000-dc54863218b9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66d3dd9-b614-40a8-b12d-eb9edf1fb126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ae1a8bd-e7dd-41e3-bb85-468a0424f8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dc9db6-6783-49e5-8f51-be9e46d37cff",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c0a6fa-49a6-412f-a1f7-b0d73d91e56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7269e63c-436d-464e-b204-687131bff9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba73e7c-2caf-4967-9ae3-37b48721a0a1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dce1b1-4d63-4181-a887-983748f7df38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6280094f-8711-4d18-a9fe-4775a5c698b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da3fa23a-f2e7-4b44-9390-ba1e418cc1d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5089f446-56fd-45f1-9fce-aff33098f9f2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f993afb6-78a5-406a-a603-c58affe1a846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6178f5ab-86e2-4ef3-b39e-62aed721c60d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63efff55-b4ec-44ff-9eff-87b5976c8711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614096ba-3271-4b9f-bd15-e48d2cb8f3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceeb8c1-9bc9-4e0c-b32d-d6e3ce49e0f5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1037e6ce-cef9-4eac-bf80-741685d21db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf46f86d-53da-422d-beb8-4f940cc4c83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553b87f6-916b-416d-909e-be9a9d41933b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "25b630c0-a8a4-4265-9aa6-8f1cc0672513"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83c999e1-9fa4-4f33-9f75-f3dca1d2ba17",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fa512543-46ba-41e0-99fc-1c451b7d1cb1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68460ad7-413c-473b-9401-6174b13dbd67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "36469299-c3e3-4480-810d-216b2a391b0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bda9ceb-f692-46ae-b6f5-22a42e47e461",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b0a1edb3-2e5b-4a19-a100-ff8166880ec1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bfc3c83-eebc-463a-8dd2-f2320075fa2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bef69c2-e6e9-451a-ae34-7cd42b736335"
            }
          }
        ]
      },
      {
        "id": "dfbefc50-85d3-4121-ac85-22a5935b378b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5fcfb4a4-208b-428f-9094-6a9829094b90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16769caa-37a3-4837-b8f8-f94999430c25",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a116e916-4b6b-4b24-9a20-bf6aacf3522a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f13a42-0f36-4318-9943-c9981b202aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ba2ab5-cb95-473f-aea8-4023d3f0e32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a0e658-0fa1-4022-8803-b1d8ff263557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c48a3714-073b-4638-9c42-35b228f0ecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129af8fe-5bec-416c-b7cc-0cbefd9659de",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c7af12-d5a4-416e-9149-9b8d086e2cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bb5d47-b109-46d0-88b6-f2bd2a957ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2bcbcf-8f7c-437d-b6c4-a9f67dc6a57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff53c967-c3da-46bd-bf5d-b7341658b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bc294c-bc3b-4650-a9f0-d9d9ad1c0e9b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b5f1eb-d7c0-4e80-9989-bf54b19192f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01cbc471-44c2-4fe6-bb84-ac209472adcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6c4623-5e41-4f5a-bc63-4d93109aaac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10db73dd-8fc5-49ec-b84c-359a6dde5792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ca285-5ff0-4173-97f5-f84f6899049c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02820104-4d59-4d3d-bf04-77e252ce178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa2c08d-c20c-4111-9928-90f45798f1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29006a94-2bf2-46ee-b7dd-a478e0cd4d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8f938f9-cbb5-4f4b-9435-dc7155fdcd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f0f98e-fe36-46c5-aedc-e1f12b71a01d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a6473a-d038-4a15-88a8-311122cad82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9512af69-c4cc-4124-885a-88e4e3a29a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1153f38b-b05a-40be-881a-d6f5e1fe5a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4343600e-15e3-4eef-b770-2cc32d8bcb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb8b9dd-4f15-4e83-834a-70f107fc1f5e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddd7845-bb90-4ad1-ba8c-75b02691caa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b2ab9d-2fec-48a4-8ff2-3bde107afeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa4109d-c964-4ef7-9385-8bdd115e5288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8dbf458-c82c-4459-926c-e646e8d9a157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2889293b-7618-4b39-99d3-522ebdde2a67",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d9c552-c079-4f0f-9ccf-594643d0fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d74781a-133f-402f-9276-7355d8f73ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afb53d7-f21f-444f-874b-36988ca6a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e3ce6e6-3ce2-4f9b-b109-f750c47e3f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5de4ef-2d9c-4dd3-9adf-3ba618c21b60",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ab420e-8432-4e0e-8992-425ea6a05455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cf8b60-b7a1-4a1b-9182-c9283f0b94c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1608aeac-4c51-4f31-a0d9-68c5c0102308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7434159c-1516-4193-af94-72edbcc4295c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234b906a-6077-425d-9eff-f671ad980dab",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8e11c0-5536-4a85-8340-1de4b045b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bb25a4-0607-4559-a722-875e69677aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47cce5aa-cf2a-4c0f-a8f5-45ec98ceb69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc7f50f9-4bd6-4de2-8336-5f2dedd90bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1a2bc5-91be-4496-93fe-c439216c9cb7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2525fb2-6089-4a5d-8669-6bbca01d198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dafc513-0e75-4404-8f00-0aff2e44af56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbeaed1-15cd-42ac-a1ea-7583d9ee1b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66eae532-e780-463f-9236-bca33d7995c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65ea534-6365-46b0-aa76-cfb2b2082c15",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e20b556-0eb6-4df6-bc3b-83087f1d631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1fe406-8e6e-468c-ac5c-e1e679328ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649ada20-f0fe-491c-b1df-9fbedd0a523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "816be364-180d-417d-8ecb-73ae465e8281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336bb012-6328-484d-ba06-b79613a3713d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64422697-7248-427a-b226-5b5fb1cb3e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cd5f65-ab1b-4d02-ba5b-e524a06398da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56dd54c-d4b3-4479-9a12-f59fcbcd356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49cb3dbd-65d3-4097-9221-7dde4b85ac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e52950e-970f-4c85-b147-25cbfb09c2b2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74223d91-cf46-4ed0-874c-8612acae2a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106ad44e-2de2-469d-a4a7-2664fb996769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8ddf08-87ed-435b-a859-475acbb104d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb5f353-b32e-42ba-a177-4f903fad2fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0946e396-dd8e-434e-8bba-a9d447faa14b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68946daf-0dab-4591-9c50-99125a791b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060d11cb-7b27-4994-baa1-b5650e872b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5eb141f-e5d8-4797-9924-659ae3ca7632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97e00616-c1cd-474b-bbf4-007aac3e6981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22f57d3-fd4f-46b3-8e8a-f27cb6c85cad",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20efc7ca-4082-466d-9301-e79d661c2fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3861c7-cdd6-4515-8d1f-ff11804a0111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b061fb-48f0-4cba-8677-214c5b6dcf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afb475df-d074-4d0e-8f9d-4334a2af0e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17da5e47-a6fd-4144-a0fc-fb1b548af25b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff840c0-2094-4aa1-9706-d0ee0e4b83d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb169f3-62ed-4781-8689-5d00e838940a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d914c773-9c59-4e6f-9dae-fe4e27f35246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd7fe37e-b517-4443-b41e-121056183c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa9d67a-10c4-4377-9214-dc5f1eab0f85",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f4a18a-22ac-4b0b-87ce-9d214c489753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb73577b-6222-4cc8-970d-c21d0af90d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dee9ac-ac6a-4e69-88c5-424b1439b31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9605949-85de-4692-957c-f010c4f4e65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15cf3e9-6b0d-4464-8456-b5cab6e47bc0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87d7155-c158-49ec-aa99-2fd5af37c318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ae70ce-1599-416f-bedf-c6804f426a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7bf831-a1b4-4e18-8b92-579cc4200f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "69a1ebf9-5dcd-45fe-8516-fd8a0f0eb003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a201889f-a318-4424-be2b-b3b89047530b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5badbccc-f576-40cf-9b9a-328a0fced0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5715069-9462-45b9-8cad-72ae132889ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7612f3ed-3a28-44ff-b1fe-566efc10a710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ab5f50-c124-495b-81e6-35f0ab81f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c59650-9113-4227-b581-3fb2a52f48ee",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869a7216-226a-47e0-b5ce-d9386e03a2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c69436a-526a-4168-81b9-f35327d046b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3215092a-8125-4a2b-bf4b-6f3d12429247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af9aa68-86ed-4ad2-ac1c-52118b3ebc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49896c19-1e3f-4656-980b-9b925eb7d3b2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7ce224-dfb2-44f4-96b0-07ba6f134206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224e9d19-e61b-4ed0-842a-b19b8d98fce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa2c64-4838-49fb-b299-f3efb807c3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3607a68b-2322-4285-a823-951c1726ddf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca0e479-7d18-486c-b975-cce689f776d8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea000d5-49d7-4a92-9ecc-43d903c32c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c294e9f1-a443-4bd1-8138-1250ff340257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f608d228-759f-492e-be09-ff99cca1e3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8894ab67-5058-488e-9074-973afab2bd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d816e0-4445-41eb-9a0a-dfa32532b07e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f8b5fc-29ba-4e89-9249-03b9bbf4e98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79eb6340-bd7a-471e-b2a0-68ed21c57bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac64fb01-e220-4729-af0b-5b29bb7bfb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8122e273-1b0a-4227-adfa-a91dfa5205c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7c7abc-5d82-462e-99bc-289c911d4d25",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3d957-0dbf-4ef8-8c03-adc34ef25714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7698f2-be0d-4992-9587-17063d05b83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a0d9ed-f953-473e-abbc-be29ce33e3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4763eb3a-3fc1-462d-b5a9-96fa43cfc234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e87c24-1fd1-4d4f-93b6-768678055082",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c626351-c139-4ea0-a995-a61666a13273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8343bc1-e3ba-4905-bd52-90f0a33c8310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56532d92-b4aa-4d15-a058-e71e67535da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d132fc-f192-457d-9607-f6cedad6ef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a65dcac-d19b-4f44-884f-3cc9d1987d5f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0716e0-3065-497c-9d37-0725652b97ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22081ce-ad5e-40c6-82d8-2f9a7114c038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df194826-6c52-48fb-857b-992acaf5f260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "368f746a-e9e5-4d6d-a42c-493c044354b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd6d043-f497-4067-8fc6-6155370be1d9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961fbb4c-6708-46b9-b768-69a3936eacde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a50223d-e507-4812-8184-bcc0a100d751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f9a3be-8830-4d60-9310-2b1088ea4c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "439a8bac-3301-4c44-b480-31002c006eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667c491d-9da0-433d-9ec2-ebf937fb8316",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813ce390-3612-4516-9382-39e15627fda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd685b20-153d-4d4f-b81d-e13434c1a217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16090c37-83a4-4f75-9c38-b1ee531d67fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aab44934-7c70-4858-a003-7389672c0296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687cdb7e-a42b-43c6-9b4a-923b239af4c1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a722c3-ffdc-4a08-a4aa-dcc1cca08aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdaba13a-baf2-4203-a378-7f294255da7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c337b73-c4b8-4e2f-a59e-28829cf23a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f4ec9a-5468-4493-a2f0-b225838e715e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66db7be6-2200-442c-98a8-c4932a4a0687",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5533bc1-4c17-413c-b826-84dd12fd4220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae5280b-c55c-4a2b-98d5-59177636fa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c416375b-1bf5-4a66-b8e5-35d00b118039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0862d7-22d1-4e44-a4db-b1b9f2b6de46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec8877f-4c5c-4ee2-96ff-edd403f1f5e0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dba873e-75ee-479f-aa02-53184dfb3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ce82cd-301d-4427-a82e-286506c9b787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195b3743-58a6-48bd-9b47-d2853eb5149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee80765-46cb-4528-be0f-acf9e1dd90a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df898a6-fdee-4a37-a222-adbe7ad5be5c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06bfacd-3ad7-4005-b95c-af92f7656c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa6425e-034a-4cd7-a4be-ac0082c3fdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc51367a-d14d-425b-bdca-f38ba4af3d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6fc6d9-aab0-4f39-a976-26cbdf2ef127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f564e480-68f7-40dd-bed2-ec7d73105419",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8fa745-e4d6-40f1-bbc8-ac3a7875f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c7bb66-134d-4a1e-92c5-b7ab9f6737ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bfd29a-453b-412a-9094-d22ac285ddd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf56e406-3f9a-46bd-9339-677c373000fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3939adbc-c72c-4905-ae84-6f91f6f3726d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6887d10-cc54-4ddc-8f5f-7e8870ac5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4b1967-ab79-476c-a08c-b27da5cae173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1ebe57-3e2c-43d1-84dc-33d2808a6b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3cc1df-4902-4bb5-8d42-6708229fd080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adc896c-823e-4607-bd7a-983b15efa4f9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba727552-37dd-4826-9c2a-e24347bad233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf9d558-4772-4023-9ef2-4b73f3b09575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c2763-71d6-4266-84e1-5a10af06ab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b939b4dc-f4e3-4dcf-802a-c6d3e3004937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55efee2b-69ac-4a74-b23b-a833fcf85377",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceec9a4-b6fb-4687-a407-ab277cc4bd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b97f840c-eb4c-4ccc-a582-643483bc9674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6e3545-e750-4cad-8d19-7b36fd508761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31256b7d-3a2a-4984-aef9-05239a91d561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f157bc-7625-423b-be54-98296a6c8134",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ea1b96-51e5-4d93-8894-b4b5076c78bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fdc992-72ca-458a-bde6-a7cfe7f96b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24dd5ee-b6b1-4f05-be5d-6d66d131cfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbd9a85-142d-4a82-9582-5ec6c5d222b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e5ed49-b1a1-4c7e-9a21-26621317312b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecac8c8-2781-44ed-90bb-0b33b81d2fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5142d84a-47ef-4b8c-8552-1dc9c76609d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cba9b3-c223-4834-a0c2-d2762815c93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d702b234-fa0b-40d7-bc4d-fa1abd8a8a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f8b4c0-a4d5-4c9f-b214-f584e2f4a54a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f05a82-c45b-4741-b3b1-d23ffd11cce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c9e8bd-dd28-4a24-b3e2-12c9cabadc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba71ebf9-9017-4934-851a-630dd0e679fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18b18a4f-6bbf-4423-b6a7-8e327d0ab8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fced920a-6e91-453f-9d6c-e9930c7ed513",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f3eb67-1237-45b5-851e-2b683d889635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b607558-0839-4431-b685-c83f44113302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fec219-a3af-4b60-89c6-c92dc3538537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "923c792a-37de-4e7d-9cde-6a6727c99fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2080fc-1221-4983-b9e1-c39e417e98d3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f47cae-7a91-46e9-9e0c-c831552f7afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4611ad1e-7679-410b-b54c-f8d37e6c5f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60c9168-5301-41b7-8778-c1eb3f3af050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc17018-facc-4050-bc3c-c78e523061ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8421e7b3-3f75-4526-891f-7f347747a17f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c9e63f-defe-4196-bd2d-fc0772739705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce2b8d3-cb50-4cf1-9d3d-eb2a79cd1900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5c8bf1-40cc-41b1-a1c2-d372f24f9013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "838671a7-ef00-4faa-b4c7-f744313ed957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635682cf-91b4-4489-9b46-56e897dd4aaa",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73831aab-5122-4698-9516-7759a13033be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedbc86e-502a-4f23-b842-db122ac06e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cd96ba-8539-4186-8400-8c1bfbd98729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "063067ea-efed-4c1e-b86b-037593cd07c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f8c3bc-b69b-463b-a633-b18abe2b9552",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3acb61-2639-41bd-8284-91c96405765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f19987d-2b65-4493-a58c-5d39497419bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2663fd05-0b99-491a-a1a3-aea9052d3123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "021193ee-2ee9-4b22-bf7b-365cb293be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cdb9bd-6cda-44c2-8a08-d332032a5d6a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bc6578-7926-439b-ad5c-22bdca6f6270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d27e29-3bdf-4c8b-a237-cf52f62fc1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f1bb4b-5da1-4e5d-8a61-947423b6ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7377912-254c-411f-821a-94e437bf301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f9da86-1e9c-4cc8-9997-4129899d861a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aa8b00-e684-44c6-a703-a38abc394a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1b0ccb-dc23-466a-b9c7-28195e6bc8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafa3b94-6e19-4250-bb16-b3226ea520aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d14240-363f-4568-bf23-be9c204046ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8f04ac-28cb-4be3-b1c7-fc43fedf960d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b65f4ab-03d1-44e2-b1ce-c76c2cf2eef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb14adf9-f400-4d6a-8703-21f841e40431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030c58c4-1021-4c13-ad77-6a31d9216bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3a2a5e-efb2-4489-8e1e-486b1dc9882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a369f16c-1f16-4395-84e1-9355b8b53007",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a81a2b4-4297-4455-a7b1-d5c7d341e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7e5c7a-a835-429d-8009-5d9a953ec9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3a3cf7-1535-4698-a285-ca36ebbc010e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c901fa-f88b-46b4-a24a-2f7e37cdc0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6569ed-942d-41f0-ba51-2d8638d19d70",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de911403-0668-4033-8b38-e75039d51ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02a5f4f-9613-4ae9-b7da-41c08191442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf97ed3-184c-4c03-ba1b-9c34addb2e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9902ca-3c2c-4293-b6cf-dc60b75b3670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8eb168-72df-422f-a625-89cbabeceaad",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311279a8-eb2d-4d48-bb7a-584a70cc9fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfff1527-de2f-4e6f-93da-321250ecf789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb318896-1c49-4983-848e-12e6695ea625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c337fe1-b604-4e8d-9ddb-d91b45193502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b575fed-d207-4661-b7a8-bb8206bebe5a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f485022-8849-4f11-8963-d4c71e3d16b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce399fc1-6631-4a72-a29e-3de96094b8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37f561e-ec59-4a1e-8951-485867753411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "18870896-6719-4688-bbf6-cb78a68b991f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d037494-343a-44a5-88b1-655d7c413cb4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3dbe05-f85c-41a9-ada4-c143fe1dffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03cb665f-511c-460c-8217-e0f4e753d86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e99bce-6886-4d3d-8df1-13aadecc4431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4c751fd-8df1-48df-82fe-7262a4b4f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccde84a4-bf02-47f9-9fad-305ff7d7e488",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b01d8fd-8198-4c12-9233-000e5f1cfaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b15ac90-d275-4703-8b53-be64bdb31d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab64f4d9-6606-46ce-9750-5df7d4ce4ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc892617-dac2-41f1-a7be-cb7e56bfa942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6828e3fa-829e-400e-a856-ae8c625d8d50",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba66bc6-ed80-434d-a21a-c23c3823000b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0a4bda-494b-4e19-9b7e-9e10d9431731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b0da7e-fa4b-4a68-a07b-46db6a49627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11be0ce5-881a-4de3-a2ad-7685d562eee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99f214a-1ef6-48d6-b572-b889fdc7f006",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367a2154-6a3d-476a-9c5f-92163d7c3a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd4fa1b-4ff7-4289-ae53-002dab77d6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2735acf1-8e38-47da-b4c3-2ac415a07907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f42804a-3ed2-4f9f-a3da-9a9655ef8b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f73f21-18c2-49d6-b200-4bad8d6b84f4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55cdf051-4d2c-4272-a89d-9d0aa93b1533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23cacc0d-b58c-42ac-b996-0d1ca0bbeff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad1f50f-bf44-4a2f-8633-d3030aa76180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3abd9d-19fb-4389-8558-6c66b93c85ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757e5d58-42f7-4b14-86f9-0669f75866e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee3bac8-f154-43ec-8331-137fb3a858df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b945def-8b56-4272-824e-e2fe02fef7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f8292c-d37d-4c20-b841-9a1656885cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "048d7950-06b3-4875-b024-bb0865f64559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec2921-1fa9-4b5a-affc-184e9053a26f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86baf144-3a5b-4fba-86c2-8a8623722107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff51437d-146f-4edc-82c5-31f0700ab7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f344b13f-7732-4e61-b9c3-0fc574f9af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e54acc-2869-4ac9-8314-ceaf759ac329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8e8023-bbc7-44d6-8c2d-2fac24d1a7e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57262ccd-2128-4b99-9f10-99e8785a38ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2fbff3-3c70-4bbc-8a85-5fb850a0887e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07df37d7-fa43-4648-90c3-16b2ea998ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "037cf57b-eaa2-4db9-891a-3769c50312b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864cbf30-ec52-4f64-bed7-f4e790ab3361",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5098a013-759c-427e-8aeb-1b577bb8f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1906c45-f69b-4864-bb41-9bf516bf76e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5d60e-7ff3-4f1a-818d-ee58457c618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f77a646d-6282-4c0d-ac99-bfb2a24a8575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc6301d-e546-416c-a627-31c655c43a38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819e7855-f0fd-41f5-beee-a92f32683144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb597b5-fe1a-4d59-809a-f29e9d852ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1240f6e8-e18e-4bfd-8879-47f6e7d54e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "61f1c5a8-dac8-46ad-8a7f-ad4090c02951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae972703-c1a7-4fad-9ecc-a4489f03fe4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a289d2f9-1015-424b-a89b-778dbe71e004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14b361d-4a66-4d34-b640-d0923eea9cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61540d4e-4317-4151-9596-7f794df222f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "560972ba-8e87-4a53-a077-1f12bb63d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6891f382-2ec2-4b9d-b8be-719438041a39",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd92556c-eb18-491c-9cc1-644a644c42de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f15a45-6a0e-49cf-adf4-f09ce709ca49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb9425-5e56-436f-ba64-24bc67c8c9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "777dba4a-b84c-490d-8cd1-2f8b3ccc1dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed654f3d-59aa-4e8d-9004-f41232eec7bb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb0fe69-eea1-4939-a464-26bb7ee0e777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96749577-1544-43af-ba3a-1c36f452bf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1880c178-5ad8-4164-939f-5d6731d39165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3c957f-3244-4483-9831-587489f840a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a578f006-8a9d-4044-84f4-b92607a88617",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e5adeb-c94d-434f-b5ba-b60964d5ac53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ced2418-adcf-493a-bea0-327a43afedcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63580e35-896b-44fc-9422-40a3bc5e5afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b1e602-fda2-4ae1-b703-8981953ae757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf069d-e26e-412d-bd9f-4946c2668158",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf623df-6f8c-4259-8b69-da49dd6ba6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b00114c-9c7a-4c5d-8a5e-2f1033806d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f215f-dad9-480d-8bea-228b7c0cf798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a3cadd-580a-4e78-9dbc-1f43268daaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5357f-7fb0-45f2-a864-20d510ee7e9e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d86092-266c-4ab7-8e63-d29f26d76f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5283cb-864d-4548-8d99-e1e0d1b45805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af870c16-cce5-4ac1-83d1-259e21abaa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16546324-3b85-4618-8c3c-dcdc725f06bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf8119-7b4c-445c-95d9-46be9153b79e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834c4107-8be7-4b08-870b-7fd7302a8d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e44061-e1bb-4454-b1b1-2e35692ee155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b384c37-a446-4b78-8ae2-864b6270256b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "868bca25-6682-4c27-ad84-f500bb7f0ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860b0bd0-5781-40cc-95fc-8289ba75f858",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3f6c8e-06b9-44ee-9e0d-d80da674f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1202ebd0-b6f3-4176-9010-5ddcc521d741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcb8457-7f52-4a24-ad29-2cc6d00f148b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e40eece-010f-4683-a1c0-9dcf76022b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9260d65b-3a09-42fe-b20f-6b8983d0dadd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0b9439-bc4b-4322-aaf6-0aff93af9aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c04d506-1073-4525-a17b-ee9ff761172c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9fc11-6455-42a3-8a83-2d73f577e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7595082-f549-4f08-88b8-c492e5b10205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76d37e6-f116-408c-ae2a-3d7c067a6e0c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d55af0-cbc7-4b17-9fc7-dfa9043ea126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baadf96a-eb58-4649-840c-56af0e1dd7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c312b-c529-42af-9ebf-3c6ee424e6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c66c25e-8c04-4924-8029-7b2198c3e1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867e6108-72cf-40cc-939c-983dd3bef458",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e4ed9a-a9ab-45dd-9e5d-71e59115967c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f666473-d2fb-40df-8c09-57c5fb47b315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8f314-f206-4621-8241-f23f207f1766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a6ec29-baef-41f2-a9cd-2c8ed1f2ab48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0e407f-6435-490b-a8d6-9f4301587875",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823025e6-8c6e-4dd3-8f14-331e88f23fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c46d9fc-022f-4732-993b-c6ef9666795d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032f327d-dac9-4580-8a67-07957237eecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd44aaf7-f04c-44b7-9cdb-40dfd761447f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823dfa3c-b029-478a-a8ec-82ee1a14dd02",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8ea202-b484-4a55-91da-57f3ce9b72f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdf8f8e-1996-408c-bdce-0c2c05e9a470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7deb4b-347a-417a-88e6-3b29df17cf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "171e9a24-8da2-4166-9ff0-9c211d1e2a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e605df5-0417-4092-9397-5211d1771f51",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f269d649-dd55-40f2-b911-eed664043dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d4cbd9-d142-440c-b899-6fe3d0d7d4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1131cfe8-636d-46c4-bcb5-7961cecba2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ef8043-6965-4034-ad35-0c97cf7b8bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5ec53e-23b4-4aba-94a7-044fbdefbe12",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdabf45-d759-425d-90e2-dca44dd91077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77504ec7-c51c-4100-924a-f35800f4d57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9496ba91-7702-44e1-86bc-e7d778b8338b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "552ee198-c96c-4799-868b-05001f08ad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc12c6-c149-4199-85c0-dd0c60c8d17c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909a247c-7c2f-4d23-a86b-1f60820d720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5019b0-7a92-41d9-9140-f843efb45854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8131423e-d926-42bc-87f0-2680991f4487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a95c6c-fece-4ad8-922d-91b0486ca7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be995551-78fe-4436-a8d6-707006c716c5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2706a8a-32fd-4656-a088-304df03385fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec390fd5-e91f-4158-bb90-d5387713be4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b5344b-5a44-4af3-b5a7-78c34c7ee57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50c459ff-29d2-4687-b5dc-3089e01f31ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a95850-9615-474d-9937-ee5b8594800e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9e7843-e37d-4ea5-bbee-85641f9f8940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6b9eed-ae96-466f-8dae-7f8bdec39274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c37882f-92bb-49a9-8771-9000a1057d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34b98e4-e188-475a-b8bb-b1ef23d14776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183ceaf-c1f7-4247-8514-d10394dc1287",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c76ab0a-b441-4c1a-9631-7fb0e8b1da7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa19ce11-9c3a-4901-aca7-78359d101c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3942503-b673-4a94-82f4-40057e68917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9565c493-2d16-484c-9b19-4b2233b11fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2fa240-73a6-4bd7-99a5-b080280a62fa",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b65fbeb-948f-46d9-b4da-d70a59638528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6026a5bb-01db-417a-a5a5-42d4e6e3c7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50dac01-961a-4fc2-8590-d1133caebda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fff4a65-2a57-4efc-9db1-3034088c890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bc7b0c-4866-487f-92cc-a16bd5f05e52",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce903dfa-00dc-405c-9a8c-eef6d3eab6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d8e8ce-380b-4db0-82c7-204473c1ea59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69a4ddc-a47d-49de-a15b-8a31c073872f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34320763-75df-4ea6-a7ca-179938b269a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95472c7d-a37d-4122-9b59-5569cf0a4b35",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809d8186-8024-4ec8-b04c-66f1a5c55080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42193cae-f0a9-45e9-8c9a-11e6380162c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd227ca-d977-4151-838b-4c6ad6bf402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12ac7e71-f3e2-4cca-9f01-38aeda57a888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876504c-d580-4a94-bc96-1648c4ea3e8a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34345a8f-9cd6-41f7-8fcb-48457d10b30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba03cafa-cc7e-4445-b717-900dadf1c3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa575fa-3697-4bfb-9f9e-e4b617691893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ae928d-6ac1-4bf3-8373-b77a4beb62b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9d548b-3e0b-4444-9ccb-fa9fe55670da",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6494e1-e7c4-45ee-840a-66a52ab11b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bd1632-828d-4679-98f3-0f7e83735a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a19f409-89d2-408d-8f8d-d3b836ced8dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2693ccb0-5956-4581-b4b4-c5acb80c2ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73e5c8b-5395-432c-ad82-f7d352ac5904",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcea86fe-33bd-4101-bef6-ece6b059dbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e44ca47-2296-4cc5-870d-c36f5b1274d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc9ba8-05c3-46d5-9781-10844591b08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64aaf856-c875-4a38-8c62-96651fe9fb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784f0692-8ea2-4089-8248-19c1e304df80",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9aa5e3-aaf8-4eb3-a342-501292938888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12095b2b-c24a-4411-95a3-9e72f79f6a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28af148a-6c9b-45b4-8cdc-2ae1da00d334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc75397-8fcd-4cac-ad16-c67c5e9506c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8927bec5-06ee-40b5-8121-49aaafba7327",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4924ef6-6b22-413b-8a2d-5969805a3cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b58af3-78dd-4730-8c9a-c7780636fbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1abcb3-9d45-45a2-ab67-14ff59c1b924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e24f2b3b-2e38-4612-890f-a9f7ff8a9926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f066156f-af64-4e30-b334-a492e02f439c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ebdbaa-d8e5-4604-bd06-a46877ef5800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6825279-895f-4a9b-a3dc-47a240f014b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa0013d-d466-4dba-b6d6-a367fd175647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75e6896a-c725-47c8-8193-27680923a10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d965659c-3d23-47d8-8ce2-5a81bdd3ad87",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba91e9-ce3b-4a38-8654-a25a46559984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2837de80-ebb5-4b07-8bd0-736f51f08db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb4f925-32ca-40bb-b4c0-9a1019dda03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "105afdbf-588b-4c27-a999-3a27cbadee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfdc04f-5b30-4c80-a98d-4de823d1648f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374c2879-9d94-43c5-a62c-6bfe7ade8ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06beeb-af27-48cd-938f-174c2f7e921a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3c09d2-489e-448f-a8cb-42d13bf86836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "32bc93f4-e302-4835-ba81-914af97ad593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a902467b-349e-48e2-9e6a-52c3aa6a3d51",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafdad35-9a06-4f1c-a191-3736a45e52fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8e119013-920e-426d-9572-5ca60c2cfcc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3710f1b5-45af-4ed4-bd5a-73670cf16381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8563e0-cd27-4d89-961e-0e855cdca5d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4ec0d42-a8fc-4e43-a61f-9fe35c2f86cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a42f8ea4-b123-4295-afb7-8a28ebfd8f80",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caad2244-c744-4fcb-8da0-bfb3ef9d19c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f30e1a3-d3f1-4c5a-a6f2-f36b48822690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ecf113-5e66-477a-98c3-1cde091c0acb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32b54e9c-1c49-4bcb-ad3e-b14d5be101a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d1a11e-6062-4e7c-bea8-a13aa8fd70ce",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc31c7f-7887-4879-ba07-a7af7450e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51f2dffb-a834-47e8-b9f0-c3563212d458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb73b22-a71d-4b86-b3ad-4ec6da3b684d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c581984-1bfa-45ba-970a-f3d0d466b2a4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b138e836-18a8-46f4-8ce1-4a9685cb47d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5667b20f-a235-4ffb-a263-c861b94081fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f94c1b5f-ef49-4504-9ed9-44be3aa468bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa7cda4b-ebc6-4171-89ac-5522e942b0dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba6d55ee-425f-444f-8efa-910eb3ab7a8b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "310e72e9-79eb-4e6b-a13f-a3f96c8f7d8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50db54f2-dd52-45c2-a4ac-64caf8adb1dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "27324530-95ca-4005-8099-8a075b0a654d"
                }
              }
            ]
          },
          {
            "id": "f143f4fb-0040-4c2d-b909-4796d75bdcde",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a04a448d-4bc3-412c-bd43-bc4ac46c39c8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f12b9af4-b8e7-4455-836c-53343aa81e42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0a93304-8e73-422b-a7f9-7b71378fd4ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b0e4698-b966-4649-81fd-f5cd8060f3e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "624e9332-035d-4ba0-ad15-c5578cb358cc"
                    }
                  }
                ]
              },
              {
                "id": "a3f2046b-9216-4527-8673-14791776698e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75df71f0-c295-4b37-b144-56c180db7c06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76ee3881-b61c-4d86-a41b-5a09f810b898"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ab9f932-2d51-419f-b7e1-92239844f008",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c321b42f-4510-4804-9ccb-2ea650f68a59"
                    }
                  }
                ]
              },
              {
                "id": "a4b0fe0f-1c41-4d32-92d0-15d94e895bbd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92d73a29-619b-4834-ad41-25dcec5dcbcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "101a5c8c-f58c-4da8-848d-02c5f5577c96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c53f5616-d728-4b94-a61a-7079191e6a15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90c41d73-43f7-4c5f-8127-2b0a13d34ac4"
                    }
                  }
                ]
              },
              {
                "id": "de246ad2-8d9a-4fe0-a21c-cf5dc69c75fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fde4acd-b2ea-4917-8fd9-f64e09d2bdc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d917676-a83a-4caa-9620-0d389fc3fbe1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9437204c-f9ce-4eb9-a9dc-4a85c9f24df1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f0082aaf-d020-42a9-b517-c8e147da4e55"
                    }
                  }
                ]
              },
              {
                "id": "953aa11e-7656-4801-abe6-d7c2261f213a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4df191e4-3e7c-420b-abf2-b6200dae1dde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "453c7180-e68a-4edf-bc60-15c759641cea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ba991b7-c33c-48a0-95a7-327ac51474bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c690d550-d91f-4743-8709-2007b1d6fe88"
                    }
                  }
                ]
              },
              {
                "id": "98d0f2f9-fa1d-43c9-8300-3e4805fcc3eb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b489911d-5b60-45b8-b60b-119e4e1165ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4c9476f-962d-466a-9ee0-773b8e82f876"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42db2fc6-d4b3-4779-bb0a-b242d956f7df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b160e41-d47d-4e3a-9f51-a693bbe00199"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30cb93e6-363f-4a49-9ff4-67cf9d9a1c30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "968ed6fa-4da1-4b4a-978f-f2867a9824d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f298e19-3fcd-441a-a1e0-dd8298ae24b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7d6ef059-c4cc-4190-9a7d-9fd6f11d65ce"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7481d200-497d-458c-9b3b-9e1448052aa1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8e107d8b-0f3e-4ed3-8431-36ba76a5f7d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf26bee8-3366-44db-b340-29ccbbd767b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "055e191b-67cb-49f3-9dc3-7ffcf02c64f8"
            }
          }
        ]
      },
      {
        "id": "5b2e7dbc-7bcc-4168-908c-f6390b6b9b23",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ec295e83-867e-4a2a-a430-28781dec13c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34521460-be6e-4091-b311-4259223fa62e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67285047-0a73-4aaa-a634-dfeb34410343",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b540158-858a-4bd5-8259-2762ba366093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397a3931-edde-4bb6-acfb-b2f173b5d85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1148ea25-ef73-4b0c-bc2b-53432ddf8721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "caf19b52-c0c6-4849-a831-5f0a23861e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cd634f-78f6-4245-9daf-740eaa070641",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01e56c4-62ce-4041-8ca0-26aa89b10f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461acab2-27da-4406-87c7-d610a841c277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5411d5a-b8c5-46dd-938a-a41b18784168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "934e54f1-22bb-4386-8cf5-2b2542bfbfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb9e667-52a3-4b70-b278-e2704266fb4e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb4b51f-1848-493b-a5d3-970f6835504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f181b3dc-ef0d-4ae8-a754-a97cdef6e18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e52efe4-d024-4cd1-bce3-329216034156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f86abd2-7345-4113-ae75-f01da7f3caee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34657eca-31c7-4ede-ad10-d5f9386f688c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fbe8cc-76f7-4517-97da-bf8b082eeba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ae3145-41d9-47c9-b695-0ff036352903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec175565-25d5-4f5b-b7f9-dc6a9e69c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c55a1b1-34ec-47d5-b26e-631400efbe89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8907f2b2-227d-4043-b147-5d2bfc73f24c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40362459-f15a-434d-b831-b8fbdd7d1944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37701d46-e30c-45da-84f9-192ff5c16869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2445ab-30fb-49e3-8c60-a1ccb399495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f95b64df-ef1c-4c2b-a92c-d19bacfbd704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58974253-5a65-4f41-aa73-01669565685f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975f45cd-f63b-4631-8d47-326510d453c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9ed10c-02db-4c6e-bdd8-4d60965b6da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19b7862-d13e-453c-b9dc-cb4ba8b30f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3c6593-77d7-4422-8ab5-be39320be87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8070ddd-c001-479b-8500-669cb65c0e60",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188f4c1c-95f9-4ac2-a509-10541b2f6f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca27938-e2f9-451f-8a22-dbdc7efbeeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07586da-28b7-4369-9d24-17db64eb8eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bba6f9ac-9d25-43dc-a342-6514eee18e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66372e56-17c5-4712-80c9-0d880b89d066",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99b0c78-5f3c-4f99-b9c7-e8af4bd14a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8921e7e9-f1bf-4056-bc19-3291956923e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5ada7b-2c91-4239-8b54-f905b3deca51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0010983-b7ae-4d75-9050-ff31285c5b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b876f27d-b035-451b-b8da-e3244ff57be3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7979d786-fa82-44f9-ab1c-425385fe96d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18620ea2-94ef-4cb3-afe1-85084e9bc720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f122445a-d508-4e08-8738-9388d9a05088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0f132a-7aaa-418c-94a8-2663dc97bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850e0d71-5221-47d3-85c1-2576e636455e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e73040-2df7-4873-824e-c8966ebcf15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e32acc7-a8b8-4207-af18-3f9adb28b6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4092fcb8-27f6-484a-99be-292bde9f3ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d99ab58e-3c36-4b32-b4fd-3df835afd5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239f630-9493-4d5b-a401-fe947408bba5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dac51e-0908-44c6-9fa7-ceed4342b9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055f226a-741b-4da5-8721-189756f6b4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd6dc33-9401-40fc-b411-539dea59bb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7d45c7c6-02a6-4ff4-aa77-7db80b88f163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360c578d-f324-4258-afd0-a67189edf8f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71f76ca-905e-4bc1-b08a-1ab110924cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc247e1-1270-4c7c-aeac-3756eccc47b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e114d3e8-e27b-45fb-89da-ac52a84fe46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba5f191-a252-43c4-b85e-573c41164447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe02259-3268-4d8e-948c-d07d309c64bd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc2e652-3db8-4f38-9ee1-0e00d51bae83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3d5047-d52e-4663-8393-878e0b3817a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25022fc-5602-4bea-8a23-1c0129d27bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a263ff-1216-467f-9237-7aef61f22d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac7645a-43fd-47ef-bf3d-ce32cb1e6dab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b4e5b1-4de6-434f-bf35-306c1fab50f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93dde73-4a2f-47f5-8d39-af0ed9b195b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3dcc4f4-bf12-4119-88d0-1919c4519f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d50bfb0-7597-4f84-8328-7c6d582d3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a8d3f1-7cb1-4d7c-9d89-33086e6a4820",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6a02d4-0b3f-429f-a27a-ce7706909d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e06f0d-ad79-4183-bff6-b96b8ef43001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b9b738-0fc0-4c75-9386-3980784e310c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "810f70f0-4a79-48da-a227-731cc9356d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628279e9-4b0c-4eda-8505-b86f35a44af2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd8e4e5-573d-476f-8928-5ab2222f1ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843d7683-23b0-43f0-9f68-e6a52568f2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d2af68-29f5-4c9e-80e7-68923fcca90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b014076d-3216-4582-a3f3-7fb3f25e62c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2c22d5-5309-4eaf-8574-128ce979e6c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18864d1a-d5db-43eb-a59b-1d711309218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00266718-baf2-4b65-9cb8-3229ea8f7321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa57290-9bcf-4e82-84e9-10571c63682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a173c8-5d90-4f7d-bb7d-13f614b07c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25ff476-7582-459a-88c1-c4af35052593",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812f942c-f679-475f-a7b7-7a8ba7e24281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a057e64c-a85f-47f8-a723-be03159de5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d41ff54-28db-42f2-8267-f734ae8d1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c30dc8c-8c6c-44a2-a00c-c0a9aefc4ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d908cf-3752-435c-a5be-cda02d3ce497",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e621665-e0bd-4af7-b678-c19573605a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c050b3-4e9f-4e6a-81c6-ff45d47c2a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57956c33-438b-4469-9a57-7612681c9375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7b1dcc-b88d-4db7-b93d-5852e1577550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d333ce98-dc14-459e-bb11-b6fedefb470a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2215fd-75cf-4d8d-8fa7-77311bd745a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d6c315-3f08-4a44-83a3-2ac85af87889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de479c4-3844-48ac-b5ad-858d515bbe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b608036-d6c2-4bb3-ad16-79d5228dedf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fcb7d6-b7b1-4c02-859a-be633c11fb04",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232697de-5aac-4c2d-848f-dacac738dc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4531fd-5ecc-4d8b-967c-91cb9eec7374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4102e5bd-8281-499f-9d24-b94f7f232bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f56b39d9-9c12-409b-adcf-9604784e6778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf396c6b-a491-4a8d-83e9-7acfc02fd423",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4add6-bd6c-4335-afad-c4981177ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9024988-2db6-4b54-b650-5e5fbeef0c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9d88ad-cd23-4ba5-b1a7-a21702c491a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "179fbb03-616a-47c4-9701-3c72519d2cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d68eec-c05d-4f82-94bc-2edafc67bf70",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcbe123-b93b-4ff5-a68a-870a8d27b414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd53a5ca-5088-4093-ad0f-b56a7036daee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29183a10-aba8-44b2-a2b3-8a18e3e210f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95935443-d541-4d4c-a67e-07bd8308e4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018ad9ff-cc8b-4e11-bfcc-b6e2af1aafa5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec4a530-426f-40f4-9dad-5960addc54f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca71b6e-e8b8-434e-9864-26b18360aa16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f28459-ea3a-4320-b51f-3c26d1c14e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecbce8b-9e26-4acc-9dc3-b5eb1712ca2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1633dc33-6a09-4374-a555-2f0a38e7c133",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c28e22-8ab1-4220-a28b-b0068aa720bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611a829f-3c87-43b0-adc2-88e60ff8bd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7850ee0-b061-4a0c-893e-76f73fba1084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4fdf972-2704-44d6-b26d-a08120e0cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc487f80-18c9-4c5d-9a67-48cd6cf1a06a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4448e905-5e2f-4e20-b95b-1e1c34d85635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1664d9cb-e130-4164-9bd0-e88daedc25e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b351e-7f35-4fc8-8918-ed564af193ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a41e0c-7c3e-420e-bb49-bee179b34025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7e88eb-e02b-4f00-86e0-b4452e0ba5c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b726c02-d861-4b04-957e-38b1f497a444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026600f9-abd5-4f82-851c-4d8955fe95fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5f05d3-84a8-4ad3-b351-511f8e7d45d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d82119-3685-4908-bbc1-959b1623a1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a3b8b5-0f7b-41b8-a5cb-f35e56dc14ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5051f0e2-3bb2-4876-b73d-2bc0e72a83ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adb0849-face-4200-a3d4-417cdcdad5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebae7a07-c67b-4e77-916b-a43a13586592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e251a8-23e7-423f-949e-a6af1624694d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94477cf7-390b-4887-996e-b1460c6e8199",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893e5869-167d-4560-b1fe-2234b03635d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d362799-c74a-43c2-92ed-471d1ba758ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28eba0d7-2858-443d-ab22-771bc501fcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f933d08-db37-4e26-b087-77f1c23ecbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeca508d-00d1-4841-b529-c2229c457bb5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cfea1a-3f04-4edb-91f6-0b2b70186ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de26dbc-03b3-4d91-b1d5-1b4aba8541db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccddbf3-9dd5-4201-86eb-5adecfa08fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6ef25d-6b9e-4ee1-a74b-bb1091f36779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd28eac1-bea5-4ea1-bf90-a640759c0d77",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a455ec7a-463d-4a94-b24d-9c150fcc1dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac45c564-78b4-480a-bee9-eb90e5074c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44a0b63-63f6-44c8-bf95-623233dee1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa9e9db-f3a4-4386-8cd5-870c0447a00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837b5ecb-5bca-47a7-8b86-32dc2aeb4010",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f4303b-dff4-4fee-b9da-8193c34f2608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb3dfc9-ca6e-4982-905c-606b9f6703b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b8c563-97d6-451c-a2d1-3a909721a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee1071f-0878-4108-8675-bb638c2328fa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c88682b7-f1a1-43e7-834d-5652f79c0dd4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b75ae10-d251-4464-b823-d1361bf15151",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d6a0f9-57fb-4b11-a789-9161314a8128",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce05a8e4-9e13-4973-8937-26a135367d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9df3ea-cdf1-4b74-be76-1ccbbb2beaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc97b96-3eeb-4815-9dfc-4f298ac0a49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc99eaa-9bab-4410-a6aa-5b4eefa3f67b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3adfe84a-bf7d-476b-ba19-94f8a6277df1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb1b8b1-e7e2-40ac-9d51-c44328379532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2e9c95-3b1d-4ab0-aed7-47dddb9f3c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9211884-88a5-4ecc-9d85-c255b74a423b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4c1759b-e4cb-44c0-9c58-6f198ad5f244",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6bf8b97-b3c8-4695-b4bd-e32ea2447b63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb74f1d5-a09a-4670-837c-3983d092f7d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bccdb729-5d85-4b1f-a6db-2616a3bbbd45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12d536f1-3ce8-40e7-963f-79177c96fa07",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e70d21fa-ae3f-4a6d-bb7b-622845b39432"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "025bedc0-e11c-4f32-ad7b-3150da706a55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8fa4c89-ffc1-48f5-aa6e-b6e2cca152b1"
            }
          }
        ]
      },
      {
        "id": "286186da-8a0d-4a62-a03d-c5ec07a370c2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f392733e-3828-455e-a6a2-e438c319eec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a752fc42-5509-4607-8fbf-eb2006f40ab2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64360ddd-c3d6-45f7-a1a0-a585824b1c96",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b586ea8-f290-4065-ac44-1b7350d362f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9fbb15-fae3-442c-a4fb-51088f88d13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7f7ceb-effc-4945-824e-3b79463e04c3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917061bf-8e0f-4ae0-8d7d-e0b493af8082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9ddf30-112d-4f40-9986-1eb86b9fba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a441254-8a45-4c2a-9419-a715d22444e0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6def02c1-a920-49f5-8c97-ef68e2173f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99b7aa9-24d0-4d82-93b2-ed6d5eb3bb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77d80df-48cf-4f82-b746-f57860a9a9e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67622f58-6e31-47c0-aefb-cee4d9db2119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557c964a-68e5-4b9c-af7c-4e1eb4dade84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca3452d-ddb5-4d28-a7b3-2f1cc174dcd2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e582c24-6b30-4758-a90c-7e806d40e4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63a6a6e-46fb-4edb-af5a-52f0d968e901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847ef4cf-eb16-44b1-a5d0-304c1b99c48a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f43ffce-96ad-4ebd-ae27-3740f209046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3713b36-4041-4900-882d-ff33bb76c336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d7bc5-69ce-4a80-a108-35eb147588b5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a6227a-9e9d-42bf-bb9f-87c32234710c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf6ef4c-9820-41f2-8a62-f557029aa64d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c58e6c5-5dda-4a97-93d0-1bd62ef147fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d972936-c357-406a-9773-b17f4edc35bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4c53bc-fcfd-49c3-acce-3a518dabcc15",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb1a297-099d-49b8-9b5d-05b13358d016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa9124fb-e7a1-4dce-85d9-f702fd487c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c79efd-b4ff-4579-9dfd-0f4df0a980c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcbefbfe-6a21-4919-abe7-f33f3bf0219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28b9f83-e758-4388-849a-b05b07ece4b3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c0383e-37bf-4cab-96b0-e46ab8b30fe2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc50960a-a7cd-4227-9e11-1f737387577c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f24ae49-cedc-4974-ba22-a46f83cb0e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00901b34-f494-4f27-9d82-fdf4a355cb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dccdbd-6e1b-48e1-b2fe-4b52a973bb7e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d92a3-5b8e-4080-b025-5e78e7078504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10f736aa-6689-4654-9956-4107defb01d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cac6f5-ade1-45e9-9d23-70b52c872430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb01e9ec-3f57-4dce-8fd6-76012dc8b2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271b6ba3-4d75-4a8f-80fc-874e0d606b7c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26991de9-53c9-407f-b6a6-05bb5bd056e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a615aad-dee6-49a2-8bf0-2ecd6d61a465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf7628f-a644-42b3-9b3d-898b2338e085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9c48d61-4b15-46c7-842f-73635b627f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe4c3f2-4194-4cbf-86b3-0616e52dcabf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71354cd3-60c4-4b9c-b6cc-1260b433d5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89862d11-358a-455b-b3f6-7119f0b8493d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084dccc-a3fb-45c0-aa0d-5babdadf588a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5221c806-8fd4-47c5-b7ec-fac6ea14969c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f3dc19-173d-4e89-afc2-cf492077c108",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd404b2a-66bd-4cef-9d8d-fb8190326bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "514b2acc-84a0-4771-a5bd-639ab2e91eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3097f14d-1657-414b-9d01-8bf3399cf700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e5976b-7736-4f6a-ad98-96557ac8bc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6966c333-7287-4b93-b931-239002f0c656",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86dfe99-b895-498d-ab0d-647256150851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b934dbe4-c07f-45c3-87dc-8d1641fabc92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2ecd9e-0473-4bef-affc-286b39a5fc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed98e3d-222e-419b-8c8c-71774e64d854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50483c9-1837-4043-afa2-c82c4e126566",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ca7c9c-2eb5-47e0-bccc-8e0eab08ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932ff722-b5e9-4b8a-bb73-684ac7a2c402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356394f9-1119-4193-bf61-50a4132aa09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463d5a02-aaf3-4bc7-8fce-e995d8cb9a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53048ee5-7696-4ec3-bb39-de0b0a55bedf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17a091a-c37c-43ec-8908-f9bb415333d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1770aeb7-9c82-4057-840c-31734af3ed4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78c3c7f-8ee9-4051-9221-75c09bf78923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e195eb-dfca-4c4b-98a9-167fd85b6ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e518b8c6-f280-4045-9a06-5d7897825a72",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f934a23-1d83-44c3-94b9-b62b3b011d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb14cbc-fbc1-40d2-a095-25bbbaf355d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a923bf-e67b-4258-a84b-affec4ff8b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7a845d-b682-4447-8efa-9fba38a9c00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc9da3e-477c-47b5-bb3e-b63cd3fb0c23",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041a4cd7-44b7-4645-9f59-d867947f01e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e390b3a-14c0-434e-b062-1b6df9070b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31760cf9-bbc8-4f22-8502-0c8331da8709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad3db32-17ac-414e-8838-ee015512a638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630d05eb-4d3a-46e6-be6d-5bbf39eaecd2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc56cde-a7ac-42bd-a17e-8d76c0dfabd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0635eefb-f6e1-457a-a4fe-b2d5018c8657"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c935168-eaf7-4dd0-a124-bf10ce7fbd78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501d180c-9a75-46ac-a821-42be621e1769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83512a5-7a15-4e72-8855-4fcde961b834",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d62c4fa-f960-4b9d-966f-1a36650ef0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fd8f86f-4a96-482b-97a9-642995888da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b321d2-9aa8-4439-820c-3d87fafb330a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40268fe8-e9ff-45eb-81f9-f3f313771145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a16a68-63b3-4a9a-af52-5d8abf23244e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3230f51-be88-41c1-b557-1ea671158e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c9d4c27-701e-4fa8-9878-3d54c71fab8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce386099-0229-42a0-9e8b-1864eaf8f587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d133b625-9ab3-4ea3-970a-5effe461d2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c5f88c-a7a2-45c6-b61d-fa6fefd0752b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8fd472-c34e-4e13-b9be-0bd22f2ebeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5be60b-8292-426b-a2a8-14cc5b517b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2db5c-bdb6-4a43-adc7-f70760d01edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc69734-8757-473b-95a9-c272b4c97f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ea88f-7867-4c84-a45a-06f9dee623f8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99985971-c9ee-4666-ba2e-2ff74c2abd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e884743-5a98-4bb2-95ca-31d501fd669e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf64d87-c61a-4c03-ab80-171d457d2ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac14922-48a1-419b-99d5-87945c8d45a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053febbf-55e5-4928-a795-f0477f3a6276",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8272cd6a-5438-453a-a711-04d01d80f100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be38505f-4cc9-4847-9a79-7939ac0c87f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d563e19e-056f-4652-9c45-0def4f9d7a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd4f2c4-158c-4cfa-b2c2-e0bd8f949e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f748f178-3ac7-4098-ac95-b6372e332e87",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7191cd97-7fe6-4d96-92bd-4d79ad051c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85dc1073-8cdc-440d-92d0-3075a4c99c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d05c84-4dc1-491e-a0c4-ad2d17ce7437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04aceb2a-4aa2-4806-8be2-6b73bb65293d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c5e1d3-ed47-4e54-83a7-8cdbb60abdbc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ec1cbe-f1bd-424e-b99c-2c2586a71058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "234ffb3a-e3ac-4607-b17b-7b0aaf66100c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7243e22f-4bba-40fb-b060-6e0235593f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046804ce-f94a-475c-8e56-84b0f4d49dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9723d7-74cd-4d0d-a475-8e6dda5585ca",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443f3b38-47e3-4e93-a747-b8aed24e85cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50f010ba-e042-433c-99ed-eff28511a4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16adbd90-f2b4-47ad-9db5-49e3baab6a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02a5783-d0cf-46d2-a07e-158578e36fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7151006e-3e46-4195-86a4-df0f3a4834b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e2cc65-b2f4-4d27-ad61-f418fe220774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b979f342-ceb6-4245-81b0-19ae7259ac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38946d48-0b3c-498f-a4c4-e08f805721c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2532d360-34ca-4960-9e8c-d909c07b7308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7749afd-7efb-4921-9cf9-6655e39ebdff",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ad3b4-a393-4c84-a925-9124a2e8aa35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7532c2-44b9-4f14-b4d3-fc1764812a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abe941e-2115-4784-ac55-ea082812c97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37151bf-d41f-4087-9b42-9c8f3480d517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9f1aad-4007-47f2-9578-907a7fd6ba97",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ae4273-8623-4fc1-9daf-3c276c166eb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b475c99-e17b-4254-90a6-5a4bb2e1ddb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c213909-31d6-4fee-952b-3c14273dde3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b705ad9-1993-460c-883f-4260c0669250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0d04a6-90d7-4871-baf4-6d6cb1dbe3cf",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0a2ba4-8e65-4d4d-874b-bb22f1646db4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4cc6e4e-3cef-4fba-b262-839b5340fdd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce22d99-ca3f-4db4-97b8-b95eec4e9910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4a6ee4-a1e4-4883-b351-2ceecca67652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccea35b-688a-43fc-8ad6-27a1b456f957",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9fc397-2592-40a0-bf79-738275f46992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df99ee6d-3fca-4e15-9067-b6a726c85eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a7bb5c-b3fc-46ca-900c-f09a78412901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16f1fe9e-0494-4ba1-a3cf-322a1030dde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c24840f-57fe-4df5-98a7-7e31bde653f9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d66f8c-4bd6-41b4-8c59-bd82da76b349",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8067764-dd20-4192-8eea-e0bca40a4545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a333c26-4ffc-4583-b9e3-ef93d6aec301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704bcccb-fad5-4e77-af11-4e5e5d1609d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2056a7e2-774a-433e-b904-1a03a258af6f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c0c0cd-fc24-43d7-9cbf-66974c4708d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32217757-1da9-4650-9424-befbafeed2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af627c30-3e26-43a3-83ca-02b5db05199e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d65989-f0ca-4165-82e0-e32c14160183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4451aa9a-4d4b-4455-8be6-95912a79aa2b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81e53b-a00f-4f6a-b4ef-b445d3f016c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3a05a63-0a17-473a-b4d2-4e286a67ad7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d4e3ec-12f0-4378-9569-fff51ed1d27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcf0269-647b-4701-b3f6-d4dfbcf8d79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6209fece-d1ec-4281-9770-2a1704d95720",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa78f942-f12f-4b0d-a22c-808283d5e4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6164253-9110-428d-aca5-9106acd0d85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079cbbee-05f1-4eb3-9e5d-af476d743872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415a0dad-5ebe-46d7-b99a-bdaca152bb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cafd394-9468-4cee-ace4-9a7359ed9aa7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04efcdad-b101-47c9-a7e3-3613ecf36b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4027d5-e7c8-4589-942d-80e5e2427c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dd1c9d-3c24-4eae-a17b-236b1a27acfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e31baeb-3409-4c7e-bccd-d3862679e36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287bcda8-589d-4956-91a7-f486959faf8b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb4940f-bc1d-4e15-a534-eed91bac3942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d1cebb-0c7b-4710-8990-99e9861c7d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652d4752-0dbb-4ed3-be90-c9dea2331e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcab7ae7-3b11-40d2-8f21-46745dbf8b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc56d8c-f810-4a13-a3c7-fbbdb86d8a12",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f135c7e8-b110-4c0c-a979-a57ea3da520f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4507f104-7f85-4d9e-b839-95696539eafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554f213b-b5e1-4680-937c-bc83a43bf520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c402c4d-348a-427e-ba6d-9eaaf19cc007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d0d4dd-dc6a-487b-a7c8-0d02a0871ae9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4017fd03-f561-4230-8660-274b508cb0f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0976bf3-1e93-415f-822a-e38442d311bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05e6d15-9e90-45bd-a163-d121b3fb502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f8a8f8-ae79-49fa-830b-187e09546744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea12914-a254-4979-83d1-e2b155fb2201",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edd7842-c6a7-4c5e-b1af-93406dc5b753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c607e99e-cd7f-4a10-a496-60483103ac29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a4a6db-c1fe-4bae-81ff-3d4776e14aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924bb03b-74c6-49a5-aec0-bb7d4cab9f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397eacc8-8200-4781-b2ab-46d4b0118a0c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c9fd17-dee3-4a45-a2ee-84b7305f54c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4084272-8c98-490e-bea4-381dbd67c10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92970506-67a9-4410-864d-dda8932961a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d169d0-0c7e-476b-bd82-abd1b3908c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308fa252-67dc-455f-b04b-64edbbeb2e70",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda8547e-4490-4f66-a96b-5c120c630e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19fe65a-829e-4f2d-9bcc-41e045b7439f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae28960c-2760-4dc9-b8b4-f258a1e02fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e7915c-9882-4f5c-87b1-9619e5729957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84ab0f8-91b9-4ecd-8dfc-37779b6fb704",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b034ab-5b80-41f5-8c93-d742c6fbb75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44bc1e1-0425-4eca-9ef0-3d6a4a280399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21fea4e-cdf7-4e14-ad90-7a67efaf52ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f48dd65-7c60-4f92-b081-cbe925007b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09e3fdf-e0bf-4ae1-8ab2-0ef65364c166",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98032269-2f10-458c-9e6d-66cdf745d618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187b768b-e1d8-44bc-bb8c-72efe23e41bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef82b6-883c-4273-bb59-adff62187148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64641801-873d-4121-9826-249acc716e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e34b809-8f38-4947-96cc-e18b5177fb20",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f34a5aa-3016-4b95-a7cd-187e2743a047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86bd53b-b093-4662-b16d-d3cb2fa93a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a405920f-4765-4d57-b736-77ccc5cac441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1b1a22-b227-481f-8a6a-532147b82fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8afa55-424a-4896-bebf-c05d47af3963",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ad1919-817d-4589-877f-1c9a879de5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0bb68d-b307-466e-bfc2-c0cdf077f9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866ef734-a329-490e-ba78-77a476adaff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a528fb-c7f9-48ab-ae69-6ff6b414dc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebcd886-abb4-42f7-9fc3-7a3a4682e089",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c30be8-5e0a-4a21-ba2d-622785dc7e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e99f6d3-8146-45c6-a965-e2c75a9100a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ffa9f7-6c9a-43de-9348-dae362d2655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc1bea9-da07-40bc-b19b-9b13e1060382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d42c87-ee39-4b27-b7bc-5bd5e0367cf9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b97767-b60e-41f5-a2c1-1cabc57d8fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61190528-d382-4674-99d7-bfe9e0479280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2054df5f-ce8e-44c6-abc4-59f7e1d56f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332ab090-e8f5-477c-91b4-2a2761da49c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0b2024-0fd0-4ac9-8fac-ba2877a67fb0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03cb60a-134e-46a4-ae16-395270b02fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d9c0b9-c6ba-4500-864b-13d93e0937b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adf5301-e0fb-4263-a4fc-6a77480fbfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03995461-60a9-4458-a256-5f3c2bccd5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00e30ec-ea15-4dcd-b1f1-c0c8fa13157d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395b92da-2ad1-4427-9757-e036f80d6bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03fd663-865a-4050-9ee0-240164abf016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd2b79a-b718-45c4-8cf1-b275fbc03fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab255782-8d3e-4d21-a2a9-227442c389ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8510842-ce16-46ba-954d-3b2e9c430106",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a5fc1e-800f-451c-b525-1235a4483423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad563f7b-d132-4350-bdbc-648da40c8762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad6e60c-e8d1-4dad-b8c5-a33d71af6e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6add6704-25e0-40a8-a81e-e8bdc01fe84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e0dd07-8279-4a1c-815c-e9e5cfe9914e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8725cb15-5af5-4cc8-bda3-1f88d6f50ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672c8d35-a389-4d7e-8a95-cc482d734f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b382102-cd8b-4225-8e1a-92b9d54a1f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368e36c9-60c6-427b-895f-7830f2091e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b2ed8c-e87d-4d41-a96e-3cac7303822e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6399d70-6ee2-46a1-9ad8-d46e5ea549b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf3f8d7-6eca-465f-b767-d556a0abf264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3c1922-b75f-4a7c-8712-24771cfaf350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96093b8c-a8a9-4c69-b6e8-8ba040970cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88db21a-619a-45e9-814b-f22c93396095",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b060896-2e3f-4869-8e62-c93eed980dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c40134-b030-455d-b500-9f346abc3f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892d62a0-94c2-46ab-b2b6-32a7cb397012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9e8337-991a-44a1-82ff-3c292c86f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa45b58-2377-4c9c-a4da-5a400e4ab692",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bab9eb6-1022-4e6c-a7ba-439416611494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e73ac95-127f-4877-919d-e4f76e02085d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ff5918-69e3-4f2c-b78d-1faa9021b450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32236039-918b-41ea-9fc4-320a87285ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79558c8-0792-4aa3-8d8f-5c76297b8ece",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2ef31e-6180-4b65-b7ca-548b8adfc1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f48f5b21-3c78-413b-badf-37ca4eeb62db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b098e503-e87d-4f52-a691-76bccdd69deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13beccd5-3229-418e-b085-3b0f9b5fb1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d31733-0bbc-4072-acf2-8536b967cb45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d48dda0-35ba-4590-860e-04331a8fd637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895e541d-3bef-416b-a4a6-e11730ba56ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617cce0a-8cbc-42ea-bc52-c8d8ffe27702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66dd18ef-1984-4974-803b-77ad0a9c422b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14316c36-eaa0-4e4d-bc3d-58d49688cd07",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fa7bc1-1776-4fa7-813c-7398c5865478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301e30c8-27ab-4796-9185-40c4abd6ba94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83674cd8-f16f-43ed-8628-74cb82f71221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3704aaf-a5c6-4284-b52e-aa61447e57ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f2334d-1757-4396-8add-bc53069d035d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f896dfb-8358-4cab-a591-bd87b3c09a26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7283b58-8b6e-474a-86b5-857eed8856d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fc86d0-c9bd-4d7c-866e-8dd8ed245054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df85faf0-bed0-4fd2-ab11-8dac9320a26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ba0dc9-b19a-46e8-8442-376ae12bc08a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d892d71-07fa-421a-a4a7-747d346fac76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a723d5cd-cf47-4695-b991-97251bbd778d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054f3db-58d0-4dbb-b1a4-090929bad224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b876c2e0-62d1-4c62-9b2b-da371dc1b5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24236008-727f-4efd-9f4f-fbcb4ea9ecdf",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033ca1fe-0339-4678-a64a-afc6927634f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526a29dc-573c-484d-a931-de144bfd409c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd75cf09-1145-4711-87b2-fb52b78c6ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6822eebf-89fb-4152-9e9b-f9914a5b3507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66fcf52-c5b7-4ba8-8e22-ba07b5d5e694",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b18b183-f8f4-456d-ada1-f6f0cfbf5b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb398b8-1f8f-4868-b3f4-48de445ebc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75061101-a98f-4c91-8edc-b7e3406e53ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b1cd17-f2a8-4ec0-9147-dc5ad976feca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c39701-18d3-4afb-86c8-4743cb217e01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91efbffe-07be-42e0-9fc7-f3e3f64979b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021ba646-49f5-4280-9ef9-0646b8845ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292ffa13-7e35-4ef3-988c-25b64ed58ac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abfb8f8-5a57-4384-9a0f-48930065a0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0293e6e8-b675-459b-b11d-a13e8aff77f1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2689884a-0b65-4de0-92b0-b1d809a19197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e75a2ee-5be7-4ec4-b598-2c3ffa9e26a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae851d3-d919-4bc6-b140-e7525b3ef3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7b3c00-de1b-46d2-925b-be94f8816409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21acb8f-98ad-4885-82f0-8afb3a1f1ed4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce8645b-291f-48e2-8fe4-d742b84b58a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e3826b-328f-46f6-b52e-c99bc68ed592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d3aa2b-2191-415f-9efa-33e7716098d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d6f6d8-7385-4705-aea3-2ece0361f1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46adb1ce-3dcf-4080-b80d-22a823b29196",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a706c6c8-e953-4279-96ca-7e77a6f0fdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f520e8-0b0d-43ba-8b1c-7f8403ed2e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc172c7-ce8c-407f-8a96-3909191681c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cd2fb3-40bb-4b9d-a2dd-fd0e29616fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf430e2-5732-43e0-b7f5-9c1e6074cd1a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df4bf85-6870-46ef-a366-8d4461cbbfce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c779bc9a-c0ed-4b71-a36f-e444c3d503ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "460e58b8-1d9d-40e3-a6b9-8ccae069306e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9fe7af-b8ca-44bf-b4c0-7e2224fc6364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c8cba0-6c9c-4d0e-b4ef-5aa6c8509237",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0958397-4cdd-4b49-8e20-300fbd9dcc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b981b82-f7f9-429b-b748-6e040f9cd66b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc04a3-ed23-4eba-b2b1-082a17580ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddc0673-82fb-44ee-8811-f27aa8b22992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75099fad-7e6b-4854-9148-57bc4c7c3f17",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dfc4bd-26e9-40b6-a0f2-327f2ab460da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c3cb31-56de-454e-8add-8813da7cc7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3d01f7-a1c2-4322-a56b-cffd05b9d84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cd8f09-3b59-458e-9d1b-162046fedeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73f75a0-f100-422b-a508-112d85c14128",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9441f295-abad-4116-bf80-2172ced942c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f17f41-0d8f-4d0a-bbd3-37ffcea73fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bbb07b-9171-4f9e-a288-8c5c2cc69be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd4e146-7e2f-4171-b6ec-5383c8154494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ae92f2-abd6-4a3f-8eba-b67803addf79",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b38f5be-8715-4c8d-aab3-92e473713360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3f02c3-1c50-4af0-a596-0fca6ff5bcef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162bd2d5-8016-44ca-9615-d4d1f792a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c732f4-53d7-4c7c-a45d-439b4f3ac8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0811e5e-b582-44a6-a2b2-ec2f57dc1b94",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419f3a32-0c9d-427c-bebf-36c9e9120957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6a67c88-623b-4128-99bf-d76c547721d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07230e1d-5b51-4bc8-9773-b6a93bc088ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03c9625-bd48-4e7a-9db0-a198202fc4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636a55d7-c323-45dd-b7c8-60d3bab8719f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e9386-94c9-4227-9064-fa067b73c254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da03b68-3368-401d-89d6-ffbe40a64cad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08320328-47fd-420e-8946-53cab0758652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ce94f7-9185-4fe0-9548-a900920051c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233a79ff-4b7b-44a4-8cab-3c8af2a9360d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5a8be-6ebe-4122-b6c9-b74fbd2a0981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb71b6e-bd0c-4f20-8057-9f8038aa757d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37e4ec-eee4-4461-885b-7b76bf0e0b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0485551b-565e-4f9f-833f-606c71e58f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec3fd33-cd29-4ab1-9cce-c22c5569fa6c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe48be2-24e9-45d1-b507-0ffaf799f970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec04f55-6602-4520-b09b-416870bd00c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0be3c9-df42-4203-844c-913876a41b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e227ac-205b-4f5f-986b-8f03add1c6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317b0bf2-7b09-4da5-a15e-506b39b06fdb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07aa752-43d1-44ab-82f4-0f141a9a7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fec7ca-1356-4540-8c5a-94b26a0384b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88ff4a-faea-41d7-ae99-2de45780930f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7691c59c-2370-44b8-925e-655b883509de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca64095-ed57-4a95-a148-c016dd90007a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15746d2-fe4a-4389-99a0-3efa1aa6c1ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ddde1d-a26e-4a77-a22a-d83a04d76856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d2f41c-e731-4dd6-8242-11e4c3c218d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caf87de-3ac2-45dc-bd9b-7b66dd348929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4c0079-369d-4d71-85a9-f5de60e1c855",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108554e8-a464-4c18-9959-ab7b71ca14d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866e3b9f-95c6-4357-96f0-c4652622a895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03baaa9-dca8-4e3a-9ada-f392c7550be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a0e7a0-d09b-49ff-93a1-af898a040446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ded9eb-24b2-4bbb-9a9a-b22f700974f8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c1b5d4-33f5-40b2-85cf-97b7dc375fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7994d6-24a9-43a0-90a3-462417938a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f774dd-f545-4056-b515-d881d2def054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65b2145-6f38-4b78-854c-40fa67e0d629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020d242f-e75d-4101-b154-98ae6c99ee11",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bc4607-310d-4795-b814-63c94b89f24f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be052d1-3f37-42d8-b9b1-283a30812806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f1df3e-cd5f-4bd0-b379-c5ff8ed48237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e68177-865a-4c56-85b9-cff9b3776e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6c25c9-aa6b-4aa6-a9da-0f77b970d875",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ce9d0b-4334-481f-af7b-f9dd160027a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da64e191-6f79-4925-b93a-cef59fa0e271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1e6236-d18d-4dad-84cb-bfd2728aacd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4563bc5-88eb-4059-bcfa-9c6c54e96586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df72675-d0fd-4d76-839f-e71e4ef173ad",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1effbf90-dc18-47d8-a7be-8e898b3fe1b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "417f2a04-c4b5-40d9-930b-eef386b76dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e0033-2762-4f0e-a2db-7f9b4de4617d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8e4e58-140a-4a73-ac31-50ff5fd3dec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78cb7e3-f890-4b4d-929f-d290cbba259a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08db9028-0af6-4259-b682-249023c680f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c5ce99-d208-4313-883b-9e1476977e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80478951-d264-4345-b122-414e299f794e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa44528-3c5b-452c-87a7-747b4f4d8f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecce42c-5639-4e98-b269-acb37139f6fe",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfbf0e3-d177-4136-b686-6a29fd294e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8ec510-21b0-44f5-81ff-dda556064726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3217f36d-ad0b-4dae-bf79-7cd329c1e3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5380df5e-9cbb-4a22-968f-aad2fc615087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587863d0-3d23-4db4-b876-ffd2c3bcf1b5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09517115-22c1-4d58-9445-52fe260731c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5f3f8a-6726-4312-8a71-203e2c99ea16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee74f29-84a1-4600-b39f-f5d6319d8337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8507635f-1cce-47aa-935a-89cfff471c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7599bcc-d86d-491a-95ca-09ab69aadd15",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9b03c8-5587-4850-9f97-e9fd5f6286c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8de7604-fde8-4882-ba6b-e0f6cd601778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2a23f4-a7b8-4f31-868e-f789a0721b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31408bda-a21d-474b-a56c-1d5974b0e158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab8148f-6957-4a83-aa9b-143ebbcba3a6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1959daa1-1909-4613-88d6-1cba8dcb1316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f03b78c-ec3d-4a27-8c1c-9f57546624ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c83f341-adf4-4fff-bce2-7d3c48164dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01579a18-2acf-4eee-bacd-32e32cbf9ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c5c7af-1545-47bd-b989-3c4783a5e193",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93a917d-c93a-426e-8d99-ff2aa48ffc3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7318c7d0-a8f5-47df-9178-22b34259be71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26251b6c-247e-4b20-8be2-2e9a43f76a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a82719-ebb3-422a-b118-b27a72fafad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4522cb-97bb-4070-ac9c-5cea357e5186",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e54c4d-75cc-4486-9cab-b42bcf7a8df5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93c27cda-fcfa-4f28-8e4c-37f2a0bc912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38d292b-6788-4d7b-a063-581ddf96edc8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751f1742-3cd1-4947-a3e1-a455ccc336c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397a4ea2-e29e-4c63-87f1-2d6482f8a36f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be02889e-1e52-4463-a476-0d471cf03385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e342d9-a144-4c59-90fb-4db683a1693a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29094c-e153-452a-9b9b-f08217c16cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82bab1d-091c-4d5b-ac23-90153d9b3783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0233394-0fa2-4dbd-968f-b3d0ad9e7318",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebfdfc2-d16e-46fb-bfc6-ba92163ba199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7b819a-5911-4a3e-ae75-721e1177eaab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53923cc1-77a4-4b30-97b7-58bafa9e40d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919867c7-b851-438c-9ab6-b3883b23d5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2388cd-0d1b-4500-b3bf-35adbebffc4b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a180b90-c828-44ac-b0c9-585d93c99378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9bd6f7-a554-463e-a822-c9744d1ec54e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cb8950-0373-41ef-8065-9fe2c8cce877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f82b567-37c0-411c-9d0a-8996c2b340a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38582e3c-b739-4c98-9fbb-bf4f240bc8b9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b55a8a6-a16e-49bf-8c10-abd9ab8251e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a383b6be-d635-46e0-9dba-d595e4c1a167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2685b86-64b3-4cae-acc7-2ec2a078f087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648c76c6-6c3b-442b-b293-287ce9999480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6439d5ab-489e-41fb-98ee-1dd7a8daaa3d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9633789a-043c-4d26-ba16-b67b814afb20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7327c2-874b-4d7a-8df6-58cd7a1193e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c18b31-3062-481f-83e4-590d726334d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70705cbd-3095-46a3-8995-1bc24ed8917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7e8f88-4cac-4f55-81f4-b95aaad880ee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d14a8a6-9783-4636-a7f8-25e7963bb63f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37199624-65f3-4f6b-a29a-1da87896426b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1357362-daa3-4a22-acbd-89dc8a53b9a8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0238852-5e36-4e36-8d37-35c293f892b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b0f62a-a73a-44ac-8db1-fbef34e5fbe4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b5538a-6807-459c-a837-199558724d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ec4a0e-6a0f-438c-a59a-018f55036452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cffa791-a868-4781-9f8e-e543bf866476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67f1bbf-a548-4025-be7f-7f20e771daeb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c56378e-0541-4c8d-9988-898ee59a31d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa7e5c55-9206-4419-bac0-7836e81df7cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad081734-d8a6-4d6e-a6b2-e765771100ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "146c6119-8b34-47b0-9ee9-ae932a248a43"
                    }
                  }
                ]
              },
              {
                "id": "78829504-0201-4c3f-80df-9bcfe14f8761",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96a09070-2106-4632-9db3-bccb00bc6cd6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8ab2ed-e124-4351-a874-766505624273",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d74adb1-0103-41d9-a708-c191a4d0f40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b0a358-931f-4474-9185-af1679d66fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5a90622-8a8d-4ef3-abca-fc1c29268eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8932b4fd-c5c8-4e36-8872-d92486bb97f8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e960a6-90f1-4ef5-97ad-e0389076dd07",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "29365fa1-4529-4dba-8cfb-8d167e4429bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53cc855-b736-4ee9-8d66-057679129417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "957a1f71-eeb8-4e59-acd0-d8452f202afb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf3a8c86-013e-474c-88c1-632bb4584f8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab87c659-61be-4ae4-b57d-c119c9fb0488"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c82b62f-6acf-41b0-841e-63f6a8da236e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1de224c0-ab27-4fee-ba7c-5406fdfead5b"
                    }
                  }
                ]
              },
              {
                "id": "72134973-1af9-491e-9c09-fbd75c20a4f0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c253a0da-0d38-487b-8fd7-86e28767abdc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79801246-8e07-47f2-9704-2368e097532c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "44ae575e-8603-4715-84de-ad6019b5154a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ec45b1-9784-4774-9115-801ed6962d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc64aea-624e-465b-a809-f24567991172"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7fe7b5c7-32f3-4087-bba1-45833ec1f1d8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92b8baee-b5c5-46ed-90fa-98ddc8ec5e22",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c470bb64-2ace-4165-b0c0-d2d2e2773396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "770f3e62-b72f-44cd-b09f-5684b0349599"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac655666-9fe1-464d-97d4-98bfdd850556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6b76f6e-29e1-4a6a-82e1-ae1f5b723137"
                    }
                  }
                ]
              },
              {
                "id": "57ad8636-e73f-4787-aa38-9af33dcc85fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f532ff3-1d92-4d82-ba27-31f964d82f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3ae230c5-0c80-4b77-9dd5-e0b91406a0b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "daf9b7a2-e688-4895-8a54-368060434010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a5f8103-544b-4475-b419-17d6d845357d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "770c6c3b-5a96-4e56-b888-38b1ac890891",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96f3cead-afe9-4916-9d64-d8b8a9142a22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "657c5636-1f89-4b7d-8749-4b1b0ae8d9fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f844332-41d8-4397-99e0-d227a76726ec"
            }
          }
        ]
      },
      {
        "id": "6e2a5f62-d9e2-40d1-a9f8-05aec8457380",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c1d72d8-7e88-4cf4-8aee-74b03225017f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1c429df-23b2-4c62-9adc-4b254ddca5d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee238eb4-9274-4770-8cfa-25172b2e77cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "553d54e3-fff8-4231-b8db-fdaa9246ffcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9926e34-e654-431e-9e56-f4c82a0aae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e83c23e-259d-420d-8552-67814f769e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e9a4b0-9d0a-4bb3-9852-2acc67075d54",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d478af-02e9-4d67-afa7-434ff986109f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a4912ed5-7337-4fa2-a43f-1c3a835a6335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddedcc82-6ea6-4a18-a7ca-c476f6682dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42246418-d957-4733-b02e-0134a67a5329"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5f761a5-e11b-49cc-9cdc-81b96a0d3d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07478e85-14d0-4031-ad04-6235359e027c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dec31ebe-58d9-4081-a2c2-ed19b7a288c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cdce4a4-a9d5-47b8-8c1f-270736408321"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bd6f91d-2f49-4cd1-bc94-9469d562545a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a7a533ce-5b01-4d23-b9b1-eddcf711b471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e2354ef-f0c9-4816-8fa7-bdcb794c82b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27172b22-82de-4a6b-9fee-45ff90a76e56"
            }
          }
        ]
      },
      {
        "id": "89e458fb-925d-461b-b1f8-ebd392a6e93e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "36235aa6-20ca-49b3-b79e-11511ccebef6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1024b43-ac9a-4183-a584-d82c4535ae5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3849315b-f965-4c34-9984-a80a5d07715c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd66be52-1884-4c6a-9a37-0d5c05bddc27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f910e9c3-7cd9-4617-9701-6091c6b2cec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30773558-19e2-493a-8a5c-97806148d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f83a233c-567c-495c-92b7-943297bd6a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b45ac51-17c9-486e-8378-7c80b81c4d2a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aace487-e798-449b-aaae-ab5a21302f77",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "94fc6bb5-0812-49b4-926b-287a9ec827ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3957941d-cdce-4694-bb50-3657e538d789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddce7e56-d777-4e20-b6ea-e61839c9d63a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cbd420c-071f-43c3-ac93-6bce4d955104",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31a174f5-4a0d-4f2c-be89-301af6ff995c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f238ad87-78a5-43e4-8f95-986a01caf6ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65f883ec-2ddf-4603-a456-25b166f8b8c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49ddf94b-e3b5-4d25-bdf9-5d548d5428e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "26699801-fdd2-4847-a0df-ed9a731071d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87d0d6bb-48d2-4f0a-b94b-82428669b321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4ef58d8-96af-4245-b44d-70b1e9bcef47"
            }
          }
        ]
      },
      {
        "id": "a5b49e6c-1758-4efd-b784-dbdaab0e9347",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e5f50bb0-2747-482d-a457-12a54add3553",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d11c63ac-ca84-46b5-843e-2d2660ce5867",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91d6efc1-287e-4ff4-aa00-8e8e428ef860",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14303d06-53c2-4901-9b39-1522a338c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21dfe835-7239-46f8-be44-5807eddbf2ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b07f33-46d0-4a60-b1be-e8bfcbcacf9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caf95161-337e-4925-8216-9dd016937eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bb0797-a2d1-4b53-841b-52243f38792a",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8ef121-cb4f-44c4-bbdc-ea8d1dca6593",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d587cca-a998-4a93-9f56-e563b7158924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9bd2bd-aa14-4dfe-89af-eca7201c5dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41527834-506b-4669-a87e-214b9ae7c1ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8adf779-8951-4d72-9d42-fbdf74797f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "498f8a5a-9c2a-45b2-b4d8-acdb3aa1afd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a3faffe-dbbc-4e7a-ac53-6fd423ec7e38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5143b4cd-f38c-44a5-8c23-95744f65f3d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c70ffe3f-d5d8-4ea1-97f0-27240600eaf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4735d001-dd30-4e67-a6f7-6e4d2534256a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e262b618-4a44-476c-b6b9-0e8354fcd08a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdd0045e-633a-4fa5-a5bc-02690d7bf17c"
            }
          }
        ]
      },
      {
        "id": "5d895d9c-73b1-48b4-9427-5ca86e2ab927",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45290212-0bbd-431a-a9ea-5c4e0a257cb8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7e4efe0-a39b-49b9-a853-7894626a6d5a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "67c4ab92-d2a9-4ec3-85b9-5ec734786b6e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b714e2ec-05d4-4a2b-8b0c-f85d64a2f3d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e47f4a4d-4e0d-4e19-83e1-561c22103943",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 41.23846153846155,
      "responseMin": 19,
      "responseMax": 470,
      "responseSd": 45.01278516602105,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681950941627,
      "completed": 1681950963287
    },
    "executions": [
      {
        "id": "d8ded84e-2a59-4513-a7ce-e8463d271930",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5e910624-9a61-4465-8d7e-4982328053e0",
          "httpRequestId": "48dad7b3-3a8f-4c3f-8c5a-a8070884c553"
        },
        "item": {
          "id": "d8ded84e-2a59-4513-a7ce-e8463d271930",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "95882eb8-0fc8-46d9-9d22-31eed89b197a",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "013d2d9e-ac2a-43f6-8b78-f1b62479ab48",
        "cursor": {
          "ref": "16ad96b3-0204-4fa0-97b4-10e9e3df02ad",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e5bf4a62-f0fe-4879-bfe5-a8c99a23ead6"
        },
        "item": {
          "id": "013d2d9e-ac2a-43f6-8b78-f1b62479ab48",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4f3ef07d-40fc-4f9b-a015-431572d036b9",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "4afa4740-bc6a-4531-b06a-ff045e9ec737",
        "cursor": {
          "ref": "afa2c275-55b1-4c77-bfc0-2f060ff145e6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6b40e9f6-60b3-4b5d-99e4-e46cfa685d70"
        },
        "item": {
          "id": "4afa4740-bc6a-4531-b06a-ff045e9ec737",
          "name": "did_json"
        },
        "response": {
          "id": "ff663677-b542-4019-893e-7edb88e8606d",
          "status": "OK",
          "code": 200,
          "responseTime": 470,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16e43b8-fe17-4ef5-8000-dc54863218b9",
        "cursor": {
          "ref": "ce673a3d-f2aa-4083-bfe7-70741b3b47dd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7c4f5d0-8883-43f7-8389-b708b2a7fc9d"
        },
        "item": {
          "id": "e16e43b8-fe17-4ef5-8000-dc54863218b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "64586ac4-db02-499d-93fc-26b5195af16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16e43b8-fe17-4ef5-8000-dc54863218b9",
        "cursor": {
          "ref": "ce673a3d-f2aa-4083-bfe7-70741b3b47dd",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c7c4f5d0-8883-43f7-8389-b708b2a7fc9d"
        },
        "item": {
          "id": "e16e43b8-fe17-4ef5-8000-dc54863218b9",
          "name": "did:invalid"
        },
        "response": {
          "id": "64586ac4-db02-499d-93fc-26b5195af16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dc9db6-6783-49e5-8f51-be9e46d37cff",
        "cursor": {
          "ref": "a19fedad-5497-4fb1-90c3-392427736eaa",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8e52a07f-ad58-4b75-8c5f-201a2342c878"
        },
        "item": {
          "id": "99dc9db6-6783-49e5-8f51-be9e46d37cff",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d14dafc9-66c5-4b8f-bb16-be1607536c8b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 153,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba73e7c-2caf-4967-9ae3-37b48721a0a1",
        "cursor": {
          "ref": "1f6ef8e8-e30b-4691-9a89-3cebe0e75bcf",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c93eca66-32d2-4def-aa1c-b4244590593c"
        },
        "item": {
          "id": "7ba73e7c-2caf-4967-9ae3-37b48721a0a1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6345993c-5c29-4a71-9683-a3ca3e6d21f8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5089f446-56fd-45f1-9fce-aff33098f9f2",
        "cursor": {
          "ref": "85f322bc-def2-4fef-a2f1-aebe36d8b9f8",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "506a4d90-167b-4a98-9a46-34722211e975"
        },
        "item": {
          "id": "5089f446-56fd-45f1-9fce-aff33098f9f2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "195f5a35-9fb0-4046-a271-d3b03fc791cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceeb8c1-9bc9-4e0c-b32d-d6e3ce49e0f5",
        "cursor": {
          "ref": "2e69c296-cc4c-4b3e-8c15-2e9f44b430c3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ed094e9-c77b-4367-80bc-43d1540a4991"
        },
        "item": {
          "id": "4ceeb8c1-9bc9-4e0c-b32d-d6e3ce49e0f5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fb686f58-d2a5-4ca2-b7c7-fda9ff7015bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceeb8c1-9bc9-4e0c-b32d-d6e3ce49e0f5",
        "cursor": {
          "ref": "2e69c296-cc4c-4b3e-8c15-2e9f44b430c3",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ed094e9-c77b-4367-80bc-43d1540a4991"
        },
        "item": {
          "id": "4ceeb8c1-9bc9-4e0c-b32d-d6e3ce49e0f5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fb686f58-d2a5-4ca2-b7c7-fda9ff7015bf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa512543-46ba-41e0-99fc-1c451b7d1cb1",
        "cursor": {
          "ref": "a7dea35f-ce00-4ad7-9246-260b2abf3324",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cc78ca07-d2a9-4b54-8658-45cc7b3ca0cc"
        },
        "item": {
          "id": "fa512543-46ba-41e0-99fc-1c451b7d1cb1",
          "name": "identifiers"
        },
        "response": {
          "id": "6382fc7c-ffde-4119-9de6-2f56a09989c0",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a116e916-4b6b-4b24-9a20-bf6aacf3522a",
        "cursor": {
          "ref": "31e466f0-2fc8-4861-94f1-8e494dc5776e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e688e600-bb6e-4377-9849-9a2f3d45b4da"
        },
        "item": {
          "id": "a116e916-4b6b-4b24-9a20-bf6aacf3522a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "102c93f9-37a3-45cc-ad5c-a8ebadfaf203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a116e916-4b6b-4b24-9a20-bf6aacf3522a",
        "cursor": {
          "ref": "31e466f0-2fc8-4861-94f1-8e494dc5776e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e688e600-bb6e-4377-9849-9a2f3d45b4da"
        },
        "item": {
          "id": "a116e916-4b6b-4b24-9a20-bf6aacf3522a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "102c93f9-37a3-45cc-ad5c-a8ebadfaf203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129af8fe-5bec-416c-b7cc-0cbefd9659de",
        "cursor": {
          "ref": "f27dc05b-91f9-4bfa-a338-e0a33511a259",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "28e7c40d-96dd-4984-bf08-4506420e8d47"
        },
        "item": {
          "id": "129af8fe-5bec-416c-b7cc-0cbefd9659de",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b50a2a9c-3f10-4688-92a8-d3e0ff48a795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bc294c-bc3b-4650-a9f0-d9d9ad1c0e9b",
        "cursor": {
          "ref": "f0cffa1a-8ee8-44d1-83ba-52b46fb7b4d5",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e2c568af-abeb-4241-9abb-49a4333f00a8"
        },
        "item": {
          "id": "e4bc294c-bc3b-4650-a9f0-d9d9ad1c0e9b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d375a903-733c-46f4-b66c-c8859f07f74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ca285-5ff0-4173-97f5-f84f6899049c",
        "cursor": {
          "ref": "c205a742-7492-4e72-95d2-119690918e84",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6fe4d607-07cb-4547-aa96-962969c66f6e"
        },
        "item": {
          "id": "4d9ca285-5ff0-4173-97f5-f84f6899049c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a1e35509-9324-4d3b-85e5-a3e856771267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f0f98e-fe36-46c5-aedc-e1f12b71a01d",
        "cursor": {
          "ref": "19926fff-c369-4a76-ba02-a8cc70766e3a",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4816ee55-5acd-420f-881d-66242a9e6d89"
        },
        "item": {
          "id": "81f0f98e-fe36-46c5-aedc-e1f12b71a01d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "657f8a56-4a66-4cfd-931d-f634c5d377c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb8b9dd-4f15-4e83-834a-70f107fc1f5e",
        "cursor": {
          "ref": "f0e55986-d5cf-49cb-bdbc-bed18aba330d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d048208c-230a-401a-8c6f-674f80c46f38"
        },
        "item": {
          "id": "1fb8b9dd-4f15-4e83-834a-70f107fc1f5e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cebab9ac-ca14-4c1b-aaf4-eaf1560a86af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2889293b-7618-4b39-99d3-522ebdde2a67",
        "cursor": {
          "ref": "ebbab49f-8475-43e3-a609-b511d5c7841a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "26c95d0c-ac61-44cf-9232-c53cc5167a6d"
        },
        "item": {
          "id": "2889293b-7618-4b39-99d3-522ebdde2a67",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f6e2753c-ee82-4c2e-8eca-9f3cce648ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5de4ef-2d9c-4dd3-9adf-3ba618c21b60",
        "cursor": {
          "ref": "e515daf6-9884-4a1d-ad2a-7cadd9a30132",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ea33c457-4bd0-4471-b448-4d2e678668ef"
        },
        "item": {
          "id": "ec5de4ef-2d9c-4dd3-9adf-3ba618c21b60",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "71537f64-3ddc-45bd-9691-cd85f142c155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234b906a-6077-425d-9eff-f671ad980dab",
        "cursor": {
          "ref": "57d55691-bbb0-45e3-b1b4-b6019c70fb6e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9f695e6b-cc9f-4a9a-a42f-28482f98c15b"
        },
        "item": {
          "id": "234b906a-6077-425d-9eff-f671ad980dab",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "da096a81-dd71-41fd-b9c1-c233c7109b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1a2bc5-91be-4496-93fe-c439216c9cb7",
        "cursor": {
          "ref": "0abdfe05-6f3b-483e-8916-b15d212e0645",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f5124a20-1cdb-48fc-abbe-d3bcbf9deb44"
        },
        "item": {
          "id": "1c1a2bc5-91be-4496-93fe-c439216c9cb7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3f7b2323-d8d4-4a65-80af-e2344d667da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65ea534-6365-46b0-aa76-cfb2b2082c15",
        "cursor": {
          "ref": "d14df5cb-29a9-45df-a48f-2e93031da968",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "59ccc08e-5703-4d85-98d2-24284f0becf5"
        },
        "item": {
          "id": "c65ea534-6365-46b0-aa76-cfb2b2082c15",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8f3d953e-2e54-40f7-97ac-9c9eb876a9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336bb012-6328-484d-ba06-b79613a3713d",
        "cursor": {
          "ref": "5778c158-211b-4d9b-9c69-98dbddc2ee8d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "da7431b6-b7bb-4210-9b8b-4aaf8c2bb281"
        },
        "item": {
          "id": "336bb012-6328-484d-ba06-b79613a3713d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ddd807c8-945b-46ea-855d-d77e814a276e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52950e-970f-4c85-b147-25cbfb09c2b2",
        "cursor": {
          "ref": "e2d43ba4-790a-41cb-8efe-093dec5bee68",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c4a66a4d-703c-4a51-89f1-f9c5e1e9ef1f"
        },
        "item": {
          "id": "5e52950e-970f-4c85-b147-25cbfb09c2b2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a2891c41-6cdb-427f-90df-07f0edde684e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0946e396-dd8e-434e-8bba-a9d447faa14b",
        "cursor": {
          "ref": "7e5c06f5-6255-4a81-82eb-85ebe47b26fe",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "879dfe0e-26be-425a-bb91-01c007df5ea0"
        },
        "item": {
          "id": "0946e396-dd8e-434e-8bba-a9d447faa14b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "445b466d-0e2a-48fe-9855-c560e4d36f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22f57d3-fd4f-46b3-8e8a-f27cb6c85cad",
        "cursor": {
          "ref": "679da33f-fc2c-4329-85d6-f7b7bfbe13c8",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "325b47be-0334-40db-b1de-e40874faa4a6"
        },
        "item": {
          "id": "b22f57d3-fd4f-46b3-8e8a-f27cb6c85cad",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4f089ea0-3e66-4204-acb0-d5c5c66ac85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17da5e47-a6fd-4144-a0fc-fb1b548af25b",
        "cursor": {
          "ref": "67f2ecbb-b22e-4b33-8f4a-c709fc1cf149",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d1a3bc1a-f87b-4b55-b09b-9b7a179d3446"
        },
        "item": {
          "id": "17da5e47-a6fd-4144-a0fc-fb1b548af25b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "485dd686-54a4-424d-9510-1093123169b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa9d67a-10c4-4377-9214-dc5f1eab0f85",
        "cursor": {
          "ref": "ec977602-08b3-4c4b-8929-94b14a7c5160",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "611058f0-4f4b-4489-bbde-a40bbf03a774"
        },
        "item": {
          "id": "9aa9d67a-10c4-4377-9214-dc5f1eab0f85",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "77b5a85e-676a-41e3-9331-3fb01f20421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15cf3e9-6b0d-4464-8456-b5cab6e47bc0",
        "cursor": {
          "ref": "ce09ad57-d79f-4d56-9ef8-de1ea05051e6",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c3e77ff4-22f1-4ce9-9a9a-64731a843d68"
        },
        "item": {
          "id": "e15cf3e9-6b0d-4464-8456-b5cab6e47bc0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dfb19566-5ac0-42fd-b894-3dc4b43d4e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a201889f-a318-4424-be2b-b3b89047530b",
        "cursor": {
          "ref": "dc222f1a-d665-42d4-9734-502e4431268d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "91e7b1da-7949-4ce6-9986-f0a336a8aa9d"
        },
        "item": {
          "id": "a201889f-a318-4424-be2b-b3b89047530b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "83beaa42-6fa5-4e21-9644-0000270db100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c59650-9113-4227-b581-3fb2a52f48ee",
        "cursor": {
          "ref": "982776ea-a1bb-4d49-be3b-ecef112d83bf",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f79f7ed7-cf99-4003-943c-16172566e651"
        },
        "item": {
          "id": "43c59650-9113-4227-b581-3fb2a52f48ee",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b71f0454-f951-4880-b3ae-942516967fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49896c19-1e3f-4656-980b-9b925eb7d3b2",
        "cursor": {
          "ref": "a933d25a-ced4-4df6-9b74-69c2ea0b1a2a",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "42674161-4e5e-4148-9c3b-f43db41a5c29"
        },
        "item": {
          "id": "49896c19-1e3f-4656-980b-9b925eb7d3b2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "27874481-1c8b-4936-841c-2675e182f228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca0e479-7d18-486c-b975-cce689f776d8",
        "cursor": {
          "ref": "92d16cfb-8aaa-4547-96a4-c4a51d4e6bd3",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0d9169c1-a0c9-4e8a-a4e6-32f6d844348a"
        },
        "item": {
          "id": "5ca0e479-7d18-486c-b975-cce689f776d8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a38d042-a3a2-4c7b-83a4-937dcfea7d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d816e0-4445-41eb-9a0a-dfa32532b07e",
        "cursor": {
          "ref": "88278413-55c3-4413-984d-c52a7bffa55f",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aeccf007-06d6-4b65-9edc-b44b5d383363"
        },
        "item": {
          "id": "c9d816e0-4445-41eb-9a0a-dfa32532b07e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "761d07c0-1579-49b3-a039-8b84df5dcdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7c7abc-5d82-462e-99bc-289c911d4d25",
        "cursor": {
          "ref": "c70ab5dd-5e3f-4566-8812-78a5aa46c556",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "026d195a-240c-4c56-abe3-531fe5b72153"
        },
        "item": {
          "id": "cd7c7abc-5d82-462e-99bc-289c911d4d25",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c55bc072-2fda-4281-908f-bf4624376ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e87c24-1fd1-4d4f-93b6-768678055082",
        "cursor": {
          "ref": "7045dc5d-b213-410e-988a-0069e8486e67",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cfd42273-df5c-4c00-acd6-100cfd0452eb"
        },
        "item": {
          "id": "09e87c24-1fd1-4d4f-93b6-768678055082",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f79c0da5-bbad-422c-b8f6-22e84a0cc8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a65dcac-d19b-4f44-884f-3cc9d1987d5f",
        "cursor": {
          "ref": "85bcd318-5ac6-4c31-9615-078f6f32ed30",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1ac4d235-f0cc-4753-9607-af87a9297772"
        },
        "item": {
          "id": "8a65dcac-d19b-4f44-884f-3cc9d1987d5f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "337c131e-8847-407f-ac34-f68864a6ac04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd6d043-f497-4067-8fc6-6155370be1d9",
        "cursor": {
          "ref": "ed8f16c8-4765-47d0-a076-1813ae0e3ed5",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4982648-8d5b-4c7b-b98a-b8893068e8d5"
        },
        "item": {
          "id": "7fd6d043-f497-4067-8fc6-6155370be1d9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cf94fcd8-5e55-482d-a113-f0efd1423bf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667c491d-9da0-433d-9ec2-ebf937fb8316",
        "cursor": {
          "ref": "12f10e4f-0e53-442c-8da6-48b4798c245f",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c2e96fb-1a12-4ce4-bb8d-827cc63d5796"
        },
        "item": {
          "id": "667c491d-9da0-433d-9ec2-ebf937fb8316",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e997a854-014c-48b9-9466-f3968c5210be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687cdb7e-a42b-43c6-9b4a-923b239af4c1",
        "cursor": {
          "ref": "f62c7aa4-8308-4fae-b010-4b874750f419",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a9b60bb3-b14e-4a69-a664-011718f9d421"
        },
        "item": {
          "id": "687cdb7e-a42b-43c6-9b4a-923b239af4c1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "598f8261-d63d-47db-87be-fd6f5ff81506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66db7be6-2200-442c-98a8-c4932a4a0687",
        "cursor": {
          "ref": "98dbb8bc-1ec4-4d4f-962d-06cc16395160",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "56548a2e-de63-4b3c-ba9a-83c1e0b296b5"
        },
        "item": {
          "id": "66db7be6-2200-442c-98a8-c4932a4a0687",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "030cffda-2dcd-44dc-9c19-a4b9eeb9c260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec8877f-4c5c-4ee2-96ff-edd403f1f5e0",
        "cursor": {
          "ref": "62ce15fd-a871-4667-ac3d-e5059596f79d",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1dfc3a9a-dfc7-48b0-b48a-ba7181d7bac9"
        },
        "item": {
          "id": "aec8877f-4c5c-4ee2-96ff-edd403f1f5e0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2337b699-ef5c-419d-ae66-b362c3fb1da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df898a6-fdee-4a37-a222-adbe7ad5be5c",
        "cursor": {
          "ref": "3bb7956b-8c8a-49a1-9975-de5baf48f3e4",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f47b6d81-d561-476f-8916-2439a9ea4d1a"
        },
        "item": {
          "id": "6df898a6-fdee-4a37-a222-adbe7ad5be5c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "13f923c0-d680-46d4-9f74-16d5ffd5da48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f564e480-68f7-40dd-bed2-ec7d73105419",
        "cursor": {
          "ref": "74063581-3af3-4a4a-9775-77cddb689e5a",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e667675b-53e7-4d95-9fb8-dcc8e869d3ec"
        },
        "item": {
          "id": "f564e480-68f7-40dd-bed2-ec7d73105419",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "27f1c3ca-96bc-4390-8647-32bd0e283fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3939adbc-c72c-4905-ae84-6f91f6f3726d",
        "cursor": {
          "ref": "b33d49fb-1ca7-4eb2-81e4-ba9b991e5f98",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0f758993-b33e-418c-bd9f-6bae79b44a09"
        },
        "item": {
          "id": "3939adbc-c72c-4905-ae84-6f91f6f3726d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "18ab327c-9b36-46f8-8fc6-a909f86ca4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adc896c-823e-4607-bd7a-983b15efa4f9",
        "cursor": {
          "ref": "77b54ea1-4e8e-449f-8897-c9ad505212dd",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0082ef68-c594-48ab-be31-9c303f29a58f"
        },
        "item": {
          "id": "3adc896c-823e-4607-bd7a-983b15efa4f9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "17f5b664-e7bc-4cff-80b1-64b1d9bb9e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55efee2b-69ac-4a74-b23b-a833fcf85377",
        "cursor": {
          "ref": "dcf1da8b-915b-426b-8686-20b11d836b93",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eef0bf0f-e764-4c0d-b4ec-af2f91e29a9d"
        },
        "item": {
          "id": "55efee2b-69ac-4a74-b23b-a833fcf85377",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "311ebff3-4aa6-432e-b3cd-12a193b9a134",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f157bc-7625-423b-be54-98296a6c8134",
        "cursor": {
          "ref": "178dbf60-feb1-4c7c-aa02-1a73e5559ffe",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0aab685-f086-471b-a0f4-6554380b7531"
        },
        "item": {
          "id": "38f157bc-7625-423b-be54-98296a6c8134",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "360575bc-98c7-4e81-b604-f1f37984ff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e5ed49-b1a1-4c7e-9a21-26621317312b",
        "cursor": {
          "ref": "6df9f587-556c-4592-bd66-539daef233e5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "22e62073-3798-4953-907e-9e88b077d4a5"
        },
        "item": {
          "id": "88e5ed49-b1a1-4c7e-9a21-26621317312b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "653aa2f9-675d-41d0-9ae2-4dad1d9aee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f8b4c0-a4d5-4c9f-b214-f584e2f4a54a",
        "cursor": {
          "ref": "0a3b2ce8-e90f-4742-9930-7ddb496a25b0",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2cb458f2-ca4a-4dde-b70a-a8439c30417f"
        },
        "item": {
          "id": "07f8b4c0-a4d5-4c9f-b214-f584e2f4a54a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "147d711e-0a1f-48b1-83b9-caa39622c34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fced920a-6e91-453f-9d6c-e9930c7ed513",
        "cursor": {
          "ref": "61dba298-d4fe-4fe2-a2d4-4ba7808da1ad",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97c2b034-9288-4581-b47d-09c2fd29e16d"
        },
        "item": {
          "id": "fced920a-6e91-453f-9d6c-e9930c7ed513",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d69739a9-9e49-47ed-a971-a59629b92567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2080fc-1221-4983-b9e1-c39e417e98d3",
        "cursor": {
          "ref": "0e98ef34-a350-499b-90c2-5f9829b9d87a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f6117da-0bfb-4b63-a31e-693d81b4b8b9"
        },
        "item": {
          "id": "1c2080fc-1221-4983-b9e1-c39e417e98d3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "45d6e35f-382d-43d4-b8c1-1883fae8d276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8421e7b3-3f75-4526-891f-7f347747a17f",
        "cursor": {
          "ref": "411986d7-3b52-4dec-bf03-80afb425450b",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "baab538d-7c87-44c8-a327-805267fbf033"
        },
        "item": {
          "id": "8421e7b3-3f75-4526-891f-7f347747a17f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5450a787-154c-4569-8075-ebaf4aa0e689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635682cf-91b4-4489-9b46-56e897dd4aaa",
        "cursor": {
          "ref": "d4cce9fa-1044-447d-8a4e-91ef6a64bb66",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6351264e-cab0-47c3-bc4f-8a9e1c446037"
        },
        "item": {
          "id": "635682cf-91b4-4489-9b46-56e897dd4aaa",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "578da881-dc11-42aa-b807-b7383c03e8fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f8c3bc-b69b-463b-a633-b18abe2b9552",
        "cursor": {
          "ref": "fe1317ec-f17a-428b-b957-9eca4d8a0d6a",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9a0d64a9-2bdc-4302-9a41-36276e54fa22"
        },
        "item": {
          "id": "70f8c3bc-b69b-463b-a633-b18abe2b9552",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "87a3353e-4280-4be0-a6fd-017d4a17c5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cdb9bd-6cda-44c2-8a08-d332032a5d6a",
        "cursor": {
          "ref": "499a0fee-83c5-4a23-bd7f-9a05e927a529",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "fbd38c26-b39b-462a-8cff-b8958c705897"
        },
        "item": {
          "id": "80cdb9bd-6cda-44c2-8a08-d332032a5d6a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "75e9e3fd-d118-42e6-bfe7-48414fee6d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f9da86-1e9c-4cc8-9997-4129899d861a",
        "cursor": {
          "ref": "e9584f98-a943-4808-ab1f-103209d567e7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f1ec1172-4936-4f72-8c73-93f8a0bbbdf9"
        },
        "item": {
          "id": "41f9da86-1e9c-4cc8-9997-4129899d861a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d24b38db-3f84-4f92-9c16-05c463a5992c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8f04ac-28cb-4be3-b1c7-fc43fedf960d",
        "cursor": {
          "ref": "505365b9-6236-4d11-87c9-3c93cdc45a66",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36e3bf62-6854-424b-9a8c-e099bf2e5311"
        },
        "item": {
          "id": "1d8f04ac-28cb-4be3-b1c7-fc43fedf960d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b98c0afe-699e-46ce-81e4-a1a387579bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a369f16c-1f16-4395-84e1-9355b8b53007",
        "cursor": {
          "ref": "5db42345-315f-4e6e-b1e9-5c9671660677",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b3f07801-c850-4c0c-9d85-60154d972ff9"
        },
        "item": {
          "id": "a369f16c-1f16-4395-84e1-9355b8b53007",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bb3c38ae-f484-4018-83b5-04d487fc37c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6569ed-942d-41f0-ba51-2d8638d19d70",
        "cursor": {
          "ref": "fddc3d9a-5afc-4fb4-8290-9a68e27b2b44",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3d5784c5-cda6-45e3-b768-87c5dd8e647d"
        },
        "item": {
          "id": "5f6569ed-942d-41f0-ba51-2d8638d19d70",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3ad9d663-7ef6-495b-943b-00209afbcc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8eb168-72df-422f-a625-89cbabeceaad",
        "cursor": {
          "ref": "43584d9b-70f9-4372-bd41-66781e7c80fa",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b0e50009-f454-4b0a-908f-29a2b4e7b1f3"
        },
        "item": {
          "id": "6b8eb168-72df-422f-a625-89cbabeceaad",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1de82819-ae8c-42f0-9288-ed4e4be8367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b575fed-d207-4661-b7a8-bb8206bebe5a",
        "cursor": {
          "ref": "6b66344f-9eb4-4bd5-a212-a4d0b5d3c425",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "165b3f7f-bc09-4e7c-937b-269c57809e0f"
        },
        "item": {
          "id": "6b575fed-d207-4661-b7a8-bb8206bebe5a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b8bd679c-d731-4fdb-bc51-4508d3a7f461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d037494-343a-44a5-88b1-655d7c413cb4",
        "cursor": {
          "ref": "869a6c15-bc5d-445a-b9e7-2a11fd60b1c6",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "61fa36be-752f-48c9-9b6e-e8e665b750c5"
        },
        "item": {
          "id": "1d037494-343a-44a5-88b1-655d7c413cb4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ee2bec28-fe46-4920-92c1-1dc6a82fdb2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccde84a4-bf02-47f9-9fad-305ff7d7e488",
        "cursor": {
          "ref": "382ca7c7-cc51-4fb5-83d9-860c7278a0a3",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "332027e2-fc71-4349-a74c-2fe5e46ee003"
        },
        "item": {
          "id": "ccde84a4-bf02-47f9-9fad-305ff7d7e488",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6d30d7d3-6a4e-4b3e-802e-5d1833ead2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6828e3fa-829e-400e-a856-ae8c625d8d50",
        "cursor": {
          "ref": "63b83955-eae3-41a2-bdaf-c2da6bbbf1f0",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8bf37f2d-bc4c-4705-87e2-cc2c69577a57"
        },
        "item": {
          "id": "6828e3fa-829e-400e-a856-ae8c625d8d50",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3d980754-31ae-4d38-b50f-ac351c4dd8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f214a-1ef6-48d6-b572-b889fdc7f006",
        "cursor": {
          "ref": "3286dca6-8c43-41ff-af0a-ddba3b1e55cd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "45484f9a-0ba1-470f-9b0d-d4a3cd6cb375"
        },
        "item": {
          "id": "b99f214a-1ef6-48d6-b572-b889fdc7f006",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9358412b-4af9-44ff-9b33-dfa95f450e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f73f21-18c2-49d6-b200-4bad8d6b84f4",
        "cursor": {
          "ref": "5d4ff277-e27b-4029-9268-77904feb0248",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "62ac0e43-4296-4068-980c-10fe160da3e9"
        },
        "item": {
          "id": "87f73f21-18c2-49d6-b200-4bad8d6b84f4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a65f6e56-dd65-4f70-9476-15a980a7c489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757e5d58-42f7-4b14-86f9-0669f75866e8",
        "cursor": {
          "ref": "b30488f8-a19b-4b29-8496-18bd6ebe6d66",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2263e58e-3ac5-4a58-b1d7-fbb3201651e0"
        },
        "item": {
          "id": "757e5d58-42f7-4b14-86f9-0669f75866e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "bf00b094-bbdb-4f11-b4e8-8fb81667abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec2921-1fa9-4b5a-affc-184e9053a26f",
        "cursor": {
          "ref": "f53862be-22c2-494a-99b0-a5ca2fd929c2",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9b3c8bb4-dd57-4c46-965c-affe2f987c03"
        },
        "item": {
          "id": "5eec2921-1fa9-4b5a-affc-184e9053a26f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cb750f05-9add-4553-b064-80b8a0b04cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8e8023-bbc7-44d6-8c2d-2fac24d1a7e3",
        "cursor": {
          "ref": "ef73ecb5-223e-4c75-a4e0-b9bef572d208",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3ad1b431-47f9-47ef-99d2-29ebfbc2e56f"
        },
        "item": {
          "id": "9c8e8023-bbc7-44d6-8c2d-2fac24d1a7e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3fea7561-8809-4d6f-865e-50cf56259130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864cbf30-ec52-4f64-bed7-f4e790ab3361",
        "cursor": {
          "ref": "7de98580-757f-4e6c-8d09-d880266bdf81",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "124c275e-be2b-4b86-bff9-3264241867d9"
        },
        "item": {
          "id": "864cbf30-ec52-4f64-bed7-f4e790ab3361",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b5830038-b486-42fd-9167-d887f6d22cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc6301d-e546-416c-a627-31c655c43a38",
        "cursor": {
          "ref": "f2f838fd-93dd-4dd6-adda-c41a5107fe96",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6583635a-3919-4d86-b057-75be689826ae"
        },
        "item": {
          "id": "fbc6301d-e546-416c-a627-31c655c43a38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "73c88119-9383-40ee-a748-d2c43c0abded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae972703-c1a7-4fad-9ecc-a4489f03fe4a",
        "cursor": {
          "ref": "72b9f278-3cae-40e8-a7c7-d3af5d97e61f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aa8d5595-756c-42b5-8681-9032bc872aa4"
        },
        "item": {
          "id": "ae972703-c1a7-4fad-9ecc-a4489f03fe4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7c9358b0-b007-4a17-90a8-f57d9efb5534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6891f382-2ec2-4b9d-b8be-719438041a39",
        "cursor": {
          "ref": "bae0a0ca-110c-4f13-a269-507fd4124619",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "61e4943f-4cfb-4849-8dc6-e4a2f28474b6"
        },
        "item": {
          "id": "6891f382-2ec2-4b9d-b8be-719438041a39",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5f15d78a-7d8f-4ac7-a0fc-090edd6639b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed654f3d-59aa-4e8d-9004-f41232eec7bb",
        "cursor": {
          "ref": "f8c85c07-c24a-4f09-adb9-d7bf4cc43ee8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0cca0322-6231-4674-89f7-c7db6d662479"
        },
        "item": {
          "id": "ed654f3d-59aa-4e8d-9004-f41232eec7bb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ce93b56e-3d72-4373-a8ac-f40889ad54fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a578f006-8a9d-4044-84f4-b92607a88617",
        "cursor": {
          "ref": "ce74d304-200b-464a-b267-9f9eb693796b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2b34bb2a-1ca2-499b-b856-3e49fb9dc042"
        },
        "item": {
          "id": "a578f006-8a9d-4044-84f4-b92607a88617",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e805f9e6-7316-438e-a410-38a0d8e676a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf069d-e26e-412d-bd9f-4946c2668158",
        "cursor": {
          "ref": "bab21039-936f-4a74-953b-746cbd92a485",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c0294b5d-1a30-41a5-94d2-5aefca0af396"
        },
        "item": {
          "id": "6ebf069d-e26e-412d-bd9f-4946c2668158",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7c3e4e95-285e-4eae-ae61-e6a75aa575c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5357f-7fb0-45f2-a864-20d510ee7e9e",
        "cursor": {
          "ref": "c82996ac-e2e8-4ee9-ad48-835f8b9d4b9b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b241f471-77d0-473c-a6f8-c50da9e59aab"
        },
        "item": {
          "id": "a4a5357f-7fb0-45f2-a864-20d510ee7e9e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "08e4f42a-4995-4665-a76d-7348b3f696d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf8119-7b4c-445c-95d9-46be9153b79e",
        "cursor": {
          "ref": "6389a6a8-a7c4-43d2-a075-283b91b631c7",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1c68d7e1-9860-436a-965c-c1a8fb6b4ae6"
        },
        "item": {
          "id": "36cf8119-7b4c-445c-95d9-46be9153b79e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d68be006-63fb-42eb-b875-c8fcd52c123a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860b0bd0-5781-40cc-95fc-8289ba75f858",
        "cursor": {
          "ref": "2ca6e646-03d0-4ade-97ee-85333b14fe86",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "786a5416-f53a-417a-a80f-af5ed70f035b"
        },
        "item": {
          "id": "860b0bd0-5781-40cc-95fc-8289ba75f858",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8f90d781-39c5-4d83-9650-2f833403f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9260d65b-3a09-42fe-b20f-6b8983d0dadd",
        "cursor": {
          "ref": "b203d30c-5876-4d58-a7f5-a125aa3052de",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2e2f2d88-9b42-4429-b7f7-a641c736c00c"
        },
        "item": {
          "id": "9260d65b-3a09-42fe-b20f-6b8983d0dadd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2b0eb92e-e8d9-4f0b-bbc6-c41c06e00c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76d37e6-f116-408c-ae2a-3d7c067a6e0c",
        "cursor": {
          "ref": "2ccb3f11-6803-4e90-a880-49698d05596b",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e21a394f-afae-4b6c-bf52-56e905fead2e"
        },
        "item": {
          "id": "d76d37e6-f116-408c-ae2a-3d7c067a6e0c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e3868502-91ca-4c92-a84e-a115d1883403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867e6108-72cf-40cc-939c-983dd3bef458",
        "cursor": {
          "ref": "00549686-0165-4b46-893a-c798e5cb4f86",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3c8a4312-fded-47a9-b20c-6e5255e5062b"
        },
        "item": {
          "id": "867e6108-72cf-40cc-939c-983dd3bef458",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6f785b4c-c73f-4cca-a79e-66a056948581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0e407f-6435-490b-a8d6-9f4301587875",
        "cursor": {
          "ref": "732e97c7-fb89-4cfb-a211-e9d7b815b52d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "22a43b34-9c8c-4d0c-8001-7d8648623026"
        },
        "item": {
          "id": "8b0e407f-6435-490b-a8d6-9f4301587875",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0fb862e8-5cfe-4dbb-b940-27b1c2d79cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823dfa3c-b029-478a-a8ec-82ee1a14dd02",
        "cursor": {
          "ref": "a0453aa8-f730-4800-b878-2e804fb5e914",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6c47019c-809b-4620-9ef5-83e185eb4941"
        },
        "item": {
          "id": "823dfa3c-b029-478a-a8ec-82ee1a14dd02",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "305f53f8-1348-4233-8940-176c13683dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e605df5-0417-4092-9397-5211d1771f51",
        "cursor": {
          "ref": "b4d44d51-0abb-4c73-a81f-c73138ec501d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6ab484ec-c72c-4252-bc80-9bef18feb7b5"
        },
        "item": {
          "id": "4e605df5-0417-4092-9397-5211d1771f51",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cb3c5a02-069f-4c8a-a81a-98eeb8200c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5ec53e-23b4-4aba-94a7-044fbdefbe12",
        "cursor": {
          "ref": "9b58c276-7a7c-44c0-ae9d-c3249013bd61",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "df806e54-c73f-4975-8a66-55e1124d1994"
        },
        "item": {
          "id": "8f5ec53e-23b4-4aba-94a7-044fbdefbe12",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9b9574af-0916-49ee-94f0-be99c0c82319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc12c6-c149-4199-85c0-dd0c60c8d17c",
        "cursor": {
          "ref": "418783dd-fe3f-4bd7-8ee0-6f6c863ee28a",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cc684b09-337c-4113-947a-91a7a8b13118"
        },
        "item": {
          "id": "2dfc12c6-c149-4199-85c0-dd0c60c8d17c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "80c845d4-b37b-4852-9a07-8e93f55bf265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be995551-78fe-4436-a8d6-707006c716c5",
        "cursor": {
          "ref": "9b84ae75-e952-499d-9259-025996f89440",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fa441daf-c808-4a37-a4c7-ec9684595de9"
        },
        "item": {
          "id": "be995551-78fe-4436-a8d6-707006c716c5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed4646ab-fa24-442f-828a-22e57a8f02f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a95850-9615-474d-9937-ee5b8594800e",
        "cursor": {
          "ref": "7cfca7fb-caa8-4345-b3d3-12226819bbfd",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bac6ae38-1276-4a93-8a4f-ab13727757a0"
        },
        "item": {
          "id": "08a95850-9615-474d-9937-ee5b8594800e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5cc60387-1511-4a73-961b-520dfa7bc382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183ceaf-c1f7-4247-8514-d10394dc1287",
        "cursor": {
          "ref": "f4d0f413-9ab1-4d58-bac2-67fd3e3baa7f",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "893efa69-f379-4ffd-bd91-b72b2ec41f98"
        },
        "item": {
          "id": "6183ceaf-c1f7-4247-8514-d10394dc1287",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "117e2608-dc56-4ac6-b826-abf05843580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2fa240-73a6-4bd7-99a5-b080280a62fa",
        "cursor": {
          "ref": "b657f733-5d6f-4275-8c16-dad214dd4fec",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a90eb942-2336-4b62-867d-3e711cd2597a"
        },
        "item": {
          "id": "7b2fa240-73a6-4bd7-99a5-b080280a62fa",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4fb3e675-24bb-4238-a5b6-3d4f42e001cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bc7b0c-4866-487f-92cc-a16bd5f05e52",
        "cursor": {
          "ref": "741c9225-402c-4095-b122-5216dd1c17d0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f881a635-fa90-4906-8f80-d2bc754c7568"
        },
        "item": {
          "id": "48bc7b0c-4866-487f-92cc-a16bd5f05e52",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "202d96b0-335c-4ab2-a2b2-8e847afd4d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95472c7d-a37d-4122-9b59-5569cf0a4b35",
        "cursor": {
          "ref": "52a88e47-bd25-4675-a479-8f781aed1d42",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d81446ca-98fa-4cb8-95f9-7c0fcc22764a"
        },
        "item": {
          "id": "95472c7d-a37d-4122-9b59-5569cf0a4b35",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "83949583-585f-4353-aaef-1dd3838d5e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876504c-d580-4a94-bc96-1648c4ea3e8a",
        "cursor": {
          "ref": "6d440e88-d1ba-41d7-a2f4-017e1e2050f7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8a3e279-2cfb-4b57-8d36-84c809cd0e8e"
        },
        "item": {
          "id": "1876504c-d580-4a94-bc96-1648c4ea3e8a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f9c32178-d5b4-4414-858d-b3a7cd22a67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9d548b-3e0b-4444-9ccb-fa9fe55670da",
        "cursor": {
          "ref": "5109951e-7a3f-402b-b3dd-02b314f33ec4",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d61cbda-f90a-49fd-9c32-1c5e1eef27bf"
        },
        "item": {
          "id": "3b9d548b-3e0b-4444-9ccb-fa9fe55670da",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "212b6486-0aa7-4100-9452-e1f91e7f0c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73e5c8b-5395-432c-ad82-f7d352ac5904",
        "cursor": {
          "ref": "9ec595fe-12ef-4d70-a3b8-48662ebbbbe8",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e112a7c1-eb23-4078-9935-64c699c19e72"
        },
        "item": {
          "id": "f73e5c8b-5395-432c-ad82-f7d352ac5904",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aeaae9f3-e319-4369-900f-55f2210e6936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784f0692-8ea2-4089-8248-19c1e304df80",
        "cursor": {
          "ref": "fd1a09b3-2b80-43ec-9829-937e592ece53",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d4105246-dd48-42d3-a764-9d59e969604b"
        },
        "item": {
          "id": "784f0692-8ea2-4089-8248-19c1e304df80",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "21706222-b2d7-4696-93d0-66f7c74e393e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8927bec5-06ee-40b5-8121-49aaafba7327",
        "cursor": {
          "ref": "a8158829-b7a8-4ead-b456-08aa3282031e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bf548877-bbd3-47f3-bded-b7d84cf9370d"
        },
        "item": {
          "id": "8927bec5-06ee-40b5-8121-49aaafba7327",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6f28f000-f1d0-4522-ac76-83a683bd2dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f066156f-af64-4e30-b334-a492e02f439c",
        "cursor": {
          "ref": "3fb2d2c6-1d67-4cd6-8aec-50482a008e3e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "450495a7-c985-4385-8eb3-fb7771ce8966"
        },
        "item": {
          "id": "f066156f-af64-4e30-b334-a492e02f439c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4c54a767-ddb7-4441-8566-491f290ef42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d965659c-3d23-47d8-8ce2-5a81bdd3ad87",
        "cursor": {
          "ref": "6e14a5cf-eac0-4611-8acf-ba1e9ab5b184",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e65fd295-9605-48e6-8de0-eaab43faac95"
        },
        "item": {
          "id": "d965659c-3d23-47d8-8ce2-5a81bdd3ad87",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c6b1631-1b24-4ed6-92b2-3f65e77dd670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfdc04f-5b30-4c80-a98d-4de823d1648f",
        "cursor": {
          "ref": "5d771a17-a947-40ff-b2df-e885c45473fe",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c24b4697-b885-4a21-82ad-d8fb4048e60c"
        },
        "item": {
          "id": "5cfdc04f-5b30-4c80-a98d-4de823d1648f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ed7da2f-1491-4e94-8cdc-88b66274a9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a902467b-349e-48e2-9e6a-52c3aa6a3d51",
        "cursor": {
          "ref": "8d2cbedf-b3ba-46f9-b62e-05e97eb51239",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a1480a0d-2c59-49d7-8860-9acf1e07b88e"
        },
        "item": {
          "id": "a902467b-349e-48e2-9e6a-52c3aa6a3d51",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f23f47d6-be8f-4cf2-bf16-8513c123a85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f8ea4-b123-4295-afb7-8a28ebfd8f80",
        "cursor": {
          "ref": "9f676d93-a7ad-418d-8094-1154081584a5",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fa04fc70-f0ea-4c68-ae57-b5da23999943"
        },
        "item": {
          "id": "a42f8ea4-b123-4295-afb7-8a28ebfd8f80",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5e066e97-6bce-406b-ae49-1804903c9069",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d1a11e-6062-4e7c-bea8-a13aa8fd70ce",
        "cursor": {
          "ref": "1c9db582-3eb1-474d-9909-1f1ad90aeba7",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "26231fb2-4a0a-4044-96b7-07e7eb6567f8"
        },
        "item": {
          "id": "25d1a11e-6062-4e7c-bea8-a13aa8fd70ce",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b3b19061-621a-4a83-8ecc-1347b60264b7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 91,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a448d-4bc3-412c-bd43-bc4ac46c39c8",
        "cursor": {
          "ref": "ec82922b-268f-483b-a3b6-b7fb9712e521",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c58bcbbf-ac58-4e7f-8fcf-d90ebc1ac7b5"
        },
        "item": {
          "id": "a04a448d-4bc3-412c-bd43-bc4ac46c39c8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2aea37cd-6ab1-4cff-9674-a1b90320743f",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f2046b-9216-4527-8673-14791776698e",
        "cursor": {
          "ref": "fc8e719b-5e00-4664-b8f9-93bc7df001ec",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "78d42a3f-be4c-499c-a77e-f3efb39cc0d3"
        },
        "item": {
          "id": "a3f2046b-9216-4527-8673-14791776698e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d9388f84-b761-44b2-8b18-ed4e2b2e22bf",
          "status": "Created",
          "code": 201,
          "responseTime": 256,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b0fe0f-1c41-4d32-92d0-15d94e895bbd",
        "cursor": {
          "ref": "b68d5be0-81d0-4077-94b4-b3bec852dd39",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9f04dce6-389b-4d55-91ed-7667c284401c"
        },
        "item": {
          "id": "a4b0fe0f-1c41-4d32-92d0-15d94e895bbd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "69f32d42-a404-4571-af3c-e88f660339f8",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "de246ad2-8d9a-4fe0-a21c-cf5dc69c75fa",
        "cursor": {
          "ref": "b098acc5-06ba-4954-825f-489a3ec927d1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9fa269c8-ebd8-46e6-825a-7064eaddcd46"
        },
        "item": {
          "id": "de246ad2-8d9a-4fe0-a21c-cf5dc69c75fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "203ae013-31c4-496c-8bc0-c43475323a73",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "953aa11e-7656-4801-abe6-d7c2261f213a",
        "cursor": {
          "ref": "0b03b68e-f75a-4f42-bad2-657e7b1852a0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c386b4b-71a4-401d-8cbe-b55d7a8a40cf"
        },
        "item": {
          "id": "953aa11e-7656-4801-abe6-d7c2261f213a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f9d7e4df-fef1-414a-890a-e6b75fb54ce9",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d0f2f9-fa1d-43c9-8300-3e4805fcc3eb",
        "cursor": {
          "ref": "06a4ada5-b910-43a6-b459-4f0809fccbe6",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9701440a-df66-4118-8dac-1103264e21f0"
        },
        "item": {
          "id": "98d0f2f9-fa1d-43c9-8300-3e4805fcc3eb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0fac4b95-788f-4ac7-9773-d77b7e5ae78c",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67285047-0a73-4aaa-a634-dfeb34410343",
        "cursor": {
          "ref": "d663e656-55e6-4aae-8692-2c7300981439",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e40da19-9a13-410b-90ff-0fb11c0f733f"
        },
        "item": {
          "id": "67285047-0a73-4aaa-a634-dfeb34410343",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "78a3466b-ee03-4bb3-82dd-d0e509bfb10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67285047-0a73-4aaa-a634-dfeb34410343",
        "cursor": {
          "ref": "d663e656-55e6-4aae-8692-2c7300981439",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e40da19-9a13-410b-90ff-0fb11c0f733f"
        },
        "item": {
          "id": "67285047-0a73-4aaa-a634-dfeb34410343",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "78a3466b-ee03-4bb3-82dd-d0e509bfb10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cd634f-78f6-4245-9daf-740eaa070641",
        "cursor": {
          "ref": "4ba974f3-046f-4fb7-9d00-487596d0df89",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c329bff7-e4af-42ff-ba9b-9cadba54de93"
        },
        "item": {
          "id": "60cd634f-78f6-4245-9daf-740eaa070641",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6e2da76a-fe71-4238-a112-dfcc740b3909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb9e667-52a3-4b70-b278-e2704266fb4e",
        "cursor": {
          "ref": "27b6592d-8a9d-4c32-835d-b729287ccf40",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "831001d9-c529-41c0-979d-1fe5269ce8ec"
        },
        "item": {
          "id": "dcb9e667-52a3-4b70-b278-e2704266fb4e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "bc7d7976-9b48-424b-a5d0-0b1afcb45dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34657eca-31c7-4ede-ad10-d5f9386f688c",
        "cursor": {
          "ref": "79e082a9-ff42-4624-904d-b73d9891e933",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e9791377-eacb-43e9-92f7-e50cc8a85bbf"
        },
        "item": {
          "id": "34657eca-31c7-4ede-ad10-d5f9386f688c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dd1969e0-416e-4a01-8825-5c299b7ded79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8907f2b2-227d-4043-b147-5d2bfc73f24c",
        "cursor": {
          "ref": "2c60d782-c69a-4866-83ba-98ea5bcfe6f5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7a092b71-8634-410b-a4e1-9e9881ead62c"
        },
        "item": {
          "id": "8907f2b2-227d-4043-b147-5d2bfc73f24c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ccffe0e-b146-46b7-ba08-fe00f6903513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58974253-5a65-4f41-aa73-01669565685f",
        "cursor": {
          "ref": "6321acca-d6c3-4aad-8ac0-001adbef0ad4",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "de93b0c4-eb80-41ef-9425-1aba832a75e5"
        },
        "item": {
          "id": "58974253-5a65-4f41-aa73-01669565685f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "678984d2-c1c7-400d-b458-3aa53daea248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8070ddd-c001-479b-8500-669cb65c0e60",
        "cursor": {
          "ref": "d873db3a-85f8-4429-b2e9-d095e8fdf513",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "941a57f5-2722-40cb-b78a-f425f8d0f2ba"
        },
        "item": {
          "id": "d8070ddd-c001-479b-8500-669cb65c0e60",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "daf3e9fb-98bb-4897-9108-c38d63eb2d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66372e56-17c5-4712-80c9-0d880b89d066",
        "cursor": {
          "ref": "cb620c4c-c47b-4098-bf39-18bbf904f6d9",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b7ff8611-b131-4ab2-97cc-fe70eeebd422"
        },
        "item": {
          "id": "66372e56-17c5-4712-80c9-0d880b89d066",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f92aac60-e938-496a-854e-7bc18629d4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b876f27d-b035-451b-b8da-e3244ff57be3",
        "cursor": {
          "ref": "ec1e6e03-d166-4cfb-9661-f24d01c31f0b",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fd3f9528-e56a-4ab8-ac64-0511ff9e2b00"
        },
        "item": {
          "id": "b876f27d-b035-451b-b8da-e3244ff57be3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "07dd36b8-8e54-4099-b4c5-09f8db83afce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850e0d71-5221-47d3-85c1-2576e636455e",
        "cursor": {
          "ref": "bec13a1b-1959-482f-89e5-d3cbb4b1fb97",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b36ded33-db7c-4b9a-9e0b-98d5f6e01643"
        },
        "item": {
          "id": "850e0d71-5221-47d3-85c1-2576e636455e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcdda515-a1b5-485b-94f0-f1c91d467770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239f630-9493-4d5b-a401-fe947408bba5",
        "cursor": {
          "ref": "2cb95896-7fe1-40b3-9669-ae1392c43b4e",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0ac904d3-43e5-444a-b58c-a6db00b379b9"
        },
        "item": {
          "id": "4239f630-9493-4d5b-a401-fe947408bba5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1721f65d-e6b9-4b81-866b-d1ea24c45c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360c578d-f324-4258-afd0-a67189edf8f3",
        "cursor": {
          "ref": "d0c03124-e7d9-4dc3-8430-d1b7334b385c",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ee16685-ddec-4f53-9bd0-d4af6071fa92"
        },
        "item": {
          "id": "360c578d-f324-4258-afd0-a67189edf8f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7781b49b-c5ed-44b6-bb30-81444631c076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe02259-3268-4d8e-948c-d07d309c64bd",
        "cursor": {
          "ref": "098357a1-be56-46f5-a637-c01022f3af7c",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fc291261-ddeb-4c40-9515-9d8557faf4c1"
        },
        "item": {
          "id": "4fe02259-3268-4d8e-948c-d07d309c64bd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6450697-8bd9-43fa-8461-58bb2fe61876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac7645a-43fd-47ef-bf3d-ce32cb1e6dab",
        "cursor": {
          "ref": "c04001a7-0b83-4533-9d34-6d7e5bff0686",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4b6fbd83-5801-42bf-bc38-d4c78dfea42d"
        },
        "item": {
          "id": "aac7645a-43fd-47ef-bf3d-ce32cb1e6dab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "173197aa-a690-4b2a-8f99-e50b096dd011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a8d3f1-7cb1-4d7c-9d89-33086e6a4820",
        "cursor": {
          "ref": "ef36a377-f52b-48b8-bda0-b3963a55da73",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8088a08b-da3e-4f15-b3f3-2c555abc5345"
        },
        "item": {
          "id": "64a8d3f1-7cb1-4d7c-9d89-33086e6a4820",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a30aa110-bce2-424f-95f0-79a5a8f4a8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628279e9-4b0c-4eda-8505-b86f35a44af2",
        "cursor": {
          "ref": "a444807f-a5c2-49e2-a27d-ae542d8536c9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3686901a-7f20-4b3d-b183-1aa821f08e7b"
        },
        "item": {
          "id": "628279e9-4b0c-4eda-8505-b86f35a44af2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c51615a5-3182-429e-a9b3-5c3a7be425ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2c22d5-5309-4eaf-8574-128ce979e6c1",
        "cursor": {
          "ref": "f6807010-a0b2-4e94-b689-2a5f4003733d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8548f79e-717e-4ee7-a04d-e22e1263dee5"
        },
        "item": {
          "id": "dd2c22d5-5309-4eaf-8574-128ce979e6c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8d5560a7-ceca-4349-a25f-fe67a8ab3c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25ff476-7582-459a-88c1-c4af35052593",
        "cursor": {
          "ref": "35f381b3-38dc-4008-bd0a-14b6993fcd68",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7daf715d-c2c6-4ba5-ab14-d6f8f1020ad8"
        },
        "item": {
          "id": "f25ff476-7582-459a-88c1-c4af35052593",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3de6c470-b698-45c5-b4e5-ba318632b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d908cf-3752-435c-a5be-cda02d3ce497",
        "cursor": {
          "ref": "2e3f479a-5329-421c-abf4-8615bb862d3f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4e4117fa-93a4-4f39-a00f-51a0300874b3"
        },
        "item": {
          "id": "c7d908cf-3752-435c-a5be-cda02d3ce497",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "60d4a462-7d32-455f-b27a-3652b1617916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d333ce98-dc14-459e-bb11-b6fedefb470a",
        "cursor": {
          "ref": "823fd0b7-8f4d-4d1c-a2ab-5d39189c3f59",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0c0f9c5a-3473-40cd-881b-aae14969a291"
        },
        "item": {
          "id": "d333ce98-dc14-459e-bb11-b6fedefb470a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "67d51a03-b223-4d91-a449-50b433d45fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fcb7d6-b7b1-4c02-859a-be633c11fb04",
        "cursor": {
          "ref": "93b750e1-4869-493d-baed-1011189681c1",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d1478510-2756-48fa-9fc1-b57f1c261d17"
        },
        "item": {
          "id": "23fcb7d6-b7b1-4c02-859a-be633c11fb04",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "baca5f89-8afd-4b36-bcc1-7ccca99f765d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf396c6b-a491-4a8d-83e9-7acfc02fd423",
        "cursor": {
          "ref": "29a33ca4-8c9e-4a80-999a-4817c891c8f1",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bf4ec36a-250d-43ea-88be-fd40f7eda257"
        },
        "item": {
          "id": "cf396c6b-a491-4a8d-83e9-7acfc02fd423",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf5ba6c8-77ba-4b65-bf58-aa732ac57133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d68eec-c05d-4f82-94bc-2edafc67bf70",
        "cursor": {
          "ref": "9a7d6988-00ea-4ce0-a716-6eb9c00dec86",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b4e7c6f-b775-4d0d-82f7-3af074fff6ad"
        },
        "item": {
          "id": "05d68eec-c05d-4f82-94bc-2edafc67bf70",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "24350d54-ac8b-422d-b05c-ea936346acdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018ad9ff-cc8b-4e11-bfcc-b6e2af1aafa5",
        "cursor": {
          "ref": "a2a36465-c3f7-4b83-8288-dbb37d267ab9",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "71dfb949-9fe8-4d11-bca5-ca37681b31f7"
        },
        "item": {
          "id": "018ad9ff-cc8b-4e11-bfcc-b6e2af1aafa5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "466bc6a7-c5d8-4dc3-b238-b4d5635b8e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1633dc33-6a09-4374-a555-2f0a38e7c133",
        "cursor": {
          "ref": "b9a33bf5-c887-4617-98a3-2146b55ffcfe",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "61d25753-baad-4ad0-8597-c4d0fb13ed7c"
        },
        "item": {
          "id": "1633dc33-6a09-4374-a555-2f0a38e7c133",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b2febba4-281f-4ef5-98fb-47351e6d5f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc487f80-18c9-4c5d-9a67-48cd6cf1a06a",
        "cursor": {
          "ref": "abbb1c18-4d19-444d-a03b-54755e876340",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e5cf8b2-33f6-483d-aa92-9c35b7e97220"
        },
        "item": {
          "id": "cc487f80-18c9-4c5d-9a67-48cd6cf1a06a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2d2ea45f-12f3-4981-a2bb-33c07a2967be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7e88eb-e02b-4f00-86e0-b4452e0ba5c1",
        "cursor": {
          "ref": "d5dc32d9-8ac4-4541-94ce-8673a883b2ad",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "09484b9f-a1d7-44c6-9db1-016246565284"
        },
        "item": {
          "id": "eb7e88eb-e02b-4f00-86e0-b4452e0ba5c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d1a3f998-b671-46ee-8b77-6fa2eebb4ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a3b8b5-0f7b-41b8-a5cb-f35e56dc14ad",
        "cursor": {
          "ref": "c3ffa357-648a-4770-8635-8922357df9c4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "073d9988-790f-45b3-9da5-757ae8ca3f86"
        },
        "item": {
          "id": "e4a3b8b5-0f7b-41b8-a5cb-f35e56dc14ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1a306170-b02a-447c-bb7f-68130af5ac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94477cf7-390b-4887-996e-b1460c6e8199",
        "cursor": {
          "ref": "ecfd1978-e3d9-4301-a4ec-42494f63e549",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e867891-7620-410f-adc0-3dc2b1397443"
        },
        "item": {
          "id": "94477cf7-390b-4887-996e-b1460c6e8199",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "594302d8-cadc-478c-bc67-350937034d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeca508d-00d1-4841-b529-c2229c457bb5",
        "cursor": {
          "ref": "5966db95-89e1-43b3-a82c-2a625b6ecf42",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "08185e8f-a545-471c-aed8-fb62935f7d73"
        },
        "item": {
          "id": "eeca508d-00d1-4841-b529-c2229c457bb5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f2b4ff20-f16e-4a1b-9b35-3cce0580d5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd28eac1-bea5-4ea1-bf90-a640759c0d77",
        "cursor": {
          "ref": "8cb56fe3-a643-40db-b164-d0126c504dc7",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b1b69079-8c1d-43f9-bd1b-179f02b76da5"
        },
        "item": {
          "id": "bd28eac1-bea5-4ea1-bf90-a640759c0d77",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5022d13f-314e-4cd0-8ebe-7e696241f730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837b5ecb-5bca-47a7-8b86-32dc2aeb4010",
        "cursor": {
          "ref": "6ca93dbb-d8e0-4718-b542-3f02693f3aa1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "07581307-254a-4edf-a9f9-dbd42577b2e8"
        },
        "item": {
          "id": "837b5ecb-5bca-47a7-8b86-32dc2aeb4010",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d6465818-c4eb-4495-9bac-24e199dcf1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b75ae10-d251-4464-b823-d1361bf15151",
        "cursor": {
          "ref": "f8b27a20-42f1-41fa-b944-7cb71cacb753",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b8eb23fe-5d9c-4af2-ac44-5eafb2794c56"
        },
        "item": {
          "id": "3b75ae10-d251-4464-b823-d1361bf15151",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e73eea49-9256-4f48-93e2-913a9ec3ff79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc99eaa-9bab-4410-a6aa-5b4eefa3f67b",
        "cursor": {
          "ref": "5aacec86-c449-42de-b327-8d533aa39f6e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6912b9b8-1414-4e07-a372-f05ad39fb277"
        },
        "item": {
          "id": "efc99eaa-9bab-4410-a6aa-5b4eefa3f67b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "403d5f41-3f4a-45c8-bbcf-e720722fa690",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 31,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64360ddd-c3d6-45f7-a1a0-a585824b1c96",
        "cursor": {
          "ref": "5401cfb6-bf3b-409b-9717-b54d56c17452",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6946a121-9b20-498f-bdc5-3a03f07b4b3c"
        },
        "item": {
          "id": "64360ddd-c3d6-45f7-a1a0-a585824b1c96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "342998e2-6663-43a3-8c21-67b1a73a4932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64360ddd-c3d6-45f7-a1a0-a585824b1c96",
        "cursor": {
          "ref": "5401cfb6-bf3b-409b-9717-b54d56c17452",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6946a121-9b20-498f-bdc5-3a03f07b4b3c"
        },
        "item": {
          "id": "64360ddd-c3d6-45f7-a1a0-a585824b1c96",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "342998e2-6663-43a3-8c21-67b1a73a4932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7f7ceb-effc-4945-824e-3b79463e04c3",
        "cursor": {
          "ref": "a1b23a2a-c9fe-4737-8d7e-6a86d5c549f4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2bc60e58-ee16-4d24-abab-cbe5c3d6164a"
        },
        "item": {
          "id": "ed7f7ceb-effc-4945-824e-3b79463e04c3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1d25d7f8-accd-41dd-9f97-88512aa1c055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a441254-8a45-4c2a-9419-a715d22444e0",
        "cursor": {
          "ref": "7284d962-a8e5-4d68-ab77-8ec1729a2957",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "32368330-d23c-4ac4-adc6-61f0f8738708"
        },
        "item": {
          "id": "2a441254-8a45-4c2a-9419-a715d22444e0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3d0e8581-f592-4cbe-b7c1-417148290990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77d80df-48cf-4f82-b746-f57860a9a9e4",
        "cursor": {
          "ref": "f1696f20-113f-4d0a-bb93-561623fdc381",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8045340f-6e0b-44ae-9576-79cdb46a37c1"
        },
        "item": {
          "id": "f77d80df-48cf-4f82-b746-f57860a9a9e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f5c58a6e-f1a7-4b3c-a7d7-f9dabe9ff090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca3452d-ddb5-4d28-a7b3-2f1cc174dcd2",
        "cursor": {
          "ref": "46994717-6239-4019-af0f-806b0bd23779",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c14a0c88-03b3-417f-ac90-68e4d49881ee"
        },
        "item": {
          "id": "aca3452d-ddb5-4d28-a7b3-2f1cc174dcd2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ecb81410-87ed-4f3e-b193-29c24787cc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847ef4cf-eb16-44b1-a5d0-304c1b99c48a",
        "cursor": {
          "ref": "8ca3f014-5b3f-49a3-815b-fb110629a825",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7e46a195-a85c-4b90-9997-e1c15b7f3b7c"
        },
        "item": {
          "id": "847ef4cf-eb16-44b1-a5d0-304c1b99c48a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1b765586-da41-4e34-8cdb-ad021caf4579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d7bc5-69ce-4a80-a108-35eb147588b5",
        "cursor": {
          "ref": "59d8daf9-d72e-4fcf-923b-626a29a84c36",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2773eac8-25a1-4be9-b381-6b3965d16877"
        },
        "item": {
          "id": "8c8d7bc5-69ce-4a80-a108-35eb147588b5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "534244a7-d74f-4f91-be60-aaa05708480a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4c53bc-fcfd-49c3-acce-3a518dabcc15",
        "cursor": {
          "ref": "3549245c-5966-4604-9a05-3b6532b24385",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "18f3a0f0-680d-468e-82e3-55b6080b83de"
        },
        "item": {
          "id": "4f4c53bc-fcfd-49c3-acce-3a518dabcc15",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0f4e0951-cab3-444d-9f9b-0fed1a868192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28b9f83-e758-4388-849a-b05b07ece4b3",
        "cursor": {
          "ref": "68a7f82e-ac38-4ad9-9dc8-a11b6afd213a",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "21a3c630-a371-48ed-a9a8-32536db17323"
        },
        "item": {
          "id": "e28b9f83-e758-4388-849a-b05b07ece4b3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "282e6800-140c-4b5a-84b6-3ea4177a570e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dccdbd-6e1b-48e1-b2fe-4b52a973bb7e",
        "cursor": {
          "ref": "a38e698b-818e-4d95-ad31-7582f9af3232",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fc89fd24-a513-4359-a9c4-9ddbb248fdd1"
        },
        "item": {
          "id": "32dccdbd-6e1b-48e1-b2fe-4b52a973bb7e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "85f6b6c4-7a21-4b07-8c9c-0277c9b5f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271b6ba3-4d75-4a8f-80fc-874e0d606b7c",
        "cursor": {
          "ref": "f9cc5abf-2e69-451b-9ef9-bcaa0ed24cc3",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f0ebd0d0-1899-4e2f-ada8-39040ed29883"
        },
        "item": {
          "id": "271b6ba3-4d75-4a8f-80fc-874e0d606b7c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "83747cb2-baec-49ff-99d2-9145089af601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe4c3f2-4194-4cbf-86b3-0616e52dcabf",
        "cursor": {
          "ref": "0b920fcc-69a8-43d1-9019-e44cad4b8776",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1f4e308c-ab6c-4f57-a524-ff918c11186b"
        },
        "item": {
          "id": "7fe4c3f2-4194-4cbf-86b3-0616e52dcabf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a54246a0-4d81-4545-aa35-74208f56aeb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f3dc19-173d-4e89-afc2-cf492077c108",
        "cursor": {
          "ref": "8f561a9b-47f0-40af-aaff-dd10da518462",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e56c5102-059e-4072-bba9-6452b9900867"
        },
        "item": {
          "id": "80f3dc19-173d-4e89-afc2-cf492077c108",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7d5b82b9-6b91-4716-9744-4e0644218a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6966c333-7287-4b93-b931-239002f0c656",
        "cursor": {
          "ref": "e4e508b0-a609-45ba-bcf1-fdfafbcbb9c6",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "82463d0e-77e4-4b74-ad73-5d2c79e00b29"
        },
        "item": {
          "id": "6966c333-7287-4b93-b931-239002f0c656",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a5affbe0-c2e3-4ce4-9ffa-083145f9a21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50483c9-1837-4043-afa2-c82c4e126566",
        "cursor": {
          "ref": "d0c9d174-2eaa-41c7-8c8c-0107a2684f65",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d49c1517-9d3d-43af-8314-0fa40a26f4e1"
        },
        "item": {
          "id": "d50483c9-1837-4043-afa2-c82c4e126566",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bb75990e-59de-4941-bb93-8b25e0447a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53048ee5-7696-4ec3-bb39-de0b0a55bedf",
        "cursor": {
          "ref": "c683e140-57d3-47f0-9e6b-7247ad956163",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b36df7a9-7d22-4e2a-8731-6a751df5e38f"
        },
        "item": {
          "id": "53048ee5-7696-4ec3-bb39-de0b0a55bedf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "658ba007-0ba6-4c49-9fef-921263912d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e518b8c6-f280-4045-9a06-5d7897825a72",
        "cursor": {
          "ref": "ab270134-dace-4461-b659-dd7041eec01c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f5bb747d-ba0a-41f8-9721-210aceaca1bb"
        },
        "item": {
          "id": "e518b8c6-f280-4045-9a06-5d7897825a72",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4de05c92-1fe6-447c-a441-06772300a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc9da3e-477c-47b5-bb3e-b63cd3fb0c23",
        "cursor": {
          "ref": "4842aedb-5669-4a15-8e2b-e58ca4718c31",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "08d44ce0-da0c-4d89-a754-34e0178fffb8"
        },
        "item": {
          "id": "acc9da3e-477c-47b5-bb3e-b63cd3fb0c23",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c6470e1-4057-42d9-a0f4-8111fc2df64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630d05eb-4d3a-46e6-be6d-5bbf39eaecd2",
        "cursor": {
          "ref": "b54a77ed-6315-4083-a6b0-46b82cf56670",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b2164b9f-87ee-4dbb-b2de-49400f840b74"
        },
        "item": {
          "id": "630d05eb-4d3a-46e6-be6d-5bbf39eaecd2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2c227f93-7a87-4574-9149-9ea94cf30aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83512a5-7a15-4e72-8855-4fcde961b834",
        "cursor": {
          "ref": "ebc5cb0e-e068-44c1-9c5d-cac7894b257d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "540a3470-51c1-4885-bbb4-abaa26de696a"
        },
        "item": {
          "id": "b83512a5-7a15-4e72-8855-4fcde961b834",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1600aca0-d1df-4909-a9d1-671cf85cf33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a16a68-63b3-4a9a-af52-5d8abf23244e",
        "cursor": {
          "ref": "2b56df48-1ca5-490f-a242-69109d30103c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "dafccef7-f3e1-4ae9-aa88-e8e5afcfd842"
        },
        "item": {
          "id": "55a16a68-63b3-4a9a-af52-5d8abf23244e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1aa1fa59-953b-4990-a436-bb35e2a2898d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c5f88c-a7a2-45c6-b61d-fa6fefd0752b",
        "cursor": {
          "ref": "d1fbfffe-d9c7-4b76-ab95-d9ceef37ea8c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "eff9007d-bca4-4416-8e15-61b915e87205"
        },
        "item": {
          "id": "60c5f88c-a7a2-45c6-b61d-fa6fefd0752b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ad82d9c7-8716-49d4-b00f-63d104510465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ea88f-7867-4c84-a45a-06f9dee623f8",
        "cursor": {
          "ref": "e8bf7ec8-ef0e-40f0-9c48-3d03745ea45c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "30480140-06ac-4943-a9a2-ca4e96b9059d"
        },
        "item": {
          "id": "1a5ea88f-7867-4c84-a45a-06f9dee623f8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "035045fe-a6ff-4a85-9575-529ac65e2990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053febbf-55e5-4928-a795-f0477f3a6276",
        "cursor": {
          "ref": "64d7cdcc-e7dd-4c7a-8d10-ffb7d10fecda",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4f8b3893-9a9a-4cd9-a425-e1851da763f6"
        },
        "item": {
          "id": "053febbf-55e5-4928-a795-f0477f3a6276",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5fa2a607-484e-4c6a-9971-9970abef567f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f748f178-3ac7-4098-ac95-b6372e332e87",
        "cursor": {
          "ref": "bc65b7ad-5e19-4e88-bdd5-3994c0eb0df0",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cfad8cf6-81f5-4324-902e-6a421e79030c"
        },
        "item": {
          "id": "f748f178-3ac7-4098-ac95-b6372e332e87",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5db1d9a3-ac3a-48c4-b83a-98fd3de019cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c5e1d3-ed47-4e54-83a7-8cdbb60abdbc",
        "cursor": {
          "ref": "00271e9b-0265-4d08-a85f-6fee0130eeca",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "390864db-3002-4d03-81d0-beaa76445527"
        },
        "item": {
          "id": "51c5e1d3-ed47-4e54-83a7-8cdbb60abdbc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f99e6b9c-f0fe-4677-9e0b-a8bc83a6b1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9723d7-74cd-4d0d-a475-8e6dda5585ca",
        "cursor": {
          "ref": "e402d7b2-1ad1-4434-b762-a1ecd25217f0",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5fefa660-2c37-4734-9212-e1dba8e2bbab"
        },
        "item": {
          "id": "da9723d7-74cd-4d0d-a475-8e6dda5585ca",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "181ceeaa-37c2-4427-b841-003abec83680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7151006e-3e46-4195-86a4-df0f3a4834b9",
        "cursor": {
          "ref": "00f87439-4ab4-4a9a-a2c0-ccfd0ac58149",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "802f4f41-bd93-4263-9714-75d19a4804da"
        },
        "item": {
          "id": "7151006e-3e46-4195-86a4-df0f3a4834b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5f1ac48b-29d2-4584-8a5b-b4eb4dd25603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7749afd-7efb-4921-9cf9-6655e39ebdff",
        "cursor": {
          "ref": "1b7ac453-517e-4388-9356-a41b1dc366b4",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "375dee60-96db-4ed2-bcfb-6efe26d0be08"
        },
        "item": {
          "id": "f7749afd-7efb-4921-9cf9-6655e39ebdff",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4b50d2a2-e223-45de-b3bd-ed2edf948347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9f1aad-4007-47f2-9578-907a7fd6ba97",
        "cursor": {
          "ref": "ad9cd8a1-c9b8-4d4f-9964-16c387b5fdcf",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c74d826a-e302-4eeb-970f-34f5729c3efd"
        },
        "item": {
          "id": "5f9f1aad-4007-47f2-9578-907a7fd6ba97",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "88f7f03d-adc5-4d84-add7-0911ffa1e55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0d04a6-90d7-4871-baf4-6d6cb1dbe3cf",
        "cursor": {
          "ref": "3c76d90f-eef9-4e4b-857c-b4e1c40faba8",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a6cfb9b5-23c4-43b7-ae75-d13e5d6e6bee"
        },
        "item": {
          "id": "ec0d04a6-90d7-4871-baf4-6d6cb1dbe3cf",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8415d295-1f11-4699-93a3-be6e9d4fcab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccea35b-688a-43fc-8ad6-27a1b456f957",
        "cursor": {
          "ref": "804c86e3-ae4d-4095-8e10-b394a4425b13",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "da2cc3b4-dc53-4873-bd7a-d266d482690e"
        },
        "item": {
          "id": "7ccea35b-688a-43fc-8ad6-27a1b456f957",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "36eda942-d374-4d87-9121-7cce1509d75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c24840f-57fe-4df5-98a7-7e31bde653f9",
        "cursor": {
          "ref": "dd378200-2655-44be-8fc4-6caa15fa8b26",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "83e85c75-923a-4ee7-b1fe-00dc88fa2e4a"
        },
        "item": {
          "id": "0c24840f-57fe-4df5-98a7-7e31bde653f9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d7db8261-7574-47fd-be20-32a490d0366c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2056a7e2-774a-433e-b904-1a03a258af6f",
        "cursor": {
          "ref": "5396961f-7dd3-424b-bccc-aefc766d7130",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9d0bae83-d277-4858-9608-8f1170d8ff11"
        },
        "item": {
          "id": "2056a7e2-774a-433e-b904-1a03a258af6f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6357ac43-1866-4878-ac0c-42f7d52da573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4451aa9a-4d4b-4455-8be6-95912a79aa2b",
        "cursor": {
          "ref": "c38ee1ea-b727-4d5f-809d-b92d47020412",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ba278b73-bcfd-4a3b-b078-293f9bbb2c8a"
        },
        "item": {
          "id": "4451aa9a-4d4b-4455-8be6-95912a79aa2b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6fd5776c-2d64-4a12-b3bb-91c00f512318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6209fece-d1ec-4281-9770-2a1704d95720",
        "cursor": {
          "ref": "629f8a77-c163-4167-a36c-5de7d1889b8a",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f3e897f0-09cd-4808-90bc-f774935ddbe9"
        },
        "item": {
          "id": "6209fece-d1ec-4281-9770-2a1704d95720",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "356d10c3-1385-4dfe-9716-795b7ec455c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cafd394-9468-4cee-ace4-9a7359ed9aa7",
        "cursor": {
          "ref": "40303221-f24f-40c5-8c01-067bbf7fffcc",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6ab224dd-eb65-45db-bcb4-a4f5ff339c5a"
        },
        "item": {
          "id": "4cafd394-9468-4cee-ace4-9a7359ed9aa7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a0ff9dc3-0ce3-4712-92ee-33caa3910c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287bcda8-589d-4956-91a7-f486959faf8b",
        "cursor": {
          "ref": "a44d0bcd-9e4e-453e-b073-6c97b64bde87",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d3161c40-075c-4360-9d79-04ff2d663ffe"
        },
        "item": {
          "id": "287bcda8-589d-4956-91a7-f486959faf8b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bf8fe7b1-e9df-42da-bcd3-7cb24e192c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc56d8c-f810-4a13-a3c7-fbbdb86d8a12",
        "cursor": {
          "ref": "f716e907-24de-461f-9902-0175d158ef62",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ed1ea454-02f7-4b22-8118-f24d93ef18a6"
        },
        "item": {
          "id": "0cc56d8c-f810-4a13-a3c7-fbbdb86d8a12",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "62c83bce-9201-4a84-89f9-5a202d9e7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d0d4dd-dc6a-487b-a7c8-0d02a0871ae9",
        "cursor": {
          "ref": "5f6cdc5a-3344-4218-8377-d06af42e8e83",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd317d1a-3c99-4711-9e66-4ffed923bb14"
        },
        "item": {
          "id": "f5d0d4dd-dc6a-487b-a7c8-0d02a0871ae9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a5530883-52c8-4c55-9c4f-7ac640fdcc30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea12914-a254-4979-83d1-e2b155fb2201",
        "cursor": {
          "ref": "0c60b460-26d7-4686-89ed-7639b7d8eeea",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b744ec16-7e6e-4d99-abc6-10a2f184b498"
        },
        "item": {
          "id": "cea12914-a254-4979-83d1-e2b155fb2201",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fd5bc99b-ab96-4392-b601-fbc14332f5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397eacc8-8200-4781-b2ab-46d4b0118a0c",
        "cursor": {
          "ref": "428ca659-3a9a-4114-9585-c1686708861b",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "57309930-1d36-4ede-b59e-00d1c22001cf"
        },
        "item": {
          "id": "397eacc8-8200-4781-b2ab-46d4b0118a0c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5cc4fa2d-5d8f-43fd-9aa2-739fe1fe311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308fa252-67dc-455f-b04b-64edbbeb2e70",
        "cursor": {
          "ref": "e0a4d117-423f-4b5f-9b86-44e3ad7fbd24",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b9e9b05-2ed1-4c80-8272-5942703916d7"
        },
        "item": {
          "id": "308fa252-67dc-455f-b04b-64edbbeb2e70",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a7508bb-168b-42ab-8f79-fa463537bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84ab0f8-91b9-4ecd-8dfc-37779b6fb704",
        "cursor": {
          "ref": "128c9fc8-073c-4bc9-b99a-ed108b375337",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6f1aaf75-7579-4859-969a-077f99f6d567"
        },
        "item": {
          "id": "e84ab0f8-91b9-4ecd-8dfc-37779b6fb704",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8012a823-f54f-4de0-93da-a75c781c6738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09e3fdf-e0bf-4ae1-8ab2-0ef65364c166",
        "cursor": {
          "ref": "800977ed-9a77-4f93-a92f-aaf834c5f229",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0b7177c8-1c6e-4269-9e8a-ab93dbb11263"
        },
        "item": {
          "id": "f09e3fdf-e0bf-4ae1-8ab2-0ef65364c166",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c2711f5d-b55c-4535-b6ab-32f657b7dfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e34b809-8f38-4947-96cc-e18b5177fb20",
        "cursor": {
          "ref": "2b7838e0-05cc-4427-9ca6-ed61bc1a1b2c",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28ad2acb-2ad2-4c07-8714-e4dfce2e9e82"
        },
        "item": {
          "id": "9e34b809-8f38-4947-96cc-e18b5177fb20",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "604791cc-9fb6-4db4-8da6-801f1b7ff090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8afa55-424a-4896-bebf-c05d47af3963",
        "cursor": {
          "ref": "78c922ad-70c1-4bcf-b6f0-1e5449a65e07",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca9ee78f-ec04-475b-b3cd-9cf608ed145c"
        },
        "item": {
          "id": "7b8afa55-424a-4896-bebf-c05d47af3963",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9cc21931-c095-43c5-94e8-53cca913cefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebcd886-abb4-42f7-9fc3-7a3a4682e089",
        "cursor": {
          "ref": "1713a23c-c613-4780-8b3b-162b0d20c6cd",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f7fd71c0-9889-4d1e-8276-c1a5d3059e67"
        },
        "item": {
          "id": "2ebcd886-abb4-42f7-9fc3-7a3a4682e089",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5dab64d2-64a5-43bb-9159-fc1d63a4f296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d42c87-ee39-4b27-b7bc-5bd5e0367cf9",
        "cursor": {
          "ref": "951886a6-5277-4023-a148-e28160ee41cf",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ba752319-b1f8-49af-a3bc-64c80a59cf55"
        },
        "item": {
          "id": "d2d42c87-ee39-4b27-b7bc-5bd5e0367cf9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c4ccd6d1-39be-4cda-9d94-6bcae8313917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0b2024-0fd0-4ac9-8fac-ba2877a67fb0",
        "cursor": {
          "ref": "acd3d6e2-1130-484a-bb67-d3e21019f8aa",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "608e9fc1-29e3-49f9-a67d-8385e62eb22a"
        },
        "item": {
          "id": "8b0b2024-0fd0-4ac9-8fac-ba2877a67fb0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "62c6b9f3-b29c-4afa-9493-c1d9cda7b174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00e30ec-ea15-4dcd-b1f1-c0c8fa13157d",
        "cursor": {
          "ref": "6e1b5adf-17ba-420b-a765-d9643c3cae64",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2e73417b-8922-4a60-83b9-49e4bac3d1cf"
        },
        "item": {
          "id": "c00e30ec-ea15-4dcd-b1f1-c0c8fa13157d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0881e6c3-6b74-46ae-82cc-c91d0c17fb3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8510842-ce16-46ba-954d-3b2e9c430106",
        "cursor": {
          "ref": "9df439bf-24f0-476a-a639-3979d3092233",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e734dd12-6c64-44c9-82b2-5ee8c234556a"
        },
        "item": {
          "id": "b8510842-ce16-46ba-954d-3b2e9c430106",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "924eec99-00fa-4ef4-9737-7beeee87fd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e0dd07-8279-4a1c-815c-e9e5cfe9914e",
        "cursor": {
          "ref": "7791aba8-c5da-4ab7-8dea-bf4ca11df386",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f8f72e4b-ded6-4ff0-b4b1-d9845dbcb457"
        },
        "item": {
          "id": "26e0dd07-8279-4a1c-815c-e9e5cfe9914e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "31d574dc-a2b0-495b-8295-d246b7c803c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b2ed8c-e87d-4d41-a96e-3cac7303822e",
        "cursor": {
          "ref": "9560533a-dc2b-4a16-a816-e58c2c43756d",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "81da0429-e6a9-4f27-ae1b-0ee1160bb04b"
        },
        "item": {
          "id": "a0b2ed8c-e87d-4d41-a96e-3cac7303822e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "573ef7ad-cba4-4423-a77c-7055370d4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88db21a-619a-45e9-814b-f22c93396095",
        "cursor": {
          "ref": "233b5c47-8cba-4205-bb82-94be005140aa",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3fc34f25-ced8-47bb-ad8e-dce9be3fbcc5"
        },
        "item": {
          "id": "a88db21a-619a-45e9-814b-f22c93396095",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ecc5db29-509a-4bda-aa1d-4bd13e8609d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa45b58-2377-4c9c-a4da-5a400e4ab692",
        "cursor": {
          "ref": "00e9bf30-10f0-4fca-ac75-16d87cb33c63",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "492d5800-a70b-4544-bfc6-7f598c9a154e"
        },
        "item": {
          "id": "0aa45b58-2377-4c9c-a4da-5a400e4ab692",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3a32edfb-cc86-4f9b-afba-fc07a5299c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79558c8-0792-4aa3-8d8f-5c76297b8ece",
        "cursor": {
          "ref": "62217982-ee4b-41f0-bb72-f3755fd94473",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a85cb964-9b71-49cf-ab22-0e69337af9ee"
        },
        "item": {
          "id": "b79558c8-0792-4aa3-8d8f-5c76297b8ece",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e6932e8b-a1c2-45b8-99e2-b27e667e5327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d31733-0bbc-4072-acf2-8536b967cb45",
        "cursor": {
          "ref": "fbf33c68-28a0-4b11-a736-f9f6c27f110a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ab0719a2-673e-4ec3-96ea-79457a1ecb81"
        },
        "item": {
          "id": "f0d31733-0bbc-4072-acf2-8536b967cb45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2d052bb9-5f6c-42fd-ba77-6571cda08492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14316c36-eaa0-4e4d-bc3d-58d49688cd07",
        "cursor": {
          "ref": "3337755e-6761-4eb9-a90e-ca71604eedc5",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "005c27cc-fa24-4b69-9e36-330c5e8b89b2"
        },
        "item": {
          "id": "14316c36-eaa0-4e4d-bc3d-58d49688cd07",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32e53d60-1438-445d-8aaa-1631a317c3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f2334d-1757-4396-8add-bc53069d035d",
        "cursor": {
          "ref": "2408b96c-47f5-4b8f-b264-02a46f8d0d21",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e6130326-f95b-4d94-aef4-f10c433f9baf"
        },
        "item": {
          "id": "65f2334d-1757-4396-8add-bc53069d035d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "da1594e0-70e1-4de9-9265-03d11ff74aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ba0dc9-b19a-46e8-8442-376ae12bc08a",
        "cursor": {
          "ref": "1309abb7-57d2-4d77-bc6b-a1918d89bab1",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8c9fef67-d07b-4c43-ba53-df6ea1de0f97"
        },
        "item": {
          "id": "57ba0dc9-b19a-46e8-8442-376ae12bc08a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f99b2e5c-259e-4d05-93a5-befa06176b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24236008-727f-4efd-9f4f-fbcb4ea9ecdf",
        "cursor": {
          "ref": "ab11873d-755f-477f-b90f-34005b083b41",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fca9807e-85bf-45f9-801d-648de2eac117"
        },
        "item": {
          "id": "24236008-727f-4efd-9f4f-fbcb4ea9ecdf",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "02e81595-cd8b-4939-b251-9024a8aed21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66fcf52-c5b7-4ba8-8e22-ba07b5d5e694",
        "cursor": {
          "ref": "a37dc882-5601-4e40-8895-2239731d0422",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "567e11ec-31f7-4571-ae13-f3064bbbbcce"
        },
        "item": {
          "id": "c66fcf52-c5b7-4ba8-8e22-ba07b5d5e694",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3162f887-220b-4ceb-bf79-5ad8d21cd2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c39701-18d3-4afb-86c8-4743cb217e01",
        "cursor": {
          "ref": "ccbc13e6-a38f-447e-8c5d-7e6c06c6a420",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9373c796-3d07-4b98-8740-8e1f74e3af9d"
        },
        "item": {
          "id": "00c39701-18d3-4afb-86c8-4743cb217e01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ae79c03a-3b37-4de4-b7c7-1cf76101e101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0293e6e8-b675-459b-b11d-a13e8aff77f1",
        "cursor": {
          "ref": "3119a80b-2c1e-4118-a5bb-bba0df6ae340",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "658e52df-2d0d-4d42-9c20-161039cbf1bd"
        },
        "item": {
          "id": "0293e6e8-b675-459b-b11d-a13e8aff77f1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "95fcbc4c-e74c-4bfc-be42-cf1ba40c24b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21acb8f-98ad-4885-82f0-8afb3a1f1ed4",
        "cursor": {
          "ref": "50224969-16ee-4b14-afd9-478bc7a19e60",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e8fb47e8-5311-405e-937f-ea43f2acdaa3"
        },
        "item": {
          "id": "f21acb8f-98ad-4885-82f0-8afb3a1f1ed4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "77b01dff-62ec-4d94-9dd9-ba8d7e8e74ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46adb1ce-3dcf-4080-b80d-22a823b29196",
        "cursor": {
          "ref": "dce8a872-842d-4de5-9102-89bfdf26485f",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "01f6ce33-3165-4328-a313-e9c16df9d46c"
        },
        "item": {
          "id": "46adb1ce-3dcf-4080-b80d-22a823b29196",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3ced7717-c182-44f6-9ed8-6d69a785f222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf430e2-5732-43e0-b7f5-9c1e6074cd1a",
        "cursor": {
          "ref": "f126f940-f95b-4aee-b88d-99c4113c8528",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "25418d9c-f78e-4d26-95c6-f9dec1cc9487"
        },
        "item": {
          "id": "cbf430e2-5732-43e0-b7f5-9c1e6074cd1a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9469d68b-8a48-41a7-aaaf-8f1f9f3ef284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c8cba0-6c9c-4d0e-b4ef-5aa6c8509237",
        "cursor": {
          "ref": "c17a72b1-907c-4c35-9455-2f85d76ac4a9",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b707e924-e0ac-4ffa-a059-91afb46f7c0f"
        },
        "item": {
          "id": "03c8cba0-6c9c-4d0e-b4ef-5aa6c8509237",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1a4890fd-129c-4fdd-b1fa-1d858e25add7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75099fad-7e6b-4854-9148-57bc4c7c3f17",
        "cursor": {
          "ref": "27093146-c22a-41ac-9363-e0a389b8666c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "fe72b016-5870-47b2-b8b1-4cb81358b008"
        },
        "item": {
          "id": "75099fad-7e6b-4854-9148-57bc4c7c3f17",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8438ef4f-64ad-4fac-a24f-3de31151c950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73f75a0-f100-422b-a508-112d85c14128",
        "cursor": {
          "ref": "d3fecdc0-0d60-4cea-ab75-fc0d177bc040",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0359f935-a019-4183-9efb-b911222ebabe"
        },
        "item": {
          "id": "a73f75a0-f100-422b-a508-112d85c14128",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a5cd5cd1-0296-4074-b7bf-5d67bd2bbbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ae92f2-abd6-4a3f-8eba-b67803addf79",
        "cursor": {
          "ref": "d515d1cf-d671-4518-9e8e-1be00cffdb51",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a917f086-6d39-43a7-9153-49e6965af6fd"
        },
        "item": {
          "id": "e9ae92f2-abd6-4a3f-8eba-b67803addf79",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "29a5910d-8f11-4c36-9175-4a54752c6333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0811e5e-b582-44a6-a2b2-ec2f57dc1b94",
        "cursor": {
          "ref": "6d754d1e-1186-4532-8c39-d7c0fc88e7fc",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "45ff7a22-6959-4eab-a5a0-986e73274df6"
        },
        "item": {
          "id": "a0811e5e-b582-44a6-a2b2-ec2f57dc1b94",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c2267c6-2ec0-4ec9-b287-c41f87a7e5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636a55d7-c323-45dd-b7c8-60d3bab8719f",
        "cursor": {
          "ref": "cb2b578f-89e3-4e37-aa96-64d6a83308fa",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "889f9b67-f55e-4dfe-8e85-b2a679bcf827"
        },
        "item": {
          "id": "636a55d7-c323-45dd-b7c8-60d3bab8719f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "277dcb9f-de4d-4b96-9cb8-5d6deb235bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233a79ff-4b7b-44a4-8cab-3c8af2a9360d",
        "cursor": {
          "ref": "d8275470-57fd-4303-a53e-1d70e381edbf",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c87e34ad-8e14-4c7a-b9f8-d6cb515438cb"
        },
        "item": {
          "id": "233a79ff-4b7b-44a4-8cab-3c8af2a9360d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2f827330-6d41-48bc-90c6-efc8a89de180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec3fd33-cd29-4ab1-9cce-c22c5569fa6c",
        "cursor": {
          "ref": "db6ca00c-add5-46a7-aafc-05658d5fd8fe",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0d3eba35-3c8e-4e61-9983-1987773e6516"
        },
        "item": {
          "id": "bec3fd33-cd29-4ab1-9cce-c22c5569fa6c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "01d37e9d-7209-48a5-973e-d4f98ee20dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317b0bf2-7b09-4da5-a15e-506b39b06fdb",
        "cursor": {
          "ref": "545cf639-445f-4d1d-886d-16316ca320f2",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d6764340-dab3-4b3d-89b5-a298b4b21116"
        },
        "item": {
          "id": "317b0bf2-7b09-4da5-a15e-506b39b06fdb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a9777073-ecb0-4fe1-ba1b-eaf36a888a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca64095-ed57-4a95-a148-c016dd90007a",
        "cursor": {
          "ref": "72a6a1a9-d308-4d4f-86db-f9c68694027d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1034af2e-9f08-478f-a706-3415ff2754df"
        },
        "item": {
          "id": "3ca64095-ed57-4a95-a148-c016dd90007a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ee0b5b3e-c0d7-42dc-bc25-2ba68ef41289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4c0079-369d-4d71-85a9-f5de60e1c855",
        "cursor": {
          "ref": "bb2d35df-aaec-4718-8441-bf9b1532e6ae",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "38a2550c-534b-447b-aa30-72e3d99ebbcd"
        },
        "item": {
          "id": "cc4c0079-369d-4d71-85a9-f5de60e1c855",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "915737df-e969-48d4-827a-69214d6e8945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ded9eb-24b2-4bbb-9a9a-b22f700974f8",
        "cursor": {
          "ref": "7177805d-f522-4832-abfa-e660d24d8456",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "99b14fe9-0a7c-4b05-9afc-2b3c8c6adc7b"
        },
        "item": {
          "id": "90ded9eb-24b2-4bbb-9a9a-b22f700974f8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b3b44fc5-c163-4f92-9331-d4b796b419f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020d242f-e75d-4101-b154-98ae6c99ee11",
        "cursor": {
          "ref": "73e37ae5-2f15-4a6e-9908-c65e3b66a7cd",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c4a9cf8b-9362-42bf-9f51-6ae89a7fc4fb"
        },
        "item": {
          "id": "020d242f-e75d-4101-b154-98ae6c99ee11",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fb3d81d0-f40f-4fd9-92cf-0375a506f456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6c25c9-aa6b-4aa6-a9da-0f77b970d875",
        "cursor": {
          "ref": "aafa54f1-3cca-48e7-82ad-d50887025045",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "56c1870d-6d67-4ad3-b613-b0465192db90"
        },
        "item": {
          "id": "ef6c25c9-aa6b-4aa6-a9da-0f77b970d875",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0caddb9a-c5ce-40df-97e6-25115f535c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df72675-d0fd-4d76-839f-e71e4ef173ad",
        "cursor": {
          "ref": "1209b68a-b72c-4ef6-a57e-d4b7163e215f",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b96e1129-2b4b-437e-882f-380b4b40407b"
        },
        "item": {
          "id": "2df72675-d0fd-4d76-839f-e71e4ef173ad",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5507181f-c2ea-4750-802e-20e8e6e910f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78cb7e3-f890-4b4d-929f-d290cbba259a",
        "cursor": {
          "ref": "c8acd1b8-32fd-488e-8d08-dab78b26c62d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a89ad00b-d1ca-40f0-bac3-b84c7ecd78e6"
        },
        "item": {
          "id": "b78cb7e3-f890-4b4d-929f-d290cbba259a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6b2e9865-2e29-4304-9f87-d78afd053255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecce42c-5639-4e98-b269-acb37139f6fe",
        "cursor": {
          "ref": "9ab8ddf9-d76c-43d0-ac1a-fc86a8ac9be3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4083b7ee-9c1c-4c42-8769-0ce26385de3a"
        },
        "item": {
          "id": "2ecce42c-5639-4e98-b269-acb37139f6fe",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3ce1ad31-f05d-42d2-be0c-604e98206936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587863d0-3d23-4db4-b876-ffd2c3bcf1b5",
        "cursor": {
          "ref": "ace53585-3bc5-4fd9-9442-27bb8ad29a8d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "41235dea-014d-48b4-82c3-17972443eab2"
        },
        "item": {
          "id": "587863d0-3d23-4db4-b876-ffd2c3bcf1b5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "538e2e88-96b6-42fa-9144-e6cb64185af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7599bcc-d86d-491a-95ca-09ab69aadd15",
        "cursor": {
          "ref": "e6f93682-cc60-47bb-861a-68a05e84d724",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0e8b766f-391b-4fc8-bc3f-7597c184fddd"
        },
        "item": {
          "id": "c7599bcc-d86d-491a-95ca-09ab69aadd15",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "70559166-ae7e-4d29-9b9b-2a25991cee6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab8148f-6957-4a83-aa9b-143ebbcba3a6",
        "cursor": {
          "ref": "20b1c919-cf08-499d-8a54-88c21166c159",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "95a442aa-cc3e-470e-8064-8ae0e86275bd"
        },
        "item": {
          "id": "6ab8148f-6957-4a83-aa9b-143ebbcba3a6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1357425b-43b9-4a86-bd98-0baa4162adc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c5c7af-1545-47bd-b989-3c4783a5e193",
        "cursor": {
          "ref": "bd1f4ef0-928d-47f5-a60d-5ae577ff7e6e",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4bd4ad93-1e1a-4a71-a1a2-a3634ff08494"
        },
        "item": {
          "id": "b9c5c7af-1545-47bd-b989-3c4783a5e193",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e1f8344a-4eff-450a-b2b6-f9e0ee7e1042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4522cb-97bb-4070-ac9c-5cea357e5186",
        "cursor": {
          "ref": "02964919-567a-4785-a53b-b4332c4d6716",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b0b91077-72b9-4ac3-8620-85aedcf3cd90"
        },
        "item": {
          "id": "2f4522cb-97bb-4070-ac9c-5cea357e5186",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "15442a9a-93ef-4b47-939d-cbf473a02dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397a4ea2-e29e-4c63-87f1-2d6482f8a36f",
        "cursor": {
          "ref": "e4944e7d-7336-4bac-833e-0c7f7bd296cc",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b3cc87df-29b5-4381-91f1-c2839a0dc38e"
        },
        "item": {
          "id": "397a4ea2-e29e-4c63-87f1-2d6482f8a36f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "87bab9ea-7c35-41af-9a74-c29a1a8c4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0233394-0fa2-4dbd-968f-b3d0ad9e7318",
        "cursor": {
          "ref": "e6d7e3ce-a59b-431d-aadf-a0cd20bd9120",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f1e4389d-43b2-47af-95db-33193670da33"
        },
        "item": {
          "id": "e0233394-0fa2-4dbd-968f-b3d0ad9e7318",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "21025b16-90ae-439c-989d-cea7fa90ebb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2388cd-0d1b-4500-b3bf-35adbebffc4b",
        "cursor": {
          "ref": "4f108bc2-c907-45bd-bb6a-e060755db002",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f66d7ce9-ebf9-4d1f-a49a-de1b89703ea2"
        },
        "item": {
          "id": "4a2388cd-0d1b-4500-b3bf-35adbebffc4b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "71ed594f-cc20-4ab9-b897-2345f3a998cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38582e3c-b739-4c98-9fbb-bf4f240bc8b9",
        "cursor": {
          "ref": "5039a372-1203-4827-98ee-27848da6bf1e",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "57dcccb6-ce41-401b-abae-71432ccc04a7"
        },
        "item": {
          "id": "38582e3c-b739-4c98-9fbb-bf4f240bc8b9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "28a78c4a-d5bc-4f49-8bf6-26b67c21c913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6439d5ab-489e-41fb-98ee-1dd7a8daaa3d",
        "cursor": {
          "ref": "93bb116c-6f9a-4040-8bd1-ab8ea6776ea0",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "528ce8f9-d6ef-4917-a03f-9b2114026642"
        },
        "item": {
          "id": "6439d5ab-489e-41fb-98ee-1dd7a8daaa3d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9c574f3a-71ee-4462-9b0d-e20292113402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7e8f88-4cac-4f55-81f4-b95aaad880ee",
        "cursor": {
          "ref": "3f5dcd2e-1da0-4486-a53d-b43a8d66eedd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "881ee8f4-ae70-4c0a-b0b3-a73f1b7d8bf8"
        },
        "item": {
          "id": "4a7e8f88-4cac-4f55-81f4-b95aaad880ee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f9e6c24b-c40b-45f4-9c48-24cddb3033cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b0f62a-a73a-44ac-8db1-fbef34e5fbe4",
        "cursor": {
          "ref": "44d515c2-4afb-4385-9ecb-0ad06f8db553",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "034ce5eb-470c-49ba-9cfe-740811201d63"
        },
        "item": {
          "id": "d9b0f62a-a73a-44ac-8db1-fbef34e5fbe4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d3793220-724d-4199-aec7-e60e78c83cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a09070-2106-4632-9db3-bccb00bc6cd6",
        "cursor": {
          "ref": "d6ec09fe-e0a2-459f-a43d-88fe1a3eba80",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "65b594ae-5725-4958-b46c-68b9587e8633"
        },
        "item": {
          "id": "96a09070-2106-4632-9db3-bccb00bc6cd6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "caf32dc3-05a2-4919-8e85-64d6fe8a5aac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8932b4fd-c5c8-4e36-8872-d92486bb97f8",
        "cursor": {
          "ref": "49604f5e-7741-46b2-b82f-0fa27bd29904",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b44ec2cd-9b0f-41f0-8497-f5005213c417"
        },
        "item": {
          "id": "8932b4fd-c5c8-4e36-8872-d92486bb97f8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0816ec64-6b04-4fd1-8041-bd4f83771c11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c253a0da-0d38-487b-8fd7-86e28767abdc",
        "cursor": {
          "ref": "2cecda4f-e7f4-46aa-a935-a4f79f082a36",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0b08fe64-f2ce-414c-9909-542c1f4e995b"
        },
        "item": {
          "id": "c253a0da-0d38-487b-8fd7-86e28767abdc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c29ff8a5-e5da-4473-88b5-b005649be229",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b8baee-b5c5-46ed-90fa-98ddc8ec5e22",
        "cursor": {
          "ref": "48c94f6f-bed5-4ac3-a012-104bf3fe79cb",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1a240c3-5684-4560-b1bc-3c94230a488a"
        },
        "item": {
          "id": "92b8baee-b5c5-46ed-90fa-98ddc8ec5e22",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ebd7b8db-d182-472c-b7bb-87005e8a483a",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad8636-e73f-4787-aa38-9af33dcc85fc",
        "cursor": {
          "ref": "c307fefb-7582-419b-a73a-3e478b4d6cb2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1fd6293b-4d77-4687-9595-aab38879a3d3"
        },
        "item": {
          "id": "57ad8636-e73f-4787-aa38-9af33dcc85fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8ab6cabe-3f60-4f1c-a69a-bd758fc6eb65",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
        "cursor": {
          "ref": "9eeff7d9-1165-4dfb-8898-06826e70a93e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "92b4348f-8c18-4ea2-b16d-c25e9d069950"
        },
        "item": {
          "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4524e5fb-846c-4944-b64b-8aa7582e852e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
        "cursor": {
          "ref": "9eeff7d9-1165-4dfb-8898-06826e70a93e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "92b4348f-8c18-4ea2-b16d-c25e9d069950"
        },
        "item": {
          "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4524e5fb-846c-4944-b64b-8aa7582e852e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
        "cursor": {
          "ref": "9eeff7d9-1165-4dfb-8898-06826e70a93e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "92b4348f-8c18-4ea2-b16d-c25e9d069950"
        },
        "item": {
          "id": "1a676d3b-8d5e-413d-ae14-8e038d81c323",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4524e5fb-846c-4944-b64b-8aa7582e852e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e9a4b0-9d0a-4bb3-9852-2acc67075d54",
        "cursor": {
          "ref": "62a78a8d-3db1-47db-9aab-aad5260aa495",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2dcd8405-3157-4d2c-83ac-d0c49dc7f26d"
        },
        "item": {
          "id": "42e9a4b0-9d0a-4bb3-9852-2acc67075d54",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "f0d3716f-7aaa-416b-ba4e-e36d188734d3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 36,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849315b-f965-4c34-9984-a80a5d07715c",
        "cursor": {
          "ref": "54bad5c2-06ab-4a53-81d8-66c6e78e2a3d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36d45f03-d323-4388-be40-bf34cc8b9fe3"
        },
        "item": {
          "id": "3849315b-f965-4c34-9984-a80a5d07715c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f0ce57d-7f31-44eb-8843-a9bb2795e171",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849315b-f965-4c34-9984-a80a5d07715c",
        "cursor": {
          "ref": "54bad5c2-06ab-4a53-81d8-66c6e78e2a3d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "36d45f03-d323-4388-be40-bf34cc8b9fe3"
        },
        "item": {
          "id": "3849315b-f965-4c34-9984-a80a5d07715c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f0ce57d-7f31-44eb-8843-a9bb2795e171",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b45ac51-17c9-486e-8378-7c80b81c4d2a",
        "cursor": {
          "ref": "293d358e-bc05-43d7-a3aa-609f7a0abf6d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a89fb576-bfbd-4d9d-933a-e7d6074154e7"
        },
        "item": {
          "id": "3b45ac51-17c9-486e-8378-7c80b81c4d2a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "badc3a21-2e9c-46cb-983c-7b3df55f1396",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d6efc1-287e-4ff4-aa00-8e8e428ef860",
        "cursor": {
          "ref": "6e3e7ea5-86b1-4a08-8f70-7b1902caf6c3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "78ce9f5f-bcdf-449e-a407-7cd8416e0e69"
        },
        "item": {
          "id": "91d6efc1-287e-4ff4-aa00-8e8e428ef860",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9ff08b9-36ab-423d-83dc-3a52b60998ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d6efc1-287e-4ff4-aa00-8e8e428ef860",
        "cursor": {
          "ref": "6e3e7ea5-86b1-4a08-8f70-7b1902caf6c3",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "78ce9f5f-bcdf-449e-a407-7cd8416e0e69"
        },
        "item": {
          "id": "91d6efc1-287e-4ff4-aa00-8e8e428ef860",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9ff08b9-36ab-423d-83dc-3a52b60998ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bb0797-a2d1-4b53-841b-52243f38792a",
        "cursor": {
          "ref": "655da093-bec6-48c9-a736-675833c7e642",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a52b5dc5-5825-4753-95ac-981f70f2501e"
        },
        "item": {
          "id": "90bb0797-a2d1-4b53-841b-52243f38792a",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "11e22f66-9406-4428-b6a4-30464af7dd98",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}