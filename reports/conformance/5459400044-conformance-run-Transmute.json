{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ab3c0e8d-0591-48e4-bffd-6323788580ea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dc80d303-0b4d-41e2-a8d5-954a23f60167",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3266cc0-1d5e-4407-a8f7-165358509c68",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1790ffa4-7ff8-41e2-9f64-c8a57a41549c"
                }
              }
            ]
          },
          {
            "id": "36926cb9-17de-4c03-8bf3-1e06404fd67b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4133b31-b94d-406f-ad0b-68875db985e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a417b9d2-f34f-49a6-9a27-568a97f6edc0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5e9e1b77-4830-4e02-9fed-dd60c1f5d038",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "338af851-3ba5-4edd-acf7-6dba38ff54ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f7fe210-6c4d-47c3-971c-94054adf883a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "378ef2fa-9c96-464a-8323-f2855f533c71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78f3d087-6fff-451a-8642-4a5d0910162a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cce5a6c2-d39c-4ccc-bc20-9c1feddd641a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e55297b-5dd3-4be1-aca9-77482821346a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b3dd5144-1d3e-4ed6-afca-66d7d0e1f870",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d330dfc0-e4e4-4737-8bb3-dc97387f3a0d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47eb81d2-14e1-49ac-9fa7-7269f44ffdac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "14a33f42-8967-4619-b724-057746967f10"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "098a021c-19a7-4867-9074-a6f33ef6eac6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd53a4fc-a35f-4293-94cd-ca773737145d"
            }
          }
        ]
      },
      {
        "id": "113f78c5-3b02-4c66-8d70-0f22096b4679",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "da6d2f24-c23e-410a-a96a-2d6a41e0bc58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad0df816-f037-4cad-be94-935e1aa28229",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "024f5374-e520-4ed7-9b1d-34dbb621f694",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4af12d-798f-42a4-bcc7-aa5578a932a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a10bc61-aa98-4979-9e38-2dcca56b0c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8865bd06-0bef-4e3e-8e3d-4738d4743cef",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabf8f80-f046-4873-8bfb-a2905ad4483f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cb70c82-8dd7-4a0e-ab73-17c737639b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31a35b7-d6f9-4632-9f73-c854a7d66a2f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5840c7a7-2840-4bf0-aba5-0df521aa1f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2af1450-16eb-43b6-806a-297ee021bc0e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f19153eb-105c-4688-9e6d-85ad127e76bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5396795a-5dd8-41c7-afa2-44e91da9a91c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a547c1-6882-47e5-a88c-58698625375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1048e9d5-7fd2-4682-94fc-ad650b3aa143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe834e-e9c9-4ab4-81d5-65242d99443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c084bb5-b0bf-4ecb-b9bc-7eb2e3fe6213"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7576a4ad-6dc2-478e-8ab4-e4edd2206e34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5dc5f747-4a36-4375-86be-50e9800807b3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e0edd11-2912-406e-a912-b227078369e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "04da8056-e0a5-4bd6-bdc4-48844af87e9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82cd5703-ba31-4a07-b8c9-5eddf1bff91c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4aac073c-a1e7-42f3-9333-b1016afda334"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "726ebca9-7e15-459f-bf27-a8cdfa6a226f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cae1698a-cba4-4f50-b66a-c93a1cb177d7"
            }
          }
        ]
      },
      {
        "id": "e92052e4-16ac-4e5b-809e-6dd9c06356b4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f4bcc31f-11cb-4cc1-8ff9-50f7d1509187",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8425aee-e009-4273-8caa-47c1bfec2ede",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "53a196b6-2aae-4709-b016-5c375eaa71c1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abf5c83-6f9c-4399-ac7e-020509531d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7383c0b1-90ce-4b64-8b1c-d0dc019c68ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbec009a-4611-47a1-b7ba-2988286929a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "def2c875-25ca-4558-8814-f865de46d92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a7060-5cb7-4aa9-b476-c7be59587fdb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e1c2b0-d6be-4463-a4e6-4640e84de24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c36934-e987-4467-b1a8-4514c6f619cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c1279-42aa-42c0-87fe-b449e243a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ac5c336-91f3-472d-a2df-17b304faa5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ee0a6a-8f20-4d3f-86de-4c7b2be24722",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f614e2cb-5867-44d6-980f-f4bf19519c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b716e68d-8e90-4639-aeb6-92c9307da7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85918c7-8c13-435f-9fdc-4b0f8af13780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15639f54-ecf8-48f4-a530-a6694f4514d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95ca8e1-ab21-491a-908f-f3acd19038c7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb55ccf4-c089-4417-aaa5-537ea826abe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99511078-af78-49da-b184-e9b4951db4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8e3f56-0f7e-41fb-9549-5bddaa0d8204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57b6ab2f-6a62-4744-89fe-240c221654d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a31a9e2-a525-43c7-b6ec-84cc7bbaee3d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4355f7f0-9375-44a5-9dfc-e3093e3474b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e73428-db64-4b07-a6ce-d43e9b0cd123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff89ec-d816-4836-92c3-c81282741377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8aa6be1e-2ba6-4e61-8df7-a7edede5a182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736e85b3-5ff2-4e77-8bad-282efd2694e4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6004d4-6683-4005-9e3c-e95cc47a091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d4f345-a7ca-47d1-bd1b-d8babd810d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af21a28-d36f-45fb-b36d-732b87e92384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68d30b09-ebf8-49d8-be88-db10144fb9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba70b637-be0f-406c-8c5a-40717c8f4b66",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4286812f-bd1a-4ecd-98b9-46a305d15bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45635050-d51e-4ff3-bf04-0ab59868b390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a0d78c-c1bb-4c0c-9d18-88d0d269ad69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06074440-9038-480d-82e3-46223b54195c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3e98d3-4d08-46da-9b7d-b2b694af0b87",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a23911-efb4-438b-9106-dd95682ab7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd21351c-9b01-4e17-b790-c8cc27d1df18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8a3318-6bf2-44b3-84a0-17305632916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "769dcf28-31d6-457f-80a6-ef73e5d4886f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48f3a11-1c26-4c33-90c7-14863dc9525d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7960301e-f33c-495e-a592-4f57eb85fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a93f8c0-d8e5-4938-bd69-5662d474b6be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69abe42f-eb1d-40b9-b928-b63ba0b1cd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8771295-046d-4315-99b3-a0af5a86744c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3cbab6-946b-4581-9e49-624eea91d6be",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d165ca37-25cc-45e3-b732-59e8c788e110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840b301b-7fb9-4d44-860a-133c98b117ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d93249c-af74-44ff-8f98-7d608c4fd62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3336976-170e-49e5-91f2-85107e777dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f0766a-0a37-4d5e-a2ad-1695abf7f6e3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7764afa2-8952-4924-a38b-9237da51201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2af1f0-842f-4c0d-bed0-17d403a10a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343e683f-42b3-4173-86bc-85e75fa1e178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b88849d-3047-4705-a893-806373b784a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c223cc00-3e4e-4ada-9f49-8e19a7850470",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aafb7a-5419-4d4c-827e-34874f8f8b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3da3e1-1449-4799-ada5-7359c98ba4a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f0c14d-2978-4a1f-9a06-bc7415c47fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ec6d40-7366-4b2e-b7a6-46266b9c4a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a222a03-8a55-4aaa-9dd6-7bf0371bdf79",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b80ca-9624-48d8-a604-c367685dd8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ef0548-fa0b-4db8-a6ba-46aedeed8a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a427758-6df6-4580-b770-ab58aa227d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e13f0fb-7823-4484-8aa7-ceba8a584941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea85f8-d7f8-4c94-a9c8-ba8433920efe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f487a1c-412b-45ee-9677-d702d7e83845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68815e9c-c520-4f18-a6e7-ba1996088093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a42b78-f6a9-4c02-8b74-4ed875964a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9aabb5f-00f5-4301-ab5f-b55d0703aef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d2d0e7-23d3-4f90-b4a7-70e5100e103d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff4711f-cfe2-479a-82c8-87cfeb9eadfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9520407-8b3a-4f02-a3ee-eb5a6315b656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86880a86-21b0-4bde-b152-52992495fd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06344121-9c14-4552-91c5-6a73e8df865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d848e60-fa35-4e98-a0e4-36526e5bc28c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51983cbc-9d24-4c90-af4c-85d36c3e8baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abfa02e-1907-468c-b9ca-dffae8aa8415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c768c5-af3c-4667-8ae5-b0762c1abb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "665db9f0-960a-44ad-8d0d-6b5e97cab2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6ad21b-849f-4ac4-b931-4ca397d10469",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08efe9e9-d3bc-405f-b2f7-5d4904d5c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e0cd51-6ad1-44ff-b44b-1ecdd44128f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744c3d58-7c66-46ef-a48f-29a753f3d33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458d2359-f170-4308-8594-34a120a3a80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7524d71-d20b-44d4-91a2-cf3515477fc7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8630adc-eb42-4eff-8a58-dcf7acde8fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e9d2d7-9500-4aca-849a-510fea39935d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f5cd4c-c893-4b8c-823b-930097f859c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "999e589a-d2ac-4cc6-a78c-38967b366a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d541a00-de2d-48ed-8f74-c061b5177c74",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6560272-db25-47a0-af8c-721087457fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99054a94-19d8-4491-a79b-ce955277bdff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5ea1d1-a25b-4c1b-b869-8d678c3fd88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf7f6f0-883f-4909-9ca6-b91dc1408fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f456420-d424-45ba-9e66-503132f762bb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bb7e68-322b-491e-94e1-2bd86afdd6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00047266-963c-46ec-a0a4-bfc502d6e729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2fdbed-7cdc-4f2e-84b0-83716d2af71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9fdc53-68d8-4d90-a4f3-7a918ce0bc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fbea1e-9d46-4942-88e8-5038c194a30b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b88335-c22b-4cde-b25a-3f59ec7f7d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423c4ae5-7a4e-4282-96b5-c8e7aae3a231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7484717c-3cf5-40d5-bc03-390c52b88cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab942f7e-ef17-4c96-9b60-fdb10a0b9ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adeb1de-bfeb-4179-83fd-f3e9229f6f09",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcef3ad-d355-44cf-919b-74502c621749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070cb2b9-6cc0-4807-89eb-ee39ad597f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4091ed5c-8817-462f-bf9d-10aaa65a5ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e17fb5a6-a76b-4f64-a34b-7f4fb7c64ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224db33e-2cd9-4c8d-825b-cb0aa00f5bb1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1163e98-2e2d-413d-93aa-3713adb0b16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c53b0bd-a206-49e8-abf6-9fb05f500740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ddd6a5-7dd0-4265-83b9-9275bfec5c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd5262f-ca6c-4996-8437-7ca15c10d305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1098d882-1413-429d-a777-6376e554cc2a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff3cb8-d094-43e0-85e9-72f51ce2c3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f67673da-faff-4a71-ae6f-6621aea8e65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ab043-dba4-45e1-b7fe-7a04bdb67733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b19f7a2-9bd7-4992-9647-9df33783d9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937c8737-c03e-4cbd-957b-8b25bb95d2a8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6a75c6-c279-474d-ad12-33c565d78eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616f79ed-5a63-4dd6-8b3c-e7007d2f1136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e82828-2abb-4a86-9d7f-9a3751511a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8a7797-0e1e-432f-b0bd-41cab202a527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10edaf6c-b925-45cb-8a1b-bd2d4fd0211c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80848ca1-4e96-49eb-84a7-4f0deec399e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205040cd-7c58-4d09-b269-12459f7ddbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89776e4e-cb11-43fc-ab37-8546decef54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef12b527-9d81-43cd-832c-478c813547b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2522f50b-82db-4159-aece-83df262e287c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5445abc3-d545-4bb0-b167-e9bac33b8362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a173b5d-e0ea-4fc7-a6c7-d489cd3210ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7a66cc-c090-48fa-a026-902494c09297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ef7cc1-6c78-4cad-b4f4-4249a32085dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb500e07-2195-4b17-b116-237fd2f62c1d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe4c86a-165f-48a8-8201-d348d64832c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84204c72-09ac-4fea-b7b2-c9abeb20c672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a1d779-b56f-4042-85d4-624d858cfae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b64534-166f-45ba-97b7-ac482cce0517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49d251a-a96b-4a9a-baa8-4c1d86de2ed0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dce3a48-d37d-4403-9476-2445d9d39538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3e935b-2572-4cc5-83ba-06d25c48b8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126f6abc-c7a1-4ff9-9ffa-939748a28e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f61e0e-c6c1-4c25-ae30-12a1e50953da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f945df32-98f2-4ee4-b421-77c9b4e434a0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f6522c-3841-426f-b560-41b2032102bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a082fd57-07c8-4fe9-8f55-b87b49438cad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fcad01-4596-4e6e-ad3b-110418a54dec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e93c713-6bc6-49ed-ae73-37d6bb87e309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7ef0e4-ebce-4308-ad72-785a8252f94f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b8b7b8-51e4-4447-8f7a-e89bc7a85624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d65789-1ea0-4352-8549-c2c19118d823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d0dcb5-3b8e-4b05-b450-e95839390563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "659adff5-ee02-420b-adc6-515aaac8c339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a911d6f0-2501-41aa-af3e-5c130f46c2c6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "796d0fb8-da85-4617-82b7-74a68ef8fbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599b8794-7b18-456c-8e71-0bb0e46a574e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f260f831-807c-4426-bafd-7aabf635bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7041fbf0-e0c1-494c-9bb2-c3d49b6f55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848ba2cf-1761-4aed-b3d3-f1c3983dd740",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8528a55-b45c-4830-8b4f-15c8e758114f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c68ae3-8c91-4707-a746-bb4adc1ec382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb1c23c-48eb-49a1-b40e-ff3a7e8f931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c90743d9-a5cb-4d8f-989d-76a88334929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f6f60f-46f2-4fa8-bb10-2df0e546bb1f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffc8c51-b7fa-4116-b5b4-5a67dd7d052e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6160004c-fd17-4905-9545-98a2e38744d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191f6d0d-09bb-4968-b637-647d4dcb197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9586fbc6-afe6-42f2-b361-871da1f1dee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d42d01b-9875-4678-8555-8649a6fb47e0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596b7054-b118-4072-9514-ace10b2d1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c3a3df-06ea-47cb-84b9-9861d4394a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94bf685-39c1-4174-96ce-36ff37867809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "91606698-01b4-4f77-bf17-f6b4c2a4310f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bfbaa2-92d6-4cf0-b8de-85b40f97aa00",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f526f8-2ff2-430b-b2d4-b69988c7fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6ed014e-7f3e-44db-9de1-80c187cba4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6841087c-ce43-45ab-8fdb-1892eb6367a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f69da3-26dd-43ec-916f-f2ab00bfa59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03112b9f-27bd-4cac-9e2d-fa76569feeae",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c064d7d-7cfe-4bfc-afe6-bcb6b0c422ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d466ca-91ed-4b04-b6dd-16519704fa3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea279ad6-0e83-4abd-82ff-cc7da2872758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1701aa-5d3b-4579-b7d8-0b98461cdce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa209ed9-cb93-4bf5-87e2-72d2b75efa94",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8e7069-9d01-4965-8f6b-a2c1fe60b301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc028801-a223-42c1-a7e4-c6377ee0cb20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42273e27-d19f-4d80-b6b7-76898c07ea69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f348cf0b-feb6-4105-b66d-a10773ce61ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bada277c-1d8f-4ca4-bb95-f825bff01a44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947478ba-ae70-4b97-ae5a-33af3c9c7ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed91a26-a291-4abd-9c3f-804b52c87c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e806d-1916-4679-8c00-a3085e0cabe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c875f224-8489-4e09-8f63-cf960a54f2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d235313-1b5e-4f72-b721-338888423b61",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce930ae-34fc-43b1-a0b5-12ebbd8447e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c02ed0-3749-4d5c-b70a-b3d616af0cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52575c1-f942-4b8a-98da-af4b8916e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "81b07869-0b91-419d-961e-f341b725900a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec6dae-a401-4640-8803-064d2469ba20",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9060af-155a-481d-a26d-72556c02c02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31db8365-6a7b-4c3b-b8c0-c301b8b23fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6370ed42-acb6-4248-bf3f-7dfe7acc478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "604c8a2a-ba7f-4562-81a7-667178265d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d698a4-394d-4432-8a06-7967e612e7e1",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550e4f0-909f-43e1-9fbf-38f0a95b3d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814a702a-87a6-49d6-b133-395eef72a0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49289e25-0b1f-470c-ac4f-06ba3edc31c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5340e39f-b3e3-4ed9-95c3-f3aea7a14a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a8a8b4-2261-4e6b-a826-0736cfd48132",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1e94d7-7dc8-4881-8573-861b902eb188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf769d4-81d7-4ceb-b9f3-9013212b3a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b03d6a-c7ad-494c-b9a5-7fccd3bcdb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd5cded-eb05-4d08-a2aa-e6b4eb4cd47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb8fa0f-c801-4214-bf5b-e32bff9a29d6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca6899b-178a-4489-959a-d8b1524c3936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402fc70b-77b0-4fa4-9a80-73da9f835407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48513dd7-f4c8-48a2-ae3b-aa95f6cfd45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b31f695-b2e0-4787-b176-9738fe5b0393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8810a1-35ed-446f-a9aa-268a7f55bd6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0526d837-82a5-44d1-a405-80860db51620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6baf1b-6bb8-4d6a-868e-dfb088a34eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e17314-33a5-4101-adc8-e37bcf3a3153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d07b8e-a478-40c3-9b0f-e1c8f77dbb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7480e0-dadd-4889-a1c9-614799b16b36",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e62695d-3f4f-46cb-9816-0dfe3b09eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd25665-6daf-4260-8300-3fb2666bae90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f3face-3ba1-448f-9242-84ed4b1c2cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06b6f2b3-31e0-4595-815b-423efe2d1c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508c0f0a-56b4-4e35-b776-1840c85ef0b9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca425a81-ddcd-4114-8bba-ad32e3deae65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cfd92c-799f-48f9-a9a8-b3bebd7a0e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bf1683-b1ea-4be0-b035-a1901a78558f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a0b669-bc9a-4c25-a1bd-9f6d160b244a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f021e98a-0d96-45aa-8f57-72c42fbfe6c1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390cc0ff-665a-456f-93ff-8e1d91e65a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7445fdde-5cb5-4cce-a48d-f21a2a192b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce0585-7420-4b1a-b807-f352020c7562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee1bd61-932b-446a-be5a-189a86f16758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2d649d-7277-4a0e-991c-5a9b7ac2c0eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d8649-20d2-4557-b678-ffe9e8486e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3f3588-58e4-40f5-824e-9d73ff34f7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8753ea8c-f239-48c0-abfb-07f6f8b5b3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3ca345-6d90-4100-841e-ccd55b18f0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32ada31-54e6-4b69-a082-b89c12128e75",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302be1c3-76bd-412b-ab10-fa5685ce7dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ea0ec2-0807-4c1b-a3fe-6fff1baf902d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d20deeb-57f5-4894-b3f2-d129dd8ffb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7256e88-f6f6-4f58-9d8b-a62541d89124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b9767-5a2b-49dd-8394-ca903c16870f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9a9bb7-a70f-4a99-9070-654493ef3e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8147bac8-f38b-42cd-83b0-99203bd53396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc93937-dc3c-4188-95f5-bf75077ff1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6b9966-b5dc-4012-9acd-56d861a39009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48bee68-1b63-4b9e-aad2-3238f9dfefc4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5da173-80bc-4650-8fb5-fe4adbf08e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61d40c5-5f84-4835-b70a-95db1a590f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea1f45-b2a7-44a4-a5c2-bdd3f3a5c9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f364312-e9c5-4e25-8343-a9090df4dbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2d4bfd-dab7-4738-8a74-5a889351a286",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccf3606-38c0-4f17-aa6b-61e70d8905a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2c9c90-013b-43c2-a3b1-59f31faf8ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc7c08f-9f27-433a-80c8-650743f7753c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a20fd9d0-ef63-4a03-9344-a0748b9f162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08711b6-9853-4c59-b675-4136b465461b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbb31a7-2189-4d47-9ef9-634d40b9ef7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6b5b79-075d-4391-8988-0962cd5b427b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67749015-4e99-4359-9d00-8e27669f5642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac17f5d3-48d3-48c0-af55-06438e5f0b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56849d71-e362-4b5a-a206-4664878ff564",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca4076d-6008-4aa9-90fc-617370c218e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c8179a-e7be-4c77-aec6-be65226fdb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad8c1bf-2451-4c5a-9a15-b71d249a0bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9abc44c0-6368-45a0-8c43-e473a80e9142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ead185-40e8-44ed-9f65-12205660ebf8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c699912-4dbc-4e57-be88-2754ae477fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936d2f98-f0d2-4512-946c-ac19d5c9fcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff12448-cfca-4549-9b20-620161b67445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "26438fef-025d-458d-9214-c2a0ee02219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e36408-73fd-4eae-895a-9586255bc9f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca03b7ef-ae52-44bd-9e49-3d1f6404306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1703b8a-3d5a-4474-97cc-574b8a28a0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ceae60-4e1c-49c3-8733-3b1ae39d1c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9067b4e7-489b-4bda-a6e1-ddc5ed1dabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09c9be9-d597-42c8-8bad-63b886da541a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf43f1-ca55-41ea-8ebf-77356f816840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94243f40-6f7f-4adc-a7da-4cd8133f9068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb7aa41-b07b-4988-a0c0-b92e303ea908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7af5f15a-414e-4491-8af8-347cef57909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6605ca78-bbb1-4afb-8d1a-a0df921b5839",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c1575-f8cb-4704-a5d3-d95253893881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75add3d-71f7-4ac6-a5ba-d3ec57b1ddf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f2bef4-e497-4bb8-aee4-07bd3c33ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5ba329-2a8f-479d-b547-5f2e48e95335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7655e71-4686-4a23-a5c8-41adaa81d505",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6238c565-2eca-4c8f-81b0-2feb14f2c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9612645a-3b79-451f-97a4-05b65ff24433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74747f9-551b-43eb-8943-a7fda58082eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd54b196-4a3e-4da6-89b6-8ad1d545a69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc88357-8c18-4d25-9364-4d4865412c87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5337e084-c6b5-4995-8419-876401b3c9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302673c0-12d4-47e2-b61e-025a51267772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472b928d-9057-4478-80dc-72095070a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2146679-179a-46dc-a324-da4a91e297d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14388ee9-bc85-4376-aa38-442e3afcfc96",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19911d4c-b846-4f4b-98cb-28bcdf510d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e5811c-56fd-41bf-bfe1-f79ed3405397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8544ff34-0e82-4f73-b158-ec6da4e47a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4833ed9f-8803-4127-8e98-e0b63fc4f2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f14a91-e342-42b1-93cd-08ef3df41bdf",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504fc7a-a6e8-4201-a10b-4eb42c412fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860ecc61-fc24-4af0-8566-82ce2db093fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077fa54f-9e8e-4573-b784-fc54db418c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafdced3-e476-4a80-b56f-48b16be8ec2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5709a4ff-a69c-4fe7-9d3d-10bea2052c20",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d9a4f-65fc-4416-bf5d-f84616257fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5e4b85-e6b5-4277-97f3-0c2ebd24b6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e975e5-33f5-46a1-b89f-b20ceb6542cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab91522e-4320-4473-9cb5-a50c9b9418bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c14f0e1-4e04-4a70-91b1-66cb31ca3b1f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7209be6-285e-45fe-b1e0-ca4cf3731d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a752697f-41a7-47b1-9116-ddea1fff37f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada41adb-f461-4dab-9edf-5aad7bc89f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed634e1-dea9-4a63-8feb-cf312e531d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ee4332-98ba-40c9-8f3c-d20861b6f188",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a9e5b3-eaa7-41d8-b5b2-75c792217ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0582a31f-7226-4e9c-b37e-ee6f9b4c9b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c66afb8-dd0e-4bcf-80df-484ad221cb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46e8e058-6ec7-4498-8c14-7d18731b2424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b576bf-af81-4c5d-84af-b5b8823782f0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c327c97-22bd-48f2-bb89-4efd1d52732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de71d52-9a4f-4b8f-ac86-0f6c647d078d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cc46eb-9d8a-4d68-8340-adbfa3a31828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b018c2-110d-470d-a500-c82c0173278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76894212-eaf3-4196-af1b-14757c4bb23c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ae90f4-b24b-4f6e-ad1b-2d73b7e501b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9e6dbb-351b-43f3-b437-1035e580ceda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c711fded-d7d2-4d68-bf97-4c402fb90376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07b019e-853b-4b7d-95ad-101afadb0af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e370abd-1cc0-4d1e-83d9-bc51a97c7e13",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f7de23-82bb-43c0-9869-a3e980fb6ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f15aa9-6101-440b-b11a-4ab1010754d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d765f201-9f2c-4c12-831a-965281676c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "41e218fd-30d0-4840-b767-88b0dfc0fb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618365f0-b5b0-4be5-a884-03fc79e379f4",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c17b0-7933-4ad9-8270-3ce0b08bed85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e1eb18-bfd5-4955-958c-533fb20060b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfad18b7-b9b4-4c7c-8a63-4476bd6c5388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cf4555-9abd-4e52-bfb0-545e6022bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a0dfb-8088-4a74-83bb-740e99183e8e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba14d0db-97ef-43a6-81d7-8660a0c5262c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53e8f73-7bdc-4568-b8aa-942c79973015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d6c848-cedb-4cc3-971b-35b97bd7062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "186d0d0e-9eb0-46fd-8502-db690e9f214e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71141856-aecc-4123-b6f6-0f971a4ce790",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a684e4ca-c280-4016-b8ba-3b925447e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1032fb01-55f4-49c2-94c5-23e8a000370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0744855-3a1e-49d5-bafd-b4cac2c78151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d77a28-1125-41a5-bc08-a4a033c5dfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0463c4-a525-411d-8724-dcb937a80680",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a76c24c-d567-4035-82b5-d60f5c43c2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363be9a9-b2ac-44ac-bd83-239671f0ce47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350f5bef-acad-4a9c-ba03-8d5bc01aaea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba1c6c2-5fa8-4261-ab8e-4c5fb4d56274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0bc5eb-6842-4e45-b736-c0172f1d3a89",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101489c5-c26c-4ece-b011-c10dc865ff2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc359d8d-4a8b-49ba-bbf7-0ea3c2426691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd378e2-edc0-490a-9034-37d858952ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "25fdccbe-936b-4355-861f-a73a98a5d285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f17a87a-086c-4f59-9a2a-d4b8e0ba2a48",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d59732-b813-406b-9c05-fc1067d4b1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e35feee-a257-4500-bc22-e6e2653f0248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b53136e-6bb7-4ada-ab7e-0841f01f7057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c46af1e1-a3d2-4fea-8e3a-39d8dcd406ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e103e248-3cc3-4ef8-8019-31907dd2bf71",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7964821b-da65-4a56-9951-c068740d9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e1abc5-6096-4f8a-8a0a-456754235d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47024868-0edf-4ed6-a3ee-d4ddc918c2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66be0fba-07b9-4e34-bd5d-6f28c38b57f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8011167-432e-47e8-8533-067b458b3843",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896bd11-f007-4005-ac5c-c2e24dbabdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3ea171-ce68-4749-a8db-ea52b82d3f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5873f7a-3f4c-48f2-aa93-d99f431ff82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1baef9-3266-4eae-bb10-47b2b98e0032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d55789-23c2-4d31-b27d-428163df2b7d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d8e6a0-89e1-459a-8de7-8c23274477ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298063fa-03e6-4e70-9134-4267193a7a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbb36f-082b-4024-89ea-1339a1ff7882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75dbe84f-c9aa-4a56-a02e-a4b1a43d0662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d554eb1-8dbc-48a1-b1fa-1f07217a8210",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b94851-9c1a-4cd8-be85-5c1930a7cf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb368d5-11ff-4050-8f46-47e8b2c70186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c760d74-f3c7-4f53-a5d9-0ae18225e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e1a16b-a82e-473d-88c8-c00dd8c86304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0b60b8-7698-4470-ab1f-4931f950ca5e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96e7786-d19d-43b0-b375-c9ea4d1dc016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0ef489-b731-4e69-b41f-a1fda38a04fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33391fd8-4307-4891-93e0-374dd1e87f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e001aace-a390-4389-9e06-462bc5df6eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399334c2-77c0-4b00-8e7e-a5abe334b906",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bfe78a-7cd0-4239-8718-5244ed54721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0597b15-c131-4647-bfd7-1e5e70ff863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2e658c-de77-48ef-b983-400b75ed2210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d32d32-9379-45fc-8de8-4632f716a1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0890c6-e5bf-4f2d-9d5d-7cc53eae94eb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb311ba8-a3c7-4ca4-880b-cb638a1179e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7320ffeb-d48e-4482-ad68-850e83ac26eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccc7133-ad4d-4b77-a6b5-d34d8ddedc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4587a4ed-e5c5-404f-9719-cc7448031bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508557d4-253f-4a9d-b28d-807dc747d847",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d4d00-55c6-4cb9-b8dd-7e26e86a87b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad91890c-ba98-402f-9d61-90b8f7c2a3c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92be0d6b-0508-44f0-b029-93e1f32f8546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92146c7-644b-4679-86e9-4a6f8ce90d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa135feb-50a4-41e6-a928-aa6293b59a82",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510686df-647a-4d63-a216-a1f35d90b051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2ebf5b-6352-41bc-aaa2-7239850eb411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53e11c1-9cf2-4174-a790-c234d9226d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bca805a-94a6-46a1-94e7-10e99ce0aaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079f0533-ebc4-4b4f-bfc5-f3692be6f632",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbb8f63-59b5-4b91-9d8c-e49965849d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83d626c-f791-455f-be91-ca605c9a0f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382cff2d-682b-4b5c-bc5f-b16c7e74f5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59bc4dec-7e9f-4c67-b87d-3016e3307a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b28fe8f-20f1-4e79-a8ee-7cbdfc4b11c3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccce8652-e7ef-45b6-b2db-c742ae77db6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e4bf61-d116-483a-838d-9f805dad2c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c3a11d-87ae-4f17-b930-8f6d307efc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "153932b9-ce5c-404e-b8c4-ded3c1174ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bb4392-8fea-4aeb-b1ac-2437f1059d6e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4c198b-ba1c-450c-adf5-68db72c13f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea36eedb-4019-4329-9f00-3e5e38f948c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4a202d-a71e-4893-9a01-a187f90565b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e360e7c-0537-4d11-bcf5-59d4010e8b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141382a4-e9b4-4c5b-84c8-8259c5a0e22a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fafa602-4720-4566-affa-192a9bc997b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b583b08-e866-4d81-baf4-5c55d7c71ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e80e37-e8d6-488e-baba-e79874a64934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c996a1b-8640-4088-9d15-9f56ffec26fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9b9234-7ab1-40f5-89d8-331d630805ba",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63589a6a-35ac-403d-aa5c-02c7f0e16968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd21431-79c7-4222-bdfa-f0fb7cda1b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df8464f-d21b-4caa-ac8a-27e538c41e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77549c90-5c98-4588-af96-7cf134ffc6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae442095-ac3c-4aa5-9c0c-6a0a58f480d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00248af7-72b3-4f1d-895f-5cc5585c63af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa4446e-990a-445b-b7b6-06985833266d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9576d074-9a90-4874-8917-7493a0078b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "972cbca2-5d12-4720-8e02-df9ee07b6a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8099b504-bf29-422d-9daf-d9df5592d3f6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb56b102-39b4-425c-ba70-35255cdfdce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0814ef-bb8f-4ea1-b857-3fcd9cace84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e84f02-0ad7-4503-8c99-b1bb8c375e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ade9ef4b-1f5d-464d-a803-67d3761396be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dcfbaf-f841-4503-b1b1-8175c4cda543",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75290a1-1a17-407d-a2f4-3d641998c205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "28a1f141-3f72-44d4-83ca-18dfedda3270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854c4e32-44b6-42c7-b0ab-c15a47ba3624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64c8c5fd-1077-4c86-9458-4e6ebe7f713a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b92c9c5-3982-415e-b189-7aa9660366b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40f007c1-e9f9-41de-a35c-499f058c1a3e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654eb01e-4610-484f-b4a3-c34d9dc9fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d1bb48e-1ec8-492f-8470-5608ed59a069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c890292d-70e1-4d63-beb0-ee33a8215776",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072361fd-8ada-4792-8722-9dc6a21e412e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab8167d0-352c-4d81-a5fc-03ec00c4e82d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8749aa49-161f-4eb1-9fe6-26a34cee1795"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d96d17a1-162d-47ae-a9e2-c25e4c9de064",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ceb193-b702-4799-a774-ada2a3229140"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da075a30-7609-4bba-921d-63a0d950e756",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee30fb14-ef4c-438e-821d-1991bc94d6d4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f6d53120-51a3-4418-98f6-52553f0a8cea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb2f9b4f-7513-4479-9291-713715abfd91"
                }
              }
            ]
          },
          {
            "id": "3a9daf7b-a716-40dd-a32d-4946a15d6bfd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2279801-166a-4fcc-9752-724c256466a7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c75d2dc0-21be-4390-848d-ff8a24573e4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dbbca20-4776-465b-a1be-eee6bbe8c8ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "883b167e-1a42-4868-8259-3f1af1c52565",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "13de2d0f-f09d-421a-9eab-ef6544b9a4b5"
                    }
                  }
                ]
              },
              {
                "id": "e8528343-e7ba-424e-a195-37fb04962a9f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29df855f-88f8-4d3d-b6dc-cd68c4a03790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee3aa647-10b1-4431-949a-42f5f94533e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d06c18ec-985c-44ec-b777-f8199951de00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ccf5928-7695-43dd-9389-b465d0dc7720"
                    }
                  }
                ]
              },
              {
                "id": "ceff82af-5ca6-48b3-bdf0-97f86e319a4b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf460f3-84ff-4e38-88a1-ce025dbf0aca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6686e093-5b51-469f-9eb0-f50892556132"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "742be102-6c5e-4885-a2bd-dc979b2e2334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9ed3d37-9ce9-4071-bacb-91c53a00c899"
                    }
                  }
                ]
              },
              {
                "id": "a867259c-cb82-438b-b253-19b05049ec52",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "357c5afa-274d-4f9c-91e4-d24e05e029cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87208d3d-a4e4-4572-b573-56d84e5734a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ee7768d-1434-4adb-a3bd-1adbc015268c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "996606d4-72f0-4224-ba06-d7040167e50b"
                    }
                  }
                ]
              },
              {
                "id": "7024f2d0-c435-42d3-a813-659f022daf95",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8ea6a0f-b3fc-4ff0-9d5f-dff9214fc5dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52651c3f-41fe-4d95-94a7-80601de092c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eb72a5d-5d9d-47e8-a484-ec1362c1203d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd54d4a9-ca96-4217-bd21-4004ea806c1a"
                    }
                  }
                ]
              },
              {
                "id": "71bbe420-1dd6-42c7-9e22-94b198bd4fd2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bb01528-1642-4d3c-b2bc-831a628b26b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e70cf57b-4eb7-4955-8e3a-491c5cf78cf4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d197ec51-f5da-4aee-81c9-4c4f24f1eb57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1017095-5d93-4936-8ee2-2013dd8f9f24"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69e46181-a670-4397-8974-798a82a9ca47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1149459-e9c9-4678-b535-7b87c402c429"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8cce6d1c-8c63-4ea4-b6b1-f70e97ffc6fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e628139-d65f-4137-9f5a-8fb929f888bf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d34e7454-be44-4196-bcae-d7972d98fca9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f8b6291-5908-4d52-8924-1dfbb29daaf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3abb529c-b663-4b95-a059-c901a3078251",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "854d3ab7-1667-4b1a-9596-781919d7090f"
            }
          }
        ]
      },
      {
        "id": "51b519d7-eed9-4a50-a98f-8ca3138eb147",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5eb9e06e-af99-45e4-acb4-e370be5a3c6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf4be82f-1779-46ac-80ef-2f6800410d0e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a95a9a7-a8ee-4631-b22a-d1e58e78d071",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8765cf7a-7d42-48d8-a37d-a0d5f2501436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4403777d-bf51-47d2-ad0c-0387420b2d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42f321d-a32f-43ae-98ee-ae6b2f91a613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5403efe8-378a-4c39-ba73-d33f4d237e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50ea054-0dc9-4d2f-afa2-86bd6e141c36",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d8fd2c-ddcd-4212-a1a7-077671e9570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965470ac-a9bc-4411-8af6-a973dc5769fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ecffae-a541-443b-aa0c-d074a3fa367e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75356d82-43d5-406e-8139-7ecabfc23ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c434c503-7393-4d77-ab5b-bad792011fbd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e148ce6-468a-4712-90ad-02a47d2f638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9075ef19-b609-407f-adb6-921a119b1cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace86c5f-bb57-4e9b-8b5d-bfe4c96fb872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77841a25-4568-4d17-b062-a474a384449c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5452fb73-06ab-4ed8-8ab3-0701c3932771",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeba0f46-51d4-4d32-b5ed-c3724fad6b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9096dbe-2e9a-4f27-80b1-61acbeeb386d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822fb695-a2f7-47a1-aeb5-6d046d3addae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdcca1a-a8ef-417f-9632-b04def855d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71e1dea-6633-4cf8-aa8f-ab1b1e93dde7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c053a8c8-eccf-42cd-aa43-680a86890a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a8f9e7-fdae-478a-92c8-54ff238c89ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba768df-3435-4404-b1a5-c4b7052619e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6576d3c4-f627-4f87-88e2-6852fd05caa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aff809b-8305-4106-ba1f-d37e91f834fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d8c792-2a42-4c4d-b1a7-a60d7c64cda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe29465-c7ba-4849-9b6b-c0de78ee5d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f7168-5ca0-43fe-8abe-d96b6c986531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc05ac2-2928-44b8-b825-11d9b2398829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519b09e0-0660-46c4-8a75-d4aa63f1b318",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780c7f4c-edf2-41db-b7be-d78dd8fbbb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31de28aa-a68f-456f-a3a3-9898b97aa107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042de4cd-e4c2-4bdc-8b8a-17b90e62ffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "466cec61-2221-4911-aa04-4b2c35028897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a4f8f3-7fce-4858-b094-91252b3ce173",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f08b7-fe11-4fbc-b160-4023ff8b8eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c71b32a-0f88-46f6-a9ec-b58736cb17f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57eb9ad-80df-4f73-9963-1cdfcbeb42ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47856ab-dfcd-4eb5-8f9c-42b1ea1c7ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e98e0e0-d45e-4c1f-8f35-90a3716ed525",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1f892f-3fa4-4354-906c-9a8a8007c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee5677e-c88f-4007-8689-ca9d18b43412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b87712-9a86-4817-b1c3-acc482f3d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a24e7bee-e700-4a2d-bf59-22bb49a90ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb72fadb-02d4-408a-9d07-46f0121dabd2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7900bd-813f-4460-99a6-4f3e27b7c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c08a1b-8e99-45ec-a4f2-b6d9609d0b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952a83a1-49c7-41a4-a5e8-acda43ab58e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "401892de-c13d-4ee8-a92b-88eed61e1a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11125a4c-33d3-4427-883b-da23b37aa61a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277b3242-f609-4a73-b824-415dc6b10620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ed56d2-93ba-4542-ae31-81a9a98dc1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3abbe5-b039-47a5-a461-ae71990bf17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a13f58-0e2e-4168-a62c-ae27e98bb2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c808aed-ddc4-494d-8101-221568788b45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a59254c-266f-41e6-b217-8f8091670f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5061af-d0c1-42d8-bbf0-c330bda73b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f79bfd7-239b-4146-bdf8-d9b258c8e9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdebf685-1393-4f01-a1a5-f02c733cdb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c724de10-0c33-4396-aee8-1f07e37d5123",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d54dd0-c97d-4029-a49d-822c259f6db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79691931-2093-4c78-a549-260f40aeb25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb3e231-d24b-49b0-9c02-58277c08b219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a71d684-cbe3-4b17-9d99-0a3bfe3c860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a232443a-79ef-42bb-b7ea-ccb89b114110",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c0221-ad39-451c-adfa-274675f2a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706d1c0a-cf79-4ef6-9778-3d040c1e0e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5541c5-f513-4f73-b990-5e0220510f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3812986-c5d0-448c-9b41-77124976621b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e1be06-8baf-4f16-9ead-a0b362e9d04f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b139f7bb-2a2a-4d53-807a-c607c08fc324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b0a445-5fe6-4ed6-9c0e-c055e7c56b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022a5e10-acba-445c-a4c2-149d6e5e6020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc7be23-bf4d-47c8-890d-4f43f8a1085f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ffd86e-1ecb-4005-94ab-e993f15f948c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382d8fdc-747f-4212-ad47-016e20ef307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192129c8-f3ce-49a3-b8e0-c3d078dfceb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0656f8fc-80c4-4aac-9d91-c066717321ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b291347-6e51-4e8d-8208-b6e7ca33b6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cd4423-f411-41a2-b7ad-f24cd6cac130",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00efa9e0-3d2e-4409-bb88-8e50d3097c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80bd364-ccd6-4aa6-857f-853c5b9923b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e851e80b-2b0d-4e25-8974-176dd9b16b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13762013-070e-4d44-b261-1446de651376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea7c367-2d4f-4c8d-8bb2-f1592e703c8e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f570a45-250d-45c0-9d90-2c3876a6df71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8b75c6-5758-4d61-b027-6faee9d1934e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ab6a7-1a75-4ae0-b53f-7cd7fe491761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "267a9372-490e-448d-9999-240fb22d8c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b3087f-3ad9-41d3-a7c9-1084c94b5cdd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85bc67b2-aded-4a30-b05b-267624b3863d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaff5e7c-7849-4350-a30a-2d29fcbc4fe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a6ffb8-878a-4b04-8c6b-cd5eb739e9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d260ffe-c27a-4bf0-b94b-b2882e770f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6b2630-8f9c-4501-8650-5d4dced97c70",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2b1a93-4b83-4612-b5d6-cc1065ae5a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3be833-e2c8-44a7-9983-db44b201e38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20202c2-4476-4ce6-8776-d4f2f46aa8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6da176-9ac7-4bbf-85b1-efc0f9f6997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975ee24e-71bc-48fa-a8ad-976a2606c320",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc61d54-f99e-4ec7-9a48-143fd39a8c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd975f1a-982e-44dc-9a16-6dd6db5d8a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9759f243-8249-4e03-a127-9e33eefcb8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d12365-16f8-41f2-8465-18210912661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b65e05c-d35e-4085-b08e-5791bcc6e06a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af82378e-b687-49bf-ae46-937e7e4df02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c0326c-5086-4b98-94b3-3526cf261375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e483a97-66d3-4925-a4c9-b3eb27577713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8042727-9252-407f-b96d-42d3b669f684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4295c1e-a4d2-4176-85cf-09f960757fb3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86aa12a-8528-4367-b13d-f1cde06961f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1844fbd6-c33c-454d-9068-45d68b709c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfe597a-b333-4352-bafd-ed1faba0c038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c650089c-288d-44c2-8be1-a0e9f224725d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92693168-aa25-4599-9f67-11e03899cb7c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08706b3-fcc2-41cb-b9c7-6a73784b9abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bed40a-024d-4bd1-9d69-d7b2c05b8dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903a7860-a800-4fc6-a8a0-01f2a5f0707d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c6bd40-0f6f-4b19-8a1f-b3569c41ef64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ccb504-a035-476a-a820-5fb008a7fbb7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4096378c-3e60-4853-9ebd-837942142303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3ba563-7a83-473b-8632-d1ecade45c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06471468-d18f-42cb-9853-4659c89a3f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c699dd-57ed-4fdd-98e1-9c2c4fc8ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4754c242-6ad0-4361-ad7f-33aac2713660",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3fc7da-d85b-441a-99f7-cfe03348f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb4db8c-d1e5-4250-baa3-36bf6f2b04c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52035f19-a36f-4f09-bdfc-577b82b03e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86fde501-43e9-472d-9e94-da94af5a6ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd834a79-14ad-444f-b1e5-3373ecca6443",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f14621b-5f7a-46a9-bdaf-ae26aec699b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c220903-79e6-4a54-b2f2-e6bb16f04f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b962f7-9e7f-4046-968b-ad2df3f49198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2a5743-ad2b-4af7-8846-34d1a4742aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0079709-03d4-41af-9188-fae7427503f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99277166-4628-4805-b6b5-9c0114482927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30506220-26e6-47a6-8ff8-43ef6d638e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8634b448-a8a0-4401-9e4c-58913191cbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daab4ffd-dbb4-4780-98a0-9e3e50fadea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c6c6f9-fe38-4227-a692-776b5257c44e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a94a54-80f2-47e6-8e83-7a06c09cbb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370ded7f-9529-49f2-a562-3cc453076f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4c7e5b-6fb8-4c3e-886b-b1874c2d1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ca0fe3-d3bc-43a4-a2d8-a07cdc539cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5894342c-d2a2-4b5e-98eb-edb74948b1a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4640bf01-84a0-42a0-b22a-00fe983bc8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af682622-b766-4f59-8d5d-a9bd86649775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3efc3-895a-4aaa-86c3-81ea627350b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e3dbe4-3b19-4af1-9d18-f09766a2c4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ed6a83-dd23-4246-a262-ca0ed67924b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339c2701-c7d7-45eb-aac4-a12dd9893c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0563130-cb38-4baf-9b78-fda8240dab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb08678c-9171-422f-b3d2-74554e9e8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b14de5bc-86d4-43e6-85aa-9f7f79a65bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3881207-6ef4-4212-8760-974c0a92b10b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8d8650-17d0-4258-af08-2eba55643acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a71f763-d32e-4825-a686-d98c795d73e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30361cdf-9624-4f21-a951-8abd8d72f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00451cd4-cca9-4f60-8bc6-20c3453515e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8220cd8-fb6a-49be-bf77-cd6b474ce40f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60ebb4cd-1116-4d4a-b46b-2fc49a10aa28",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2ee8f4-3c61-4bd9-bed8-5ca389e87ad8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a65040f-cadc-4d89-a403-edd61df18f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9aafd8-a124-415c-8545-e70f6e173c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e33ef7c5-0d82-410a-bf1f-9fb2c84d293b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d1169dc-6b9f-448f-b8ba-066cebac915b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4361fe7-be77-4a70-bf47-0158862dbfe5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1d7489f-be90-4bb7-a1a1-64f95a603292",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8310c8d-3b76-414a-b46f-64e8da79e325"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef267ca7-c9d4-4a98-8dd8-28af9d6d1fa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20b129a1-b763-48a6-8786-7973927e51b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78553c2e-f8c9-46ab-9204-1317556ad6a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4ea5ddf-f536-4ade-ab34-71cc97068121"
            }
          }
        ]
      },
      {
        "id": "f6d3aff9-cf84-4bbd-8fa3-a79e655fa56f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f6140545-5a00-4121-8051-5ccfc4f7a3a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd8cd87a-e92d-4b27-b09b-9749ac77cbdd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "08fb281c-3528-4e86-a4a7-e288ccd714c3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ae1956-a289-47c6-a474-fbe8a5c8854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f71a6e-5a76-4fa4-b239-69e92e236853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677be487-81f4-4a9d-a67a-f72b0616348d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4536a50c-bd9e-4859-8945-a99444fec650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c815a0ba-0d3d-481b-861f-6d775caaf37e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e3a5f9-ac43-4c81-8925-9a80dc9e34bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61e910c-ec6e-4e71-ac9b-f9de67771aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9915336f-9a3d-43f7-9e66-87025a3ac34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "917d8cdb-1bee-4e09-bcaa-13b7244b1562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3561cc-79d0-42f0-aa32-77a8cf44b73f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc5af91-cf08-4f32-89cc-147408b95095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d144b1-baf6-4fc9-99d0-3ea2fa2f5f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcb845-329e-4c13-96a4-39efc7fddb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6ac0829-8341-44e6-89ab-d792e372906a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cbda8a-2164-4042-8f2e-0cf20ff8892c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c3ae0b-8384-43f4-b18d-bc69c90ad3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057f3d05-2ea9-467d-bae2-9797e27231a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eff190-0bc7-47d7-a257-8bfbd230346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6134db-b37b-4069-a0a0-1dd342633ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5c6cea-a157-414f-8522-c92324a768a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab33841-e6a3-4610-b86e-9a1bbe9ce05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe063731-7179-4782-91d3-fe868c0c620e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7598999-43ca-4a1d-b05d-75d2641332ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24ea219c-3693-400d-9619-948d13d691ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c690d-4347-4fb0-ada5-402354de11c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f25a6b-838c-44cc-bf8b-46d21dfcb26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a447c92-6e52-422e-a190-40c3c4566a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06de653d-ea67-4302-b75c-a8f4bc35932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aabaad56-cffd-4510-b85b-726282febdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add8f89-6a6e-4aae-bf9a-de43aefa592d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1b2e7d-767c-4698-89e6-b0aed214b661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f475cdae-7cc2-41b4-8453-b875a4850d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f178fc-2304-4791-9e04-925e83fedb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d569ba05-ac61-4520-a722-5f1338876787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6c9320-feb0-4867-bafa-c7a8427c86f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6124d8e-5a74-49ff-a540-731735cc2c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493b2d13-faed-458a-9997-6cb3edee852b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a34f52e-db3a-43d1-a1e1-4c553626925f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1a4939-f442-4b2f-a4b9-a974b1ed6ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9054d12-3b0a-4450-b829-ff72fcbfa212",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc1700b-0067-40e4-bbfa-bc2c7c881732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef64d4b7-e265-4433-a0fa-95a80d54d589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b50e6d-2e46-4ac0-b8a9-83f8351a45c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88a67606-d681-4253-a9e7-7a5c071705e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f42cc9-957e-495c-aa4f-21bd6c5959d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f66196-feeb-494b-bc9b-ffa76d24c7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2816a5bb-5151-4719-830b-70acc5bde1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b478973-cd9d-4b45-a42d-cacf9db96aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b29e5f-cf0f-4464-b4b8-66cae20b497b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b45c35-55fd-44d9-a8d4-f401626841b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c45a56e-050d-4261-80ce-37907f9973c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e7ee88-3b0f-4bb8-8277-cbe0cbaa7522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab5135b-421b-41c1-ad54-52953d70e342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9433d07-a7e3-4713-93e6-167ac7cf526b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a07286-592f-471d-8600-7953115fb36c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25b5034-db5c-47f7-a8cb-85babf735112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63ca9a5-5403-4652-81b2-9404c2c0164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd2b447-bffe-4655-98d7-bac16717b994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97157cbe-8a36-4dcb-bb28-f98fc334de02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c6f18c-4c58-4f1b-b609-2cd08d99410c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53f6f37-dbb8-4a62-95d2-48e6750e997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd74c7ea-f908-425a-a133-dd8cacc15ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39b7b32-ab05-4c3d-83ea-1cb51069dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea582b90-8fad-4da6-a5a5-36e313ed8bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3ec713-d873-4f69-b7b3-9ad298020e19",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f751d157-a2b9-4151-941f-42e1c972200e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b24e948-b02b-48a0-b590-1e8bf41027df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86584ed6-37a7-43dc-a667-999c6b2b6c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "444ef2d2-ef41-4c97-afa1-cef6b652f5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5c8dc4-807c-4e06-a887-5f66763a8e27",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b3905f-b236-4601-bc37-732dac833336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a122ce-db55-441e-876e-ec498c49a404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9dd457-1630-40a1-a83c-78579e462fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0705a7fa-ec65-4b92-8f2a-644583016771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec9718-7684-48f4-a727-fc2e35dc05ba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e50113-6c4d-41a5-97d7-c42a2e479af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e68ee73-7c26-44ae-9161-381c01480758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1537729d-303e-4623-8ca3-e362b3b80400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48374e3-fcbb-4fe2-acc4-2088e7d87e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cffbee-5df1-43da-8a0b-8d2262e4c651",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4266bb9a-b8e9-4bed-a42f-470ecc289293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6565c8d7-934d-41cc-9fff-d4bfe0de8ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19aa59b-49d8-4614-99db-3212add2fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded4562a-18ba-4130-965d-57b60163bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a204f545-7978-4373-a647-2863bb42d45b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb81257-573f-405f-b3f7-66dbdf0ca586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3102601-6cbd-4de0-82ef-094e3b19a604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03339d1-ac31-46e0-b103-f5e0e859a41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8521c8-63b4-4151-bf8c-b6713c7c9310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c82f88f-3826-442f-99f2-7c6598a742e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ef66f2-cb41-4336-9291-d885d7b6730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ad5221-17ef-4fdf-bd42-ef75a27cd509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f7cca6-2ea7-4a6b-83e8-086fbc8f17e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f51b78f-701c-46b8-996b-ba3aa899fd98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f61ea1-bbcc-47b4-8e93-76151194b222",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236ee01c-938b-4ef2-bfd8-853b16bd2ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24790e4c-5eb6-4f96-a172-8b117b4135f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f257fc6-86cf-4386-a7cd-5fdd12ce0738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da906bea-5400-4f06-8da2-5cbf1efed54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b895b2-0d4b-436c-ae92-f1dd9065b32f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0136e3b1-db05-40c0-89a8-43d12122d8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4a2213-2e7c-4990-8ad6-1aae03d4e13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b72c2e-28e3-42a9-9b5f-84152ca8930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30801de9-8ddd-46fc-98c5-5b57b58d77b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d772511-f6b9-4e46-9b31-56ec8e6557be",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74893e6-58b8-4d0a-bac0-0281aa40c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe1c7c3-2085-468c-8ac7-1735781e672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d8c83-acff-4a3f-9cef-03ad8a2fef4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b6ddb9-89b0-49ed-a318-6eb5d7431c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baa6399-4a7b-4109-9ff7-b252504d974b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8843cbee-3342-4671-9f46-f25dfa51a67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4b3634-6a3b-44f2-8341-27533c784d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c79a2e6-8d43-4680-8c04-e73e21399917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26237252-ff7c-41ab-ab3b-d7f6af0f1044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6480dbf1-e132-47cb-83b1-8a842e51a138",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8196f4d2-179f-4f82-b3e3-43c77ec95266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab5998d-389a-4c5f-91b1-10391f0283b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0c3b3d-48a3-4850-afe0-44ba5a60c7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b970b39-f74f-46ef-aadf-57ffbade9028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad79a7a-c60f-4e90-b5cb-e287a1941ef3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee905875-8cc2-44ca-925d-a65a1edbcf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8fea9d-8bb8-4811-8760-5b0be29d4557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26f1444-975e-45a5-9e13-5de8e2d4b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59666d9c-ff7b-4064-abce-b65a7382096b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e4b886-910c-4d68-ae9f-e9e226a37ae5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae0dde-fc52-438b-b61f-87c5dd3e4d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abfb90a-6b0b-4660-9c88-d41690ecfd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290bc32f-2709-4a5b-9427-cf75b47e631d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba6fe5f-e059-4bb5-909c-d3bb4e1e7271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2450c2b0-3f0b-4473-9d41-1c4db0525475",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65accfe6-aa8d-4fef-b3fd-8b465cbf5d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2266d4-74c5-4323-a1af-f72aa4a5586b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c229958f-4767-444d-b002-7810989839f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d19489-31e1-49b9-aec3-b3571024471f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f642e44b-3f5e-4b3b-97bc-1926d49ff9be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94d3345-edcf-427e-a8a5-2d1f15e6f0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e65f892-1612-43ba-afbf-b5532a52f8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e611e1-d2c4-49a5-a729-2568118d6a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e46aeb53-b5f0-4a94-83f1-c44e2ae84deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154414bc-e97b-4406-8b73-0df5649f1257",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d66e64-cf90-4528-8499-59a660de4a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d68113d-aebb-4b0b-b7c1-10522557ac23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900fda50-7b80-4140-9373-2f39ba8b1af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d3406a-4d09-410b-b8d6-68fbe9de05dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e927e258-d45f-4e64-a725-86fd7f7db458",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2814f077-35e9-43aa-9dc7-a1df6acabe9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31003c8a-8f87-4c68-bc6e-0ba2064e323f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684bb70d-bc86-415b-8e52-2c27b806275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77b65dd2-37d2-4014-a96e-39ed28871e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218034a9-89b6-41ae-bcda-43a495a8aef8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffceac0f-8f1b-4f88-9754-a21d17720e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aa7d7d-b8ea-494a-92c3-b88620981e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde8fbd1-b583-4f9e-b35e-7aad46a9beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a770b1-9083-4937-8a0b-75d1b375f32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f058f82-f813-4053-ab51-066d9b6b7ec9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d63b46-735a-4fc8-ae8e-77fb83976f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77354fc-25cf-4bd9-a37c-1cfdde203ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab563a98-ccd8-4ac1-93d4-e42bebd19892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "881b3efc-fb3a-44cd-a1de-635fda7d6ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fcb046-b502-49ed-81bf-ff9ca3ce3c97",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269adac1-0555-4bc9-ac5f-89461bce5f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0acfcb-72f4-4abd-b2c1-db11b68c3092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71ff29b-eab0-4d68-9ed5-0182ac1d1790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc80b938-2c0d-4cfd-8126-9ed68fd7a32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d777ee-478b-4c29-a75c-f91b609d6259",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8faeb8-4109-4c04-93b8-50215232445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0eac7c-c70e-4ae7-880a-74100e923c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76be05a0-402c-4156-b2d1-1fa51c86f1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bff03a4-b2b9-46e1-afed-0dfe52e558af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15cfe4b-caf1-40fc-862e-359f6c2f38d6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0994ad6-eb1c-4901-8320-7df4c741d73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6b4eb3-9de9-4186-82ac-a1056ff1da69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbab37d7-a6e9-483d-816b-78aff8e8f029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13bbf34d-8b9a-471d-a66d-40190a358761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd18a93-49b2-4cd9-aec5-27cea8d27f09",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b24e5b1-ea56-452b-94fb-afa895dbf899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7f56620-8e04-4d19-879e-76316a76d92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a11203f-164a-4e01-ab01-41c499502bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eba89cb-7752-440e-87cb-f83499d45b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04900bc-a1ef-47b8-9033-ec81e5e1328f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde9b55a-a0c8-4205-a047-1a90fcfbdcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a3f1db-825f-4621-af84-49dbb7233428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1721174e-f59f-40a6-bbbb-7184ac8ce40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c96681a7-daad-479c-918c-75d144238d91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccd829b0-be24-4b2e-8bc0-fc45bd648afa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5b7c957-a1df-45b4-97b3-ba87f29973cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26fdda5-7835-41d4-9523-bc77200eabf2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eda5a2a3-7be4-43aa-bd58-c0c9c0dc610e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9211275f-920c-486d-85a6-6a7a69a1d556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0dd15cf-7274-4bfb-80a8-2bce91e8a284"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0ebd1e-94f9-4544-ae91-d563e38d7db3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3417e80-d71c-4d72-a006-8b30670e22df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bbbe6df-247a-423f-bfe0-448a25295773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5329814-3364-42a6-b79e-cc9e264add38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2de01a03-bab1-4108-9508-b850bef2c7a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e021b3aa-e7f6-4b5d-8d57-3c8a78b2c771"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65bccfdb-2c9e-4502-899b-27c0ccfe3600",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "913d3591-6c9d-4d40-aef7-88e7202db72d"
            }
          }
        ]
      },
      {
        "id": "1b85c693-0524-450d-86c6-014dd14fb99f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ab91d9d-06e9-416d-911e-d7161d791e22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "847b4937-1371-4602-ac10-1501777cf564",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "359f8b80-2c68-4034-ad1f-8aebe35186a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c70f285-8ab9-4741-99b1-90308b0aa53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c3e880-2a98-452c-abed-83a6943b17fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75a3e2d-d31f-4529-b844-61bc690dab80",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e8a688-bbe8-4360-9075-d7d54f1dabdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9318362e-61f6-44bc-b243-54c0c72e8f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6a0cd7-ccf8-481e-a33f-e3876a38fad5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7505aba-8df8-4d74-b2f0-c6b6ed0c050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d97eb7-d72c-4fe3-9aa2-8c1edd38dc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb05eeb-89fa-42f1-b483-8381cd3cc9f9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3846b736-5b09-48e6-9f2e-a8382326ff96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081bbea7-4527-4cc2-ab33-8e884ffdb957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05befbb-f75d-4744-bc0f-1bd6500a6465",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2643c2-da25-41c8-8c0f-bbcfd215be95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807cb2cd-37c8-43cf-b9f4-78c221570584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66658dd5-86dd-4eee-9108-d101998eb04c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de9c55-e930-4d9d-9800-55c491536981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02920b68-48b7-4b4b-99cc-033caa8a1f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d850687-feb1-45c6-8e22-49430cbe7cd8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a7f6a-b9a1-460c-8d1f-8a06e2187b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3798b2e7-c74a-4294-bcab-d98ed677e920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d227072-6746-448e-b72a-007903615307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38273d0-4900-414b-8fe8-6af4060e1e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c64168-05c7-41c1-9652-28d0b5891567",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0ac754-25fd-42c9-b07a-b64c5df76d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b16c8930-dd83-41c6-8434-acb486fc836e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbda1d20-063d-4f33-b2a9-07db6a864257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015efd7f-5db1-499d-a5b7-f023198f65d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3cf147-8df5-42b0-b5d3-5c3ca138f1e1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ace433-1657-47d1-a0f5-cc159f12f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aafa875e-0c1d-4c03-b2b7-7f9c2cfea436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804d56a-4624-498a-b8d1-45ed13a47145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e010d9-b003-496c-9fcd-be4a5b3ab38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384ae9d1-4dd3-420b-89d0-0e8bd1308c63",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a63873-1135-4787-81a2-97c7fffc2689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "464d853b-e742-4c96-a981-148f6f095e3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44cf1c2-2057-4dd3-8221-b4b6996c8582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8c6681-fb92-443f-be25-221f44258cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dab6391-2cfe-4666-ab08-f88de445f1b9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4438400-5b5a-4862-9b23-d78a7f1ca055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da40a8ec-c22c-4b95-b072-89e414627d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7e0138-8dfa-4f24-a930-1d060753d40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af138fc9-1976-48f8-a374-b852d85c84ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032a28d5-2220-4b53-a962-af7a6976e829",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d4f90b-39a0-4f08-922e-c8813ea86bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329fe8f6-9584-41e8-bbb2-c0fbc79fbeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b607c910-50ce-4b61-a65c-99454ef4c9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9be283f-cd88-4eab-8726-47f1f1a4292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1ee3ce-4dd8-404f-b028-ce4aadf44956",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688bc915-85ce-48f8-a2ee-b1be890a6eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995bc3a6-ab6c-4a0b-9cc1-0d43a5844220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3efd52b-84ab-4b27-862c-a5949cfbbc8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdfc9b8-6b2e-45eb-92f9-c8cb0e6db07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41937c79-e9a5-4390-a0db-509071d1beb8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba2d86-4b01-4c4b-b070-31d56ebef769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877466a8-5ef4-48ba-84b3-036dd9c2faf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ee39d0-fd9c-4ce4-982c-9b9902c0d535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db45c431-9a2c-45a1-ba48-601c573efb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48deb412-6cb2-47d0-8fdf-929194b16535",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bc3786-b21e-4c15-8959-3879f769b645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34775052-6015-4ad3-be68-d3235a1ed6f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4028a6-0578-43ae-aa17-afdb2a518a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab2bd35-93bf-461e-8d46-2c4324def1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3b00fb-88e1-455a-833d-72653d216578",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214972b6-fa6f-4d5a-9ddd-ee2d308dbdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962d324b-cbdb-45f4-a313-622c5f22e232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540c4783-dc4f-4b64-aef4-d143c982a52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b054268-6b5c-4cea-938f-70075fd7422a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac356990-7c09-4448-b0f1-ec87f268271f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c0c867-1492-43e9-88da-1005ab862cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a01b04-2b36-4fd4-a13f-9ac98c8dc554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f950b8-a0cc-4dac-bcc4-b16a8c60b0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1684364c-165e-47cc-b3b9-d7b392b1f604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad229592-6167-4814-9cca-407f9fe1425b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f92914f-a7f4-4ebb-9afa-35492959b844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa83fdb7-7b79-4bb9-af1a-cbf1ee0b83d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a2a207-c645-443c-a8f6-9f3c7efbb01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a56906-a3bd-4b07-9f82-8c6b1c45f17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0ffa1d-969f-481a-931b-e82678462f03",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a49f50-410c-4da6-81cc-9f7fe375f0bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a327e2-86ab-47f6-ad56-ab3fab7fca91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ee6800-58d7-4b83-b198-6ad8f5955070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdb0f7f-202f-4011-95d9-f43fdb41cff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec70524f-4f25-4df2-9231-fa7de90e4f07",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a227e8e-78d2-41b1-914c-746c6a0fd71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a612f96b-d83d-4f59-8e7f-4345ce8587f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a53e01f-7b9f-44e0-b6a4-241d8b9631f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b097091-cc9b-43ea-aff7-fc666aa71131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31473f1f-ae4c-483d-836f-f988712d301c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b70a8d-6f60-4390-a910-cb6eeb274847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84c6efb-1012-48ea-b122-ba31be29898a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cc6671-c35c-4734-80c4-ecc5b01326bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ccc3bd1-98a3-4c53-9ff7-16ecb065b3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9221de-e40a-4375-b8ea-5bb6fd5ab90b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03abd867-dcda-4524-84f8-3f531cc5460a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce98ae60-294c-4d70-924e-58b1f66a2ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab023e29-daff-4332-ace3-c6fe8859a2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b68903-f8b8-4699-bee9-89f10cfc96a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85639099-b3ed-489f-9e47-a960c36bf5ef",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a3ac1a-0767-4408-8425-9bb0d38f7923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7f5e6c0-5d18-4223-a989-9b6eb9392aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c461bc55-b559-4949-91d9-ca49d388adb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c46504-3a27-4ed3-9f24-6913422398be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36277039-6be1-466d-8288-40c4dcdb7a2f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602a6e05-5e7d-4234-a4cf-c03194f92b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7fe0513-7ee8-4751-802a-b31075617f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94226b8-005d-4383-86db-ed8bb97d9432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e73476-1bf2-43f9-bf75-f93f836559a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5358a1-4030-4bb4-aeac-aa520d760d83",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3e23b8-ae79-4de1-93b1-404087c94432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02357834-bb9d-4c70-a459-37df9e598f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45439069-443d-486e-a64f-286e152f8256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6449b6f4-dbd5-4094-8992-d086d7f63fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f9ff17-3612-4dd0-8b2e-033f19a57c3a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca29fa-615a-475c-a364-a105c5f69377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fe1336-9c02-4eda-8e22-2ec22a59c451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f82a9e5-0101-4d74-8df6-49731434d1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8107afb0-1aa4-4044-a553-ac317452a78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8100bd-19a4-4977-a8e2-df8ecc13e0ee",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b42759-12ff-41e3-a8bb-c9ec7678def2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99ed7e2c-a551-43e6-b2b0-110b3162d8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15bf20-b407-4d41-b452-4502d68ed1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a1e316-f962-4320-bfe2-f54c411bbe11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef751359-3066-4b6b-8a6a-a38315afe475",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b889ce-0962-4ba8-9f4e-723f124c502c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d767002-6abe-46c1-b11f-c8fafb011fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a49824-5428-4f57-9879-4427ee9421c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79162102-cfbf-4571-883d-267fbed8fbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb7f5f-3a52-4941-9c4a-75b6ccf2adb1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a1d158-ebe3-4581-ab19-0f7b668d530b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d376b5ca-96de-4a1b-9351-18ec9bf22f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ac573c-ca0b-48f5-a32f-43b7f629f748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1741911d-12f0-4cc2-ba90-4e6351e609bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b981464-70c5-4c3c-b768-6b7f5dc0329a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c108b61-04b8-4412-be9e-7edee6155911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0363761-2ce3-4c45-8a4f-318bcb19f164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd789f2-7f81-479d-900b-5080d78298b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d2cc78-2174-4dcd-8125-2a00920c7ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f766ceb0-7451-464b-a7aa-8537b700b98d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6692a946-0af8-4b05-a09d-c1d19151e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfbaef77-b0a4-47c0-9ef6-b224c2a0aa61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4cce9e-06ca-46a8-86c6-67142d4cc0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027c396a-8948-4565-a24e-36c5ddc4883a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8850ff57-faa1-4e4c-8cea-ef1c7113fde1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1948e32a-e745-4d38-933a-97d40745e7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37700928-886d-4cfc-b2de-5c9fe12beb9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4b3781-c64a-4e9c-99c9-cb647732c30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a365815d-0b67-470d-ad12-cba24eea11ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08396db2-68d9-48f9-b649-5dce3c332e94",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91aefd91-28ee-4c03-a684-bd7f206e3532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6c370e-4e71-49dc-b6b2-c2fb7809c6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c989325-5262-4b69-bfc3-e5f29e85a6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc6d7ff-f84a-4753-aa6f-c1b928707ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100cb7c0-d460-4d92-a53e-724b2baed94b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83517e0-2083-45ee-894a-9354da791c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5596eade-4b05-4881-b5c4-98fff4589536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb53959-91f5-475a-8647-d75aa00c2dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6a11ff-fe0c-4c18-8c7d-5db9748c2c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf7a3e3-1939-4e87-8989-1cec4c10005d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26c7d61-632f-479e-a59c-5807060e4ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f78db21-094e-424f-a5ff-bf872baed3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cc5763-38e9-4ce7-ab1f-0b4fd7da57ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27419e69-a68e-476e-bf49-0109c392ed0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235f8ccb-e601-49e3-bd4b-aaad198e8dab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef30fa0-c716-4d21-b610-8e4c212abeb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a95df7-c3b5-4f91-bd9a-aff2433395bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a611939-7fe9-4859-ba06-4666644c9ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18435270-6892-4814-978a-e52b9a5b6a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20855389-a476-43da-a1b0-12b456e0bb31",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bbdb0e-8a69-47d6-bdfe-843b00cb26e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9405dd7-2f0a-41a5-9719-00b761b7ccd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c01beb-b584-4b3c-8eb6-1857a521ef1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9795110a-6766-4272-9c42-1cb7845574bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbe6c89-d844-4c0c-bff9-af19a859f85a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b095a25-5c8e-4856-9971-e6adfb2c13cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79956ab1-094c-4bb8-a6ab-67c972927447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628352c4-cdf1-48aa-8e25-9584161ed8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b0622e-7bab-4a84-bc3c-e19120cd5419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a3912d-ec9b-4cf2-ad34-b45de347dad8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e816e3-37d7-42d1-9b6d-5123e3c5cb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07e328b-8ed4-42b5-bd96-73a84b30dfd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc58a301-8598-411a-a316-764cf39fe6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31847d95-73c3-43e1-bd5e-e3b6f2869eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e336c7a1-b746-44b0-b2d5-e55eb6ee910e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568bd4cb-de13-45a5-8568-3ce6407edcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b444133-0154-4617-a5c2-af88f23bdbab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19df15d8-0582-43f3-a337-931f7cfa675e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0728292-acfe-4797-90a4-1318492d45bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6056b7-f961-4d8d-be3f-989cfee167a2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3215c-531d-47c1-9522-1ad3bda97846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d13947-dd3e-4880-ba95-516812f3435d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f2061-c4ec-43f8-92ff-9862eb811006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48f729b-eb74-44a5-9ffb-2e126566d9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829217bc-053b-4ab7-8f7b-3847b3e978bc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3859883-99d7-4e6e-893c-f46d9de200dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bb36ba-8f3c-451d-8c6d-3d507562fa0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83bbe47-3a9a-45b1-8bb3-e3b6265681d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71274fa5-a249-4576-8bb8-f718591b82ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a06d09-58e7-4713-86d3-4461caa804b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b0b66b-47e6-4e81-aaa9-9e7d79456ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fccd47-04b3-4179-a981-255a603a81e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77499de3-f86d-42db-bcbf-664e7a0340d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42589682-a1c2-4a79-a2a4-24d2c706e027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35a75d7-59d5-43b4-8376-8a734b8003fe",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1163964d-de84-4f7f-babd-565446b76938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efe0069-4b64-4cb0-8946-9c73e1fddef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3931520-e263-4a62-8b9d-3640ad5f3f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc30848-fad1-4be3-a0e2-74493021cc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3311972-fa76-4821-9d6a-4c3ba2b270ac",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de512d1f-218e-4086-ba9d-60eb19f36dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405962ab-0d10-49b1-95be-da2ebeaf0585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a61e24-ee80-4d99-97c1-25f1ca7b0bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ac842d-b46b-4ed3-88fc-1f8342767292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3071ba-b896-4a5a-99a5-94e93ec391d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d64edba-f21c-431a-86cb-299d6801fc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b411394-d593-4a95-a314-08bd211a431f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205fc9f1-852a-4523-80b7-a86e4ebd5279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236007f1-eb46-4332-bf95-ca44dd9110be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d628c9-fb98-4a0c-b0c9-76dd9aaf057d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ff2d8b-eebf-46ec-bf31-a17f6fc4e7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae08c86-432d-41ee-bd2d-dc604ed0a55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ab720-f0e9-4c88-abc9-57ecbef01538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ff84a6-2a12-4ed0-8db3-87e7c42e8cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0f1ee4-803d-445f-a394-8df6cff4d868",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2fca9d-9ffb-4394-bb2e-860fd2ccd5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60292e72-9f59-49be-8e56-4b3f4a9a11f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "050f92a5-5993-4a25-8bdf-8c96292ede87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a8257f-af0e-4e4b-a02d-1989b8e64bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07b8835-abbb-470b-9692-4554450198ef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70021442-6a99-44cc-92e2-e0bb6522426a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213897d8-d65a-4808-b7e2-b3cd6c87c39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4269f0f-df83-4bac-b302-6c1817584133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab904c37-12d7-4e77-8f4c-94fb9e164c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b15563-f194-4dfc-8dff-35e704684365",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9e6d8a-d5c4-415b-ac9c-e46f3d891ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea658dda-93ca-42eb-baed-ea25d7b8b7b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405a619f-e021-4740-a500-168afa92e846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70843121-0750-4811-9cc3-36dc340e3150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3e8757-6849-4102-adee-4b3e8874574a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15366b04-59e3-4db0-b74a-9a183e85f506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f207d868-66b1-4319-8e97-01af4750372b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b9bbad-fc83-4ec8-b10a-598366ba7cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1562651e-915e-47df-980f-9ac55d06c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52803bef-e89a-4c41-a4c3-42cf891c52da",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156f7739-1e3b-408c-9ed9-d9ec57527a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ba688c-2f99-4786-949b-c6d1ad62022d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86797a86-73b9-48e0-bf87-ffb867fa7f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f50f8-06a5-4972-bba6-0fe2ad0393bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1defb9a6-fa2b-4e1d-aa5f-39a4b608e3e9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8522a137-ed56-4a4f-8d46-61da92bd0076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faae43a-5abb-4972-b122-9b23d61b88f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cd31b2-33f4-42e0-903a-2887ddba5135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ad3e36-1550-427a-bde3-698564f32507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a03544-3795-4daa-b0d0-19a676cb5d97",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19459c5a-7f58-411c-b11c-f123f72601ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b437d2-4806-4176-864c-b4bf1e23c55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fcd2d9-bb26-43cd-9baf-136aa1b9a0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75141bcd-4d42-49a2-aac7-1fda1db3c3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a556d06-04ef-4db7-8fee-95d08df7fa53",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2632286-773e-4668-85c4-85b310fcdf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ae578f-76e4-41ed-86f0-ff94213d28c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee293f56-45b7-4f3f-a322-16eef6bc1b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49bf491-384f-4e9d-a8d6-e5a8c9a554ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2140c533-de5d-49b2-85ee-1db6e1914a5e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784964c-21f5-4ea0-9e5b-994702e92319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2028eaa8-8f7a-40d4-944c-a4ea9df95ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51d1fc6-7ca1-4f39-a65a-535b50f268bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ccee055-4d8d-4faa-8b93-2df9bef01d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5574d56a-d45d-4646-a053-a441314d1d80",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffa76a6-ba4d-4030-bed2-256204d01bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eff5344-7fa7-4942-a013-e85f01947546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff9a5a7-89f2-4b78-b749-70cbb513d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e95c4f1-28dc-4da0-8834-7e757b33dfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c225b2e-89e8-4d55-920a-77ec609cf657",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d50309d-c751-439d-9f6d-dd45108ed6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b831804b-a143-4bb1-a33f-bccafdd6104d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af62952a-ef18-45f8-87c2-2de17f2f9b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79022366-931c-4047-8eac-3d164fb535b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364d69cd-ac2e-46d2-bd0c-a94b80db58f3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d6606e-70f4-488c-b0b3-44354aa2792f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84d42f2-6e99-4a15-9816-5264831ebe30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac67c039-5b4f-4a9f-aea1-d04b93ffa9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf67abb-691d-420c-bed8-5ecccfb0d361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca196af-d77e-44bf-b24c-6b71b37ad667",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864e0bc3-26b5-462e-b331-251fe2e925a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32794d29-c9df-45c2-aedd-19beabc2eced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e11223-50da-45c7-b27d-abf88c1d21c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dfd96e-e4aa-48c3-9cf7-bec483e8e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28a14ae-d93e-4bc7-b665-737c290ca10c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cffba0-7cf7-44c3-af67-3c2dd27a2d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1dc389-a980-4cb8-b2e3-ffeebba8ad28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43de229-6ec1-430f-b25e-312524c5a96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58030e77-8ef1-47ee-b5ce-c201ee3f30a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4798df8a-8782-49d4-86b2-3f755a2da193",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396fb6d6-340a-480d-bcd0-e57d14909218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed0cac3-f0f6-48b6-8041-0ab0a766e581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24dc646-ff92-4cb1-bfd0-952d56464c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716b3741-f5f7-493e-8250-d02ec1c97d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961bafc0-9961-4b69-b868-7574b89d8ab7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98713881-e1b2-481a-8b40-d4a562d7cd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3dfa048-69f1-429a-8ccd-ff6a1f005ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cd2b60-1473-4156-93cd-7f47bc503334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90744b18-485b-43d5-ad54-4b1c8a4951ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9905e57c-4a69-4b64-82a9-de2c1c4759ba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815c79a4-3f81-47f9-9060-3f7c774e9570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b1d441-0c4b-4123-814c-185e81f483a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d01058-110d-40eb-acd8-6af1c7f4d589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b01623-6162-4856-8e38-b159e299a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492938c8-b27b-467e-a08b-968396a6d35f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5112397-d000-4187-9125-1b2aab825c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50425d9-15ec-48d9-a134-74fd4472627a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1053fca6-958f-4b48-97ce-714adf9d2eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61421f06-69a1-407e-9901-d1b5f2bc3d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a264669-c0ac-457d-bc01-6c71314772d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6fea79-e5b4-4b7c-affe-5ecc9460adca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80dd163-6131-4f51-944c-27bbf94697f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4325156-c71c-4207-ae57-420cd7f66d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc76576-0128-409d-8799-a23e15fb24a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6c3300-0185-4e3b-8102-a3dc78f66b93",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac68a13-5cd8-4556-b774-b6e98a98a57a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c463030-e360-417f-994f-b58e7a56a1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941e168f-de90-428e-867c-bed2a97aeb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c951ac18-b3c1-43d4-83d8-a9eb58225296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176702dd-e6fb-4227-8c9a-57c0319a8df6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa5a942-ca9e-42d4-980e-063ae97f60a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa788cbf-2ad8-4567-a6d8-873113439e18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d64dcf-9692-4867-ac25-3cb2fd69ef40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48400c8a-3a67-40f4-bc1b-c6120d2dda73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d40b30a7-d07f-409a-8450-c763f0c19cca",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ef5b29-7d2e-4028-9143-811a43c160de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5acac05-c3b6-466f-bf81-2c62753132e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab21b700-fb2c-4e59-8ac4-601a7cd8b5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f7615a-ec64-468e-b939-c5579d8af701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f754da49-5fe0-4130-b7e9-d63d3e5fc494",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d39114-d4a8-490d-9fdf-2dc5798a2cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e5e21e-afbe-4640-955f-47e1347657dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682e855-8f8d-4297-af04-3e3788c582aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb86516-a3fe-4760-9dc4-5cc78632d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff21dfb-e48f-4171-bc09-18e4676ce02b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad0f5d9-fcb7-4d2c-9d11-5e4bd4f0beab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a522dac8-620b-4512-ac74-76012546798b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc0db51-61c7-40aa-8eab-652a91591432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65876275-2447-4606-ae02-381ca6b589fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172ecc89-f93c-465c-9a75-9002bb8193ac",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1f833d-1b58-4dfe-b7da-adf5e203ef52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "888c22d4-2666-4ad6-b810-35a5ff746477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8621c3-ffbc-402d-965d-f0aa9ee5d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096b6802-090f-4976-a22e-cea97b6ce672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58a4079-6f05-4527-ab2c-ea77c3359609",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cda558-d70d-4a40-981f-6eb39412e9e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98fb410-92af-481c-8e15-a1ecfefac36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd8f29d-6990-41fa-bedb-a0a83571907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf1cb38-f27a-4d13-ae32-8410195c50e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876615f0-297b-440a-88ff-becc2a61c145",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53193663-d67c-4a92-90da-dcb1aaad0494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb2f2bc-c27d-4c5b-a95a-05518a817b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f2c0ac-5292-4aa0-92bd-8adae00ceb88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61df63dd-53a1-431c-9afe-9978e053af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc6ed45-209b-4cb1-b7df-376878507468",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647d88dd-c1ce-44e8-b8b7-06f4fb3ab7fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cbc413a-c7c5-412d-9c8a-3d347859a257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b9c6b3-3987-40f8-8195-64b0d2c88e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2df7f41-c458-4db1-bfdc-f6bc13037ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fe5dd2-24bb-409d-9221-1b1e41e185a0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e13956-db2a-488f-8b18-5e5948999afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42bc893-1208-4fd1-8b4f-244f32998ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ee5e4f-3984-4895-9ee5-6d29c6854b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287564b8-66ea-4c1f-b7f9-38700cadee00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4ffc8c-b767-49a9-82eb-7eb17d51fab7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a15a87-8ff2-4324-980d-be97d3541945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a1fbd3-21d1-4b81-930d-5364c57e4db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690d7d00-f585-4eb6-9a51-d2a415d4ff05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ed4d4f-6b5f-4856-b792-457d7c97e5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b878ea-6048-49a3-ac9a-29dbacd8bbc2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3118f1c5-d419-45c8-8d44-3fe7b631557e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2c5ace-0094-4b47-9f66-9328e9345dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b9c1b1-42bf-4664-b4ed-dda72ad70aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db4b97e0-8e12-491b-9214-c6baa2dbc609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5435ae9-cb64-450c-92d4-7407fa9a1f5a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5415726-ddc0-427e-af3f-6b1c618ea862",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db0460c6-b267-4442-8d8e-c62d61a93128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc151b8-1e25-4359-bb46-69f9c62ae93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ce949d-fd7b-432e-9888-fb79ced04e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3defaa-9877-4954-8da2-6221553b70c8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab50fbc-5ee3-4c85-8391-d940d887824f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cf9f816-93f7-42a6-87dc-88d770c43bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b85d72-f545-4c0c-b517-7995c33ae547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b145007-75d1-43ec-8ced-9b00eb8c3e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f2464f-ea3b-46a0-a5ed-71743c5c908f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4039e2-ad68-4b9a-bea7-a548094cf5b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ee7791-26c6-4ae6-8c32-2cea88d2ba74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57abc252-8162-4de3-8d9b-7c7feff42380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c62272-7555-4045-9316-dc9f935eaccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b519964c-880a-408e-a7e0-2d83f5977c1d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddff334c-edd2-46e6-8377-17ee0460f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08643412-a699-405b-a6f0-c2aa8cc38647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36015c64-4479-41b6-b23a-01b1a1b60a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3170e7-6ab3-4e39-81f3-d8b268c97d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445c65bc-df5a-4408-af00-04f1ecbe8b40",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e7886c-0650-481c-989b-be39f4ff671b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e57f2fc-41a9-4a05-bd7a-60d039d42c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a128f399-0f3a-4614-93c1-c16b0f827e10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccafc6e-2a88-49bf-ac1b-4b8ab21b4f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322ebdf0-c596-4239-987a-ee4dd106a8ad",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334e8205-cc20-4e9a-9158-dc4790c9f3ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d598b36-ac11-4c62-96b4-d3c707b4deef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9563c7-d66f-4cd7-889d-5c931a2eb92f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583041d4-681b-457c-86c4-51b45a1656df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa34413e-8dc5-4f33-afe1-cefeaead3932",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9114217-1a23-4fcb-aa00-ab8fb4a483c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4303b866-5fc5-4a3f-8d16-e198258e789b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44420e7e-8b40-4ad4-a63d-0128e7bf54a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb53eb44-d62d-4a6f-aa1d-50ceb30e0976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c618494f-5a63-431d-a6a2-0dcaed95d503",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a05aeb4-7627-4678-83db-d1dec8e34f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a68f27-c787-4d2d-a2c0-9b64d2778edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866f7b5f-f9f4-4425-8a01-ad9ddd19163e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88ec2d1-8de1-4cb7-a45f-9d83ebbbfdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fc0589-8956-4053-a641-c2ff658ec0eb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1456ff00-c1a3-47d8-a306-8461938bcdbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb471145-f004-40e1-9e78-e8f494566b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7680696-0b09-4b53-a712-4c766759dc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aebb2f8c-1b34-43b2-b7a2-d9295189cda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa82207c-70bf-4700-bb5e-62b6ec821ef9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f7143c-6d40-44a6-aa40-23184c85e45e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d87bfe1-449f-4e27-8ce6-86662b0dcebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110a0730-0c48-4d6e-8e28-8b7a72c6094a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6bfbba-cfcb-4110-bb1c-aa7ab2db9d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b29d2d-3086-4ce0-bc93-63b45fd867fd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533fe7b2-9461-4a63-bcb3-8ea086ae5e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fff977d4-5048-4c64-8be8-10ada82b254f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df8efc8-1770-4e4c-8161-adfe9e9d2cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca8a8f8-846d-4ecf-bf9b-27d85a0471e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3db2891-49c1-4909-bf09-74509af28915",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f100104-bc2a-4085-8bde-a88f62667650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6bb35b-2cd7-4c3b-804d-8058c3200785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86a3df9-5517-4d05-803c-dfa3d48b7401",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b984c2e9-23c9-44ca-85da-add7abc3dfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6920f-340e-4f5e-b0fe-5b80ec3fad20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f340e69-ca0e-44c6-b722-23ef942f810b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03da9dc9-3574-49d2-93ee-72d10c665bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd633ae8-28a7-4050-b810-42e8f6989c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f5749d-8e4f-482c-a54c-37b5740aa299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b61418-6167-45f4-ad7d-ece7b8a95bea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bbaf49-8e7e-455a-9b01-1b75e30c5a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4410ecc8-8838-458d-80c2-e7412c85c594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d86c3d-602e-42a5-8436-1e26bafd2f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2ba407-8f2d-4ae8-acf1-1d5e4a682a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9be5e0-508c-4a9c-8026-792d7b254c0f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae4b6e3-1ade-497d-ab2d-426b1a643432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3991ea75-b06b-493d-9bff-3b009d9eff15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba65c8e9-ddc4-4987-afe0-9101a78f686a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234d42c6-a912-42a1-8f93-e5e0d5ddbdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27df63e1-fc23-4cd7-a0fc-0dfb71b09a99",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd06490-643a-45c3-8e2c-c9df5e69e11c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ca8199-20db-4c9b-a57b-c2b52ddba91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef968c1-1b8e-40c3-9194-737a1ff78ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811cf32b-4815-48d9-b6fa-cea87e2c952a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3fb87d-81be-4b18-ab8f-0bd1eeb79597",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc6b98f-57d9-4463-bbc2-9e7638a40aeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46d7a638-bb1b-4c99-877a-fe2e525e6a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c8a005-2d7a-430f-82ad-38d7fcc2861f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e217e431-d16a-4a70-80ff-23b6053e48e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fddc43-2158-43e7-bbcf-c2f3fb5dd5f3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639c4b67-7d0b-46c3-8fd5-8c1ab90ff0be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8e4b94-44b0-49a8-b14c-c48001e1aecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3febc55e-84f6-4521-8ee9-9dc63efdeaf0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5e8666-f996-4b04-9f2c-ed208940408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dfce8a6-c678-46bf-b19f-d592281ba437",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2af8c06-728f-4404-a77a-6665e2a7fc28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02536190-d64d-40c4-a8fd-64487947ee2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618974fc-0372-4fb2-b8bd-4e2546fda214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74aca57-af0f-4107-ac3e-e430fd120848"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ec57d22-46c3-4025-a281-8ccfd23d8c45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb66be87-e61c-4470-af56-390765bd676e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db17a073-0c6a-4947-8f2a-8b0f6da8f2cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c6dae9e-1c90-45de-b1a3-247c9c7a5afa"
                    }
                  }
                ]
              },
              {
                "id": "db97c482-f8a1-4ce5-bc43-82b313215ec8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7c28ad5-66ba-4f2d-809f-efcbea505543",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddd3204-4f68-4c18-8c95-36b79d951189",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2f12962f-3909-42d0-84b1-d0fff9a12b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea8976f-4cd0-44eb-8644-ac3e0589ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9f36b00-c8a7-4269-be57-ffea654c6a91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08b2c749-c9a0-4a21-91a9-a2e3af83d3d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91f6f953-af17-46f2-bb4c-11df88db14cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a01e98c-056a-4eb0-ae00-5beec9a12a9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2e264e8-828f-4e26-bb84-55a8613a3a2f"
                    }
                  }
                ]
              },
              {
                "id": "0ea230fe-adc1-4d0f-b00c-211c52aace62",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "65602723-bf99-4b9d-b834-3244e621b833",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe67392-eae4-46da-a648-fb06ca7c2ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2e73763d-ec2a-4e95-8541-3ff98e1b8749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3553b443-5310-4009-b931-2a6dfcecf978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc80c30-61dc-4cb1-8361-d92d74ad15c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb4e383c-8919-4add-ac2c-190d8fda2cd5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4f621c9-2b2b-495c-99eb-a696fd2aa5be",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36cda1b-eece-413b-8ee6-60c126c7c2d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfff672e-6c42-4bc5-afe1-d8eea02f9247"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82972b6d-00cf-4712-9f88-09a9d90936fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04161b6e-8395-40fe-953d-3f38db74de54"
                    }
                  }
                ]
              },
              {
                "id": "0d410324-925a-43c1-bbac-08da582c5924",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e2554b-18a2-45e7-9938-58ad8bfa7a06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3fbae36d-9613-43ab-a9fc-21b7929623a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0778a7fe-2fb0-467b-a52d-58695f7475c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6c0de6c-d0dc-4294-95cf-6852b2d01a9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef4f90c-81df-42b7-8556-9ab99a7a8483",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8449eb43-b8df-4fce-b8e4-acf3f7fafe39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f4c2082-e8b9-44ad-af7d-a3ac4e7aecc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ede6c2c-e3a6-408a-bac9-3e4e43ef8938"
            }
          }
        ]
      },
      {
        "id": "3fff5ba8-b9e3-4370-a265-d120702bbc80",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c069a336-3af7-4610-b35a-361f87fce839",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5f4c852-98c3-4c1e-a955-6ea8a407d3e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c9ba944-e333-4f93-9559-b43ebfc8ee68",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713fcb19-1b91-422d-8641-02d559cc84e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5d22bf2d-d8df-4d67-a845-655b7728b426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b95aebc-b157-4d7c-8d52-cc0f7dff3586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d656075-feaa-4df1-a6c0-a844ec64932d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7274b40f-5bc4-4f85-ab31-68973bc48331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "295cd2c5-8e5f-48ff-8c31-671fbd05ae99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70343e01-e14f-4683-b704-f847f3c35fb1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66304fae-af1d-4df3-88ce-8f618934cd36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d229d5d-42c7-4aed-bc12-a50218fc7787",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75980d14-5067-4e18-aa84-e229be30ea33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f601da6-8f26-4527-8c32-702d64f6e043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b4c0bae-355a-4fa3-a9d5-c44cf5ef5117"
            }
          }
        ]
      },
      {
        "id": "d001dbf0-40f5-4373-b1e9-a6a4d855e102",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6af4c943-30f1-4c6f-aefd-6f6344cd1432",
            "name": "Negative Testing",
            "item": [
              {
                "id": "800fa35e-825f-4516-b6bc-674bfa2d78bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c10ad7d-9eb3-41e5-ad05-8bfd71a254bc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de45ada8-53e3-4b09-a97e-d53aa0c3b34f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d802430-6053-4866-ad6f-7ffab8ba9fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7149160b-a065-4a7b-935a-f751bad8d187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d0e447d-9674-46c1-859d-c57db564e695"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "346c44d6-eb36-4c71-b688-c225a64c0ceb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb429602-00e5-4ee8-bbfa-607912bff553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b36aa5cf-d32f-401c-97a3-ec252c744799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8997ccbd-3610-4839-b5da-398f7088938a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c21b0498-1414-4c22-a100-42ae893b549e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e9ae623-d9e7-4157-9d24-d9d362cee1dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76ed712e-8789-495e-93e2-7b8b19f8f1b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "358d0e77-86ee-48f0-ad80-dbea2ddfb2b4"
            }
          }
        ]
      },
      {
        "id": "003eb791-6799-46f1-bd6e-0f3a39364f3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "edbcd6a5-8941-4750-bd7c-f70dce3a94c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ca4afc5-3649-4f58-9832-a9c7582cac9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8d1e2d2-9669-497f-b8c6-9d415ca508e9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48061ed-fc4f-40b7-b0ef-00f14d407750",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "117de3d2-fd80-4656-a1b6-b6f2f8776959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ac22c-9bb0-49ed-bca6-b3d566977a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b355d1d0-72c0-4b85-986c-6284a9f919c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08b9898f-aa49-4f62-8c6c-05cd8474e27a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "349f130f-9f93-4edc-9b67-618d6bf98885"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a85ace49-8528-4a1b-84e7-500fc2002556",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5c979e-7fb0-4b74-a724-9672bc9d65f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbc2c519-a51f-441f-b498-5a535cf418ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33fe58cf-03a0-4216-a548-0315497caa90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf21d638-7409-4f90-8937-db29d7f1df4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6fdc787-c23d-4e51-9672-67034773c48d"
            }
          }
        ]
      },
      {
        "id": "93601c9c-70a4-434a-9ad0-621786bb1133",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ceb656d0-99c7-4b42-bac1-fe136c458678",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13c94c22-8e31-4a15-8908-aa8c30aa46f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b688a3bc-2e72-404f-b9f1-6daca9aa7753",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc27d332-2e86-4ed9-a82a-3f6edc13de22",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34d78788-bdd1-417d-b455-c3b2b95cd305",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 670.816901408451,
      "responseMin": 15,
      "responseMax": 6712,
      "responseSd": 774.7081015009732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688518249212,
      "completed": 1688518452197
    },
    "executions": [
      {
        "id": "dc80d303-0b4d-41e2-a8d5-954a23f60167",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99b90181-01e7-4f31-ac81-437cd94d5efd",
          "httpRequestId": "5794ad48-df34-404a-bd2f-cb6454410bf6"
        },
        "item": {
          "id": "dc80d303-0b4d-41e2-a8d5-954a23f60167",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba6873f5-4440-4213-90d5-26a4452dd1df",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 0
        }
      },
      {
        "id": "36926cb9-17de-4c03-8bf3-1e06404fd67b",
        "cursor": {
          "ref": "7e47a833-11e2-4356-846c-6b60ed4913a2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7b621929-7d86-4849-8ee8-f990ade9fb3b"
        },
        "item": {
          "id": "36926cb9-17de-4c03-8bf3-1e06404fd67b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "984ccd90-5b16-441b-94b6-36c2685d1afa",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "3f7fe210-6c4d-47c3-971c-94054adf883a",
        "cursor": {
          "ref": "33f9da68-b893-44e8-b7f7-c7b8e51f4ca2",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0a40fdc5-dcf2-43d6-a3d9-84b54fef7304"
        },
        "item": {
          "id": "3f7fe210-6c4d-47c3-971c-94054adf883a",
          "name": "did_json"
        },
        "response": {
          "id": "bb058966-ea9f-47c7-9981-7f21db2e5b3a",
          "status": "OK",
          "code": 200,
          "responseTime": 1051,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024f5374-e520-4ed7-9b1d-34dbb621f694",
        "cursor": {
          "ref": "bbba3b09-e6e5-4b8b-8772-b72b81002387",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0bf5332-a414-49f3-8488-784a63db8b1b"
        },
        "item": {
          "id": "024f5374-e520-4ed7-9b1d-34dbb621f694",
          "name": "did:invalid"
        },
        "response": {
          "id": "d463e427-e5c2-4833-bea3-387cad04c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024f5374-e520-4ed7-9b1d-34dbb621f694",
        "cursor": {
          "ref": "bbba3b09-e6e5-4b8b-8772-b72b81002387",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e0bf5332-a414-49f3-8488-784a63db8b1b"
        },
        "item": {
          "id": "024f5374-e520-4ed7-9b1d-34dbb621f694",
          "name": "did:invalid"
        },
        "response": {
          "id": "d463e427-e5c2-4833-bea3-387cad04c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8865bd06-0bef-4e3e-8e3d-4738d4743cef",
        "cursor": {
          "ref": "6ab730ad-ce63-4eaf-9b01-b7250df3e9bf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "036de275-719e-4dcd-a886-009cdb858fe3"
        },
        "item": {
          "id": "8865bd06-0bef-4e3e-8e3d-4738d4743cef",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "18503ff9-ac44-4370-b9d4-ea6bf848a632",
          "status": "Not Found",
          "code": 404,
          "responseTime": 867,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a35b7-d6f9-4632-9f73-c854a7d66a2f",
        "cursor": {
          "ref": "dde36c1b-8655-4b5d-8c5d-6bc1b7301799",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "399e6042-7e6d-4322-a4f3-13b1a50b1cb4"
        },
        "item": {
          "id": "a31a35b7-d6f9-4632-9f73-c854a7d66a2f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95a940a0-4a64-488e-9f80-3b5168afa1bf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 658,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5396795a-5dd8-41c7-afa2-44e91da9a91c",
        "cursor": {
          "ref": "29908b81-cca4-4049-a92d-ef12e2bdbba1",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "17bd65ca-d896-4d44-9382-d4bbf9ab0043"
        },
        "item": {
          "id": "5396795a-5dd8-41c7-afa2-44e91da9a91c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "056fecc5-7258-45b5-94c8-66fb5d1a9c3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc5f747-4a36-4375-86be-50e9800807b3",
        "cursor": {
          "ref": "4754749c-4b65-46be-84ed-3a00f565ce4d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ff56e061-1487-4755-a0d0-b492690ab0d2"
        },
        "item": {
          "id": "5dc5f747-4a36-4375-86be-50e9800807b3",
          "name": "identifiers"
        },
        "response": {
          "id": "19d2a5a8-0ca0-4c93-92d6-74b9f1e61a1c",
          "status": "OK",
          "code": 200,
          "responseTime": 1384,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a196b6-2aae-4709-b016-5c375eaa71c1",
        "cursor": {
          "ref": "6353efc9-a38e-483c-b1e9-e91120ba31ea",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c24550ec-3edb-4e63-a6cd-6593992374f7"
        },
        "item": {
          "id": "53a196b6-2aae-4709-b016-5c375eaa71c1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ab624587-9c6e-49ea-b6f8-e23a50139e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a7060-5cb7-4aa9-b476-c7be59587fdb",
        "cursor": {
          "ref": "79e1251c-9567-4610-a6a6-3de6cfcd6e1a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "02553bef-4f33-45b4-920c-568252602b8f"
        },
        "item": {
          "id": "2e9a7060-5cb7-4aa9-b476-c7be59587fdb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "60029798-5fe1-4e44-a73c-631096ee3394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ee0a6a-8f20-4d3f-86de-4c7b2be24722",
        "cursor": {
          "ref": "d0e6a600-b0e4-4d69-8bcb-4867e756a914",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2cf3a0aa-15c6-4a0a-8193-56f919c4a261"
        },
        "item": {
          "id": "65ee0a6a-8f20-4d3f-86de-4c7b2be24722",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9f184cb0-43a3-47a2-a222-f29e148dd87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95ca8e1-ab21-491a-908f-f3acd19038c7",
        "cursor": {
          "ref": "e8bfe20e-9726-44bb-98dd-468c62c95ec3",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba56a8ae-2fab-48a1-9d2a-102ff985dc55"
        },
        "item": {
          "id": "e95ca8e1-ab21-491a-908f-f3acd19038c7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c181ff02-5f02-4d58-a00b-3fb13b9169a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a31a9e2-a525-43c7-b6ec-84cc7bbaee3d",
        "cursor": {
          "ref": "c9ac578f-34d0-4321-a23d-314b133e8986",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c8cf5230-3323-4bd4-a271-87edccc81850"
        },
        "item": {
          "id": "4a31a9e2-a525-43c7-b6ec-84cc7bbaee3d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2dc2b2e7-ea27-4950-a913-7dbb47009fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736e85b3-5ff2-4e77-8bad-282efd2694e4",
        "cursor": {
          "ref": "f1f0eeb8-a193-48ba-ab3e-d5ef94b45cd5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dc8676ee-1f35-4cdb-bc4f-4b4e67c5fcf7"
        },
        "item": {
          "id": "736e85b3-5ff2-4e77-8bad-282efd2694e4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1b733a71-6037-42b1-9463-e9a891937f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba70b637-be0f-406c-8c5a-40717c8f4b66",
        "cursor": {
          "ref": "144a2f74-4f6f-4a71-bb0f-5be7a118099a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d422ec10-f405-425b-af91-9d3e3eb1149d"
        },
        "item": {
          "id": "ba70b637-be0f-406c-8c5a-40717c8f4b66",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a214d173-aeab-4a3e-a6ce-68902ea179e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3e98d3-4d08-46da-9b7d-b2b694af0b87",
        "cursor": {
          "ref": "6bcfbb01-b822-442e-9b07-6615f2899106",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6594ec2b-fb83-40f1-8409-edbc0f2b0d92"
        },
        "item": {
          "id": "5f3e98d3-4d08-46da-9b7d-b2b694af0b87",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "77544668-8816-453b-9fe7-27ff442cfebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48f3a11-1c26-4c33-90c7-14863dc9525d",
        "cursor": {
          "ref": "96c63b9d-264e-4b35-84f3-d41a67d57cda",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bdaa2920-e34f-43b1-950c-4996dca83e5c"
        },
        "item": {
          "id": "f48f3a11-1c26-4c33-90c7-14863dc9525d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2da60fdf-1ba4-4e27-b185-9ec775fdb6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3cbab6-946b-4581-9e49-624eea91d6be",
        "cursor": {
          "ref": "e50eaf33-230d-44ab-a4d7-9b263b92df4a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "023ee169-8896-4e9e-9d8a-598e8dd85ed4"
        },
        "item": {
          "id": "ae3cbab6-946b-4581-9e49-624eea91d6be",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a9dd55ea-26ee-4d43-bd0d-f980c40bf6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f0766a-0a37-4d5e-a2ad-1695abf7f6e3",
        "cursor": {
          "ref": "3725392b-5aa8-4052-b422-172f55e57ab2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fd09c052-03c6-4b9b-aea4-6dd2245ddcdc"
        },
        "item": {
          "id": "65f0766a-0a37-4d5e-a2ad-1695abf7f6e3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "702c227a-47de-45dc-bd88-b87198c5ff8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c223cc00-3e4e-4ada-9f49-8e19a7850470",
        "cursor": {
          "ref": "6b38a989-7b04-4d07-b9d1-83c4f417bed3",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c36ea049-d3fd-4e9f-b059-ff31835da501"
        },
        "item": {
          "id": "c223cc00-3e4e-4ada-9f49-8e19a7850470",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e69a59f6-d66a-4ffd-b05e-8cc2351da19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a222a03-8a55-4aaa-9dd6-7bf0371bdf79",
        "cursor": {
          "ref": "07fa83b4-25a3-4947-b3eb-b98c48d1426c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d7d46d61-ead4-4121-825d-e8fe8bf6c911"
        },
        "item": {
          "id": "6a222a03-8a55-4aaa-9dd6-7bf0371bdf79",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b25b8b35-5fba-4906-8573-14e137cb23b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea85f8-d7f8-4c94-a9c8-ba8433920efe",
        "cursor": {
          "ref": "6ba67ce0-7bd3-44d0-8812-15167625d694",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "86204006-6cda-4972-b15d-96e7eb789095"
        },
        "item": {
          "id": "a6ea85f8-d7f8-4c94-a9c8-ba8433920efe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a3ed70c4-0901-4235-8562-ed812bcb5622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d2d0e7-23d3-4f90-b4a7-70e5100e103d",
        "cursor": {
          "ref": "e6c5b209-1e5a-41ef-adae-de852e25e72e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0a9ebc2-c17e-4e5b-94b7-d99e810bf549"
        },
        "item": {
          "id": "c6d2d0e7-23d3-4f90-b4a7-70e5100e103d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "91b33b42-b6a1-49be-ab23-84d69bdb8556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d848e60-fa35-4e98-a0e4-36526e5bc28c",
        "cursor": {
          "ref": "2c2d5699-55e9-4b5c-aa7a-f2035967d1db",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2445eaf1-19af-46c3-9789-ec0e27bdda4c"
        },
        "item": {
          "id": "6d848e60-fa35-4e98-a0e4-36526e5bc28c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ed187769-5832-43ad-9068-94a33c2e1136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6ad21b-849f-4ac4-b931-4ca397d10469",
        "cursor": {
          "ref": "efd84796-12c8-49e0-ade4-07531dc18e60",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d8982af1-7394-43b4-83b7-31c2af6806bc"
        },
        "item": {
          "id": "cf6ad21b-849f-4ac4-b931-4ca397d10469",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "64b5c9c8-a255-486e-8074-87768579b2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7524d71-d20b-44d4-91a2-cf3515477fc7",
        "cursor": {
          "ref": "d2ea0554-29bb-42ea-ba65-bb4a4d63b4f4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1a20d47-c195-4f62-aef9-e49e07314e95"
        },
        "item": {
          "id": "e7524d71-d20b-44d4-91a2-cf3515477fc7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f71fcb2b-52ee-4a8c-8d94-b6efff16e477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d541a00-de2d-48ed-8f74-c061b5177c74",
        "cursor": {
          "ref": "fcd053f6-a889-4fd0-99eb-c80670673da4",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "585e6257-9844-4bf1-a977-cb5e2310c776"
        },
        "item": {
          "id": "5d541a00-de2d-48ed-8f74-c061b5177c74",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8105a9e4-7e87-4a28-871d-56f09bd2e9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f456420-d424-45ba-9e66-503132f762bb",
        "cursor": {
          "ref": "9a81f9fc-f894-49fa-afd9-0468dc23d689",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "87167c84-0ccc-46d4-9cbf-574757f64d02"
        },
        "item": {
          "id": "5f456420-d424-45ba-9e66-503132f762bb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "14a7b79f-16b0-4b99-a45b-e31430372e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fbea1e-9d46-4942-88e8-5038c194a30b",
        "cursor": {
          "ref": "2ba31a78-d5d2-45a6-b74d-e65da01dc1e3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "415fc175-7951-42fc-ae46-43df74f652c6"
        },
        "item": {
          "id": "c9fbea1e-9d46-4942-88e8-5038c194a30b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e4b3ac0c-fd7a-402c-9169-a92111e477ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adeb1de-bfeb-4179-83fd-f3e9229f6f09",
        "cursor": {
          "ref": "160f9d84-28c1-4b92-a1b7-577d51d4a899",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f7265ed2-3caa-4353-a73c-403bb5b77b4b"
        },
        "item": {
          "id": "9adeb1de-bfeb-4179-83fd-f3e9229f6f09",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "910b6b55-5008-4f0c-8562-18527447d8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224db33e-2cd9-4c8d-825b-cb0aa00f5bb1",
        "cursor": {
          "ref": "5f794a07-4e83-4aa2-9460-d1f66aa89de8",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c7850a76-6732-4290-b81c-3c4e535523f4"
        },
        "item": {
          "id": "224db33e-2cd9-4c8d-825b-cb0aa00f5bb1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "44f69551-c9eb-4f16-b5d8-a7361192f574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1098d882-1413-429d-a777-6376e554cc2a",
        "cursor": {
          "ref": "81804d23-06e3-4994-9ee1-5ff67151a96c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "52aa7f90-566a-4591-afe6-61fdefdcb966"
        },
        "item": {
          "id": "1098d882-1413-429d-a777-6376e554cc2a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6e2669ff-2001-49f2-8ba2-e132a1d8fae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937c8737-c03e-4cbd-957b-8b25bb95d2a8",
        "cursor": {
          "ref": "e7bdd67e-75fc-458a-b606-c14c05a9cfb7",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "44e37d35-ec67-4eb4-a476-e06216b9c212"
        },
        "item": {
          "id": "937c8737-c03e-4cbd-957b-8b25bb95d2a8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e68d5045-de34-4e04-bbd7-4778f1a79847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10edaf6c-b925-45cb-8a1b-bd2d4fd0211c",
        "cursor": {
          "ref": "1a4485ba-5617-4e1b-b4bd-f8e4d0f96d59",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6c936a5c-c813-4bfc-9b8d-3426fa6c926e"
        },
        "item": {
          "id": "10edaf6c-b925-45cb-8a1b-bd2d4fd0211c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2e1f3252-181c-4041-b0d0-50c319cdf7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2522f50b-82db-4159-aece-83df262e287c",
        "cursor": {
          "ref": "18f3f334-0626-44ef-96c7-03168bcec49f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "eef907bc-668f-43db-9886-ed9398c1e8cf"
        },
        "item": {
          "id": "2522f50b-82db-4159-aece-83df262e287c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5fb6d269-264c-473c-ab40-d5b461270b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb500e07-2195-4b17-b116-237fd2f62c1d",
        "cursor": {
          "ref": "8a2ab386-9551-4829-acee-0a205dfb6904",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9218c7f4-2599-4051-9375-424184765a3a"
        },
        "item": {
          "id": "bb500e07-2195-4b17-b116-237fd2f62c1d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb35ce80-d576-4bc1-94bc-dbb1999682eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49d251a-a96b-4a9a-baa8-4c1d86de2ed0",
        "cursor": {
          "ref": "776984b9-ea49-472f-82b0-9407d1eb0b3d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ac1e6b78-5a16-4809-8006-fe0119f76e73"
        },
        "item": {
          "id": "c49d251a-a96b-4a9a-baa8-4c1d86de2ed0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "29302b15-8a4c-4f7b-a254-a93024db9374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f945df32-98f2-4ee4-b421-77c9b4e434a0",
        "cursor": {
          "ref": "99ddfc2b-85ae-4c3d-8c10-bd600b7a6027",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "304828ff-882a-49ca-9577-fd7fe7a7ac0a"
        },
        "item": {
          "id": "f945df32-98f2-4ee4-b421-77c9b4e434a0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "140bf70f-125c-458b-af9f-84005742f393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7ef0e4-ebce-4308-ad72-785a8252f94f",
        "cursor": {
          "ref": "f4828358-3555-47e6-87f8-55669684da28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a3d38234-9271-47cd-918f-a79361169f88"
        },
        "item": {
          "id": "4c7ef0e4-ebce-4308-ad72-785a8252f94f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7f363043-7b95-4d4a-85a5-df9605749685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a911d6f0-2501-41aa-af3e-5c130f46c2c6",
        "cursor": {
          "ref": "684647e1-92e0-4511-b1d9-c5b20b4956ac",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "00f8a075-3bf9-482a-bfb0-37e5195861c4"
        },
        "item": {
          "id": "a911d6f0-2501-41aa-af3e-5c130f46c2c6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "38c83d00-25c4-4800-9548-fa8221620678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848ba2cf-1761-4aed-b3d3-f1c3983dd740",
        "cursor": {
          "ref": "4b1b0f4d-2db4-4173-96d5-da8a4308184d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a23ef94b-cc0e-463d-a677-f92b28bd3c54"
        },
        "item": {
          "id": "848ba2cf-1761-4aed-b3d3-f1c3983dd740",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a13b9a96-1fba-4dd1-a0da-d996ea49b709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f6f60f-46f2-4fa8-bb10-2df0e546bb1f",
        "cursor": {
          "ref": "91b498be-3050-40e4-916b-7b6b10257a10",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2213724c-7677-4d18-a468-8eb134ce6320"
        },
        "item": {
          "id": "10f6f60f-46f2-4fa8-bb10-2df0e546bb1f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "40017dea-8f74-4192-b4b2-bffe1e0f33ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d42d01b-9875-4678-8555-8649a6fb47e0",
        "cursor": {
          "ref": "d29cd96e-fea9-4fb0-865f-5b09156c0421",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9888ef86-9f19-48a1-9b86-1179842a30f2"
        },
        "item": {
          "id": "4d42d01b-9875-4678-8555-8649a6fb47e0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f1dad244-eaab-4630-b31c-64f6655deba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bfbaa2-92d6-4cf0-b8de-85b40f97aa00",
        "cursor": {
          "ref": "cc026c09-fede-4897-ab1b-e1932066296d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9efc9106-b44b-4996-8974-c43ac523803e"
        },
        "item": {
          "id": "41bfbaa2-92d6-4cf0-b8de-85b40f97aa00",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "223ee35c-167d-4299-a421-23ccf90e4529",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 841,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03112b9f-27bd-4cac-9e2d-fa76569feeae",
        "cursor": {
          "ref": "a6fd630c-3811-44ad-aa49-24ffbe01d9c4",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1d28aa79-6a01-46b5-aee0-9d0cf7c88d7b"
        },
        "item": {
          "id": "03112b9f-27bd-4cac-9e2d-fa76569feeae",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bc62b1b3-c86b-4df2-be29-2e231a096999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa209ed9-cb93-4bf5-87e2-72d2b75efa94",
        "cursor": {
          "ref": "86278bd5-f04d-49ea-bc1d-305567d37849",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "63e41a16-79f9-4306-9d28-83a2a901a359"
        },
        "item": {
          "id": "aa209ed9-cb93-4bf5-87e2-72d2b75efa94",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "70a76754-0b6f-4e16-8067-286751b47207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bada277c-1d8f-4ca4-bb95-f825bff01a44",
        "cursor": {
          "ref": "fd7321a1-ecf6-4c70-a34a-df3ada50f78f",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "156b52a4-ce9a-4d61-ad2f-6fe9f1402d1d"
        },
        "item": {
          "id": "bada277c-1d8f-4ca4-bb95-f825bff01a44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ad6d0c73-29f8-43e4-af75-b264d2bcbc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1194,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d235313-1b5e-4f72-b721-338888423b61",
        "cursor": {
          "ref": "829eb2c6-c3da-49b0-94b1-4f240631db7e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f53a8085-190a-4da8-abc8-89a4370b651a"
        },
        "item": {
          "id": "2d235313-1b5e-4f72-b721-338888423b61",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "af6f96f1-8923-4861-b21f-fc430969afd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec6dae-a401-4640-8803-064d2469ba20",
        "cursor": {
          "ref": "84296896-3192-42b2-992f-b5d7759d7350",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "24cdce08-54a0-4ac9-a64b-e6be854bf353"
        },
        "item": {
          "id": "6dec6dae-a401-4640-8803-064d2469ba20",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6e94303d-5a49-473a-9bdb-500b44da5aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d698a4-394d-4432-8a06-7967e612e7e1",
        "cursor": {
          "ref": "46e233c4-56af-4495-b2de-0dd2e53636a2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "83a815e0-b38d-4f85-9bae-e67baa502625"
        },
        "item": {
          "id": "32d698a4-394d-4432-8a06-7967e612e7e1",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cafeafd1-c184-4ed9-ac28-07d9bb404ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a8a8b4-2261-4e6b-a826-0736cfd48132",
        "cursor": {
          "ref": "625a4fa2-a279-4540-95ff-bd5946a20631",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a9f0232a-35c9-4b88-83e4-3dd2dca7e2ba"
        },
        "item": {
          "id": "85a8a8b4-2261-4e6b-a826-0736cfd48132",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "04b69b2a-0aee-4820-ba01-f5ed5d314623",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 844,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb8fa0f-c801-4214-bf5b-e32bff9a29d6",
        "cursor": {
          "ref": "b48e1db2-d164-4c3f-a69f-4650956208a2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ce95669-4d5c-478a-bcd3-b3e759ece2f3"
        },
        "item": {
          "id": "bbb8fa0f-c801-4214-bf5b-e32bff9a29d6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "470a639f-fc9e-43bc-bebe-aa49ff865e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8810a1-35ed-446f-a9aa-268a7f55bd6b",
        "cursor": {
          "ref": "9f5e3054-b7b3-4f38-a0ec-549030824dbf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "05ef484a-ec0a-451b-969c-d945159193c4"
        },
        "item": {
          "id": "3a8810a1-35ed-446f-a9aa-268a7f55bd6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "267eed0d-0127-47c4-aa00-68cf4c731d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7480e0-dadd-4889-a1c9-614799b16b36",
        "cursor": {
          "ref": "91865b8d-57a9-453b-b607-8dc723d2385c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bacb1c7e-9f8e-47a5-ba59-ff8c8f4701b2"
        },
        "item": {
          "id": "5a7480e0-dadd-4889-a1c9-614799b16b36",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6131b4f7-5c77-4b14-99ab-d1f0cc040188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508c0f0a-56b4-4e35-b776-1840c85ef0b9",
        "cursor": {
          "ref": "e5e82c71-15c8-4ede-a37d-53f3e2a661ba",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9e7bd25d-0500-49d7-80ab-4c63cb023659"
        },
        "item": {
          "id": "508c0f0a-56b4-4e35-b776-1840c85ef0b9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cad94be5-eaf7-4171-8e02-890e11470dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f021e98a-0d96-45aa-8f57-72c42fbfe6c1",
        "cursor": {
          "ref": "6978eb76-6637-4ae0-98e5-df1625c24474",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cac4ff55-d19d-44c2-845f-f857ef6b65e3"
        },
        "item": {
          "id": "f021e98a-0d96-45aa-8f57-72c42fbfe6c1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8b2b943c-aba8-4294-a69c-12f91923f00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2d649d-7277-4a0e-991c-5a9b7ac2c0eb",
        "cursor": {
          "ref": "e890f05e-9f20-42c9-ac10-cc9b0bda82ef",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f4622775-494f-421c-adf0-8deb92f67e0b"
        },
        "item": {
          "id": "db2d649d-7277-4a0e-991c-5a9b7ac2c0eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ee0cb3ab-2bee-4365-a77a-03571fbf925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32ada31-54e6-4b69-a082-b89c12128e75",
        "cursor": {
          "ref": "da109d10-02a1-4e2b-93fd-c9f01bd52aa3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "193c4e41-4646-49e8-a133-5ff237b70968"
        },
        "item": {
          "id": "a32ada31-54e6-4b69-a082-b89c12128e75",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0354cc6c-2562-4cfa-a596-bd6acba79e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b9767-5a2b-49dd-8394-ca903c16870f",
        "cursor": {
          "ref": "ebf3ad69-82a1-44d8-a7cc-41ca569b3cec",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f01e12c5-3048-4f41-a87e-20e228ec8df8"
        },
        "item": {
          "id": "680b9767-5a2b-49dd-8394-ca903c16870f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5472612a-a4c7-4d35-ba42-400bd2735f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48bee68-1b63-4b9e-aad2-3238f9dfefc4",
        "cursor": {
          "ref": "5c35da88-4e45-4a23-8270-7d732b3e6c45",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9b39ccc-23bb-4ca9-9fa1-2ad4d5b7314c"
        },
        "item": {
          "id": "a48bee68-1b63-4b9e-aad2-3238f9dfefc4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "38f8e6b5-de73-4eb8-b99a-0035293d5f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2d4bfd-dab7-4738-8a74-5a889351a286",
        "cursor": {
          "ref": "bc6adda3-9819-4e99-8ed2-a2193da56e97",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "caafa6e9-9592-4e44-b056-4d145979c55e"
        },
        "item": {
          "id": "fa2d4bfd-dab7-4738-8a74-5a889351a286",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bc92e5e5-fba8-44d5-b607-f0952e1d86b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08711b6-9853-4c59-b675-4136b465461b",
        "cursor": {
          "ref": "33501faa-d968-481a-92df-c8966325b131",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c94a8e07-081d-4f2f-bec5-e5e586fc0a52"
        },
        "item": {
          "id": "e08711b6-9853-4c59-b675-4136b465461b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "31d5385b-4709-47b6-a225-317258f5b7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56849d71-e362-4b5a-a206-4664878ff564",
        "cursor": {
          "ref": "58492129-3eb6-4fe0-bd88-10f0ce542398",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5e11b2d2-ca55-4353-b8b8-d4293cb98a5d"
        },
        "item": {
          "id": "56849d71-e362-4b5a-a206-4664878ff564",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "de4d621c-acfb-4f89-b998-27d41e0f77d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ead185-40e8-44ed-9f65-12205660ebf8",
        "cursor": {
          "ref": "10aca6f3-1899-47e9-97ba-d7ef519bd1af",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2db89b2-5b4b-4eff-a440-32ad3fe81473"
        },
        "item": {
          "id": "01ead185-40e8-44ed-9f65-12205660ebf8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3bdb4a33-d9d6-452c-a6ef-19f62012fcb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e36408-73fd-4eae-895a-9586255bc9f2",
        "cursor": {
          "ref": "ff8feaa1-f930-476e-9130-b9bbe603c64e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9037a81c-c6ac-496f-96ad-c8622d750c77"
        },
        "item": {
          "id": "69e36408-73fd-4eae-895a-9586255bc9f2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "447ae641-7a2c-48bf-8708-c7fcea9f6229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09c9be9-d597-42c8-8bad-63b886da541a",
        "cursor": {
          "ref": "d0319f71-6510-4dd5-8349-46405a838db3",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ea821623-24a7-4ff8-83ef-22aebfe269d9"
        },
        "item": {
          "id": "d09c9be9-d597-42c8-8bad-63b886da541a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "68162de6-7e9d-4191-88e1-7e91dd2d5154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6605ca78-bbb1-4afb-8d1a-a0df921b5839",
        "cursor": {
          "ref": "c8e8277e-59b2-4ac5-a0bc-d98bdabfd02f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d39fe23-d7cb-42e9-b76f-d22c5a979d32"
        },
        "item": {
          "id": "6605ca78-bbb1-4afb-8d1a-a0df921b5839",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eea7ed62-9761-4348-aadb-dc4c06f45b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7655e71-4686-4a23-a5c8-41adaa81d505",
        "cursor": {
          "ref": "d4734d4b-f686-47b6-9a78-3b834ed9b287",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7112a2aa-7cdb-4aa0-989a-79dcb86d8ffd"
        },
        "item": {
          "id": "b7655e71-4686-4a23-a5c8-41adaa81d505",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3589562b-efc5-41a7-869e-6f49406684b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc88357-8c18-4d25-9364-4d4865412c87",
        "cursor": {
          "ref": "952de381-5ffc-4420-be46-36b9221216af",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "817875af-ad0b-4ed6-8222-238d38440040"
        },
        "item": {
          "id": "4bc88357-8c18-4d25-9364-4d4865412c87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ff30632e-45e9-4803-98e0-dd4387ea0221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14388ee9-bc85-4376-aa38-442e3afcfc96",
        "cursor": {
          "ref": "7c3f375a-38ea-4c07-9bb6-a7f8d81c149b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8edf63b9-10f6-41ca-b7ba-f538614d096e"
        },
        "item": {
          "id": "14388ee9-bc85-4376-aa38-442e3afcfc96",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f44d8b43-d342-42a8-9fb1-35f89b0df704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f14a91-e342-42b1-93cd-08ef3df41bdf",
        "cursor": {
          "ref": "bd859d2b-d8a0-404e-be4b-a8e570df19be",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "8c194492-85d3-42aa-aec9-fe75fd50e8c0"
        },
        "item": {
          "id": "04f14a91-e342-42b1-93cd-08ef3df41bdf",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "80fcf8fd-fffa-46dc-9a8f-543e1c9e59ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5709a4ff-a69c-4fe7-9d3d-10bea2052c20",
        "cursor": {
          "ref": "cf9d5235-d94c-4215-af48-827d61bc1834",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "37a18a18-d3c1-4316-b707-87c6dffb7c37"
        },
        "item": {
          "id": "5709a4ff-a69c-4fe7-9d3d-10bea2052c20",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c93b1f46-5f9b-4b9f-87cb-8d68b79f50cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c14f0e1-4e04-4a70-91b1-66cb31ca3b1f",
        "cursor": {
          "ref": "5121ec3a-eeac-476a-ae70-b1c975ffd96b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bb82965c-fd0c-4aa5-906f-f46ce10ed76e"
        },
        "item": {
          "id": "0c14f0e1-4e04-4a70-91b1-66cb31ca3b1f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f27dde86-b2db-4a99-8b79-e5c6359f02c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ee4332-98ba-40c9-8f3c-d20861b6f188",
        "cursor": {
          "ref": "b65cb4fb-d871-45c9-b641-e2157b13955e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5655faf0-8464-47ff-938a-2536e28bee98"
        },
        "item": {
          "id": "c4ee4332-98ba-40c9-8f3c-d20861b6f188",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "417d0e39-2643-4d45-852b-064949002693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b576bf-af81-4c5d-84af-b5b8823782f0",
        "cursor": {
          "ref": "e70ec8b9-fda5-486b-a6be-9dc1e505571d",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "702e33dc-82f7-4a0f-906c-07e60a095bcf"
        },
        "item": {
          "id": "59b576bf-af81-4c5d-84af-b5b8823782f0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a7258658-ab37-427c-af3d-13849af0dc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76894212-eaf3-4196-af1b-14757c4bb23c",
        "cursor": {
          "ref": "7b6d7476-da2c-4a96-8737-da89227e8e28",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b400ec8-8b28-4dee-b3f4-fabc2fe50e8a"
        },
        "item": {
          "id": "76894212-eaf3-4196-af1b-14757c4bb23c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8406fa7b-645c-4b08-af2f-426d33ce213e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e370abd-1cc0-4d1e-83d9-bc51a97c7e13",
        "cursor": {
          "ref": "7ff0e169-a86e-4b4a-ae2e-eae48b4f10f1",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c97bfc6f-446f-4f22-a0c9-7941aedc0c5f"
        },
        "item": {
          "id": "3e370abd-1cc0-4d1e-83d9-bc51a97c7e13",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "da61ae5c-4389-474f-80df-c9f809edfc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618365f0-b5b0-4be5-a884-03fc79e379f4",
        "cursor": {
          "ref": "59dc6866-0db6-4081-9f92-ef58dc0be5e9",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "169623a9-b492-4fd9-a0ff-10ea2dde5420"
        },
        "item": {
          "id": "618365f0-b5b0-4be5-a884-03fc79e379f4",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "94df4233-138f-4c52-a976-10af4ee37cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a0dfb-8088-4a74-83bb-740e99183e8e",
        "cursor": {
          "ref": "4da3e465-66ee-44c3-920b-df0c3af8a927",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4297da37-ec13-45d2-878f-34cd9d80db91"
        },
        "item": {
          "id": "d00a0dfb-8088-4a74-83bb-740e99183e8e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "28917c67-a418-492c-b0c5-36ef39d0c219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71141856-aecc-4123-b6f6-0f971a4ce790",
        "cursor": {
          "ref": "c7e55a89-ed2a-4e27-a98a-e8bea0e46c49",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8ba736cf-c6d3-4c5e-959d-86744e161193"
        },
        "item": {
          "id": "71141856-aecc-4123-b6f6-0f971a4ce790",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f784fd58-769d-4b77-946d-eaac0d7b438c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0463c4-a525-411d-8724-dcb937a80680",
        "cursor": {
          "ref": "c477691d-21f3-4c0a-8611-ffe9f55708f5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8be6c735-f485-4f3f-a2e9-cfd93801b3bf"
        },
        "item": {
          "id": "dc0463c4-a525-411d-8724-dcb937a80680",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8daf536e-1722-4f64-a9de-87629352d941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0bc5eb-6842-4e45-b736-c0172f1d3a89",
        "cursor": {
          "ref": "300e4847-d682-4700-8b6e-e70786013563",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "10ae60e9-498b-415d-89a7-dfff948079aa"
        },
        "item": {
          "id": "8c0bc5eb-6842-4e45-b736-c0172f1d3a89",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "04bf49dc-cba8-4a78-8774-c64524071100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f17a87a-086c-4f59-9a2a-d4b8e0ba2a48",
        "cursor": {
          "ref": "c6e8dd03-1523-4567-9b54-21d134b21366",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "152a4268-e2fe-424e-a859-e41c891086eb"
        },
        "item": {
          "id": "4f17a87a-086c-4f59-9a2a-d4b8e0ba2a48",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6df8f281-5d56-4f95-a6f4-c47b910a3d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e103e248-3cc3-4ef8-8019-31907dd2bf71",
        "cursor": {
          "ref": "a05c679c-a0db-4f9d-b744-54a3180c1030",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5b6a6aa4-b555-42c2-ab28-d924184bffcd"
        },
        "item": {
          "id": "e103e248-3cc3-4ef8-8019-31907dd2bf71",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8c627290-ea5b-4ae4-ac57-2d5dec177969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8011167-432e-47e8-8533-067b458b3843",
        "cursor": {
          "ref": "7d10ac5b-70f1-40ae-b993-85e7377dee78",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7feed29-caa2-4cf3-9ed5-fdade6dc9860"
        },
        "item": {
          "id": "e8011167-432e-47e8-8533-067b458b3843",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "28c60131-82fa-4d1d-8e26-f8e05559f101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d55789-23c2-4d31-b27d-428163df2b7d",
        "cursor": {
          "ref": "221f03cc-964e-47b7-b462-3f4774d9f58c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bad810ae-4f3d-4dd3-bbe3-a7410d10a6ba"
        },
        "item": {
          "id": "98d55789-23c2-4d31-b27d-428163df2b7d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e48fb356-86ff-44db-8bee-1d11d05e00b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d554eb1-8dbc-48a1-b1fa-1f07217a8210",
        "cursor": {
          "ref": "1c622c89-f594-4d07-8d12-913c937a89e0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1178bdf7-c69b-47f2-b3b9-7947c01ace0f"
        },
        "item": {
          "id": "4d554eb1-8dbc-48a1-b1fa-1f07217a8210",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9f9ea383-f07e-4830-af81-4b30f0f4e6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0b60b8-7698-4470-ab1f-4931f950ca5e",
        "cursor": {
          "ref": "ac417508-ad7f-4eff-a0a8-6db3132f0644",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "40add825-7b3b-436f-b133-710bb20716ed"
        },
        "item": {
          "id": "2e0b60b8-7698-4470-ab1f-4931f950ca5e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4f3bc50f-355c-473b-bf46-fe7543bc2766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399334c2-77c0-4b00-8e7e-a5abe334b906",
        "cursor": {
          "ref": "24bd969d-0706-4d96-b59d-daf6ff15107b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "52bd2024-70ea-4e25-8012-49b693dcded2"
        },
        "item": {
          "id": "399334c2-77c0-4b00-8e7e-a5abe334b906",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b459673b-c937-4b79-a0a5-e51f85e68a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0890c6-e5bf-4f2d-9d5d-7cc53eae94eb",
        "cursor": {
          "ref": "1814371a-02c2-4b58-a716-cb9d6bfca4ff",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bdb4a04c-f7c9-491c-8583-4397d19a2a5d"
        },
        "item": {
          "id": "fc0890c6-e5bf-4f2d-9d5d-7cc53eae94eb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f226da1b-2a4f-4055-97f6-65ad50d438cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508557d4-253f-4a9d-b28d-807dc747d847",
        "cursor": {
          "ref": "a4716332-819f-4df3-b847-3219ecbae467",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "28bd110f-2376-43e8-ab5b-40c64338c5ed"
        },
        "item": {
          "id": "508557d4-253f-4a9d-b28d-807dc747d847",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a7cf7e9d-cf14-4f6c-8d9c-2511e687c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa135feb-50a4-41e6-a928-aa6293b59a82",
        "cursor": {
          "ref": "13f3c5e2-518f-4cc4-b802-25176ff9be87",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3523b946-7e1e-422d-96a1-7f6f66f25e16"
        },
        "item": {
          "id": "fa135feb-50a4-41e6-a928-aa6293b59a82",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "89f672fb-e77e-44cb-b683-0162607858b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079f0533-ebc4-4b4f-bfc5-f3692be6f632",
        "cursor": {
          "ref": "442b9107-c4c4-46aa-8c94-1f4fb5cb1bb4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "45d13f7b-8189-4448-b97b-006f398de159"
        },
        "item": {
          "id": "079f0533-ebc4-4b4f-bfc5-f3692be6f632",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3e159e00-4d65-46f6-93d9-fb1acdf6c88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b28fe8f-20f1-4e79-a8ee-7cbdfc4b11c3",
        "cursor": {
          "ref": "d543700c-33a7-4803-873a-88ffbb3e3322",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "989a5fd1-6803-43ce-9fda-61fa4fa5c502"
        },
        "item": {
          "id": "0b28fe8f-20f1-4e79-a8ee-7cbdfc4b11c3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "84c6fc13-744c-4488-99ac-a8b92ec469ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bb4392-8fea-4aeb-b1ac-2437f1059d6e",
        "cursor": {
          "ref": "8fb5ffae-8dfd-42ec-8f9a-77041bb6e175",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "becd6502-2aa6-4b43-b214-1429937ebbfd"
        },
        "item": {
          "id": "71bb4392-8fea-4aeb-b1ac-2437f1059d6e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "89cdb5f8-ed3a-4a35-9170-fa4cd8427636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141382a4-e9b4-4c5b-84c8-8259c5a0e22a",
        "cursor": {
          "ref": "d7b5dd1b-13ea-47fb-9f04-ce420cbd1e15",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8491a352-47ea-4203-968f-abb0524a8f68"
        },
        "item": {
          "id": "141382a4-e9b4-4c5b-84c8-8259c5a0e22a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2b533a02-ef32-4cfa-a1c0-3e9298f3eb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9b9234-7ab1-40f5-89d8-331d630805ba",
        "cursor": {
          "ref": "8b357c3d-b69d-4de1-96e2-4638743883e2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c989feb1-691f-4c6f-a6f1-82b60f7b250a"
        },
        "item": {
          "id": "1e9b9234-7ab1-40f5-89d8-331d630805ba",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3aee843e-972e-4be0-8f59-e4c6c6f1738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae442095-ac3c-4aa5-9c0c-6a0a58f480d6",
        "cursor": {
          "ref": "80a00c77-df40-4202-9072-80abcc4c1256",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2374eb9e-a48f-4d0a-8403-4f7b592fabfb"
        },
        "item": {
          "id": "ae442095-ac3c-4aa5-9c0c-6a0a58f480d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c1e653fa-b6e5-4468-933f-79efe02faad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8099b504-bf29-422d-9daf-d9df5592d3f6",
        "cursor": {
          "ref": "f5f71107-74f3-499f-a167-01ca3d7def9a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8be2a62b-817b-41d2-aa30-ac13f44c3a52"
        },
        "item": {
          "id": "8099b504-bf29-422d-9daf-d9df5592d3f6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c0ba10b5-4432-4f1c-897a-0541eae02f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dcfbaf-f841-4503-b1b1-8175c4cda543",
        "cursor": {
          "ref": "78cee3ba-9acf-493a-b2f1-d66e7086ce04",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9718a75f-938b-415c-851e-7df0787f51a6"
        },
        "item": {
          "id": "19dcfbaf-f841-4503-b1b1-8175c4cda543",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "baae4213-75dc-4900-918a-e89242304e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f007c1-e9f9-41de-a35c-499f058c1a3e",
        "cursor": {
          "ref": "f591ba7a-a73e-4e6c-b0b6-6085aa8f3c42",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "68db6a07-116c-4bc4-b9f9-8f59f6343cb0"
        },
        "item": {
          "id": "40f007c1-e9f9-41de-a35c-499f058c1a3e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cf19a376-be41-49e4-ab4b-21928c0be9cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2279801-166a-4fcc-9752-724c256466a7",
        "cursor": {
          "ref": "dfc0761a-b11b-4650-b295-f51e8c81678b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fdcee26b-ace2-4624-88d8-037f2d02f75f"
        },
        "item": {
          "id": "f2279801-166a-4fcc-9752-724c256466a7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4244e114-200c-49e1-a545-6e7d79ebcfaf",
          "status": "Created",
          "code": 201,
          "responseTime": 6712,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8528343-e7ba-424e-a195-37fb04962a9f",
        "cursor": {
          "ref": "a0c8c550-9a18-4be8-99aa-ae7ba69aa3a2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2836b010-a0fd-4a95-8f6e-910c154b8a5f"
        },
        "item": {
          "id": "e8528343-e7ba-424e-a195-37fb04962a9f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5d243f6a-abc2-4051-ab6e-872f2583c594",
          "status": "Created",
          "code": 201,
          "responseTime": 6504,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff82af-5ca6-48b3-bdf0-97f86e319a4b",
        "cursor": {
          "ref": "da1009e8-d371-4e9d-992f-4316060427fc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "967ec823-cc41-4452-a550-2f8cdb7e1a32"
        },
        "item": {
          "id": "ceff82af-5ca6-48b3-bdf0-97f86e319a4b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7a4cf492-70fb-4e6f-a606-49e98fd3d8a9",
          "status": "Created",
          "code": 201,
          "responseTime": 6011,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a867259c-cb82-438b-b253-19b05049ec52",
        "cursor": {
          "ref": "facd0846-3ae7-4cf8-9662-d3a41b0a7570",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5f46731f-7c7f-482b-b05a-e2660a3b5f6c"
        },
        "item": {
          "id": "a867259c-cb82-438b-b253-19b05049ec52",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a901d494-65ae-498f-a344-f38436ca6e26",
          "status": "Created",
          "code": 201,
          "responseTime": 6113,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7024f2d0-c435-42d3-a813-659f022daf95",
        "cursor": {
          "ref": "e1162139-a2b2-4b9d-adbf-4df0deb2dd83",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3b4d70b4-1e7f-41f7-b1b1-75aaa64361f1"
        },
        "item": {
          "id": "7024f2d0-c435-42d3-a813-659f022daf95",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ed8f6b34-b170-402d-a783-558e9b430a67",
          "status": "Created",
          "code": 201,
          "responseTime": 6065,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbe420-1dd6-42c7-9e22-94b198bd4fd2",
        "cursor": {
          "ref": "1299b1e2-8b2f-4868-aa69-1b8e0cbdd41c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6c8aa22c-9e1b-4e20-841d-3cc9001dc2e4"
        },
        "item": {
          "id": "71bbe420-1dd6-42c7-9e22-94b198bd4fd2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "34add19f-f1c1-4b05-8bed-a4851a55601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "5a95a9a7-a8ee-4631-b22a-d1e58e78d071",
        "cursor": {
          "ref": "4653e599-931f-42b6-97aa-418611d6908d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69aeab16-b4df-440c-a00a-cc1f67594ac3"
        },
        "item": {
          "id": "5a95a9a7-a8ee-4631-b22a-d1e58e78d071",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b06ac0da-fc86-4019-b86b-62b27d77ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50ea054-0dc9-4d2f-afa2-86bd6e141c36",
        "cursor": {
          "ref": "cd5cddf7-c1cb-44db-8399-ee068ea6e438",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d22b25d7-33fe-43f5-8849-d1822628d7f6"
        },
        "item": {
          "id": "e50ea054-0dc9-4d2f-afa2-86bd6e141c36",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6631905-a9e0-4a2e-8909-70e1decc87b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c434c503-7393-4d77-ab5b-bad792011fbd",
        "cursor": {
          "ref": "4b54c6dd-a5db-4028-822f-34c7410aaa14",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a2b7299d-9c5d-4b24-b353-ba1a416e0d4d"
        },
        "item": {
          "id": "c434c503-7393-4d77-ab5b-bad792011fbd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9e1eab56-78a2-450a-b24a-4a8c7b31acc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5452fb73-06ab-4ed8-8ab3-0701c3932771",
        "cursor": {
          "ref": "d1672f5c-b351-4063-8603-9fedde6a4cbe",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86d6fdec-0206-4934-9319-06b413149713"
        },
        "item": {
          "id": "5452fb73-06ab-4ed8-8ab3-0701c3932771",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "05205842-8c61-4b56-8e5e-9fe4edbde15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71e1dea-6633-4cf8-aa8f-ab1b1e93dde7",
        "cursor": {
          "ref": "26e5fb58-e0dd-4212-a7cc-da7cf41a4397",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d179e9c-d6d8-41b8-b69c-fdb13d0c58bf"
        },
        "item": {
          "id": "f71e1dea-6633-4cf8-aa8f-ab1b1e93dde7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2a265d7c-f18b-42ae-8dc2-6bb783901e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aff809b-8305-4106-ba1f-d37e91f834fc",
        "cursor": {
          "ref": "c1642ca8-98ca-4fd2-bab3-3ffb2a3c5e57",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c60341ac-54a0-47c1-a9a8-e299e94a7bcd"
        },
        "item": {
          "id": "5aff809b-8305-4106-ba1f-d37e91f834fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "822b39b9-4f87-4c77-977e-8554dfbd7b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519b09e0-0660-46c4-8a75-d4aa63f1b318",
        "cursor": {
          "ref": "23410cf8-a0a4-4326-bdd5-87593b774d27",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "81b7b160-1cb7-4f83-9572-873c5caa53e6"
        },
        "item": {
          "id": "519b09e0-0660-46c4-8a75-d4aa63f1b318",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e2a07d00-136c-49b1-9d52-7d67322b7780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a4f8f3-7fce-4858-b094-91252b3ce173",
        "cursor": {
          "ref": "7a44486a-f43c-45a9-beeb-f616a87a922b",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dfb11632-a4d9-48f9-9c3d-3777c2422874"
        },
        "item": {
          "id": "f0a4f8f3-7fce-4858-b094-91252b3ce173",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "442119d6-4edd-498b-887c-63f2cac61401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e98e0e0-d45e-4c1f-8f35-90a3716ed525",
        "cursor": {
          "ref": "a0b8dc9b-7749-48dc-9e22-b4fd447103ed",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "384d68ad-30f3-48c0-8d07-2d0c50542d51"
        },
        "item": {
          "id": "4e98e0e0-d45e-4c1f-8f35-90a3716ed525",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54041cd0-ecd3-438a-a7d1-083dbd7b1167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb72fadb-02d4-408a-9d07-46f0121dabd2",
        "cursor": {
          "ref": "cd0f275b-7813-43ae-8891-ef3df932a9fa",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c51b1f78-f598-4669-848a-e23f9e8ad961"
        },
        "item": {
          "id": "fb72fadb-02d4-408a-9d07-46f0121dabd2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53d1bd5a-37ee-4cfa-9d07-e99719ac989d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11125a4c-33d3-4427-883b-da23b37aa61a",
        "cursor": {
          "ref": "a1d7c866-4f3b-40d8-b1b7-7aa920d29eb9",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "818a677d-2441-433a-9759-1623b1339616"
        },
        "item": {
          "id": "11125a4c-33d3-4427-883b-da23b37aa61a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "43c09790-cf1b-40fd-95b7-a4f53eeccd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c808aed-ddc4-494d-8101-221568788b45",
        "cursor": {
          "ref": "370cf383-be1a-4100-9226-f13ec614c36e",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "770f13e6-f2bf-45e0-b3ab-3d6a56b69a04"
        },
        "item": {
          "id": "1c808aed-ddc4-494d-8101-221568788b45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be67d229-fc52-4248-a1d3-3aa16082eadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c724de10-0c33-4396-aee8-1f07e37d5123",
        "cursor": {
          "ref": "3f10f270-63af-48ff-a863-ce47a099c483",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "57056c0d-b257-43d5-b937-cc333f18bb8c"
        },
        "item": {
          "id": "c724de10-0c33-4396-aee8-1f07e37d5123",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "36421cd8-fa13-4485-92ec-ac196441cfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a232443a-79ef-42bb-b7ea-ccb89b114110",
        "cursor": {
          "ref": "35c2908d-9683-4c05-9cf4-1293851ad295",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "feaf3c2b-659c-40de-8ea2-4e0836675bf4"
        },
        "item": {
          "id": "a232443a-79ef-42bb-b7ea-ccb89b114110",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ba8a1074-e40b-49a9-8ead-4e30b36f65b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e1be06-8baf-4f16-9ead-a0b362e9d04f",
        "cursor": {
          "ref": "d99d7539-59e0-4a94-8dee-2c43841d9165",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ea4df5a3-582b-4108-b9f4-8967123b1432"
        },
        "item": {
          "id": "49e1be06-8baf-4f16-9ead-a0b362e9d04f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b2933cb4-7ade-4b90-a0af-22107101fece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ffd86e-1ecb-4005-94ab-e993f15f948c",
        "cursor": {
          "ref": "bef893c4-bd95-4a34-bcb2-2298b3605e1b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0ec166ee-f812-4e41-887b-0d758b6367fa"
        },
        "item": {
          "id": "07ffd86e-1ecb-4005-94ab-e993f15f948c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08eb6e21-3d9b-462d-8f05-1395d1e64950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cd4423-f411-41a2-b7ad-f24cd6cac130",
        "cursor": {
          "ref": "af8417a8-da20-45bf-a319-e22a97e7f995",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "78d68a70-d8da-45cd-9664-010a59d7ca53"
        },
        "item": {
          "id": "47cd4423-f411-41a2-b7ad-f24cd6cac130",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1ccb1805-42e9-46f5-8603-a866355ba32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea7c367-2d4f-4c8d-8bb2-f1592e703c8e",
        "cursor": {
          "ref": "b51aee14-ba2b-4ebc-91d5-ef9e81223879",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bd055f02-312b-4996-9b94-32a27c493f55"
        },
        "item": {
          "id": "8ea7c367-2d4f-4c8d-8bb2-f1592e703c8e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "173003c0-ff27-414a-82d2-3b08d2c6f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b3087f-3ad9-41d3-a7c9-1084c94b5cdd",
        "cursor": {
          "ref": "1a522e4b-dc93-436d-b695-67b42c07b091",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f5bcfe5d-0221-4f18-955f-941c1ed4e1fa"
        },
        "item": {
          "id": "e8b3087f-3ad9-41d3-a7c9-1084c94b5cdd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1b8e3102-5f06-4d09-86db-779776075090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6b2630-8f9c-4501-8650-5d4dced97c70",
        "cursor": {
          "ref": "928587c7-4b56-413b-b516-9bc381b312e0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "33df0352-dd0e-446c-a5d3-ed6f785d4727"
        },
        "item": {
          "id": "7f6b2630-8f9c-4501-8650-5d4dced97c70",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aff2a6b2-7c4b-4dc7-abeb-b6ffcd5ed328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975ee24e-71bc-48fa-a8ad-976a2606c320",
        "cursor": {
          "ref": "c721bfcc-1855-4f24-a18e-f2e14f6081c9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "324bd192-638f-4bd4-9dd4-f7dc7b2d3ffc"
        },
        "item": {
          "id": "975ee24e-71bc-48fa-a8ad-976a2606c320",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "37637650-38cf-4ea9-b1f5-916cdf917a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b65e05c-d35e-4085-b08e-5791bcc6e06a",
        "cursor": {
          "ref": "eb20eb7c-ff87-4d94-8e26-e23cc0d189d9",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3d7a0b43-1eed-4249-9728-bb833d03054e"
        },
        "item": {
          "id": "2b65e05c-d35e-4085-b08e-5791bcc6e06a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4d50a11-38fe-4a0c-9f94-2c4733676c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4295c1e-a4d2-4176-85cf-09f960757fb3",
        "cursor": {
          "ref": "db0651ee-531a-433a-93e8-095e68e7b7be",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d3871710-582d-40de-a28b-1cd8274639b6"
        },
        "item": {
          "id": "c4295c1e-a4d2-4176-85cf-09f960757fb3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b35b20eb-59d2-4914-8e92-792196a3bac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92693168-aa25-4599-9f67-11e03899cb7c",
        "cursor": {
          "ref": "586756f2-0b9f-475b-9b10-88aa4328f7b4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "df638f49-dcfc-40bb-a386-d3173cda6015"
        },
        "item": {
          "id": "92693168-aa25-4599-9f67-11e03899cb7c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2ed7afaf-832c-44f6-a0d9-aace0b90df29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ccb504-a035-476a-a820-5fb008a7fbb7",
        "cursor": {
          "ref": "c4a3b4da-5fa5-45be-813a-aaef6c2a7e8e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9df2978c-46b7-4c17-a0e4-a75e6703b6d5"
        },
        "item": {
          "id": "c0ccb504-a035-476a-a820-5fb008a7fbb7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "65030ba0-7296-41fb-9da0-a1c123c8b24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4754c242-6ad0-4361-ad7f-33aac2713660",
        "cursor": {
          "ref": "c54cffe9-cdb0-4333-9fd9-1651c3861045",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7996d0a2-6b36-4c3e-8bc6-69bebb2bb0a3"
        },
        "item": {
          "id": "4754c242-6ad0-4361-ad7f-33aac2713660",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c799ef2-264c-4c9a-98a4-d935e12f00a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd834a79-14ad-444f-b1e5-3373ecca6443",
        "cursor": {
          "ref": "44dbfab8-b800-413e-ae4f-be095fa3da6c",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6c5f8168-35d6-4ebf-a2d3-0eb2591147be"
        },
        "item": {
          "id": "bd834a79-14ad-444f-b1e5-3373ecca6443",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3d5b899-cc84-4ee2-9d96-82cfa4d9dc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0079709-03d4-41af-9188-fae7427503f1",
        "cursor": {
          "ref": "b8ad1024-908d-4954-9bd9-9c86b565ec45",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fd5b032e-528e-466d-b3ae-31c5fda83f97"
        },
        "item": {
          "id": "b0079709-03d4-41af-9188-fae7427503f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "34db9098-d4fb-41d0-8c31-e3fec65475b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c6c6f9-fe38-4227-a692-776b5257c44e",
        "cursor": {
          "ref": "7f4964bf-af6e-4d0e-b19f-1f3199a17ea4",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a01ac5b8-45af-404c-90a4-67ece4c670fb"
        },
        "item": {
          "id": "80c6c6f9-fe38-4227-a692-776b5257c44e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6b227548-d924-4019-82e7-2c1d24237f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5894342c-d2a2-4b5e-98eb-edb74948b1a3",
        "cursor": {
          "ref": "8a1b9573-35f8-434d-aed8-c26e007ae542",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aae663a0-3549-43c8-919a-825386983da8"
        },
        "item": {
          "id": "5894342c-d2a2-4b5e-98eb-edb74948b1a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bf8b0343-96e0-4013-8ba1-26ec38b88b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ed6a83-dd23-4246-a262-ca0ed67924b7",
        "cursor": {
          "ref": "56de12f8-eb59-475c-8666-650583a05fc4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4e3c3723-c32b-46c9-a646-05069cb9cd81"
        },
        "item": {
          "id": "d8ed6a83-dd23-4246-a262-ca0ed67924b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8003de7a-7e6b-4a32-b2e5-9557858d1e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3881207-6ef4-4212-8760-974c0a92b10b",
        "cursor": {
          "ref": "6cab457c-0fb4-4018-b659-fdea71994815",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "77f9a738-42dc-48a9-8e15-d36bfc8b2abc"
        },
        "item": {
          "id": "c3881207-6ef4-4212-8760-974c0a92b10b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fd1cbd7a-2934-4625-9779-9c50e1c20ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ebb4cd-1116-4d4a-b46b-2fc49a10aa28",
        "cursor": {
          "ref": "615cedc4-885b-4c64-ac78-7201edd1510f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "08ba0410-154d-4066-afee-4d19756e62e7"
        },
        "item": {
          "id": "60ebb4cd-1116-4d4a-b46b-2fc49a10aa28",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "527888cc-032b-4ec3-838f-481661d511b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fb281c-3528-4e86-a4a7-e288ccd714c3",
        "cursor": {
          "ref": "afc85b2e-d0e8-4a3b-9329-9517def36b65",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87db7a25-552f-4e89-9aa4-be5c8f80b8e0"
        },
        "item": {
          "id": "08fb281c-3528-4e86-a4a7-e288ccd714c3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7eef8fc3-3eff-4b71-8fef-a69e393ce997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c815a0ba-0d3d-481b-861f-6d775caaf37e",
        "cursor": {
          "ref": "aa756506-bb0f-4307-9b66-43971fdbbcaf",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f1e4f3de-de3a-42fd-b9b4-fd78c6d5d19e"
        },
        "item": {
          "id": "c815a0ba-0d3d-481b-861f-6d775caaf37e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "580d0911-37a0-4737-a707-1fa1f3cb49be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3561cc-79d0-42f0-aa32-77a8cf44b73f",
        "cursor": {
          "ref": "0bbb7886-863f-42e8-b594-a31885ae2fe4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb091ffc-c2bf-4773-b216-c8e4ca2a972a"
        },
        "item": {
          "id": "9f3561cc-79d0-42f0-aa32-77a8cf44b73f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cfbaf290-77af-4d16-bab7-d212bedf369f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cbda8a-2164-4042-8f2e-0cf20ff8892c",
        "cursor": {
          "ref": "af907f21-c709-4e9c-886e-228a9f56a3e2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1e4edc26-6d47-48d8-b1bd-d8e2bcc72b66"
        },
        "item": {
          "id": "84cbda8a-2164-4042-8f2e-0cf20ff8892c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0658982b-18ce-4b4f-88a3-99e6e971ff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5c6cea-a157-414f-8522-c92324a768a1",
        "cursor": {
          "ref": "b59307d0-c84a-4bee-ae73-26fc23e118e4",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "84645a7d-33f0-4a38-a071-265895b3cb1e"
        },
        "item": {
          "id": "2d5c6cea-a157-414f-8522-c92324a768a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58ba945c-8aee-4ac2-9b7f-ebd868d3e7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c690d-4347-4fb0-ada5-402354de11c4",
        "cursor": {
          "ref": "331952c8-d7f1-4a2c-8fea-9d8fd07d689d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b41f1a5b-a5fd-47c5-ab73-eefecbfb6d96"
        },
        "item": {
          "id": "491c690d-4347-4fb0-ada5-402354de11c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c908f03d-d714-4d8d-b82d-f28b2967208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add8f89-6a6e-4aae-bf9a-de43aefa592d",
        "cursor": {
          "ref": "641300f4-cae9-4ad3-9c60-a226ffae2e0a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bc617e8b-ede3-4ff1-b552-30e0a7e154c1"
        },
        "item": {
          "id": "3add8f89-6a6e-4aae-bf9a-de43aefa592d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06ad002e-f82f-4240-8e9f-7f73a62f52d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6c9320-feb0-4867-bafa-c7a8427c86f9",
        "cursor": {
          "ref": "30494f6a-247b-4edf-a68c-bd6d9176bce4",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1618152d-1e13-4db1-b31a-fb7cc7b8ca7a"
        },
        "item": {
          "id": "0f6c9320-feb0-4867-bafa-c7a8427c86f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "86fe18ae-df4e-4fef-b807-9915727d3089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9054d12-3b0a-4450-b829-ff72fcbfa212",
        "cursor": {
          "ref": "2e84b689-3875-45d7-973a-aec02f9e2ac3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "73d75639-7f23-4dc9-8a94-bc688e8b3c11"
        },
        "item": {
          "id": "e9054d12-3b0a-4450-b829-ff72fcbfa212",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "597f59a9-0156-4a98-9790-1bf24bbc9789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f42cc9-957e-495c-aa4f-21bd6c5959d0",
        "cursor": {
          "ref": "2208e40c-546e-44e3-b2ce-b1deee42c98c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34b0c9e5-c09c-46b5-8704-96d07f4ea354"
        },
        "item": {
          "id": "d4f42cc9-957e-495c-aa4f-21bd6c5959d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e283eca4-9bb5-4167-a575-81d7a5bc7251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b45c35-55fd-44d9-a8d4-f401626841b1",
        "cursor": {
          "ref": "b7dbc333-efb6-4c75-b0a6-73be1f58cbfe",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b51a53a0-d037-46d9-9b5e-a4656af1ae5e"
        },
        "item": {
          "id": "56b45c35-55fd-44d9-a8d4-f401626841b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b866512a-09e8-434a-8c79-04588e147e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a07286-592f-471d-8600-7953115fb36c",
        "cursor": {
          "ref": "f0709a01-3fc8-4045-9b92-f56adb262ee6",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ef296c7c-c4f0-4163-a4b3-b01d595b879e"
        },
        "item": {
          "id": "d1a07286-592f-471d-8600-7953115fb36c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b193c31f-fc75-4601-a1b5-8b979db223c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c6f18c-4c58-4f1b-b609-2cd08d99410c",
        "cursor": {
          "ref": "4c1485ab-9ba7-47d2-8112-9ea694aaad94",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b7ab696-7f21-4393-9753-0b5f073d0003"
        },
        "item": {
          "id": "d0c6f18c-4c58-4f1b-b609-2cd08d99410c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "60661d56-3b0f-4a1f-b7cc-220d41e8667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3ec713-d873-4f69-b7b3-9ad298020e19",
        "cursor": {
          "ref": "90051e7c-8bbc-4401-b689-a2c5506d27b0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "131ee4f2-e052-477b-aa9b-064fa13afd35"
        },
        "item": {
          "id": "1b3ec713-d873-4f69-b7b3-9ad298020e19",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "666db8a4-2946-4942-aef9-dfb4745bdfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5c8dc4-807c-4e06-a887-5f66763a8e27",
        "cursor": {
          "ref": "14103bd6-d16d-4056-9afd-9e8c9935b68a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e97a2af1-ad92-42bb-86bf-e9eb8791e2db"
        },
        "item": {
          "id": "af5c8dc4-807c-4e06-a887-5f66763a8e27",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00746614-a8d4-458f-bdc2-60d94f1899c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec9718-7684-48f4-a727-fc2e35dc05ba",
        "cursor": {
          "ref": "9ebc856f-130f-457a-9586-16db6d65cbfa",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "22bf4407-60e0-4b69-8944-92d5ff0a093b"
        },
        "item": {
          "id": "b4ec9718-7684-48f4-a727-fc2e35dc05ba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "31044576-0b08-4756-9266-1ead40aa2828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cffbee-5df1-43da-8a0b-8d2262e4c651",
        "cursor": {
          "ref": "43efacb4-6c43-4acf-b0ea-b3b6bcfb912b",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d15ed570-76c3-49c0-b71f-793d5a4cf1a8"
        },
        "item": {
          "id": "e2cffbee-5df1-43da-8a0b-8d2262e4c651",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8aa8be1b-19b3-4945-a3bd-b859f577b8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a204f545-7978-4373-a647-2863bb42d45b",
        "cursor": {
          "ref": "fd696d2f-755f-4385-b7ab-436d2e77abda",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e9be3edc-b923-45c1-80cd-9b5afa28ae2b"
        },
        "item": {
          "id": "a204f545-7978-4373-a647-2863bb42d45b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47fded7c-4915-421a-94e6-dc8276539d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c82f88f-3826-442f-99f2-7c6598a742e5",
        "cursor": {
          "ref": "318010e1-7bd8-4421-85d6-32a6026944ca",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0ee18fbd-3647-461e-a0b5-2b2f6d743c5e"
        },
        "item": {
          "id": "7c82f88f-3826-442f-99f2-7c6598a742e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bb54bade-e160-41a3-9527-dcea44ff84dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f61ea1-bbcc-47b4-8e93-76151194b222",
        "cursor": {
          "ref": "ae7e6a17-da51-4430-bc82-8700124c967c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "16e67ee4-119a-42e1-99d8-7f01df2b4f02"
        },
        "item": {
          "id": "32f61ea1-bbcc-47b4-8e93-76151194b222",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "63e6d60e-db54-4568-b638-9ce1e651689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b895b2-0d4b-436c-ae92-f1dd9065b32f",
        "cursor": {
          "ref": "3a6abf8f-6e52-495c-b211-ed1b70ff1971",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ef89ffc-1f7a-401f-9b0e-6bf7cb242281"
        },
        "item": {
          "id": "d1b895b2-0d4b-436c-ae92-f1dd9065b32f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7c29fcd1-0649-4be4-9cf2-b318c9c58122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d772511-f6b9-4e46-9b31-56ec8e6557be",
        "cursor": {
          "ref": "7a5624d8-ed66-4c34-a8c2-103fd2e52db2",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6e6730f3-b88e-45bc-91c4-345a26e1065d"
        },
        "item": {
          "id": "5d772511-f6b9-4e46-9b31-56ec8e6557be",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c844f08-23e6-48cf-b53d-446426b69f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baa6399-4a7b-4109-9ff7-b252504d974b",
        "cursor": {
          "ref": "aad98f85-42fa-4102-8815-00b2825506e8",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "15ae6d35-33a4-434b-b3a7-ce8e4372c16d"
        },
        "item": {
          "id": "0baa6399-4a7b-4109-9ff7-b252504d974b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b7129c1-4f0f-4752-b985-8bdefeff19f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6480dbf1-e132-47cb-83b1-8a842e51a138",
        "cursor": {
          "ref": "fee1e23b-fe0e-4cad-82a2-ad8c8189a585",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8c6af8c6-5ec8-4cdc-8d6e-1a8669bef6bb"
        },
        "item": {
          "id": "6480dbf1-e132-47cb-83b1-8a842e51a138",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c10b2e21-1079-4253-8046-2d77782defda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad79a7a-c60f-4e90-b5cb-e287a1941ef3",
        "cursor": {
          "ref": "c392d053-c4e1-43b3-ac56-8c303220069d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "836927b8-a87b-4e92-952d-f8dad5cd46dd"
        },
        "item": {
          "id": "2ad79a7a-c60f-4e90-b5cb-e287a1941ef3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3a527c97-4ea6-4171-b0ae-e2307443e4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e4b886-910c-4d68-ae9f-e9e226a37ae5",
        "cursor": {
          "ref": "3023544f-e125-4be9-9490-7d051feecf8c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9d944484-6b16-416a-8af2-cbb3ffce59c2"
        },
        "item": {
          "id": "37e4b886-910c-4d68-ae9f-e9e226a37ae5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d2c2440-b955-4c80-8557-9dac3f52eef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2450c2b0-3f0b-4473-9d41-1c4db0525475",
        "cursor": {
          "ref": "a0cdfa11-ccd9-4488-84f1-5fcab1c66430",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7c827a8b-52b2-4f2d-8273-01c91049aff2"
        },
        "item": {
          "id": "2450c2b0-3f0b-4473-9d41-1c4db0525475",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "acb4aa10-10cc-4dff-91f1-ac0719431509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f642e44b-3f5e-4b3b-97bc-1926d49ff9be",
        "cursor": {
          "ref": "5dcc82de-f764-4cbb-9fcb-75d1833df7e7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5c159553-ed71-43b7-9f7e-82ab2f0f38cf"
        },
        "item": {
          "id": "f642e44b-3f5e-4b3b-97bc-1926d49ff9be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6faad96d-2ca6-4420-89f7-b8fdb07a5e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154414bc-e97b-4406-8b73-0df5649f1257",
        "cursor": {
          "ref": "2f2a0333-a36e-4533-8845-f31fc14b4dc9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3b7664cd-fdea-44ba-bcb5-ed96104cd39e"
        },
        "item": {
          "id": "154414bc-e97b-4406-8b73-0df5649f1257",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8dbbb3bc-c3da-492d-8770-b8e7a8ab8981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e927e258-d45f-4e64-a725-86fd7f7db458",
        "cursor": {
          "ref": "52d71016-4b9c-4a7c-aca5-cedd35453f4e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6fb43824-f4f6-468f-ab04-4bc82af7a740"
        },
        "item": {
          "id": "e927e258-d45f-4e64-a725-86fd7f7db458",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "57a41701-9d19-47cb-b0b9-43f3820e0d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218034a9-89b6-41ae-bcda-43a495a8aef8",
        "cursor": {
          "ref": "3aa3286c-1193-489c-b61c-5db03cf3763b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c103d958-0d33-4e7b-94ce-7e602b2ce698"
        },
        "item": {
          "id": "218034a9-89b6-41ae-bcda-43a495a8aef8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0cf2e067-ffd7-4323-b9b0-f966387a2a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f058f82-f813-4053-ab51-066d9b6b7ec9",
        "cursor": {
          "ref": "6bf708d9-8aee-4216-8994-a8fec4673fca",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99d28348-c6a2-4208-92af-3e8fb2b5f3ed"
        },
        "item": {
          "id": "2f058f82-f813-4053-ab51-066d9b6b7ec9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1bbcef5b-22fd-4edb-b57f-fed243976e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fcb046-b502-49ed-81bf-ff9ca3ce3c97",
        "cursor": {
          "ref": "0a740561-b3c1-4eba-bc45-1e6dffa7bdea",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "85757efa-3123-4041-a18f-e04a0886963b"
        },
        "item": {
          "id": "c9fcb046-b502-49ed-81bf-ff9ca3ce3c97",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a89ea2e8-d200-4310-823e-999ffdf6685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d777ee-478b-4c29-a75c-f91b609d6259",
        "cursor": {
          "ref": "908b3830-f9b3-4142-b484-25e31f46e969",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d248333e-a0a9-487f-b163-c46723e682cb"
        },
        "item": {
          "id": "82d777ee-478b-4c29-a75c-f91b609d6259",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f82ea567-88b6-4a4b-8b25-e1a1da4fd96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15cfe4b-caf1-40fc-862e-359f6c2f38d6",
        "cursor": {
          "ref": "6a02226c-961c-4a99-ad02-363bb81cbc0f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9bd6b235-1401-453d-98f1-394aafd587d7"
        },
        "item": {
          "id": "e15cfe4b-caf1-40fc-862e-359f6c2f38d6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a07af3e3-5f2b-4b46-b7b3-91df96494541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd18a93-49b2-4cd9-aec5-27cea8d27f09",
        "cursor": {
          "ref": "bf6f36e7-dc47-41be-a040-d6b37742ee84",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "20a76038-894e-4526-9f2b-b7e23adcab14"
        },
        "item": {
          "id": "dbd18a93-49b2-4cd9-aec5-27cea8d27f09",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "37baf5c1-0206-4a2b-a17c-0a1a35bb4bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04900bc-a1ef-47b8-9033-ec81e5e1328f",
        "cursor": {
          "ref": "378a7eef-5db9-48e1-b7ad-f0a56c0fb414",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6565ebe8-9f21-4ff3-91d4-16c29ec3b126"
        },
        "item": {
          "id": "f04900bc-a1ef-47b8-9033-ec81e5e1328f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e915f9f9-5487-4022-843c-5503afac2704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b7c957-a1df-45b4-97b3-ba87f29973cc",
        "cursor": {
          "ref": "3e03a6b6-e074-485d-80f3-c5ce595e15ea",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9789775e-5a17-460b-9985-0e0dd9d3e9d2"
        },
        "item": {
          "id": "e5b7c957-a1df-45b4-97b3-ba87f29973cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b2898e5f-1d41-4fc3-a04e-020b45ca337a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359f8b80-2c68-4034-ad1f-8aebe35186a8",
        "cursor": {
          "ref": "f11e86e8-e362-43ac-a0d9-8d30a26c9ce4",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9287e330-5045-487a-8ea2-5c44e02c9327"
        },
        "item": {
          "id": "359f8b80-2c68-4034-ad1f-8aebe35186a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "079f747a-1a22-4ea9-8807-d1f2456cf2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75a3e2d-d31f-4529-b844-61bc690dab80",
        "cursor": {
          "ref": "3e8f05a7-25bf-4a01-85d0-68e01a22ae5a",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c34f8063-9492-4c0a-adec-a1c0cfddd0bc"
        },
        "item": {
          "id": "f75a3e2d-d31f-4529-b844-61bc690dab80",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "89c40f02-1906-4589-98d5-115f992c3570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6a0cd7-ccf8-481e-a33f-e3876a38fad5",
        "cursor": {
          "ref": "cebcd627-e265-434a-90ca-79e4a45470e9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16f6b07e-8ea8-413d-904d-76bf205bc05d"
        },
        "item": {
          "id": "2d6a0cd7-ccf8-481e-a33f-e3876a38fad5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "761fb510-d087-455c-8d62-433031de8145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb05eeb-89fa-42f1-b483-8381cd3cc9f9",
        "cursor": {
          "ref": "ec84c4af-5695-4308-b006-0374773d1ca2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "151a7d29-2905-41a8-b16f-c98841382dbb"
        },
        "item": {
          "id": "bcb05eeb-89fa-42f1-b483-8381cd3cc9f9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "128db024-065c-4d47-9dce-ac7c0edd4423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05befbb-f75d-4744-bc0f-1bd6500a6465",
        "cursor": {
          "ref": "b1263f52-3075-4e8e-b7ed-114c3c6848e4",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "64e2738b-48fc-4a07-bf7d-310be6dc7b79"
        },
        "item": {
          "id": "d05befbb-f75d-4744-bc0f-1bd6500a6465",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3f34485e-bc59-42db-b1ab-2e4ca14fcfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66658dd5-86dd-4eee-9108-d101998eb04c",
        "cursor": {
          "ref": "4e8de11b-9408-4a2c-b216-8a9f0ba6859a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8080d22b-1db1-4c55-bc35-dc7c1eb31869"
        },
        "item": {
          "id": "66658dd5-86dd-4eee-9108-d101998eb04c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f979079a-1aaa-4772-bdc3-e99b00440189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d850687-feb1-45c6-8e22-49430cbe7cd8",
        "cursor": {
          "ref": "0a6a01a7-1504-42a9-ac0c-6b87ed590321",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d43f5c6e-c59f-4128-b76a-1e7000d59146"
        },
        "item": {
          "id": "1d850687-feb1-45c6-8e22-49430cbe7cd8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "68df2328-aa1c-49a5-a987-76cc8c803e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c64168-05c7-41c1-9652-28d0b5891567",
        "cursor": {
          "ref": "07f19af3-3d6f-419b-bd0e-82ea7641c085",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9fdf357e-31eb-431a-89a9-4d047a1010c9"
        },
        "item": {
          "id": "42c64168-05c7-41c1-9652-28d0b5891567",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e98f99cb-c071-4213-978d-d0ab1664c140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3cf147-8df5-42b0-b5d3-5c3ca138f1e1",
        "cursor": {
          "ref": "5cf7303a-7d5f-4b56-9116-db82491de5dc",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b5f3878b-2a17-420e-9ff5-b2bf66e1ebc0"
        },
        "item": {
          "id": "3b3cf147-8df5-42b0-b5d3-5c3ca138f1e1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bedb4fbc-a601-4deb-96a1-32b7779aefb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384ae9d1-4dd3-420b-89d0-0e8bd1308c63",
        "cursor": {
          "ref": "446206b8-012d-4738-86c3-c549db92e38b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8f448015-50b3-46b5-bc47-6d7917feae05"
        },
        "item": {
          "id": "384ae9d1-4dd3-420b-89d0-0e8bd1308c63",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c97fc12b-d617-43e7-b798-a75cd2bc74df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dab6391-2cfe-4666-ab08-f88de445f1b9",
        "cursor": {
          "ref": "46147eae-90d4-4f35-9e83-ef640842fe82",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b893e2e5-5b47-4cff-ba82-da9b23e33c3e"
        },
        "item": {
          "id": "6dab6391-2cfe-4666-ab08-f88de445f1b9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "36ddc9db-1e9c-4906-ac03-36890511e31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a28d5-2220-4b53-a962-af7a6976e829",
        "cursor": {
          "ref": "9cd51008-9c33-4ec3-b24d-3b899259868f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6a44d0f-04ed-440a-ad76-dc82dd059590"
        },
        "item": {
          "id": "032a28d5-2220-4b53-a962-af7a6976e829",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1ad085dc-8b8a-42ee-ae2d-4b49c5696897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1ee3ce-4dd8-404f-b028-ce4aadf44956",
        "cursor": {
          "ref": "36c058bd-5eb3-4423-b290-dcde62a87b33",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8886bbfe-dc74-4ce0-a49e-b33a7cc3be74"
        },
        "item": {
          "id": "7b1ee3ce-4dd8-404f-b028-ce4aadf44956",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2cbef82f-19e5-435d-a6bb-5a82e22164bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41937c79-e9a5-4390-a0db-509071d1beb8",
        "cursor": {
          "ref": "2593507c-bc66-41f5-8fd6-40dd1ca00198",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4d407370-362d-4f22-8c81-8d39ec390495"
        },
        "item": {
          "id": "41937c79-e9a5-4390-a0db-509071d1beb8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0354184e-7f87-4908-8568-e6bdd2370688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48deb412-6cb2-47d0-8fdf-929194b16535",
        "cursor": {
          "ref": "7dc3ffbf-a217-4b97-948c-fa64549f2ce4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5e1a914b-dd7a-4176-882f-44d2ce902f63"
        },
        "item": {
          "id": "48deb412-6cb2-47d0-8fdf-929194b16535",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6785f806-c60d-4fca-84a5-c90f50ad610a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3b00fb-88e1-455a-833d-72653d216578",
        "cursor": {
          "ref": "de9e8db1-fb9d-46da-a79d-f6e6343a2838",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1a8fe69b-cf6b-426a-a81c-94179c7895b5"
        },
        "item": {
          "id": "9f3b00fb-88e1-455a-833d-72653d216578",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "acf8e320-76f4-495c-95e1-9b6f989a7e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac356990-7c09-4448-b0f1-ec87f268271f",
        "cursor": {
          "ref": "99b86d6e-20be-4144-9b2a-7a71dddf2c88",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f160234b-1bbd-4c55-b8ff-96486c77a89b"
        },
        "item": {
          "id": "ac356990-7c09-4448-b0f1-ec87f268271f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "530394ae-4986-4a49-9802-d97fe305f0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad229592-6167-4814-9cca-407f9fe1425b",
        "cursor": {
          "ref": "87920bb3-c4e4-457d-81aa-3c1b3ccc6e5a",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fde8ff90-5f87-4f59-9f23-349ee85cc23c"
        },
        "item": {
          "id": "ad229592-6167-4814-9cca-407f9fe1425b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5c2c91a7-276a-441e-a9c6-f7563e78259e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0ffa1d-969f-481a-931b-e82678462f03",
        "cursor": {
          "ref": "df8862bd-0e78-40ec-8568-c9c0763e7f66",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c99420cb-95f1-4e81-8852-5e4fb0350639"
        },
        "item": {
          "id": "be0ffa1d-969f-481a-931b-e82678462f03",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f617d0b-e4d9-46cb-9b40-b6d5165a0981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec70524f-4f25-4df2-9231-fa7de90e4f07",
        "cursor": {
          "ref": "023cac14-a582-4af4-98ea-32b0a725d0dc",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2723feea-f1b1-4fb1-837d-7d07f84b18f9"
        },
        "item": {
          "id": "ec70524f-4f25-4df2-9231-fa7de90e4f07",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f96552cb-8a8c-4155-ace7-d594373bb9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31473f1f-ae4c-483d-836f-f988712d301c",
        "cursor": {
          "ref": "51de88ba-856b-4310-a796-7c88229280f4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a006047e-27c3-4b54-9904-404acf359b59"
        },
        "item": {
          "id": "31473f1f-ae4c-483d-836f-f988712d301c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cdbf5c8f-c0c5-4c4f-8f57-2586eda3fd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9221de-e40a-4375-b8ea-5bb6fd5ab90b",
        "cursor": {
          "ref": "ae49a87e-247a-4a65-a897-5e64afbda80d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3c0f3714-8096-43c5-ac31-43026b864e52"
        },
        "item": {
          "id": "0d9221de-e40a-4375-b8ea-5bb6fd5ab90b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5d97a05c-3bb7-4cf0-a90d-d22e0152b803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85639099-b3ed-489f-9e47-a960c36bf5ef",
        "cursor": {
          "ref": "95e87dfc-f657-4aa3-b535-28d027d22460",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f2f26cbe-9e2b-4993-9da4-5af30fc1553d"
        },
        "item": {
          "id": "85639099-b3ed-489f-9e47-a960c36bf5ef",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3e7475f3-e21a-45af-bea1-eb936c1716e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36277039-6be1-466d-8288-40c4dcdb7a2f",
        "cursor": {
          "ref": "12707e78-8c8d-449e-802d-7ac976245056",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cdf4c605-b9f9-4e09-be17-d0b781980828"
        },
        "item": {
          "id": "36277039-6be1-466d-8288-40c4dcdb7a2f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a38dbd71-228d-439d-8228-e98b051a4b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5358a1-4030-4bb4-aeac-aa520d760d83",
        "cursor": {
          "ref": "d229715a-879b-445a-8bf9-20ad4d3739d0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a08e3dc-c028-41ae-a52c-fa14336b13d3"
        },
        "item": {
          "id": "fc5358a1-4030-4bb4-aeac-aa520d760d83",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a8e315da-ba67-41c5-897e-b59c43d4f043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f9ff17-3612-4dd0-8b2e-033f19a57c3a",
        "cursor": {
          "ref": "344a8281-5ba2-4f09-a7f7-27b396bd8cf0",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "01eba5c8-ce5f-4719-8964-bec7085aed05"
        },
        "item": {
          "id": "23f9ff17-3612-4dd0-8b2e-033f19a57c3a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e252e4f3-df65-45a7-9c04-549c5f916000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8100bd-19a4-4977-a8e2-df8ecc13e0ee",
        "cursor": {
          "ref": "e1f85dd0-9f33-450b-ad51-04645b842897",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "40e8d7f7-e80c-4069-ae07-6d68e5f4ba61"
        },
        "item": {
          "id": "fd8100bd-19a4-4977-a8e2-df8ecc13e0ee",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c95219a7-4a21-4c38-ab9e-579fa2342da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef751359-3066-4b6b-8a6a-a38315afe475",
        "cursor": {
          "ref": "1082391c-e55a-4665-bbac-cc8daa34da2e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2ab9615c-4028-4442-b324-cb675d412b59"
        },
        "item": {
          "id": "ef751359-3066-4b6b-8a6a-a38315afe475",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1bd9c55e-2615-4166-a1e1-ede9eecf4878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb7f5f-3a52-4941-9c4a-75b6ccf2adb1",
        "cursor": {
          "ref": "e76a19bb-e4f8-4eeb-a06c-1434ffcf3235",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a7dbc9d9-05f8-4321-9d5f-816a67c2b557"
        },
        "item": {
          "id": "cbbb7f5f-3a52-4941-9c4a-75b6ccf2adb1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "80ff68db-325f-41cf-a4dd-c490c9279f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b981464-70c5-4c3c-b768-6b7f5dc0329a",
        "cursor": {
          "ref": "11c6139e-7a86-418e-9fd6-be52e6840ea1",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "547e750d-a015-4a55-8b98-c60b22e4b42b"
        },
        "item": {
          "id": "0b981464-70c5-4c3c-b768-6b7f5dc0329a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bf492950-d222-4671-a666-b81626d4eb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f766ceb0-7451-464b-a7aa-8537b700b98d",
        "cursor": {
          "ref": "50012a02-685c-469f-8022-e3e9c9cd2da2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "268a8750-2e13-4976-86f9-e9f41a723fda"
        },
        "item": {
          "id": "f766ceb0-7451-464b-a7aa-8537b700b98d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a4749ae6-b547-4fd6-92d5-afdee1ed7883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8850ff57-faa1-4e4c-8cea-ef1c7113fde1",
        "cursor": {
          "ref": "81b80eaa-1b7e-4689-8cc3-a0dd2b99b2e9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d15c76de-76d4-4035-a812-6737ce0dab69"
        },
        "item": {
          "id": "8850ff57-faa1-4e4c-8cea-ef1c7113fde1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4f6fd122-5300-4a84-83b7-26ee5b90d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08396db2-68d9-48f9-b649-5dce3c332e94",
        "cursor": {
          "ref": "4905ee24-749b-47e9-93ce-b8fb24ec4531",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7c05a3c6-c617-4e0f-8124-1fe1136c1671"
        },
        "item": {
          "id": "08396db2-68d9-48f9-b649-5dce3c332e94",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18af477e-de0e-464d-a98b-dbdf643af338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100cb7c0-d460-4d92-a53e-724b2baed94b",
        "cursor": {
          "ref": "7975cff6-dc5c-46de-a8b7-9bf0d45c3d4f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f16fc55c-72f7-47a9-878a-51f1cdc677f2"
        },
        "item": {
          "id": "100cb7c0-d460-4d92-a53e-724b2baed94b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2027176b-3d1b-4132-ac3a-528d52c42286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf7a3e3-1939-4e87-8989-1cec4c10005d",
        "cursor": {
          "ref": "4e73f898-6bbf-4e90-894a-2291eda16385",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b9b62268-81fb-4fd0-93b9-17dac7a2feb9"
        },
        "item": {
          "id": "fbf7a3e3-1939-4e87-8989-1cec4c10005d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "501bfec0-dd2a-40b1-a1ae-d6f9e8071126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235f8ccb-e601-49e3-bd4b-aaad198e8dab",
        "cursor": {
          "ref": "6c5ec208-1025-440e-9c74-1ae75daf7de0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7bb8217f-32bb-4944-8d8b-76bbd894e7b9"
        },
        "item": {
          "id": "235f8ccb-e601-49e3-bd4b-aaad198e8dab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6014535b-2e68-4acd-babb-8f468827a07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20855389-a476-43da-a1b0-12b456e0bb31",
        "cursor": {
          "ref": "e27001d2-bb45-4143-bf98-39d5cb7a344b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "88a7e5c4-c7e0-46cc-add5-9799c0804af4"
        },
        "item": {
          "id": "20855389-a476-43da-a1b0-12b456e0bb31",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a08c6d33-0682-436c-93f1-a74782bc6f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbe6c89-d844-4c0c-bff9-af19a859f85a",
        "cursor": {
          "ref": "15b1cd81-024a-44e2-94ba-0ad2bf2e5d87",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "729929bd-8b2d-4652-9c35-62f28c958ba6"
        },
        "item": {
          "id": "5dbe6c89-d844-4c0c-bff9-af19a859f85a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "10143195-ad9c-4e53-8934-ef0e79a283b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a3912d-ec9b-4cf2-ad34-b45de347dad8",
        "cursor": {
          "ref": "13327bd7-46f0-4c17-967f-e372ea121073",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3b418be3-95f5-456d-9537-c6193323514a"
        },
        "item": {
          "id": "f4a3912d-ec9b-4cf2-ad34-b45de347dad8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "29d6308f-9d85-4d68-ae60-56474fbd885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e336c7a1-b746-44b0-b2d5-e55eb6ee910e",
        "cursor": {
          "ref": "a4dc8c33-59a7-406c-bf92-0c10fd7b1880",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bd73cf84-be7e-4a66-a3bc-006af3fd3f19"
        },
        "item": {
          "id": "e336c7a1-b746-44b0-b2d5-e55eb6ee910e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "519d6014-6da5-4b8b-8b50-4ec67ba2222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6056b7-f961-4d8d-be3f-989cfee167a2",
        "cursor": {
          "ref": "3167c159-c722-402f-9b49-b3b8a3ffbe72",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7de6b900-5375-4b86-a0aa-4a495abd313a"
        },
        "item": {
          "id": "0c6056b7-f961-4d8d-be3f-989cfee167a2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6d458284-75f9-4a98-b2c9-f572e08cae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829217bc-053b-4ab7-8f7b-3847b3e978bc",
        "cursor": {
          "ref": "8f9ac358-86ed-40c5-b887-bf40b2e8c84c",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "91cd0c1e-177a-4aa4-b706-60eb8b120e22"
        },
        "item": {
          "id": "829217bc-053b-4ab7-8f7b-3847b3e978bc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "830bb077-a015-42be-80d1-4b905ee3d823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a06d09-58e7-4713-86d3-4461caa804b9",
        "cursor": {
          "ref": "f6fe3bdd-f3c7-47b6-9d06-7f5a14f6dc09",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5b84cd63-846f-4ceb-9436-5f9423344af7"
        },
        "item": {
          "id": "05a06d09-58e7-4713-86d3-4461caa804b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "20072918-0ab6-4cc1-bc5b-fa21df3ac6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35a75d7-59d5-43b4-8376-8a734b8003fe",
        "cursor": {
          "ref": "21fd532c-0244-4723-8837-659e92ee7acb",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bc9fde18-d966-441a-95fe-8860fb5d7080"
        },
        "item": {
          "id": "c35a75d7-59d5-43b4-8376-8a734b8003fe",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e4c909f0-c5ec-465a-8c39-2f5a70d2593f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3311972-fa76-4821-9d6a-4c3ba2b270ac",
        "cursor": {
          "ref": "b8446f41-2746-4cf8-a2ea-e25ff709f90d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "23d976f5-887e-4332-b04e-f0240c8753b1"
        },
        "item": {
          "id": "e3311972-fa76-4821-9d6a-4c3ba2b270ac",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5dd84685-0711-4ca9-ab5a-2f85f55538d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3071ba-b896-4a5a-99a5-94e93ec391d5",
        "cursor": {
          "ref": "cccd9b6f-9e9e-4918-8d8b-d75d0d4a10cd",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7f3aad41-5dd9-4c59-9338-520e2a206618"
        },
        "item": {
          "id": "ce3071ba-b896-4a5a-99a5-94e93ec391d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e72f6de1-735c-4f00-9364-644d09d86ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d628c9-fb98-4a0c-b0c9-76dd9aaf057d",
        "cursor": {
          "ref": "eca6f8cd-f329-4dde-89df-dd4f5180abb8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "03647c77-6c34-448e-946b-2c1dd01ca493"
        },
        "item": {
          "id": "d2d628c9-fb98-4a0c-b0c9-76dd9aaf057d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba3234a8-a500-4b54-ab41-dc8d1d785e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0f1ee4-803d-445f-a394-8df6cff4d868",
        "cursor": {
          "ref": "07e71702-eee4-4eb3-bc20-d7b07f19ec5b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "de71d7b0-ae1e-415c-a98b-51af0e86c96d"
        },
        "item": {
          "id": "8d0f1ee4-803d-445f-a394-8df6cff4d868",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e80de383-a097-4001-8143-ee71d784b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07b8835-abbb-470b-9692-4554450198ef",
        "cursor": {
          "ref": "8da4c1de-4d72-411b-a279-4e2a73e62eaa",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "47ef0dec-a7e6-4130-92b9-b3bd41090240"
        },
        "item": {
          "id": "b07b8835-abbb-470b-9692-4554450198ef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "327436cb-aefc-4808-a427-92df5bf2c29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b15563-f194-4dfc-8dff-35e704684365",
        "cursor": {
          "ref": "ab52cd52-72ca-420e-8d34-44df3b43b3f1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "afb1c648-a0d4-48a5-a8fa-d04d24222117"
        },
        "item": {
          "id": "a1b15563-f194-4dfc-8dff-35e704684365",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a9e9751c-a52a-4d4d-a1ea-430e4c1a49d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3e8757-6849-4102-adee-4b3e8874574a",
        "cursor": {
          "ref": "aa340e7f-2e33-4eec-8fa3-e81bb8d05497",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b58cc7a6-60a4-42c9-9b40-a884e5ccf9d4"
        },
        "item": {
          "id": "bf3e8757-6849-4102-adee-4b3e8874574a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2bd3f842-42ac-484a-9e09-bdbe9aebd0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52803bef-e89a-4c41-a4c3-42cf891c52da",
        "cursor": {
          "ref": "e3ae827a-a757-444f-a4d1-6f430631f51c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1bb1c6c4-896d-4ebf-8d43-3e841e5dc402"
        },
        "item": {
          "id": "52803bef-e89a-4c41-a4c3-42cf891c52da",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aff4cb66-e805-4752-b17f-c76a085ee7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1defb9a6-fa2b-4e1d-aa5f-39a4b608e3e9",
        "cursor": {
          "ref": "907b850e-8ce1-4b5e-be22-374dc10ac42b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5cc6f995-80fd-445e-830c-9bb33059a491"
        },
        "item": {
          "id": "1defb9a6-fa2b-4e1d-aa5f-39a4b608e3e9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "40d4665a-991c-4f8a-837c-4f9bf58e018c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a03544-3795-4daa-b0d0-19a676cb5d97",
        "cursor": {
          "ref": "e4e874f0-1c91-4f34-aede-3c8a6557156e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "12af1a19-1cb2-458d-8907-dc9b67844c74"
        },
        "item": {
          "id": "71a03544-3795-4daa-b0d0-19a676cb5d97",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1360bf02-5c53-43a2-9641-89ad7764d083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a556d06-04ef-4db7-8fee-95d08df7fa53",
        "cursor": {
          "ref": "213326a6-bc4e-4387-bd83-19d04ba775fc",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d6e9138a-e9dd-48b7-850f-addc924c6933"
        },
        "item": {
          "id": "5a556d06-04ef-4db7-8fee-95d08df7fa53",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8fbfab2a-0703-4cf2-aefc-2d50c107ee6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2140c533-de5d-49b2-85ee-1db6e1914a5e",
        "cursor": {
          "ref": "c7f44724-34dc-4c53-ae64-d55bf2c9170d",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "64948d75-974a-4d58-840b-36383bdeb0e1"
        },
        "item": {
          "id": "2140c533-de5d-49b2-85ee-1db6e1914a5e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b8920d0f-163a-4f0e-abc5-37f571a83bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5574d56a-d45d-4646-a053-a441314d1d80",
        "cursor": {
          "ref": "87143e3c-e872-4b6a-976f-6e4ab8d3534c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "af9bb9b9-a56c-424e-9940-ce2524bb866f"
        },
        "item": {
          "id": "5574d56a-d45d-4646-a053-a441314d1d80",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2c50e426-785b-474b-9795-25f70dd95971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c225b2e-89e8-4d55-920a-77ec609cf657",
        "cursor": {
          "ref": "3396f94e-46f8-418d-a712-9f63237b8e65",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b955e619-bd5a-4001-8fb2-25fe396d81bc"
        },
        "item": {
          "id": "0c225b2e-89e8-4d55-920a-77ec609cf657",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "362f757a-4a74-4a8f-b56d-63dd5110935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364d69cd-ac2e-46d2-bd0c-a94b80db58f3",
        "cursor": {
          "ref": "eb4aa325-0419-47b6-b18a-a69e4eb6b758",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2411b2fc-0470-45c5-bd08-5cf73f8b759b"
        },
        "item": {
          "id": "364d69cd-ac2e-46d2-bd0c-a94b80db58f3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44bba05d-f8b5-41f1-b870-52c8eabd2e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca196af-d77e-44bf-b24c-6b71b37ad667",
        "cursor": {
          "ref": "03bc6165-1634-4f58-8446-64c711ceb8cf",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6e47b3c6-37ea-4754-aa4e-3b56d07d2d2b"
        },
        "item": {
          "id": "7ca196af-d77e-44bf-b24c-6b71b37ad667",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b846391-e6b4-43e2-859a-0aaa3a5075d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28a14ae-d93e-4bc7-b665-737c290ca10c",
        "cursor": {
          "ref": "c7ce3b22-03dc-4463-8954-0eea8083a4bc",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fd104875-f979-4c72-80a3-04289e986742"
        },
        "item": {
          "id": "e28a14ae-d93e-4bc7-b665-737c290ca10c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1af75127-a957-4f47-a428-9084f64f5d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4798df8a-8782-49d4-86b2-3f755a2da193",
        "cursor": {
          "ref": "8e0a968b-c817-4d39-9dad-397d31b80280",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f93c8ccc-b9d2-494c-9231-711187f06816"
        },
        "item": {
          "id": "4798df8a-8782-49d4-86b2-3f755a2da193",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "46ed6389-7682-402a-b5f2-73041cdf9303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961bafc0-9961-4b69-b868-7574b89d8ab7",
        "cursor": {
          "ref": "88a6a1b1-a701-4554-8968-9f42b95b6d73",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a34f884a-0215-407e-b86d-ae5e896d7bc5"
        },
        "item": {
          "id": "961bafc0-9961-4b69-b868-7574b89d8ab7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "03e6f915-a60c-4c6e-bf29-5ed0649bcb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9905e57c-4a69-4b64-82a9-de2c1c4759ba",
        "cursor": {
          "ref": "9344bfa3-f2fb-4dbb-9288-66009ba5dd13",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d72c6554-d6e9-45ac-8360-89cf9112fb1a"
        },
        "item": {
          "id": "9905e57c-4a69-4b64-82a9-de2c1c4759ba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f155325e-7cbe-4686-b989-91de36de415e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492938c8-b27b-467e-a08b-968396a6d35f",
        "cursor": {
          "ref": "01c0510a-9f9e-4a17-a2ed-fa1b038a762b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fb010029-1338-4b60-a745-9577749b133a"
        },
        "item": {
          "id": "492938c8-b27b-467e-a08b-968396a6d35f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "48a617aa-b0ee-4cbb-8d31-96402d34f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a264669-c0ac-457d-bc01-6c71314772d4",
        "cursor": {
          "ref": "43bc615a-5542-4c6f-aa1b-0a08e36d4ecf",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dafc0b88-0726-4ca2-975b-63f9321432a6"
        },
        "item": {
          "id": "7a264669-c0ac-457d-bc01-6c71314772d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8cff4794-514d-4edc-b965-8084b7f24cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6c3300-0185-4e3b-8102-a3dc78f66b93",
        "cursor": {
          "ref": "9913ae83-fd8c-46ac-b36c-859c13b62396",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f10b21a6-eb9e-4b4c-9502-1017ac6591ce"
        },
        "item": {
          "id": "6b6c3300-0185-4e3b-8102-a3dc78f66b93",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b00b7b3f-62ea-4db1-b3de-f8cb6f303df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176702dd-e6fb-4227-8c9a-57c0319a8df6",
        "cursor": {
          "ref": "976a4156-3812-4610-a5fe-40db780c87a9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "67b5b10e-fb3c-4075-9d44-5c24b1765661"
        },
        "item": {
          "id": "176702dd-e6fb-4227-8c9a-57c0319a8df6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f8ca811d-367e-4787-8b1a-6f3231bc6c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d40b30a7-d07f-409a-8450-c763f0c19cca",
        "cursor": {
          "ref": "bb14278f-7ec2-4355-a839-67249bb9c581",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1121256c-895e-46dd-a380-072363dedc56"
        },
        "item": {
          "id": "d40b30a7-d07f-409a-8450-c763f0c19cca",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a6715acd-e1b2-4dcb-b069-c6f38a7bae41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f754da49-5fe0-4130-b7e9-d63d3e5fc494",
        "cursor": {
          "ref": "8027af42-1f19-4b96-92c2-01fa1edf24e2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6ac21cf0-38ef-4fec-880e-f7d8f3ac1f98"
        },
        "item": {
          "id": "f754da49-5fe0-4130-b7e9-d63d3e5fc494",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0b9d80ff-6998-416d-86e3-0365e406809a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff21dfb-e48f-4171-bc09-18e4676ce02b",
        "cursor": {
          "ref": "6b36d701-ee78-423f-b0cd-03e7f6d8faa1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3b3ae584-9d27-45df-bc15-35a7e1ff713b"
        },
        "item": {
          "id": "6ff21dfb-e48f-4171-bc09-18e4676ce02b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "619cd5ed-1530-4d18-899c-5b07cb2eb5dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172ecc89-f93c-465c-9a75-9002bb8193ac",
        "cursor": {
          "ref": "c4d7576e-0cad-47b8-a7e9-6944c00a5d29",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "29513884-40f6-4ed6-ab1a-fae0261a2012"
        },
        "item": {
          "id": "172ecc89-f93c-465c-9a75-9002bb8193ac",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "60f6236a-4127-4fc2-a3b0-7f70f43b13ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58a4079-6f05-4527-ab2c-ea77c3359609",
        "cursor": {
          "ref": "f797277c-7792-4599-b10a-6dcbdda11dc5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "db54fbb1-bcb1-48b3-b9e4-942dcc5211ae"
        },
        "item": {
          "id": "b58a4079-6f05-4527-ab2c-ea77c3359609",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f480f1bc-adbc-4356-bee3-1d28d5dff194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876615f0-297b-440a-88ff-becc2a61c145",
        "cursor": {
          "ref": "cca01be7-3c78-47f6-a952-c14aea845d5f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c7f14ebc-9d64-4c97-ac87-451934888e4e"
        },
        "item": {
          "id": "876615f0-297b-440a-88ff-becc2a61c145",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "096e3c43-3ce9-4713-ba19-aa14a351416e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc6ed45-209b-4cb1-b7df-376878507468",
        "cursor": {
          "ref": "e38c838e-06d1-4068-80e8-30d8418484ff",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9e6da49a-b284-41a7-8a77-f793314309ef"
        },
        "item": {
          "id": "9cc6ed45-209b-4cb1-b7df-376878507468",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1e91d4d6-3ccc-4cb7-bf62-a76e1a7cac28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fe5dd2-24bb-409d-9221-1b1e41e185a0",
        "cursor": {
          "ref": "af749ff3-029e-418e-93be-bc81a32f4ec2",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6348787b-4261-4469-969a-21a9722c84b8"
        },
        "item": {
          "id": "96fe5dd2-24bb-409d-9221-1b1e41e185a0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6ae48971-770f-47fd-8166-a0e2461fcf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4ffc8c-b767-49a9-82eb-7eb17d51fab7",
        "cursor": {
          "ref": "12950743-20fd-4f07-afbd-f1d1bbde0700",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cd2d1de2-9ae4-4dbc-9ecf-d5f57bfaf7bc"
        },
        "item": {
          "id": "fa4ffc8c-b767-49a9-82eb-7eb17d51fab7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3e302cd1-58bb-47c2-b195-4af0f8938176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b878ea-6048-49a3-ac9a-29dbacd8bbc2",
        "cursor": {
          "ref": "a005b016-c52d-4f47-8c93-db4c9eb851c6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cf8fec4e-8e1b-4eaa-afc1-21b83b387d28"
        },
        "item": {
          "id": "a5b878ea-6048-49a3-ac9a-29dbacd8bbc2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "97640893-24be-4a35-973f-760e1b343087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5435ae9-cb64-450c-92d4-7407fa9a1f5a",
        "cursor": {
          "ref": "7ac4ede1-0fef-4fc6-90df-345c17cde895",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0558d08a-5cb7-41ca-ba48-75f62648b94d"
        },
        "item": {
          "id": "d5435ae9-cb64-450c-92d4-7407fa9a1f5a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fd935b2d-d5bc-4320-bcde-b918f6e1b93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3defaa-9877-4954-8da2-6221553b70c8",
        "cursor": {
          "ref": "5a59e452-76c4-4916-bc90-ed49ab3cabd0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c827fe25-a1aa-4789-974b-b7e8f1186ddd"
        },
        "item": {
          "id": "0d3defaa-9877-4954-8da2-6221553b70c8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ebb3877e-25e4-4d56-b5e9-a0fc191445f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f2464f-ea3b-46a0-a5ed-71743c5c908f",
        "cursor": {
          "ref": "e7503ae7-6ce2-4ae9-8384-84cb3186a414",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3c697128-5ebd-47a4-85d5-240e4cab472f"
        },
        "item": {
          "id": "40f2464f-ea3b-46a0-a5ed-71743c5c908f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6136d38b-4b14-4846-8f4e-280ed6d10990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b519964c-880a-408e-a7e0-2d83f5977c1d",
        "cursor": {
          "ref": "371d17a4-572f-4ab1-a052-229e3e2598f0",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e6fa7905-eab4-4c61-8048-9305d004b66e"
        },
        "item": {
          "id": "b519964c-880a-408e-a7e0-2d83f5977c1d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b5d235cb-87d4-4852-b21d-953cf83eddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445c65bc-df5a-4408-af00-04f1ecbe8b40",
        "cursor": {
          "ref": "3d211588-4c4f-4522-8a90-a15beb3f60d3",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e45160d7-a108-4559-8e2d-f40c52627ad2"
        },
        "item": {
          "id": "445c65bc-df5a-4408-af00-04f1ecbe8b40",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c59d8c09-e7f7-4420-80a5-ac611618b986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322ebdf0-c596-4239-987a-ee4dd106a8ad",
        "cursor": {
          "ref": "4cb697e2-2488-4b5f-890a-f4a52733ccfd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "25563108-ce9c-4fbb-942d-ffa8215385f6"
        },
        "item": {
          "id": "322ebdf0-c596-4239-987a-ee4dd106a8ad",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "dd5f444c-f1d4-4deb-a5cb-dd20f05b2f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34413e-8dc5-4f33-afe1-cefeaead3932",
        "cursor": {
          "ref": "f62d1b91-b5cb-4ad7-bed3-d96be947c75c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "17478632-c746-4ad6-87b6-400b7ec685f7"
        },
        "item": {
          "id": "fa34413e-8dc5-4f33-afe1-cefeaead3932",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f3dc586f-173d-4987-96bb-ebb07468d0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c618494f-5a63-431d-a6a2-0dcaed95d503",
        "cursor": {
          "ref": "148426ca-857f-428f-af22-110a71e7fe9a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1f33fb0b-9ff8-4a82-972a-25cd277f912a"
        },
        "item": {
          "id": "c618494f-5a63-431d-a6a2-0dcaed95d503",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9e9a78dc-e181-471d-9fa3-80001b569ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fc0589-8956-4053-a641-c2ff658ec0eb",
        "cursor": {
          "ref": "accdfc3b-40c1-486d-9ac2-e876d997e368",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "13223f22-cbe3-4339-9169-46f53c1bb23a"
        },
        "item": {
          "id": "31fc0589-8956-4053-a641-c2ff658ec0eb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1b75c0d6-4f3e-478f-beec-0c9c82158755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa82207c-70bf-4700-bb5e-62b6ec821ef9",
        "cursor": {
          "ref": "8830d386-fbda-4ae3-989e-675c57dadf2f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "36dbda76-0945-4ca1-b3f1-1a9a7f3635dd"
        },
        "item": {
          "id": "fa82207c-70bf-4700-bb5e-62b6ec821ef9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8a98f78c-2828-4ccf-88be-e4d2b52a7620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b29d2d-3086-4ce0-bc93-63b45fd867fd",
        "cursor": {
          "ref": "f4133378-1ecc-46ea-b150-2861b4406646",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "95a7cc01-d727-49f1-b831-a54716f48c9b"
        },
        "item": {
          "id": "32b29d2d-3086-4ce0-bc93-63b45fd867fd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "24d70002-8ec9-43d7-a9cb-68b549afe12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3db2891-49c1-4909-bf09-74509af28915",
        "cursor": {
          "ref": "ca7ae077-26ab-4615-b7e8-95e769e80641",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "039e2a44-6d1d-4b99-98f7-010f2a6258b9"
        },
        "item": {
          "id": "c3db2891-49c1-4909-bf09-74509af28915",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b554cf3a-58c6-4353-99eb-e2d87c1fe81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6920f-340e-4f5e-b0fe-5b80ec3fad20",
        "cursor": {
          "ref": "1903d769-9f7b-45da-adbe-6b66ad9a9999",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "89794b41-fe40-4f9f-91cd-b7f9ee1f05c5"
        },
        "item": {
          "id": "ecd6920f-340e-4f5e-b0fe-5b80ec3fad20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "eff4d96e-49ef-4dc1-afdb-adf038c54c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b61418-6167-45f4-ad7d-ece7b8a95bea",
        "cursor": {
          "ref": "8701cdb5-ceb6-4c85-bb6f-24e05a163141",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b2a4eb58-8823-4d1a-883a-e8ac7d207a28"
        },
        "item": {
          "id": "56b61418-6167-45f4-ad7d-ece7b8a95bea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f8575478-08f2-4a6f-984d-d38f1292624a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9be5e0-508c-4a9c-8026-792d7b254c0f",
        "cursor": {
          "ref": "71a7d703-612d-44f0-a39a-50a07387cff9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "86b68bba-9b3e-436c-8c9e-9add4d9086d2"
        },
        "item": {
          "id": "3f9be5e0-508c-4a9c-8026-792d7b254c0f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0628b02-42d6-4ea2-a991-1ee6c8d2effb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27df63e1-fc23-4cd7-a0fc-0dfb71b09a99",
        "cursor": {
          "ref": "6dd33484-5787-4301-981b-b6f5fdbec6c8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7d51f02d-b3ab-446c-84d1-bd30b38b4278"
        },
        "item": {
          "id": "27df63e1-fc23-4cd7-a0fc-0dfb71b09a99",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "36fa85be-bc7d-433e-85d1-74db413ae560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3fb87d-81be-4b18-ab8f-0bd1eeb79597",
        "cursor": {
          "ref": "2c64dfc6-5f7e-4964-a69f-f67d16c414aa",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4c4f29ba-2225-4279-a875-4abf4b414087"
        },
        "item": {
          "id": "ec3fb87d-81be-4b18-ab8f-0bd1eeb79597",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4f04c516-ebe8-45f1-88bc-2b0c409818ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fddc43-2158-43e7-bbcf-c2f3fb5dd5f3",
        "cursor": {
          "ref": "974f6055-c7b9-4a0c-b995-40b3943d6355",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ef200172-fa10-496c-8f85-30cb1355ac15"
        },
        "item": {
          "id": "45fddc43-2158-43e7-bbcf-c2f3fb5dd5f3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4bb75b3d-289c-404d-a5fa-1ad3f1f00be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dfce8a6-c678-46bf-b19f-d592281ba437",
        "cursor": {
          "ref": "61e3c036-a216-452c-be24-fdb30ce707c7",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ec602423-909b-4ffb-83bb-3f4c60f4c050"
        },
        "item": {
          "id": "9dfce8a6-c678-46bf-b19f-d592281ba437",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26bf7e8c-1518-44c3-8680-80dc8fdb85b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c28ad5-66ba-4f2d-809f-efcbea505543",
        "cursor": {
          "ref": "55144d60-ab99-4b44-aca3-18ca6965eaff",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bffd58ce-6aa9-4c2e-94ba-ecf4d655523a"
        },
        "item": {
          "id": "c7c28ad5-66ba-4f2d-809f-efcbea505543",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ab5cab7-9f07-4d36-9fb9-5021e9908572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65602723-bf99-4b9d-b834-3244e621b833",
        "cursor": {
          "ref": "d5cb71c4-bafb-4af1-a52c-27001e34f079",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "78894bc9-3904-4c48-a255-57567774643b"
        },
        "item": {
          "id": "65602723-bf99-4b9d-b834-3244e621b833",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b274e6e0-a8a7-4f16-8b18-538c0a550d64",
          "status": "OK",
          "code": 200,
          "responseTime": 506,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f621c9-2b2b-495c-99eb-a696fd2aa5be",
        "cursor": {
          "ref": "d6443772-0027-4f3a-9ef0-afed59c20cba",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "99de72bf-3114-4754-8db6-289777d49336"
        },
        "item": {
          "id": "a4f621c9-2b2b-495c-99eb-a696fd2aa5be",
          "name": "credentials_verify"
        },
        "response": {
          "id": "62a0a832-cb29-4a11-bbb5-b889208eb282",
          "status": "OK",
          "code": 200,
          "responseTime": 1561,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d410324-925a-43c1-bbac-08da582c5924",
        "cursor": {
          "ref": "686a75cf-81df-4560-a413-28d3f9ef3c12",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "04bcc229-1a41-45a6-b3fe-1b52fbb7ddc4"
        },
        "item": {
          "id": "0d410324-925a-43c1-bbac-08da582c5924",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "18abb91f-2444-4a80-976e-450d20f5ce36",
          "status": "OK",
          "code": 200,
          "responseTime": 1844,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9ba944-e333-4f93-9559-b43ebfc8ee68",
        "cursor": {
          "ref": "2e5d1eb2-ab00-4acd-9edd-19768d411b14",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9f8a1bc4-afcf-4f24-9c96-aa22304757b9"
        },
        "item": {
          "id": "8c9ba944-e333-4f93-9559-b43ebfc8ee68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf6bae47-1454-47b6-937e-57963890b0c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9ba944-e333-4f93-9559-b43ebfc8ee68",
        "cursor": {
          "ref": "2e5d1eb2-ab00-4acd-9edd-19768d411b14",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9f8a1bc4-afcf-4f24-9c96-aa22304757b9"
        },
        "item": {
          "id": "8c9ba944-e333-4f93-9559-b43ebfc8ee68",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cf6bae47-1454-47b6-937e-57963890b0c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c10ad7d-9eb3-41e5-ad05-8bfd71a254bc",
        "cursor": {
          "ref": "17c74a67-ee1c-4708-b89f-38b37ada9ba2",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f21800de-278f-42d4-adfb-8e8ef214faeb"
        },
        "item": {
          "id": "5c10ad7d-9eb3-41e5-ad05-8bfd71a254bc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e0fe3419-fc8d-4b08-b393-ea3278b8e624",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d1e2d2-9669-497f-b8c6-9d415ca508e9",
        "cursor": {
          "ref": "f8b57e9e-fe71-4e28-bfaf-257b48c4d6b5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "db05841c-9787-4fdf-9763-04e056cdea27"
        },
        "item": {
          "id": "e8d1e2d2-9669-497f-b8c6-9d415ca508e9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "50f4008b-739f-4e27-8955-12083632ec56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}